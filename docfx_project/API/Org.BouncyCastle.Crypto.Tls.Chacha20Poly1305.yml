### YamlMime:ManagedReference
items:
- uid: Org.BouncyCastle.Crypto.Tls.Chacha20Poly1305
  commentId: T:Org.BouncyCastle.Crypto.Tls.Chacha20Poly1305
  id: Chacha20Poly1305
  parent: Org.BouncyCastle.Crypto.Tls
  children:
  - Org.BouncyCastle.Crypto.Tls.Chacha20Poly1305.#ctor(Org.BouncyCastle.Crypto.Tls.TlsContext)
  - Org.BouncyCastle.Crypto.Tls.Chacha20Poly1305.CalculateNonce(System.Int64,System.Byte[])
  - Org.BouncyCastle.Crypto.Tls.Chacha20Poly1305.CalculateRecordMac(KeyParameter,System.Byte[],System.Byte[],System.Int32,System.Int32)
  - Org.BouncyCastle.Crypto.Tls.Chacha20Poly1305.context
  - Org.BouncyCastle.Crypto.Tls.Chacha20Poly1305.DecodeCiphertext(System.Int64,System.Byte,System.Byte[],System.Int32,System.Int32)
  - Org.BouncyCastle.Crypto.Tls.Chacha20Poly1305.decryptCipher
  - Org.BouncyCastle.Crypto.Tls.Chacha20Poly1305.decryptIV
  - Org.BouncyCastle.Crypto.Tls.Chacha20Poly1305.EncodePlaintext(System.Int64,System.Byte,System.Byte[],System.Int32,System.Int32)
  - Org.BouncyCastle.Crypto.Tls.Chacha20Poly1305.encryptCipher
  - Org.BouncyCastle.Crypto.Tls.Chacha20Poly1305.encryptIV
  - Org.BouncyCastle.Crypto.Tls.Chacha20Poly1305.GenerateRecordMacKey(Org.BouncyCastle.Crypto.IStreamCipher)
  - Org.BouncyCastle.Crypto.Tls.Chacha20Poly1305.GetAdditionalData(System.Int64,System.Byte,System.Int32)
  - Org.BouncyCastle.Crypto.Tls.Chacha20Poly1305.GetPlaintextLimit(System.Int32)
  - Org.BouncyCastle.Crypto.Tls.Chacha20Poly1305.InitRecord(Org.BouncyCastle.Crypto.IStreamCipher,System.Boolean,System.Int64,System.Byte[])
  - Org.BouncyCastle.Crypto.Tls.Chacha20Poly1305.UpdateRecordMacLength(Org.BouncyCastle.Crypto.IMac,System.Int32)
  - Org.BouncyCastle.Crypto.Tls.Chacha20Poly1305.UpdateRecordMacText(Org.BouncyCastle.Crypto.IMac,System.Byte[],System.Int32,System.Int32)
  langs:
  - csharp
  - vb
  name: Chacha20Poly1305
  nameWithType: Chacha20Poly1305
  fullName: Org.BouncyCastle.Crypto.Tls.Chacha20Poly1305
  type: Class
  source:
    id: Chacha20Poly1305
    path: ''
    startLine: 126951
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Tls
  example: []
  syntax:
    content: 'public class Chacha20Poly1305 : TlsCipher'
    content.vb: >-
      Public Class Chacha20Poly1305
          Implements TlsCipher
  inheritance:
  - System.Object
  implements:
  - Org.BouncyCastle.Crypto.Tls.TlsCipher
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ToString
  - System.Object.ReferenceEquals(System.Object,System.Object)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Org.BouncyCastle.Crypto.Tls.Chacha20Poly1305.context
  commentId: F:Org.BouncyCastle.Crypto.Tls.Chacha20Poly1305.context
  id: context
  parent: Org.BouncyCastle.Crypto.Tls.Chacha20Poly1305
  langs:
  - csharp
  - vb
  name: context
  nameWithType: Chacha20Poly1305.context
  fullName: Org.BouncyCastle.Crypto.Tls.Chacha20Poly1305.context
  type: Field
  source:
    id: context
    path: ''
    startLine: 126956
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Tls
  syntax:
    content: protected readonly TlsContext context
    return:
      type: Org.BouncyCastle.Crypto.Tls.TlsContext
    content.vb: Protected ReadOnly context As TlsContext
  modifiers.csharp:
  - protected
  - readonly
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: Org.BouncyCastle.Crypto.Tls.Chacha20Poly1305.encryptCipher
  commentId: F:Org.BouncyCastle.Crypto.Tls.Chacha20Poly1305.encryptCipher
  id: encryptCipher
  parent: Org.BouncyCastle.Crypto.Tls.Chacha20Poly1305
  langs:
  - csharp
  - vb
  name: encryptCipher
  nameWithType: Chacha20Poly1305.encryptCipher
  fullName: Org.BouncyCastle.Crypto.Tls.Chacha20Poly1305.encryptCipher
  type: Field
  source:
    id: encryptCipher
    path: ''
    startLine: 126958
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Tls
  syntax:
    content: protected readonly ChaCha7539Engine encryptCipher
    return:
      type: ChaCha7539Engine
    content.vb: Protected ReadOnly encryptCipher As ChaCha7539Engine
  modifiers.csharp:
  - protected
  - readonly
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: Org.BouncyCastle.Crypto.Tls.Chacha20Poly1305.decryptCipher
  commentId: F:Org.BouncyCastle.Crypto.Tls.Chacha20Poly1305.decryptCipher
  id: decryptCipher
  parent: Org.BouncyCastle.Crypto.Tls.Chacha20Poly1305
  langs:
  - csharp
  - vb
  name: decryptCipher
  nameWithType: Chacha20Poly1305.decryptCipher
  fullName: Org.BouncyCastle.Crypto.Tls.Chacha20Poly1305.decryptCipher
  type: Field
  source:
    id: decryptCipher
    path: ''
    startLine: 126958
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Tls
  syntax:
    content: protected readonly ChaCha7539Engine decryptCipher
    return:
      type: ChaCha7539Engine
    content.vb: Protected ReadOnly decryptCipher As ChaCha7539Engine
  modifiers.csharp:
  - protected
  - readonly
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: Org.BouncyCastle.Crypto.Tls.Chacha20Poly1305.encryptIV
  commentId: F:Org.BouncyCastle.Crypto.Tls.Chacha20Poly1305.encryptIV
  id: encryptIV
  parent: Org.BouncyCastle.Crypto.Tls.Chacha20Poly1305
  langs:
  - csharp
  - vb
  name: encryptIV
  nameWithType: Chacha20Poly1305.encryptIV
  fullName: Org.BouncyCastle.Crypto.Tls.Chacha20Poly1305.encryptIV
  type: Field
  source:
    id: encryptIV
    path: ''
    startLine: 126959
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Tls
  syntax:
    content: protected readonly byte[] encryptIV
    return:
      type: System.Byte[]
    content.vb: Protected ReadOnly encryptIV As Byte()
  modifiers.csharp:
  - protected
  - readonly
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: Org.BouncyCastle.Crypto.Tls.Chacha20Poly1305.decryptIV
  commentId: F:Org.BouncyCastle.Crypto.Tls.Chacha20Poly1305.decryptIV
  id: decryptIV
  parent: Org.BouncyCastle.Crypto.Tls.Chacha20Poly1305
  langs:
  - csharp
  - vb
  name: decryptIV
  nameWithType: Chacha20Poly1305.decryptIV
  fullName: Org.BouncyCastle.Crypto.Tls.Chacha20Poly1305.decryptIV
  type: Field
  source:
    id: decryptIV
    path: ''
    startLine: 126959
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Tls
  syntax:
    content: protected readonly byte[] decryptIV
    return:
      type: System.Byte[]
    content.vb: Protected ReadOnly decryptIV As Byte()
  modifiers.csharp:
  - protected
  - readonly
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: Org.BouncyCastle.Crypto.Tls.Chacha20Poly1305.#ctor(Org.BouncyCastle.Crypto.Tls.TlsContext)
  commentId: M:Org.BouncyCastle.Crypto.Tls.Chacha20Poly1305.#ctor(Org.BouncyCastle.Crypto.Tls.TlsContext)
  id: '#ctor(Org.BouncyCastle.Crypto.Tls.TlsContext)'
  parent: Org.BouncyCastle.Crypto.Tls.Chacha20Poly1305
  langs:
  - csharp
  - vb
  name: Chacha20Poly1305(TlsContext)
  nameWithType: Chacha20Poly1305.Chacha20Poly1305(TlsContext)
  fullName: Org.BouncyCastle.Crypto.Tls.Chacha20Poly1305.Chacha20Poly1305(Org.BouncyCastle.Crypto.Tls.TlsContext)
  type: Constructor
  source:
    id: .ctor
    path: ''
    startLine: 126962
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Tls
  example: []
  syntax:
    content: public Chacha20Poly1305(TlsContext context)
    parameters:
    - id: context
      type: Org.BouncyCastle.Crypto.Tls.TlsContext
    content.vb: Public Sub New(context As TlsContext)
  overload: Org.BouncyCastle.Crypto.Tls.Chacha20Poly1305.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Org.BouncyCastle.Crypto.Tls.Chacha20Poly1305.GetPlaintextLimit(System.Int32)
  commentId: M:Org.BouncyCastle.Crypto.Tls.Chacha20Poly1305.GetPlaintextLimit(System.Int32)
  id: GetPlaintextLimit(System.Int32)
  parent: Org.BouncyCastle.Crypto.Tls.Chacha20Poly1305
  langs:
  - csharp
  - vb
  name: GetPlaintextLimit(Int32)
  nameWithType: Chacha20Poly1305.GetPlaintextLimit(Int32)
  fullName: Org.BouncyCastle.Crypto.Tls.Chacha20Poly1305.GetPlaintextLimit(System.Int32)
  type: Method
  source:
    id: GetPlaintextLimit
    path: ''
    startLine: 127015
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Tls
  syntax:
    content: public virtual int GetPlaintextLimit(int ciphertextLimit)
    parameters:
    - id: ciphertextLimit
      type: System.Int32
    return:
      type: System.Int32
    content.vb: Public Overridable Function GetPlaintextLimit(ciphertextLimit As Integer) As Integer
  overload: Org.BouncyCastle.Crypto.Tls.Chacha20Poly1305.GetPlaintextLimit*
  implements:
  - Org.BouncyCastle.Crypto.Tls.TlsCipher.GetPlaintextLimit(System.Int32)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Org.BouncyCastle.Crypto.Tls.Chacha20Poly1305.EncodePlaintext(System.Int64,System.Byte,System.Byte[],System.Int32,System.Int32)
  commentId: M:Org.BouncyCastle.Crypto.Tls.Chacha20Poly1305.EncodePlaintext(System.Int64,System.Byte,System.Byte[],System.Int32,System.Int32)
  id: EncodePlaintext(System.Int64,System.Byte,System.Byte[],System.Int32,System.Int32)
  parent: Org.BouncyCastle.Crypto.Tls.Chacha20Poly1305
  langs:
  - csharp
  - vb
  name: EncodePlaintext(Int64, Byte, Byte[], Int32, Int32)
  nameWithType: Chacha20Poly1305.EncodePlaintext(Int64, Byte, Byte[], Int32, Int32)
  fullName: Org.BouncyCastle.Crypto.Tls.Chacha20Poly1305.EncodePlaintext(System.Int64, System.Byte, System.Byte[], System.Int32, System.Int32)
  type: Method
  source:
    id: EncodePlaintext
    path: ''
    startLine: 127021
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Tls
  example: []
  syntax:
    content: public virtual byte[] EncodePlaintext(long seqNo, byte type, byte[] plaintext, int offset, int len)
    parameters:
    - id: seqNo
      type: System.Int64
    - id: type
      type: System.Byte
    - id: plaintext
      type: System.Byte[]
    - id: offset
      type: System.Int32
    - id: len
      type: System.Int32
    return:
      type: System.Byte[]
    content.vb: Public Overridable Function EncodePlaintext(seqNo As Long, type As Byte, plaintext As Byte(), offset As Integer, len As Integer) As Byte()
  overload: Org.BouncyCastle.Crypto.Tls.Chacha20Poly1305.EncodePlaintext*
  implements:
  - Org.BouncyCastle.Crypto.Tls.TlsCipher.EncodePlaintext(System.Int64,System.Byte,System.Byte[],System.Int32,System.Int32)
  nameWithType.vb: Chacha20Poly1305.EncodePlaintext(Int64, Byte, Byte(), Int32, Int32)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Org.BouncyCastle.Crypto.Tls.Chacha20Poly1305.EncodePlaintext(System.Int64, System.Byte, System.Byte(), System.Int32, System.Int32)
  name.vb: EncodePlaintext(Int64, Byte, Byte(), Int32, Int32)
- uid: Org.BouncyCastle.Crypto.Tls.Chacha20Poly1305.DecodeCiphertext(System.Int64,System.Byte,System.Byte[],System.Int32,System.Int32)
  commentId: M:Org.BouncyCastle.Crypto.Tls.Chacha20Poly1305.DecodeCiphertext(System.Int64,System.Byte,System.Byte[],System.Int32,System.Int32)
  id: DecodeCiphertext(System.Int64,System.Byte,System.Byte[],System.Int32,System.Int32)
  parent: Org.BouncyCastle.Crypto.Tls.Chacha20Poly1305
  langs:
  - csharp
  - vb
  name: DecodeCiphertext(Int64, Byte, Byte[], Int32, Int32)
  nameWithType: Chacha20Poly1305.DecodeCiphertext(Int64, Byte, Byte[], Int32, Int32)
  fullName: Org.BouncyCastle.Crypto.Tls.Chacha20Poly1305.DecodeCiphertext(System.Int64, System.Byte, System.Byte[], System.Int32, System.Int32)
  type: Method
  source:
    id: DecodeCiphertext
    path: ''
    startLine: 127036
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Tls
  example: []
  syntax:
    content: public virtual byte[] DecodeCiphertext(long seqNo, byte type, byte[] ciphertext, int offset, int len)
    parameters:
    - id: seqNo
      type: System.Int64
    - id: type
      type: System.Byte
    - id: ciphertext
      type: System.Byte[]
    - id: offset
      type: System.Int32
    - id: len
      type: System.Int32
    return:
      type: System.Byte[]
    content.vb: Public Overridable Function DecodeCiphertext(seqNo As Long, type As Byte, ciphertext As Byte(), offset As Integer, len As Integer) As Byte()
  overload: Org.BouncyCastle.Crypto.Tls.Chacha20Poly1305.DecodeCiphertext*
  implements:
  - Org.BouncyCastle.Crypto.Tls.TlsCipher.DecodeCiphertext(System.Int64,System.Byte,System.Byte[],System.Int32,System.Int32)
  nameWithType.vb: Chacha20Poly1305.DecodeCiphertext(Int64, Byte, Byte(), Int32, Int32)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Org.BouncyCastle.Crypto.Tls.Chacha20Poly1305.DecodeCiphertext(System.Int64, System.Byte, System.Byte(), System.Int32, System.Int32)
  name.vb: DecodeCiphertext(Int64, Byte, Byte(), Int32, Int32)
- uid: Org.BouncyCastle.Crypto.Tls.Chacha20Poly1305.InitRecord(Org.BouncyCastle.Crypto.IStreamCipher,System.Boolean,System.Int64,System.Byte[])
  commentId: M:Org.BouncyCastle.Crypto.Tls.Chacha20Poly1305.InitRecord(Org.BouncyCastle.Crypto.IStreamCipher,System.Boolean,System.Int64,System.Byte[])
  id: InitRecord(Org.BouncyCastle.Crypto.IStreamCipher,System.Boolean,System.Int64,System.Byte[])
  parent: Org.BouncyCastle.Crypto.Tls.Chacha20Poly1305
  langs:
  - csharp
  - vb
  name: InitRecord(IStreamCipher, Boolean, Int64, Byte[])
  nameWithType: Chacha20Poly1305.InitRecord(IStreamCipher, Boolean, Int64, Byte[])
  fullName: Org.BouncyCastle.Crypto.Tls.Chacha20Poly1305.InitRecord(Org.BouncyCastle.Crypto.IStreamCipher, System.Boolean, System.Int64, System.Byte[])
  type: Method
  source:
    id: InitRecord
    path: ''
    startLine: 127057
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Tls
  syntax:
    content: protected virtual KeyParameter InitRecord(IStreamCipher cipher, bool forEncryption, long seqNo, byte[] iv)
    parameters:
    - id: cipher
      type: Org.BouncyCastle.Crypto.IStreamCipher
    - id: forEncryption
      type: System.Boolean
    - id: seqNo
      type: System.Int64
    - id: iv
      type: System.Byte[]
    return:
      type: KeyParameter
    content.vb: Protected Overridable Function InitRecord(cipher As IStreamCipher, forEncryption As Boolean, seqNo As Long, iv As Byte()) As KeyParameter
  overload: Org.BouncyCastle.Crypto.Tls.Chacha20Poly1305.InitRecord*
  nameWithType.vb: Chacha20Poly1305.InitRecord(IStreamCipher, Boolean, Int64, Byte())
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
  fullName.vb: Org.BouncyCastle.Crypto.Tls.Chacha20Poly1305.InitRecord(Org.BouncyCastle.Crypto.IStreamCipher, System.Boolean, System.Int64, System.Byte())
  name.vb: InitRecord(IStreamCipher, Boolean, Int64, Byte())
- uid: Org.BouncyCastle.Crypto.Tls.Chacha20Poly1305.CalculateNonce(System.Int64,System.Byte[])
  commentId: M:Org.BouncyCastle.Crypto.Tls.Chacha20Poly1305.CalculateNonce(System.Int64,System.Byte[])
  id: CalculateNonce(System.Int64,System.Byte[])
  parent: Org.BouncyCastle.Crypto.Tls.Chacha20Poly1305
  langs:
  - csharp
  - vb
  name: CalculateNonce(Int64, Byte[])
  nameWithType: Chacha20Poly1305.CalculateNonce(Int64, Byte[])
  fullName: Org.BouncyCastle.Crypto.Tls.Chacha20Poly1305.CalculateNonce(System.Int64, System.Byte[])
  type: Method
  source:
    id: CalculateNonce
    path: ''
    startLine: 127064
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Tls
  syntax:
    content: protected virtual byte[] CalculateNonce(long seqNo, byte[] iv)
    parameters:
    - id: seqNo
      type: System.Int64
    - id: iv
      type: System.Byte[]
    return:
      type: System.Byte[]
    content.vb: Protected Overridable Function CalculateNonce(seqNo As Long, iv As Byte()) As Byte()
  overload: Org.BouncyCastle.Crypto.Tls.Chacha20Poly1305.CalculateNonce*
  nameWithType.vb: Chacha20Poly1305.CalculateNonce(Int64, Byte())
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
  fullName.vb: Org.BouncyCastle.Crypto.Tls.Chacha20Poly1305.CalculateNonce(System.Int64, System.Byte())
  name.vb: CalculateNonce(Int64, Byte())
- uid: Org.BouncyCastle.Crypto.Tls.Chacha20Poly1305.GenerateRecordMacKey(Org.BouncyCastle.Crypto.IStreamCipher)
  commentId: M:Org.BouncyCastle.Crypto.Tls.Chacha20Poly1305.GenerateRecordMacKey(Org.BouncyCastle.Crypto.IStreamCipher)
  id: GenerateRecordMacKey(Org.BouncyCastle.Crypto.IStreamCipher)
  parent: Org.BouncyCastle.Crypto.Tls.Chacha20Poly1305
  langs:
  - csharp
  - vb
  name: GenerateRecordMacKey(IStreamCipher)
  nameWithType: Chacha20Poly1305.GenerateRecordMacKey(IStreamCipher)
  fullName: Org.BouncyCastle.Crypto.Tls.Chacha20Poly1305.GenerateRecordMacKey(Org.BouncyCastle.Crypto.IStreamCipher)
  type: Method
  source:
    id: GenerateRecordMacKey
    path: ''
    startLine: 127077
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Tls
  syntax:
    content: protected virtual KeyParameter GenerateRecordMacKey(IStreamCipher cipher)
    parameters:
    - id: cipher
      type: Org.BouncyCastle.Crypto.IStreamCipher
    return:
      type: KeyParameter
    content.vb: Protected Overridable Function GenerateRecordMacKey(cipher As IStreamCipher) As KeyParameter
  overload: Org.BouncyCastle.Crypto.Tls.Chacha20Poly1305.GenerateRecordMacKey*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: Org.BouncyCastle.Crypto.Tls.Chacha20Poly1305.CalculateRecordMac(KeyParameter,System.Byte[],System.Byte[],System.Int32,System.Int32)
  commentId: M:Org.BouncyCastle.Crypto.Tls.Chacha20Poly1305.CalculateRecordMac(KeyParameter,System.Byte[],System.Byte[],System.Int32,System.Int32)
  id: CalculateRecordMac(KeyParameter,System.Byte[],System.Byte[],System.Int32,System.Int32)
  parent: Org.BouncyCastle.Crypto.Tls.Chacha20Poly1305
  langs:
  - csharp
  - vb
  name: CalculateRecordMac(KeyParameter, Byte[], Byte[], Int32, Int32)
  nameWithType: Chacha20Poly1305.CalculateRecordMac(KeyParameter, Byte[], Byte[], Int32, Int32)
  fullName: Org.BouncyCastle.Crypto.Tls.Chacha20Poly1305.CalculateRecordMac(KeyParameter, System.Byte[], System.Byte[], System.Int32, System.Int32)
  type: Method
  source:
    id: CalculateRecordMac
    path: ''
    startLine: 127087
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Tls
  syntax:
    content: protected virtual byte[] CalculateRecordMac(KeyParameter macKey, byte[] additionalData, byte[] buf, int off, int len)
    parameters:
    - id: macKey
      type: KeyParameter
    - id: additionalData
      type: System.Byte[]
    - id: buf
      type: System.Byte[]
    - id: off
      type: System.Int32
    - id: len
      type: System.Int32
    return:
      type: System.Byte[]
    content.vb: Protected Overridable Function CalculateRecordMac(macKey As KeyParameter, additionalData As Byte(), buf As Byte(), off As Integer, len As Integer) As Byte()
  overload: Org.BouncyCastle.Crypto.Tls.Chacha20Poly1305.CalculateRecordMac*
  nameWithType.vb: Chacha20Poly1305.CalculateRecordMac(KeyParameter, Byte(), Byte(), Int32, Int32)
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
  fullName.vb: Org.BouncyCastle.Crypto.Tls.Chacha20Poly1305.CalculateRecordMac(KeyParameter, System.Byte(), System.Byte(), System.Int32, System.Int32)
  name.vb: CalculateRecordMac(KeyParameter, Byte(), Byte(), Int32, Int32)
- uid: Org.BouncyCastle.Crypto.Tls.Chacha20Poly1305.UpdateRecordMacLength(Org.BouncyCastle.Crypto.IMac,System.Int32)
  commentId: M:Org.BouncyCastle.Crypto.Tls.Chacha20Poly1305.UpdateRecordMacLength(Org.BouncyCastle.Crypto.IMac,System.Int32)
  id: UpdateRecordMacLength(Org.BouncyCastle.Crypto.IMac,System.Int32)
  parent: Org.BouncyCastle.Crypto.Tls.Chacha20Poly1305
  langs:
  - csharp
  - vb
  name: UpdateRecordMacLength(IMac, Int32)
  nameWithType: Chacha20Poly1305.UpdateRecordMacLength(IMac, Int32)
  fullName: Org.BouncyCastle.Crypto.Tls.Chacha20Poly1305.UpdateRecordMacLength(Org.BouncyCastle.Crypto.IMac, System.Int32)
  type: Method
  source:
    id: UpdateRecordMacLength
    path: ''
    startLine: 127100
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Tls
  syntax:
    content: protected virtual void UpdateRecordMacLength(IMac mac, int len)
    parameters:
    - id: mac
      type: Org.BouncyCastle.Crypto.IMac
    - id: len
      type: System.Int32
    content.vb: Protected Overridable Sub UpdateRecordMacLength(mac As IMac, len As Integer)
  overload: Org.BouncyCastle.Crypto.Tls.Chacha20Poly1305.UpdateRecordMacLength*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: Org.BouncyCastle.Crypto.Tls.Chacha20Poly1305.UpdateRecordMacText(Org.BouncyCastle.Crypto.IMac,System.Byte[],System.Int32,System.Int32)
  commentId: M:Org.BouncyCastle.Crypto.Tls.Chacha20Poly1305.UpdateRecordMacText(Org.BouncyCastle.Crypto.IMac,System.Byte[],System.Int32,System.Int32)
  id: UpdateRecordMacText(Org.BouncyCastle.Crypto.IMac,System.Byte[],System.Int32,System.Int32)
  parent: Org.BouncyCastle.Crypto.Tls.Chacha20Poly1305
  langs:
  - csharp
  - vb
  name: UpdateRecordMacText(IMac, Byte[], Int32, Int32)
  nameWithType: Chacha20Poly1305.UpdateRecordMacText(IMac, Byte[], Int32, Int32)
  fullName: Org.BouncyCastle.Crypto.Tls.Chacha20Poly1305.UpdateRecordMacText(Org.BouncyCastle.Crypto.IMac, System.Byte[], System.Int32, System.Int32)
  type: Method
  source:
    id: UpdateRecordMacText
    path: ''
    startLine: 127106
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Tls
  syntax:
    content: protected virtual void UpdateRecordMacText(IMac mac, byte[] buf, int off, int len)
    parameters:
    - id: mac
      type: Org.BouncyCastle.Crypto.IMac
    - id: buf
      type: System.Byte[]
    - id: off
      type: System.Int32
    - id: len
      type: System.Int32
    content.vb: Protected Overridable Sub UpdateRecordMacText(mac As IMac, buf As Byte(), off As Integer, len As Integer)
  overload: Org.BouncyCastle.Crypto.Tls.Chacha20Poly1305.UpdateRecordMacText*
  nameWithType.vb: Chacha20Poly1305.UpdateRecordMacText(IMac, Byte(), Int32, Int32)
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
  fullName.vb: Org.BouncyCastle.Crypto.Tls.Chacha20Poly1305.UpdateRecordMacText(Org.BouncyCastle.Crypto.IMac, System.Byte(), System.Int32, System.Int32)
  name.vb: UpdateRecordMacText(IMac, Byte(), Int32, Int32)
- uid: Org.BouncyCastle.Crypto.Tls.Chacha20Poly1305.GetAdditionalData(System.Int64,System.Byte,System.Int32)
  commentId: M:Org.BouncyCastle.Crypto.Tls.Chacha20Poly1305.GetAdditionalData(System.Int64,System.Byte,System.Int32)
  id: GetAdditionalData(System.Int64,System.Byte,System.Int32)
  parent: Org.BouncyCastle.Crypto.Tls.Chacha20Poly1305
  langs:
  - csharp
  - vb
  name: GetAdditionalData(Int64, Byte, Int32)
  nameWithType: Chacha20Poly1305.GetAdditionalData(Int64, Byte, Int32)
  fullName: Org.BouncyCastle.Crypto.Tls.Chacha20Poly1305.GetAdditionalData(System.Int64, System.Byte, System.Int32)
  type: Method
  source:
    id: GetAdditionalData
    path: ''
    startLine: 127118
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Tls
  example: []
  syntax:
    content: protected virtual byte[] GetAdditionalData(long seqNo, byte type, int len)
    parameters:
    - id: seqNo
      type: System.Int64
    - id: type
      type: System.Byte
    - id: len
      type: System.Int32
    return:
      type: System.Byte[]
    content.vb: Protected Overridable Function GetAdditionalData(seqNo As Long, type As Byte, len As Integer) As Byte()
  overload: Org.BouncyCastle.Crypto.Tls.Chacha20Poly1305.GetAdditionalData*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
references:
- uid: Org.BouncyCastle.Crypto.Tls
  commentId: N:Org.BouncyCastle.Crypto.Tls
  name: Org.BouncyCastle.Crypto.Tls
  nameWithType: Org.BouncyCastle.Crypto.Tls
  fullName: Org.BouncyCastle.Crypto.Tls
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Org.BouncyCastle.Crypto.Tls.TlsCipher
  commentId: T:Org.BouncyCastle.Crypto.Tls.TlsCipher
  parent: Org.BouncyCastle.Crypto.Tls
  name: TlsCipher
  nameWithType: TlsCipher
  fullName: Org.BouncyCastle.Crypto.Tls.TlsCipher
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Org.BouncyCastle.Crypto.Tls.TlsContext
  commentId: T:Org.BouncyCastle.Crypto.Tls.TlsContext
  parent: Org.BouncyCastle.Crypto.Tls
  name: TlsContext
  nameWithType: TlsContext
  fullName: Org.BouncyCastle.Crypto.Tls.TlsContext
- uid: ChaCha7539Engine
  isExternal: true
  name: ChaCha7539Engine
  nameWithType: ChaCha7539Engine
  fullName: ChaCha7539Engine
- uid: System.Byte[]
  isExternal: true
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullName.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Org.BouncyCastle.Crypto.Tls.Chacha20Poly1305.#ctor*
  commentId: Overload:Org.BouncyCastle.Crypto.Tls.Chacha20Poly1305.#ctor
  name: Chacha20Poly1305
  nameWithType: Chacha20Poly1305.Chacha20Poly1305
  fullName: Org.BouncyCastle.Crypto.Tls.Chacha20Poly1305.Chacha20Poly1305
- uid: Org.BouncyCastle.Crypto.Tls.Chacha20Poly1305.GetPlaintextLimit*
  commentId: Overload:Org.BouncyCastle.Crypto.Tls.Chacha20Poly1305.GetPlaintextLimit
  name: GetPlaintextLimit
  nameWithType: Chacha20Poly1305.GetPlaintextLimit
  fullName: Org.BouncyCastle.Crypto.Tls.Chacha20Poly1305.GetPlaintextLimit
- uid: Org.BouncyCastle.Crypto.Tls.TlsCipher.GetPlaintextLimit(System.Int32)
  commentId: M:Org.BouncyCastle.Crypto.Tls.TlsCipher.GetPlaintextLimit(System.Int32)
  parent: Org.BouncyCastle.Crypto.Tls.TlsCipher
  isExternal: true
  name: GetPlaintextLimit(Int32)
  nameWithType: TlsCipher.GetPlaintextLimit(Int32)
  fullName: Org.BouncyCastle.Crypto.Tls.TlsCipher.GetPlaintextLimit(System.Int32)
  spec.csharp:
  - uid: Org.BouncyCastle.Crypto.Tls.TlsCipher.GetPlaintextLimit(System.Int32)
    name: GetPlaintextLimit
    nameWithType: TlsCipher.GetPlaintextLimit
    fullName: Org.BouncyCastle.Crypto.Tls.TlsCipher.GetPlaintextLimit
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Org.BouncyCastle.Crypto.Tls.TlsCipher.GetPlaintextLimit(System.Int32)
    name: GetPlaintextLimit
    nameWithType: TlsCipher.GetPlaintextLimit
    fullName: Org.BouncyCastle.Crypto.Tls.TlsCipher.GetPlaintextLimit
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Org.BouncyCastle.Crypto.Tls.Chacha20Poly1305.EncodePlaintext*
  commentId: Overload:Org.BouncyCastle.Crypto.Tls.Chacha20Poly1305.EncodePlaintext
  name: EncodePlaintext
  nameWithType: Chacha20Poly1305.EncodePlaintext
  fullName: Org.BouncyCastle.Crypto.Tls.Chacha20Poly1305.EncodePlaintext
- uid: Org.BouncyCastle.Crypto.Tls.TlsCipher.EncodePlaintext(System.Int64,System.Byte,System.Byte[],System.Int32,System.Int32)
  commentId: M:Org.BouncyCastle.Crypto.Tls.TlsCipher.EncodePlaintext(System.Int64,System.Byte,System.Byte[],System.Int32,System.Int32)
  parent: Org.BouncyCastle.Crypto.Tls.TlsCipher
  isExternal: true
  name: EncodePlaintext(Int64, Byte, Byte[], Int32, Int32)
  nameWithType: TlsCipher.EncodePlaintext(Int64, Byte, Byte[], Int32, Int32)
  fullName: Org.BouncyCastle.Crypto.Tls.TlsCipher.EncodePlaintext(System.Int64, System.Byte, System.Byte[], System.Int32, System.Int32)
  nameWithType.vb: TlsCipher.EncodePlaintext(Int64, Byte, Byte(), Int32, Int32)
  fullName.vb: Org.BouncyCastle.Crypto.Tls.TlsCipher.EncodePlaintext(System.Int64, System.Byte, System.Byte(), System.Int32, System.Int32)
  name.vb: EncodePlaintext(Int64, Byte, Byte(), Int32, Int32)
  spec.csharp:
  - uid: Org.BouncyCastle.Crypto.Tls.TlsCipher.EncodePlaintext(System.Int64,System.Byte,System.Byte[],System.Int32,System.Int32)
    name: EncodePlaintext
    nameWithType: TlsCipher.EncodePlaintext
    fullName: Org.BouncyCastle.Crypto.Tls.TlsCipher.EncodePlaintext
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Org.BouncyCastle.Crypto.Tls.TlsCipher.EncodePlaintext(System.Int64,System.Byte,System.Byte[],System.Int32,System.Int32)
    name: EncodePlaintext
    nameWithType: TlsCipher.EncodePlaintext
    fullName: Org.BouncyCastle.Crypto.Tls.TlsCipher.EncodePlaintext
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Byte
  commentId: T:System.Byte
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte
- uid: Org.BouncyCastle.Crypto.Tls.Chacha20Poly1305.DecodeCiphertext*
  commentId: Overload:Org.BouncyCastle.Crypto.Tls.Chacha20Poly1305.DecodeCiphertext
  name: DecodeCiphertext
  nameWithType: Chacha20Poly1305.DecodeCiphertext
  fullName: Org.BouncyCastle.Crypto.Tls.Chacha20Poly1305.DecodeCiphertext
- uid: Org.BouncyCastle.Crypto.Tls.TlsCipher.DecodeCiphertext(System.Int64,System.Byte,System.Byte[],System.Int32,System.Int32)
  commentId: M:Org.BouncyCastle.Crypto.Tls.TlsCipher.DecodeCiphertext(System.Int64,System.Byte,System.Byte[],System.Int32,System.Int32)
  parent: Org.BouncyCastle.Crypto.Tls.TlsCipher
  isExternal: true
  name: DecodeCiphertext(Int64, Byte, Byte[], Int32, Int32)
  nameWithType: TlsCipher.DecodeCiphertext(Int64, Byte, Byte[], Int32, Int32)
  fullName: Org.BouncyCastle.Crypto.Tls.TlsCipher.DecodeCiphertext(System.Int64, System.Byte, System.Byte[], System.Int32, System.Int32)
  nameWithType.vb: TlsCipher.DecodeCiphertext(Int64, Byte, Byte(), Int32, Int32)
  fullName.vb: Org.BouncyCastle.Crypto.Tls.TlsCipher.DecodeCiphertext(System.Int64, System.Byte, System.Byte(), System.Int32, System.Int32)
  name.vb: DecodeCiphertext(Int64, Byte, Byte(), Int32, Int32)
  spec.csharp:
  - uid: Org.BouncyCastle.Crypto.Tls.TlsCipher.DecodeCiphertext(System.Int64,System.Byte,System.Byte[],System.Int32,System.Int32)
    name: DecodeCiphertext
    nameWithType: TlsCipher.DecodeCiphertext
    fullName: Org.BouncyCastle.Crypto.Tls.TlsCipher.DecodeCiphertext
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Org.BouncyCastle.Crypto.Tls.TlsCipher.DecodeCiphertext(System.Int64,System.Byte,System.Byte[],System.Int32,System.Int32)
    name: DecodeCiphertext
    nameWithType: TlsCipher.DecodeCiphertext
    fullName: Org.BouncyCastle.Crypto.Tls.TlsCipher.DecodeCiphertext
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Org.BouncyCastle.Crypto.Tls.Chacha20Poly1305.InitRecord*
  commentId: Overload:Org.BouncyCastle.Crypto.Tls.Chacha20Poly1305.InitRecord
  name: InitRecord
  nameWithType: Chacha20Poly1305.InitRecord
  fullName: Org.BouncyCastle.Crypto.Tls.Chacha20Poly1305.InitRecord
- uid: Org.BouncyCastle.Crypto.IStreamCipher
  commentId: T:Org.BouncyCastle.Crypto.IStreamCipher
  parent: Org.BouncyCastle.Crypto
  name: IStreamCipher
  nameWithType: IStreamCipher
  fullName: Org.BouncyCastle.Crypto.IStreamCipher
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: KeyParameter
  isExternal: true
  name: KeyParameter
  nameWithType: KeyParameter
  fullName: KeyParameter
- uid: Org.BouncyCastle.Crypto
  commentId: N:Org.BouncyCastle.Crypto
  name: Org.BouncyCastle.Crypto
  nameWithType: Org.BouncyCastle.Crypto
  fullName: Org.BouncyCastle.Crypto
- uid: Org.BouncyCastle.Crypto.Tls.Chacha20Poly1305.CalculateNonce*
  commentId: Overload:Org.BouncyCastle.Crypto.Tls.Chacha20Poly1305.CalculateNonce
  name: CalculateNonce
  nameWithType: Chacha20Poly1305.CalculateNonce
  fullName: Org.BouncyCastle.Crypto.Tls.Chacha20Poly1305.CalculateNonce
- uid: Org.BouncyCastle.Crypto.Tls.Chacha20Poly1305.GenerateRecordMacKey*
  commentId: Overload:Org.BouncyCastle.Crypto.Tls.Chacha20Poly1305.GenerateRecordMacKey
  name: GenerateRecordMacKey
  nameWithType: Chacha20Poly1305.GenerateRecordMacKey
  fullName: Org.BouncyCastle.Crypto.Tls.Chacha20Poly1305.GenerateRecordMacKey
- uid: Org.BouncyCastle.Crypto.Tls.Chacha20Poly1305.CalculateRecordMac*
  commentId: Overload:Org.BouncyCastle.Crypto.Tls.Chacha20Poly1305.CalculateRecordMac
  name: CalculateRecordMac
  nameWithType: Chacha20Poly1305.CalculateRecordMac
  fullName: Org.BouncyCastle.Crypto.Tls.Chacha20Poly1305.CalculateRecordMac
- uid: Org.BouncyCastle.Crypto.Tls.Chacha20Poly1305.UpdateRecordMacLength*
  commentId: Overload:Org.BouncyCastle.Crypto.Tls.Chacha20Poly1305.UpdateRecordMacLength
  name: UpdateRecordMacLength
  nameWithType: Chacha20Poly1305.UpdateRecordMacLength
  fullName: Org.BouncyCastle.Crypto.Tls.Chacha20Poly1305.UpdateRecordMacLength
- uid: Org.BouncyCastle.Crypto.IMac
  commentId: T:Org.BouncyCastle.Crypto.IMac
  parent: Org.BouncyCastle.Crypto
  name: IMac
  nameWithType: IMac
  fullName: Org.BouncyCastle.Crypto.IMac
- uid: Org.BouncyCastle.Crypto.Tls.Chacha20Poly1305.UpdateRecordMacText*
  commentId: Overload:Org.BouncyCastle.Crypto.Tls.Chacha20Poly1305.UpdateRecordMacText
  name: UpdateRecordMacText
  nameWithType: Chacha20Poly1305.UpdateRecordMacText
  fullName: Org.BouncyCastle.Crypto.Tls.Chacha20Poly1305.UpdateRecordMacText
- uid: Org.BouncyCastle.Crypto.Tls.Chacha20Poly1305.GetAdditionalData*
  commentId: Overload:Org.BouncyCastle.Crypto.Tls.Chacha20Poly1305.GetAdditionalData
  name: GetAdditionalData
  nameWithType: Chacha20Poly1305.GetAdditionalData
  fullName: Org.BouncyCastle.Crypto.Tls.Chacha20Poly1305.GetAdditionalData
