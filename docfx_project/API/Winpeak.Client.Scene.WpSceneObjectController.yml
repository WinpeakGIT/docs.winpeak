### YamlMime:ManagedReference
items:
- uid: Winpeak.Client.Scene.WpSceneObjectController
  commentId: T:Winpeak.Client.Scene.WpSceneObjectController
  id: WpSceneObjectController
  parent: Winpeak.Client.Scene
  children:
  - Winpeak.Client.Scene.WpSceneObjectController.UpdateSceneObjects(System.Collections.Generic.Dictionary{System.String,System.String[]},Winpeak.Client.Scene.WinPeakRigidbody)
  langs:
  - csharp
  - vb
  name: WpSceneObjectController
  nameWithType: WpSceneObjectController
  fullName: Winpeak.Client.Scene.WpSceneObjectController
  type: Class
  source:
    id: WpSceneObjectController
    path: ''
    startLine: 2295
  assemblies:
  - cs.temp.dll
  namespace: Winpeak.Client.Scene
  syntax:
    content: 'public class WpSceneObjectController : MonoBehaviour'
    content.vb: >-
      Public Class WpSceneObjectController
          Inherits MonoBehaviour
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Winpeak.Client.Scene.WpSceneObjectController.UpdateSceneObjects(System.Collections.Generic.Dictionary{System.String,System.String[]},Winpeak.Client.Scene.WinPeakRigidbody)
  commentId: M:Winpeak.Client.Scene.WpSceneObjectController.UpdateSceneObjects(System.Collections.Generic.Dictionary{System.String,System.String[]},Winpeak.Client.Scene.WinPeakRigidbody)
  id: UpdateSceneObjects(System.Collections.Generic.Dictionary{System.String,System.String[]},Winpeak.Client.Scene.WinPeakRigidbody)
  parent: Winpeak.Client.Scene.WpSceneObjectController
  langs:
  - csharp
  - vb
  name: UpdateSceneObjects(Dictionary<String, String[]>, WinPeakRigidbody)
  nameWithType: WpSceneObjectController.UpdateSceneObjects(Dictionary<String, String[]>, WinPeakRigidbody)
  fullName: Winpeak.Client.Scene.WpSceneObjectController.UpdateSceneObjects(System.Collections.Generic.Dictionary<System.String, System.String[]>, Winpeak.Client.Scene.WinPeakRigidbody)
  type: Method
  source:
    id: UpdateSceneObjects
    path: ''
    startLine: 2394
  assemblies:
  - cs.temp.dll
  namespace: Winpeak.Client.Scene
  syntax:
    content: public void UpdateSceneObjects(Dictionary<string, string[]> actorFunctions, WinPeakRigidbody rigidbody)
    parameters:
    - id: actorFunctions
      type: System.Collections.Generic.Dictionary{System.String,System.String[]}
    - id: rigidbody
      type: Winpeak.Client.Scene.WinPeakRigidbody
    content.vb: Public Sub UpdateSceneObjects(actorFunctions As Dictionary(Of String, String()), rigidbody As WinPeakRigidbody)
  overload: Winpeak.Client.Scene.WpSceneObjectController.UpdateSceneObjects*
  nameWithType.vb: WpSceneObjectController.UpdateSceneObjects(Dictionary(Of String, String()), WinPeakRigidbody)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Winpeak.Client.Scene.WpSceneObjectController.UpdateSceneObjects(System.Collections.Generic.Dictionary(Of System.String, System.String()), Winpeak.Client.Scene.WinPeakRigidbody)
  name.vb: UpdateSceneObjects(Dictionary(Of String, String()), WinPeakRigidbody)
references:
- uid: Winpeak.Client.Scene
  commentId: N:Winpeak.Client.Scene
  name: Winpeak.Client.Scene
  nameWithType: Winpeak.Client.Scene
  fullName: Winpeak.Client.Scene
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Winpeak.Client.Scene.WpSceneObjectController.UpdateSceneObjects*
  commentId: Overload:Winpeak.Client.Scene.WpSceneObjectController.UpdateSceneObjects
  name: UpdateSceneObjects
  nameWithType: WpSceneObjectController.UpdateSceneObjects
  fullName: Winpeak.Client.Scene.WpSceneObjectController.UpdateSceneObjects
- uid: System.Collections.Generic.Dictionary{System.String,System.String[]}
  commentId: T:System.Collections.Generic.Dictionary{System.String,System.String[]}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  name: Dictionary<String, String[]>
  nameWithType: Dictionary<String, String[]>
  fullName: System.Collections.Generic.Dictionary<System.String, System.String[]>
  nameWithType.vb: Dictionary(Of String, String())
  fullName.vb: System.Collections.Generic.Dictionary(Of System.String, System.String())
  name.vb: Dictionary(Of String, String())
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Winpeak.Client.Scene.WinPeakRigidbody
  commentId: T:Winpeak.Client.Scene.WinPeakRigidbody
  parent: Winpeak.Client.Scene
  name: WinPeakRigidbody
  nameWithType: WinPeakRigidbody
  fullName: Winpeak.Client.Scene.WinPeakRigidbody
- uid: System.Collections.Generic.Dictionary`2
  commentId: T:System.Collections.Generic.Dictionary`2
  isExternal: true
  name: Dictionary<TKey, TValue>
  nameWithType: Dictionary<TKey, TValue>
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>
  nameWithType.vb: Dictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue)
  name.vb: Dictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
