### YamlMime:ManagedReference
items:
- uid: Winpeak.Client.Networking.WebServer.CheckAuthorization
  commentId: T:Winpeak.Client.Networking.WebServer.CheckAuthorization
  id: CheckAuthorization
  parent: Winpeak.Client.Networking.WebServer
  children:
  - Winpeak.Client.Networking.WebServer.CheckAuthorization.#ctor
  - Winpeak.Client.Networking.WebServer.CheckAuthorization.AuthenticationRequired
  langs:
  - csharp
  - vb
  name: CheckAuthorization
  nameWithType: CheckAuthorization
  fullName: Winpeak.Client.Networking.WebServer.CheckAuthorization
  type: Class
  source:
    id: CheckAuthorization
    path: ''
    startLine: 165240
  assemblies:
  - cs.temp.dll
  namespace: Winpeak.Client.Networking.WebServer
  syntax:
    content: 'public class CheckAuthorization : BaseWebPackage<ChechAuthorizationResult>, IWebRequest'
    content.vb: >-
      Public Class CheckAuthorization
          Inherits BaseWebPackage(Of ChechAuthorizationResult)
          Implements IWebRequest
  inheritance:
  - System.Object
  - Winpeak.Client.Networking.WebServer.WebRequest
  - Winpeak.Client.Networking.WebServer.BaseWebPackage{Winpeak.Client.Networking.WebServer.ChechAuthorizationResult}
  implements:
  - Winpeak.Client.Networking.WebServer.IWebRequest
  inheritedMembers:
  - Winpeak.Client.Networking.WebServer.BaseWebPackage{Winpeak.Client.Networking.WebServer.ChechAuthorizationResult}.Callback
  - Winpeak.Client.Networking.WebServer.BaseWebPackage{Winpeak.Client.Networking.WebServer.ChechAuthorizationResult}.Send(System.Action{Winpeak.Client.Networking.WebServer.ChechAuthorizationResult})
  - Winpeak.Client.Networking.WebServer.BaseWebPackage{Winpeak.Client.Networking.WebServer.ChechAuthorizationResult}.OnRequestFinished(HTTPRequest,HTTPResponse)
  - Winpeak.Client.Networking.WebServer.WebRequest.GenerateData
  - Winpeak.Client.Networking.WebServer.WebRequest.m_url
  - Winpeak.Client.Networking.WebServer.WebRequest.Send
  - Winpeak.Client.Networking.WebServer.WebRequest.CustomHeaders
  - Winpeak.Client.Networking.WebServer.WebRequest.Url
  - Winpeak.Client.Networking.WebServer.WebRequest.TimeStamp
  - Winpeak.Client.Networking.WebServer.WebRequest.Method
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ToString
  - System.Object.ReferenceEquals(System.Object,System.Object)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Winpeak.Client.Networking.WebServer.CheckAuthorization.#ctor
  commentId: M:Winpeak.Client.Networking.WebServer.CheckAuthorization.#ctor
  id: '#ctor'
  parent: Winpeak.Client.Networking.WebServer.CheckAuthorization
  langs:
  - csharp
  - vb
  name: CheckAuthorization()
  nameWithType: CheckAuthorization.CheckAuthorization()
  fullName: Winpeak.Client.Networking.WebServer.CheckAuthorization.CheckAuthorization()
  type: Constructor
  source:
    id: .ctor
    path: ''
    startLine: 165245
  assemblies:
  - cs.temp.dll
  namespace: Winpeak.Client.Networking.WebServer
  syntax:
    content: public CheckAuthorization()
    content.vb: Public Sub New
  overload: Winpeak.Client.Networking.WebServer.CheckAuthorization.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Winpeak.Client.Networking.WebServer.CheckAuthorization.AuthenticationRequired
  commentId: P:Winpeak.Client.Networking.WebServer.CheckAuthorization.AuthenticationRequired
  id: AuthenticationRequired
  parent: Winpeak.Client.Networking.WebServer.CheckAuthorization
  langs:
  - csharp
  - vb
  name: AuthenticationRequired
  nameWithType: CheckAuthorization.AuthenticationRequired
  fullName: Winpeak.Client.Networking.WebServer.CheckAuthorization.AuthenticationRequired
  type: Property
  source:
    id: AuthenticationRequired
    path: ''
    startLine: 165247
  assemblies:
  - cs.temp.dll
  namespace: Winpeak.Client.Networking.WebServer
  syntax:
    content: public override bool AuthenticationRequired { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Overrides ReadOnly Property AuthenticationRequired As Boolean
  overridden: Winpeak.Client.Networking.WebServer.WebRequest.AuthenticationRequired
  overload: Winpeak.Client.Networking.WebServer.CheckAuthorization.AuthenticationRequired*
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
references:
- uid: Winpeak.Client.Networking.WebServer
  commentId: N:Winpeak.Client.Networking.WebServer
  name: Winpeak.Client.Networking.WebServer
  nameWithType: Winpeak.Client.Networking.WebServer
  fullName: Winpeak.Client.Networking.WebServer
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Winpeak.Client.Networking.WebServer.WebRequest
  commentId: T:Winpeak.Client.Networking.WebServer.WebRequest
  parent: Winpeak.Client.Networking.WebServer
  name: WebRequest
  nameWithType: WebRequest
  fullName: Winpeak.Client.Networking.WebServer.WebRequest
- uid: Winpeak.Client.Networking.WebServer.BaseWebPackage{Winpeak.Client.Networking.WebServer.ChechAuthorizationResult}
  commentId: T:Winpeak.Client.Networking.WebServer.BaseWebPackage{Winpeak.Client.Networking.WebServer.ChechAuthorizationResult}
  parent: Winpeak.Client.Networking.WebServer
  definition: Winpeak.Client.Networking.WebServer.BaseWebPackage`1
  name: BaseWebPackage<ChechAuthorizationResult>
  nameWithType: BaseWebPackage<ChechAuthorizationResult>
  fullName: Winpeak.Client.Networking.WebServer.BaseWebPackage<Winpeak.Client.Networking.WebServer.ChechAuthorizationResult>
  nameWithType.vb: BaseWebPackage(Of ChechAuthorizationResult)
  fullName.vb: Winpeak.Client.Networking.WebServer.BaseWebPackage(Of Winpeak.Client.Networking.WebServer.ChechAuthorizationResult)
  name.vb: BaseWebPackage(Of ChechAuthorizationResult)
  spec.csharp:
  - uid: Winpeak.Client.Networking.WebServer.BaseWebPackage`1
    name: BaseWebPackage
    nameWithType: BaseWebPackage
    fullName: Winpeak.Client.Networking.WebServer.BaseWebPackage
  - name: <
    nameWithType: <
    fullName: <
  - uid: Winpeak.Client.Networking.WebServer.ChechAuthorizationResult
    name: ChechAuthorizationResult
    nameWithType: ChechAuthorizationResult
    fullName: Winpeak.Client.Networking.WebServer.ChechAuthorizationResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Winpeak.Client.Networking.WebServer.BaseWebPackage`1
    name: BaseWebPackage
    nameWithType: BaseWebPackage
    fullName: Winpeak.Client.Networking.WebServer.BaseWebPackage
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Winpeak.Client.Networking.WebServer.ChechAuthorizationResult
    name: ChechAuthorizationResult
    nameWithType: ChechAuthorizationResult
    fullName: Winpeak.Client.Networking.WebServer.ChechAuthorizationResult
  - name: )
    nameWithType: )
    fullName: )
- uid: Winpeak.Client.Networking.WebServer.IWebRequest
  commentId: T:Winpeak.Client.Networking.WebServer.IWebRequest
  parent: Winpeak.Client.Networking.WebServer
  name: IWebRequest
  nameWithType: IWebRequest
  fullName: Winpeak.Client.Networking.WebServer.IWebRequest
- uid: Winpeak.Client.Networking.WebServer.BaseWebPackage{Winpeak.Client.Networking.WebServer.ChechAuthorizationResult}.Callback
  commentId: F:Winpeak.Client.Networking.WebServer.BaseWebPackage{Winpeak.Client.Networking.WebServer.ChechAuthorizationResult}.Callback
  parent: Winpeak.Client.Networking.WebServer.BaseWebPackage{Winpeak.Client.Networking.WebServer.ChechAuthorizationResult}
  definition: Winpeak.Client.Networking.WebServer.BaseWebPackage`1.Callback
  name: Callback
  nameWithType: BaseWebPackage<ChechAuthorizationResult>.Callback
  fullName: Winpeak.Client.Networking.WebServer.BaseWebPackage<Winpeak.Client.Networking.WebServer.ChechAuthorizationResult>.Callback
  nameWithType.vb: BaseWebPackage(Of ChechAuthorizationResult).Callback
  fullName.vb: Winpeak.Client.Networking.WebServer.BaseWebPackage(Of Winpeak.Client.Networking.WebServer.ChechAuthorizationResult).Callback
- uid: Winpeak.Client.Networking.WebServer.BaseWebPackage{Winpeak.Client.Networking.WebServer.ChechAuthorizationResult}.Send(System.Action{Winpeak.Client.Networking.WebServer.ChechAuthorizationResult})
  commentId: M:Winpeak.Client.Networking.WebServer.BaseWebPackage{Winpeak.Client.Networking.WebServer.ChechAuthorizationResult}.Send(System.Action{Winpeak.Client.Networking.WebServer.ChechAuthorizationResult})
  parent: Winpeak.Client.Networking.WebServer.BaseWebPackage{Winpeak.Client.Networking.WebServer.ChechAuthorizationResult}
  definition: Winpeak.Client.Networking.WebServer.BaseWebPackage`1.Send(System.Action{`0})
  name: Send(Action<ChechAuthorizationResult>)
  nameWithType: BaseWebPackage<ChechAuthorizationResult>.Send(Action<ChechAuthorizationResult>)
  fullName: Winpeak.Client.Networking.WebServer.BaseWebPackage<Winpeak.Client.Networking.WebServer.ChechAuthorizationResult>.Send(System.Action<Winpeak.Client.Networking.WebServer.ChechAuthorizationResult>)
  nameWithType.vb: BaseWebPackage(Of ChechAuthorizationResult).Send(Action(Of ChechAuthorizationResult))
  fullName.vb: Winpeak.Client.Networking.WebServer.BaseWebPackage(Of Winpeak.Client.Networking.WebServer.ChechAuthorizationResult).Send(System.Action(Of Winpeak.Client.Networking.WebServer.ChechAuthorizationResult))
  name.vb: Send(Action(Of ChechAuthorizationResult))
  spec.csharp:
  - uid: Winpeak.Client.Networking.WebServer.BaseWebPackage`1.Send(System.Action{`0})
    name: Send
    nameWithType: BaseWebPackage<ChechAuthorizationResult>.Send
    fullName: Winpeak.Client.Networking.WebServer.BaseWebPackage<Winpeak.Client.Networking.WebServer.ChechAuthorizationResult>.Send
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Winpeak.Client.Networking.WebServer.ChechAuthorizationResult
    name: ChechAuthorizationResult
    nameWithType: ChechAuthorizationResult
    fullName: Winpeak.Client.Networking.WebServer.ChechAuthorizationResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Winpeak.Client.Networking.WebServer.BaseWebPackage`1.Send(System.Action{`0})
    name: Send
    nameWithType: BaseWebPackage(Of ChechAuthorizationResult).Send
    fullName: Winpeak.Client.Networking.WebServer.BaseWebPackage(Of Winpeak.Client.Networking.WebServer.ChechAuthorizationResult).Send
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Winpeak.Client.Networking.WebServer.ChechAuthorizationResult
    name: ChechAuthorizationResult
    nameWithType: ChechAuthorizationResult
    fullName: Winpeak.Client.Networking.WebServer.ChechAuthorizationResult
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Winpeak.Client.Networking.WebServer.BaseWebPackage{Winpeak.Client.Networking.WebServer.ChechAuthorizationResult}.OnRequestFinished(HTTPRequest,HTTPResponse)
  commentId: M:Winpeak.Client.Networking.WebServer.BaseWebPackage{Winpeak.Client.Networking.WebServer.ChechAuthorizationResult}.OnRequestFinished(HTTPRequest,HTTPResponse)
  parent: Winpeak.Client.Networking.WebServer.BaseWebPackage{Winpeak.Client.Networking.WebServer.ChechAuthorizationResult}
  definition: Winpeak.Client.Networking.WebServer.BaseWebPackage`1.OnRequestFinished(HTTPRequest,HTTPResponse)
  name: OnRequestFinished(HTTPRequest, HTTPResponse)
  nameWithType: BaseWebPackage<ChechAuthorizationResult>.OnRequestFinished(HTTPRequest, HTTPResponse)
  fullName: Winpeak.Client.Networking.WebServer.BaseWebPackage<Winpeak.Client.Networking.WebServer.ChechAuthorizationResult>.OnRequestFinished(HTTPRequest, HTTPResponse)
  nameWithType.vb: BaseWebPackage(Of ChechAuthorizationResult).OnRequestFinished(HTTPRequest, HTTPResponse)
  fullName.vb: Winpeak.Client.Networking.WebServer.BaseWebPackage(Of Winpeak.Client.Networking.WebServer.ChechAuthorizationResult).OnRequestFinished(HTTPRequest, HTTPResponse)
  spec.csharp:
  - uid: Winpeak.Client.Networking.WebServer.BaseWebPackage`1.OnRequestFinished(HTTPRequest,HTTPResponse)
    name: OnRequestFinished
    nameWithType: BaseWebPackage<ChechAuthorizationResult>.OnRequestFinished
    fullName: Winpeak.Client.Networking.WebServer.BaseWebPackage<Winpeak.Client.Networking.WebServer.ChechAuthorizationResult>.OnRequestFinished
  - name: (
    nameWithType: (
    fullName: (
  - uid: HTTPRequest
    name: HTTPRequest
    nameWithType: HTTPRequest
    fullName: HTTPRequest
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: HTTPResponse
    name: HTTPResponse
    nameWithType: HTTPResponse
    fullName: HTTPResponse
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Winpeak.Client.Networking.WebServer.BaseWebPackage`1.OnRequestFinished(HTTPRequest,HTTPResponse)
    name: OnRequestFinished
    nameWithType: BaseWebPackage(Of ChechAuthorizationResult).OnRequestFinished
    fullName: Winpeak.Client.Networking.WebServer.BaseWebPackage(Of Winpeak.Client.Networking.WebServer.ChechAuthorizationResult).OnRequestFinished
  - name: (
    nameWithType: (
    fullName: (
  - uid: HTTPRequest
    name: HTTPRequest
    nameWithType: HTTPRequest
    fullName: HTTPRequest
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: HTTPResponse
    name: HTTPResponse
    nameWithType: HTTPResponse
    fullName: HTTPResponse
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Winpeak.Client.Networking.WebServer.WebRequest.GenerateData
  commentId: M:Winpeak.Client.Networking.WebServer.WebRequest.GenerateData
  parent: Winpeak.Client.Networking.WebServer.WebRequest
  name: GenerateData()
  nameWithType: WebRequest.GenerateData()
  fullName: Winpeak.Client.Networking.WebServer.WebRequest.GenerateData()
  spec.csharp:
  - uid: Winpeak.Client.Networking.WebServer.WebRequest.GenerateData
    name: GenerateData
    nameWithType: WebRequest.GenerateData
    fullName: Winpeak.Client.Networking.WebServer.WebRequest.GenerateData
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Winpeak.Client.Networking.WebServer.WebRequest.GenerateData
    name: GenerateData
    nameWithType: WebRequest.GenerateData
    fullName: Winpeak.Client.Networking.WebServer.WebRequest.GenerateData
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Winpeak.Client.Networking.WebServer.WebRequest.m_url
  commentId: F:Winpeak.Client.Networking.WebServer.WebRequest.m_url
  parent: Winpeak.Client.Networking.WebServer.WebRequest
  name: m_url
  nameWithType: WebRequest.m_url
  fullName: Winpeak.Client.Networking.WebServer.WebRequest.m_url
- uid: Winpeak.Client.Networking.WebServer.WebRequest.Send
  commentId: M:Winpeak.Client.Networking.WebServer.WebRequest.Send
  parent: Winpeak.Client.Networking.WebServer.WebRequest
  name: Send()
  nameWithType: WebRequest.Send()
  fullName: Winpeak.Client.Networking.WebServer.WebRequest.Send()
  spec.csharp:
  - uid: Winpeak.Client.Networking.WebServer.WebRequest.Send
    name: Send
    nameWithType: WebRequest.Send
    fullName: Winpeak.Client.Networking.WebServer.WebRequest.Send
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Winpeak.Client.Networking.WebServer.WebRequest.Send
    name: Send
    nameWithType: WebRequest.Send
    fullName: Winpeak.Client.Networking.WebServer.WebRequest.Send
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Winpeak.Client.Networking.WebServer.WebRequest.CustomHeaders
  commentId: M:Winpeak.Client.Networking.WebServer.WebRequest.CustomHeaders
  parent: Winpeak.Client.Networking.WebServer.WebRequest
  name: CustomHeaders()
  nameWithType: WebRequest.CustomHeaders()
  fullName: Winpeak.Client.Networking.WebServer.WebRequest.CustomHeaders()
  spec.csharp:
  - uid: Winpeak.Client.Networking.WebServer.WebRequest.CustomHeaders
    name: CustomHeaders
    nameWithType: WebRequest.CustomHeaders
    fullName: Winpeak.Client.Networking.WebServer.WebRequest.CustomHeaders
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Winpeak.Client.Networking.WebServer.WebRequest.CustomHeaders
    name: CustomHeaders
    nameWithType: WebRequest.CustomHeaders
    fullName: Winpeak.Client.Networking.WebServer.WebRequest.CustomHeaders
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Winpeak.Client.Networking.WebServer.WebRequest.Url
  commentId: P:Winpeak.Client.Networking.WebServer.WebRequest.Url
  parent: Winpeak.Client.Networking.WebServer.WebRequest
  name: Url
  nameWithType: WebRequest.Url
  fullName: Winpeak.Client.Networking.WebServer.WebRequest.Url
- uid: Winpeak.Client.Networking.WebServer.WebRequest.TimeStamp
  commentId: P:Winpeak.Client.Networking.WebServer.WebRequest.TimeStamp
  parent: Winpeak.Client.Networking.WebServer.WebRequest
  name: TimeStamp
  nameWithType: WebRequest.TimeStamp
  fullName: Winpeak.Client.Networking.WebServer.WebRequest.TimeStamp
- uid: Winpeak.Client.Networking.WebServer.WebRequest.Method
  commentId: P:Winpeak.Client.Networking.WebServer.WebRequest.Method
  parent: Winpeak.Client.Networking.WebServer.WebRequest
  name: Method
  nameWithType: WebRequest.Method
  fullName: Winpeak.Client.Networking.WebServer.WebRequest.Method
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Winpeak.Client.Networking.WebServer.BaseWebPackage`1
  commentId: T:Winpeak.Client.Networking.WebServer.BaseWebPackage`1
  name: BaseWebPackage<T>
  nameWithType: BaseWebPackage<T>
  fullName: Winpeak.Client.Networking.WebServer.BaseWebPackage<T>
  nameWithType.vb: BaseWebPackage(Of T)
  fullName.vb: Winpeak.Client.Networking.WebServer.BaseWebPackage(Of T)
  name.vb: BaseWebPackage(Of T)
  spec.csharp:
  - uid: Winpeak.Client.Networking.WebServer.BaseWebPackage`1
    name: BaseWebPackage
    nameWithType: BaseWebPackage
    fullName: Winpeak.Client.Networking.WebServer.BaseWebPackage
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Winpeak.Client.Networking.WebServer.BaseWebPackage`1
    name: BaseWebPackage
    nameWithType: BaseWebPackage
    fullName: Winpeak.Client.Networking.WebServer.BaseWebPackage
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Winpeak.Client.Networking.WebServer.BaseWebPackage`1.Callback
  commentId: F:Winpeak.Client.Networking.WebServer.BaseWebPackage`1.Callback
  name: Callback
  nameWithType: BaseWebPackage<T>.Callback
  fullName: Winpeak.Client.Networking.WebServer.BaseWebPackage<T>.Callback
  nameWithType.vb: BaseWebPackage(Of T).Callback
  fullName.vb: Winpeak.Client.Networking.WebServer.BaseWebPackage(Of T).Callback
- uid: Winpeak.Client.Networking.WebServer.BaseWebPackage`1.Send(System.Action{`0})
  commentId: M:Winpeak.Client.Networking.WebServer.BaseWebPackage`1.Send(System.Action{`0})
  isExternal: true
  name: Send(Action<T>)
  nameWithType: BaseWebPackage<T>.Send(Action<T>)
  fullName: Winpeak.Client.Networking.WebServer.BaseWebPackage<T>.Send(System.Action<T>)
  nameWithType.vb: BaseWebPackage(Of T).Send(Action(Of T))
  fullName.vb: Winpeak.Client.Networking.WebServer.BaseWebPackage(Of T).Send(System.Action(Of T))
  name.vb: Send(Action(Of T))
  spec.csharp:
  - uid: Winpeak.Client.Networking.WebServer.BaseWebPackage`1.Send(System.Action{`0})
    name: Send
    nameWithType: BaseWebPackage<T>.Send
    fullName: Winpeak.Client.Networking.WebServer.BaseWebPackage<T>.Send
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Winpeak.Client.Networking.WebServer.BaseWebPackage`1.Send(System.Action{`0})
    name: Send
    nameWithType: BaseWebPackage(Of T).Send
    fullName: Winpeak.Client.Networking.WebServer.BaseWebPackage(Of T).Send
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Winpeak.Client.Networking.WebServer.BaseWebPackage`1.OnRequestFinished(HTTPRequest,HTTPResponse)
  commentId: M:Winpeak.Client.Networking.WebServer.BaseWebPackage`1.OnRequestFinished(HTTPRequest,HTTPResponse)
  isExternal: true
  name: OnRequestFinished(HTTPRequest, HTTPResponse)
  nameWithType: BaseWebPackage<T>.OnRequestFinished(HTTPRequest, HTTPResponse)
  fullName: Winpeak.Client.Networking.WebServer.BaseWebPackage<T>.OnRequestFinished(HTTPRequest, HTTPResponse)
  nameWithType.vb: BaseWebPackage(Of T).OnRequestFinished(HTTPRequest, HTTPResponse)
  fullName.vb: Winpeak.Client.Networking.WebServer.BaseWebPackage(Of T).OnRequestFinished(HTTPRequest, HTTPResponse)
  spec.csharp:
  - uid: Winpeak.Client.Networking.WebServer.BaseWebPackage`1.OnRequestFinished(HTTPRequest,HTTPResponse)
    name: OnRequestFinished
    nameWithType: BaseWebPackage<T>.OnRequestFinished
    fullName: Winpeak.Client.Networking.WebServer.BaseWebPackage<T>.OnRequestFinished
  - name: (
    nameWithType: (
    fullName: (
  - uid: HTTPRequest
    name: HTTPRequest
    nameWithType: HTTPRequest
    fullName: HTTPRequest
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: HTTPResponse
    name: HTTPResponse
    nameWithType: HTTPResponse
    fullName: HTTPResponse
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Winpeak.Client.Networking.WebServer.BaseWebPackage`1.OnRequestFinished(HTTPRequest,HTTPResponse)
    name: OnRequestFinished
    nameWithType: BaseWebPackage(Of T).OnRequestFinished
    fullName: Winpeak.Client.Networking.WebServer.BaseWebPackage(Of T).OnRequestFinished
  - name: (
    nameWithType: (
    fullName: (
  - uid: HTTPRequest
    name: HTTPRequest
    nameWithType: HTTPRequest
    fullName: HTTPRequest
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: HTTPResponse
    name: HTTPResponse
    nameWithType: HTTPResponse
    fullName: HTTPResponse
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Winpeak.Client.Networking.WebServer.CheckAuthorization.#ctor*
  commentId: Overload:Winpeak.Client.Networking.WebServer.CheckAuthorization.#ctor
  name: CheckAuthorization
  nameWithType: CheckAuthorization.CheckAuthorization
  fullName: Winpeak.Client.Networking.WebServer.CheckAuthorization.CheckAuthorization
- uid: Winpeak.Client.Networking.WebServer.WebRequest.AuthenticationRequired
  commentId: P:Winpeak.Client.Networking.WebServer.WebRequest.AuthenticationRequired
  parent: Winpeak.Client.Networking.WebServer.WebRequest
  name: AuthenticationRequired
  nameWithType: WebRequest.AuthenticationRequired
  fullName: Winpeak.Client.Networking.WebServer.WebRequest.AuthenticationRequired
- uid: Winpeak.Client.Networking.WebServer.CheckAuthorization.AuthenticationRequired*
  commentId: Overload:Winpeak.Client.Networking.WebServer.CheckAuthorization.AuthenticationRequired
  name: AuthenticationRequired
  nameWithType: CheckAuthorization.AuthenticationRequired
  fullName: Winpeak.Client.Networking.WebServer.CheckAuthorization.AuthenticationRequired
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
