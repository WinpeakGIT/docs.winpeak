### YamlMime:ManagedReference
items:
- uid: Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange
  commentId: T:Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange
  id: AbstractTlsKeyExchange
  parent: Org.BouncyCastle.Crypto.Tls
  children:
  - Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange.#ctor(System.Int32,System.Collections.IList)
  - Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange.GenerateClientKeyExchange(Stream)
  - Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange.GeneratePremasterSecret
  - Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange.GenerateServerKeyExchange
  - Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange.Init(Org.BouncyCastle.Crypto.Tls.TlsContext)
  - Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange.mContext
  - Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange.mKeyExchange
  - Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange.mSupportedSignatureAlgorithms
  - Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange.ParseSignature(Stream)
  - Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange.ProcessClientCertificate(Org.BouncyCastle.Crypto.Tls.Certificate)
  - Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange.ProcessClientCredentials(Org.BouncyCastle.Crypto.Tls.TlsCredentials)
  - Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange.ProcessClientKeyExchange(Stream)
  - Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange.ProcessServerCertificate(Org.BouncyCastle.Crypto.Tls.Certificate)
  - Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange.ProcessServerCredentials(Org.BouncyCastle.Crypto.Tls.TlsCredentials)
  - Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange.ProcessServerKeyExchange(Stream)
  - Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange.RequiresServerKeyExchange
  - Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange.SkipClientCredentials
  - Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange.SkipServerCredentials
  - Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange.SkipServerKeyExchange
  - Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange.ValidateCertificateRequest(Org.BouncyCastle.Crypto.Tls.CertificateRequest)
  langs:
  - csharp
  - vb
  name: AbstractTlsKeyExchange
  nameWithType: AbstractTlsKeyExchange
  fullName: Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange
  type: Class
  source:
    id: AbstractTlsKeyExchange
    path: ''
    startLine: 76682
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Tls
  syntax:
    content: 'public abstract class AbstractTlsKeyExchange : TlsKeyExchange'
    content.vb: >-
      Public MustInherit Class AbstractTlsKeyExchange
          Implements TlsKeyExchange
  inheritance:
  - System.Object
  derivedClasses:
  - Org.BouncyCastle.Crypto.Tls.TlsDHKeyExchange
  - Org.BouncyCastle.Crypto.Tls.TlsECDHKeyExchange
  - Org.BouncyCastle.Crypto.Tls.TlsRsaKeyExchange
  implements:
  - Org.BouncyCastle.Crypto.Tls.TlsKeyExchange
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ToString
  - System.Object.ReferenceEquals(System.Object,System.Object)
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange.mKeyExchange
  commentId: F:Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange.mKeyExchange
  id: mKeyExchange
  parent: Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange
  langs:
  - csharp
  - vb
  name: mKeyExchange
  nameWithType: AbstractTlsKeyExchange.mKeyExchange
  fullName: Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange.mKeyExchange
  type: Field
  source:
    id: mKeyExchange
    path: ''
    startLine: 76685
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Tls
  syntax:
    content: protected readonly int mKeyExchange
    return:
      type: System.Int32
    content.vb: Protected ReadOnly mKeyExchange As Integer
  modifiers.csharp:
  - protected
  - readonly
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange.mSupportedSignatureAlgorithms
  commentId: F:Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange.mSupportedSignatureAlgorithms
  id: mSupportedSignatureAlgorithms
  parent: Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange
  langs:
  - csharp
  - vb
  name: mSupportedSignatureAlgorithms
  nameWithType: AbstractTlsKeyExchange.mSupportedSignatureAlgorithms
  fullName: Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange.mSupportedSignatureAlgorithms
  type: Field
  source:
    id: mSupportedSignatureAlgorithms
    path: ''
    startLine: 76686
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Tls
  syntax:
    content: protected IList mSupportedSignatureAlgorithms
    return:
      type: System.Collections.IList
    content.vb: Protected mSupportedSignatureAlgorithms As IList
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange.mContext
  commentId: F:Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange.mContext
  id: mContext
  parent: Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange
  langs:
  - csharp
  - vb
  name: mContext
  nameWithType: AbstractTlsKeyExchange.mContext
  fullName: Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange.mContext
  type: Field
  source:
    id: mContext
    path: ''
    startLine: 76688
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Tls
  syntax:
    content: protected TlsContext mContext
    return:
      type: Org.BouncyCastle.Crypto.Tls.TlsContext
    content.vb: Protected mContext As TlsContext
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange.#ctor(System.Int32,System.Collections.IList)
  commentId: M:Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange.#ctor(System.Int32,System.Collections.IList)
  id: '#ctor(System.Int32,System.Collections.IList)'
  parent: Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange
  langs:
  - csharp
  - vb
  name: AbstractTlsKeyExchange(Int32, IList)
  nameWithType: AbstractTlsKeyExchange.AbstractTlsKeyExchange(Int32, IList)
  fullName: Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange.AbstractTlsKeyExchange(System.Int32, System.Collections.IList)
  type: Constructor
  source:
    id: .ctor
    path: ''
    startLine: 76690
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Tls
  syntax:
    content: protected AbstractTlsKeyExchange(int keyExchange, IList supportedSignatureAlgorithms)
    parameters:
    - id: keyExchange
      type: System.Int32
    - id: supportedSignatureAlgorithms
      type: System.Collections.IList
    content.vb: Protected Sub New(keyExchange As Integer, supportedSignatureAlgorithms As IList)
  overload: Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange.#ctor*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange.ParseSignature(Stream)
  commentId: M:Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange.ParseSignature(Stream)
  id: ParseSignature(Stream)
  parent: Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange
  langs:
  - csharp
  - vb
  name: ParseSignature(Stream)
  nameWithType: AbstractTlsKeyExchange.ParseSignature(Stream)
  fullName: Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange.ParseSignature(Stream)
  type: Method
  source:
    id: ParseSignature
    path: ''
    startLine: 76696
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Tls
  syntax:
    content: protected virtual DigitallySigned ParseSignature(Stream input)
    parameters:
    - id: input
      type: Stream
    return:
      type: Org.BouncyCastle.Crypto.Tls.DigitallySigned
    content.vb: Protected Overridable Function ParseSignature(input As Stream) As DigitallySigned
  overload: Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange.ParseSignature*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange.Init(Org.BouncyCastle.Crypto.Tls.TlsContext)
  commentId: M:Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange.Init(Org.BouncyCastle.Crypto.Tls.TlsContext)
  id: Init(Org.BouncyCastle.Crypto.Tls.TlsContext)
  parent: Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange
  langs:
  - csharp
  - vb
  name: Init(TlsContext)
  nameWithType: AbstractTlsKeyExchange.Init(TlsContext)
  fullName: Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange.Init(Org.BouncyCastle.Crypto.Tls.TlsContext)
  type: Method
  source:
    id: Init
    path: ''
    startLine: 76707
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Tls
  syntax:
    content: public virtual void Init(TlsContext context)
    parameters:
    - id: context
      type: Org.BouncyCastle.Crypto.Tls.TlsContext
    content.vb: Public Overridable Sub Init(context As TlsContext)
  overload: Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange.Init*
  implements:
  - Org.BouncyCastle.Crypto.Tls.TlsKeyExchange.Init(Org.BouncyCastle.Crypto.Tls.TlsContext)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange.SkipServerCredentials
  commentId: M:Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange.SkipServerCredentials
  id: SkipServerCredentials
  parent: Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange
  langs:
  - csharp
  - vb
  name: SkipServerCredentials()
  nameWithType: AbstractTlsKeyExchange.SkipServerCredentials()
  fullName: Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange.SkipServerCredentials()
  type: Method
  source:
    id: SkipServerCredentials
    path: ''
    startLine: 76777
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Tls
  syntax:
    content: public abstract void SkipServerCredentials()
    content.vb: Public MustOverride Sub SkipServerCredentials
  overload: Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange.SkipServerCredentials*
  implements:
  - Org.BouncyCastle.Crypto.Tls.TlsKeyExchange.SkipServerCredentials
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
- uid: Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange.ProcessServerCertificate(Org.BouncyCastle.Crypto.Tls.Certificate)
  commentId: M:Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange.ProcessServerCertificate(Org.BouncyCastle.Crypto.Tls.Certificate)
  id: ProcessServerCertificate(Org.BouncyCastle.Crypto.Tls.Certificate)
  parent: Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange
  langs:
  - csharp
  - vb
  name: ProcessServerCertificate(Certificate)
  nameWithType: AbstractTlsKeyExchange.ProcessServerCertificate(Certificate)
  fullName: Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange.ProcessServerCertificate(Org.BouncyCastle.Crypto.Tls.Certificate)
  type: Method
  source:
    id: ProcessServerCertificate
    path: ''
    startLine: 76779
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Tls
  syntax:
    content: public virtual void ProcessServerCertificate(Certificate serverCertificate)
    parameters:
    - id: serverCertificate
      type: Org.BouncyCastle.Crypto.Tls.Certificate
    content.vb: Public Overridable Sub ProcessServerCertificate(serverCertificate As Certificate)
  overload: Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange.ProcessServerCertificate*
  implements:
  - Org.BouncyCastle.Crypto.Tls.TlsKeyExchange.ProcessServerCertificate(Org.BouncyCastle.Crypto.Tls.Certificate)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange.ProcessServerCredentials(Org.BouncyCastle.Crypto.Tls.TlsCredentials)
  commentId: M:Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange.ProcessServerCredentials(Org.BouncyCastle.Crypto.Tls.TlsCredentials)
  id: ProcessServerCredentials(Org.BouncyCastle.Crypto.Tls.TlsCredentials)
  parent: Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange
  langs:
  - csharp
  - vb
  name: ProcessServerCredentials(TlsCredentials)
  nameWithType: AbstractTlsKeyExchange.ProcessServerCredentials(TlsCredentials)
  fullName: Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange.ProcessServerCredentials(Org.BouncyCastle.Crypto.Tls.TlsCredentials)
  type: Method
  source:
    id: ProcessServerCredentials
    path: ''
    startLine: 76798
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Tls
  syntax:
    content: public virtual void ProcessServerCredentials(TlsCredentials serverCredentials)
    parameters:
    - id: serverCredentials
      type: Org.BouncyCastle.Crypto.Tls.TlsCredentials
    content.vb: Public Overridable Sub ProcessServerCredentials(serverCredentials As TlsCredentials)
  overload: Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange.ProcessServerCredentials*
  implements:
  - Org.BouncyCastle.Crypto.Tls.TlsKeyExchange.ProcessServerCredentials(Org.BouncyCastle.Crypto.Tls.TlsCredentials)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange.RequiresServerKeyExchange
  commentId: P:Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange.RequiresServerKeyExchange
  id: RequiresServerKeyExchange
  parent: Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange
  langs:
  - csharp
  - vb
  name: RequiresServerKeyExchange
  nameWithType: AbstractTlsKeyExchange.RequiresServerKeyExchange
  fullName: Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange.RequiresServerKeyExchange
  type: Property
  source:
    id: RequiresServerKeyExchange
    path: ''
    startLine: 76803
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Tls
  syntax:
    content: public virtual bool RequiresServerKeyExchange { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Overridable ReadOnly Property RequiresServerKeyExchange As Boolean
  overload: Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange.RequiresServerKeyExchange*
  implements:
  - Org.BouncyCastle.Crypto.Tls.TlsKeyExchange.RequiresServerKeyExchange
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange.GenerateServerKeyExchange
  commentId: M:Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange.GenerateServerKeyExchange
  id: GenerateServerKeyExchange
  parent: Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange
  langs:
  - csharp
  - vb
  name: GenerateServerKeyExchange()
  nameWithType: AbstractTlsKeyExchange.GenerateServerKeyExchange()
  fullName: Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange.GenerateServerKeyExchange()
  type: Method
  source:
    id: GenerateServerKeyExchange
    path: ''
    startLine: 76808
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Tls
  syntax:
    content: public virtual byte[] GenerateServerKeyExchange()
    return:
      type: System.Byte[]
    content.vb: Public Overridable Function GenerateServerKeyExchange As Byte()
  overload: Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange.GenerateServerKeyExchange*
  implements:
  - Org.BouncyCastle.Crypto.Tls.TlsKeyExchange.GenerateServerKeyExchange
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange.SkipServerKeyExchange
  commentId: M:Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange.SkipServerKeyExchange
  id: SkipServerKeyExchange
  parent: Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange
  langs:
  - csharp
  - vb
  name: SkipServerKeyExchange()
  nameWithType: AbstractTlsKeyExchange.SkipServerKeyExchange()
  fullName: Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange.SkipServerKeyExchange()
  type: Method
  source:
    id: SkipServerKeyExchange
    path: ''
    startLine: 76816
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Tls
  syntax:
    content: public virtual void SkipServerKeyExchange()
    content.vb: Public Overridable Sub SkipServerKeyExchange
  overload: Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange.SkipServerKeyExchange*
  implements:
  - Org.BouncyCastle.Crypto.Tls.TlsKeyExchange.SkipServerKeyExchange
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange.ProcessServerKeyExchange(Stream)
  commentId: M:Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange.ProcessServerKeyExchange(Stream)
  id: ProcessServerKeyExchange(Stream)
  parent: Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange
  langs:
  - csharp
  - vb
  name: ProcessServerKeyExchange(Stream)
  nameWithType: AbstractTlsKeyExchange.ProcessServerKeyExchange(Stream)
  fullName: Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange.ProcessServerKeyExchange(Stream)
  type: Method
  source:
    id: ProcessServerKeyExchange
    path: ''
    startLine: 76822
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Tls
  syntax:
    content: public virtual void ProcessServerKeyExchange(Stream input)
    parameters:
    - id: input
      type: Stream
    content.vb: Public Overridable Sub ProcessServerKeyExchange(input As Stream)
  overload: Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange.ProcessServerKeyExchange*
  implements:
  - Org.BouncyCastle.Crypto.Tls.TlsKeyExchange.ProcessServerKeyExchange(Stream)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange.ValidateCertificateRequest(Org.BouncyCastle.Crypto.Tls.CertificateRequest)
  commentId: M:Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange.ValidateCertificateRequest(Org.BouncyCastle.Crypto.Tls.CertificateRequest)
  id: ValidateCertificateRequest(Org.BouncyCastle.Crypto.Tls.CertificateRequest)
  parent: Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange
  langs:
  - csharp
  - vb
  name: ValidateCertificateRequest(CertificateRequest)
  nameWithType: AbstractTlsKeyExchange.ValidateCertificateRequest(CertificateRequest)
  fullName: Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange.ValidateCertificateRequest(Org.BouncyCastle.Crypto.Tls.CertificateRequest)
  type: Method
  source:
    id: ValidateCertificateRequest
    path: ''
    startLine: 76830
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Tls
  syntax:
    content: public abstract void ValidateCertificateRequest(CertificateRequest certificateRequest)
    parameters:
    - id: certificateRequest
      type: Org.BouncyCastle.Crypto.Tls.CertificateRequest
    content.vb: Public MustOverride Sub ValidateCertificateRequest(certificateRequest As CertificateRequest)
  overload: Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange.ValidateCertificateRequest*
  implements:
  - Org.BouncyCastle.Crypto.Tls.TlsKeyExchange.ValidateCertificateRequest(Org.BouncyCastle.Crypto.Tls.CertificateRequest)
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
- uid: Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange.SkipClientCredentials
  commentId: M:Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange.SkipClientCredentials
  id: SkipClientCredentials
  parent: Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange
  langs:
  - csharp
  - vb
  name: SkipClientCredentials()
  nameWithType: AbstractTlsKeyExchange.SkipClientCredentials()
  fullName: Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange.SkipClientCredentials()
  type: Method
  source:
    id: SkipClientCredentials
    path: ''
    startLine: 76832
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Tls
  syntax:
    content: public virtual void SkipClientCredentials()
    content.vb: Public Overridable Sub SkipClientCredentials
  overload: Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange.SkipClientCredentials*
  implements:
  - Org.BouncyCastle.Crypto.Tls.TlsKeyExchange.SkipClientCredentials
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange.ProcessClientCredentials(Org.BouncyCastle.Crypto.Tls.TlsCredentials)
  commentId: M:Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange.ProcessClientCredentials(Org.BouncyCastle.Crypto.Tls.TlsCredentials)
  id: ProcessClientCredentials(Org.BouncyCastle.Crypto.Tls.TlsCredentials)
  parent: Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange
  langs:
  - csharp
  - vb
  name: ProcessClientCredentials(TlsCredentials)
  nameWithType: AbstractTlsKeyExchange.ProcessClientCredentials(TlsCredentials)
  fullName: Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange.ProcessClientCredentials(Org.BouncyCastle.Crypto.Tls.TlsCredentials)
  type: Method
  source:
    id: ProcessClientCredentials
    path: ''
    startLine: 76836
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Tls
  syntax:
    content: public abstract void ProcessClientCredentials(TlsCredentials clientCredentials)
    parameters:
    - id: clientCredentials
      type: Org.BouncyCastle.Crypto.Tls.TlsCredentials
    content.vb: Public MustOverride Sub ProcessClientCredentials(clientCredentials As TlsCredentials)
  overload: Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange.ProcessClientCredentials*
  implements:
  - Org.BouncyCastle.Crypto.Tls.TlsKeyExchange.ProcessClientCredentials(Org.BouncyCastle.Crypto.Tls.TlsCredentials)
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
- uid: Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange.ProcessClientCertificate(Org.BouncyCastle.Crypto.Tls.Certificate)
  commentId: M:Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange.ProcessClientCertificate(Org.BouncyCastle.Crypto.Tls.Certificate)
  id: ProcessClientCertificate(Org.BouncyCastle.Crypto.Tls.Certificate)
  parent: Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange
  langs:
  - csharp
  - vb
  name: ProcessClientCertificate(Certificate)
  nameWithType: AbstractTlsKeyExchange.ProcessClientCertificate(Certificate)
  fullName: Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange.ProcessClientCertificate(Org.BouncyCastle.Crypto.Tls.Certificate)
  type: Method
  source:
    id: ProcessClientCertificate
    path: ''
    startLine: 76838
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Tls
  syntax:
    content: public virtual void ProcessClientCertificate(Certificate clientCertificate)
    parameters:
    - id: clientCertificate
      type: Org.BouncyCastle.Crypto.Tls.Certificate
    content.vb: Public Overridable Sub ProcessClientCertificate(clientCertificate As Certificate)
  overload: Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange.ProcessClientCertificate*
  implements:
  - Org.BouncyCastle.Crypto.Tls.TlsKeyExchange.ProcessClientCertificate(Org.BouncyCastle.Crypto.Tls.Certificate)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange.GenerateClientKeyExchange(Stream)
  commentId: M:Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange.GenerateClientKeyExchange(Stream)
  id: GenerateClientKeyExchange(Stream)
  parent: Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange
  langs:
  - csharp
  - vb
  name: GenerateClientKeyExchange(Stream)
  nameWithType: AbstractTlsKeyExchange.GenerateClientKeyExchange(Stream)
  fullName: Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange.GenerateClientKeyExchange(Stream)
  type: Method
  source:
    id: GenerateClientKeyExchange
    path: ''
    startLine: 76842
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Tls
  syntax:
    content: public abstract void GenerateClientKeyExchange(Stream output)
    parameters:
    - id: output
      type: Stream
    content.vb: Public MustOverride Sub GenerateClientKeyExchange(output As Stream)
  overload: Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange.GenerateClientKeyExchange*
  implements:
  - Org.BouncyCastle.Crypto.Tls.TlsKeyExchange.GenerateClientKeyExchange(Stream)
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
- uid: Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange.ProcessClientKeyExchange(Stream)
  commentId: M:Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange.ProcessClientKeyExchange(Stream)
  id: ProcessClientKeyExchange(Stream)
  parent: Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange
  langs:
  - csharp
  - vb
  name: ProcessClientKeyExchange(Stream)
  nameWithType: AbstractTlsKeyExchange.ProcessClientKeyExchange(Stream)
  fullName: Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange.ProcessClientKeyExchange(Stream)
  type: Method
  source:
    id: ProcessClientKeyExchange
    path: ''
    startLine: 76844
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Tls
  syntax:
    content: public virtual void ProcessClientKeyExchange(Stream input)
    parameters:
    - id: input
      type: Stream
    content.vb: Public Overridable Sub ProcessClientKeyExchange(input As Stream)
  overload: Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange.ProcessClientKeyExchange*
  implements:
  - Org.BouncyCastle.Crypto.Tls.TlsKeyExchange.ProcessClientKeyExchange(Stream)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange.GeneratePremasterSecret
  commentId: M:Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange.GeneratePremasterSecret
  id: GeneratePremasterSecret
  parent: Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange
  langs:
  - csharp
  - vb
  name: GeneratePremasterSecret()
  nameWithType: AbstractTlsKeyExchange.GeneratePremasterSecret()
  fullName: Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange.GeneratePremasterSecret()
  type: Method
  source:
    id: GeneratePremasterSecret
    path: ''
    startLine: 76850
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Tls
  syntax:
    content: public abstract byte[] GeneratePremasterSecret()
    return:
      type: System.Byte[]
    content.vb: Public MustOverride Function GeneratePremasterSecret As Byte()
  overload: Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange.GeneratePremasterSecret*
  implements:
  - Org.BouncyCastle.Crypto.Tls.TlsKeyExchange.GeneratePremasterSecret
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
references:
- uid: Org.BouncyCastle.Crypto.Tls
  commentId: N:Org.BouncyCastle.Crypto.Tls
  name: Org.BouncyCastle.Crypto.Tls
  nameWithType: Org.BouncyCastle.Crypto.Tls
  fullName: Org.BouncyCastle.Crypto.Tls
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Org.BouncyCastle.Crypto.Tls.TlsKeyExchange
  commentId: T:Org.BouncyCastle.Crypto.Tls.TlsKeyExchange
  parent: Org.BouncyCastle.Crypto.Tls
  name: TlsKeyExchange
  nameWithType: TlsKeyExchange
  fullName: Org.BouncyCastle.Crypto.Tls.TlsKeyExchange
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Collections.IList
  commentId: T:System.Collections.IList
  parent: System.Collections
  isExternal: true
  name: IList
  nameWithType: IList
  fullName: System.Collections.IList
- uid: System.Collections
  commentId: N:System.Collections
  isExternal: true
  name: System.Collections
  nameWithType: System.Collections
  fullName: System.Collections
- uid: Org.BouncyCastle.Crypto.Tls.TlsContext
  commentId: T:Org.BouncyCastle.Crypto.Tls.TlsContext
  parent: Org.BouncyCastle.Crypto.Tls
  name: TlsContext
  nameWithType: TlsContext
  fullName: Org.BouncyCastle.Crypto.Tls.TlsContext
- uid: Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange.#ctor*
  commentId: Overload:Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange.#ctor
  name: AbstractTlsKeyExchange
  nameWithType: AbstractTlsKeyExchange.AbstractTlsKeyExchange
  fullName: Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange.AbstractTlsKeyExchange
- uid: Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange.ParseSignature*
  commentId: Overload:Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange.ParseSignature
  name: ParseSignature
  nameWithType: AbstractTlsKeyExchange.ParseSignature
  fullName: Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange.ParseSignature
- uid: Stream
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: Stream
- uid: Org.BouncyCastle.Crypto.Tls.DigitallySigned
  commentId: T:Org.BouncyCastle.Crypto.Tls.DigitallySigned
  parent: Org.BouncyCastle.Crypto.Tls
  name: DigitallySigned
  nameWithType: DigitallySigned
  fullName: Org.BouncyCastle.Crypto.Tls.DigitallySigned
- uid: Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange.Init*
  commentId: Overload:Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange.Init
  name: Init
  nameWithType: AbstractTlsKeyExchange.Init
  fullName: Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange.Init
- uid: Org.BouncyCastle.Crypto.Tls.TlsKeyExchange.Init(Org.BouncyCastle.Crypto.Tls.TlsContext)
  commentId: M:Org.BouncyCastle.Crypto.Tls.TlsKeyExchange.Init(Org.BouncyCastle.Crypto.Tls.TlsContext)
  parent: Org.BouncyCastle.Crypto.Tls.TlsKeyExchange
  name: Init(TlsContext)
  nameWithType: TlsKeyExchange.Init(TlsContext)
  fullName: Org.BouncyCastle.Crypto.Tls.TlsKeyExchange.Init(Org.BouncyCastle.Crypto.Tls.TlsContext)
  spec.csharp:
  - uid: Org.BouncyCastle.Crypto.Tls.TlsKeyExchange.Init(Org.BouncyCastle.Crypto.Tls.TlsContext)
    name: Init
    nameWithType: TlsKeyExchange.Init
    fullName: Org.BouncyCastle.Crypto.Tls.TlsKeyExchange.Init
  - name: (
    nameWithType: (
    fullName: (
  - uid: Org.BouncyCastle.Crypto.Tls.TlsContext
    name: TlsContext
    nameWithType: TlsContext
    fullName: Org.BouncyCastle.Crypto.Tls.TlsContext
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Org.BouncyCastle.Crypto.Tls.TlsKeyExchange.Init(Org.BouncyCastle.Crypto.Tls.TlsContext)
    name: Init
    nameWithType: TlsKeyExchange.Init
    fullName: Org.BouncyCastle.Crypto.Tls.TlsKeyExchange.Init
  - name: (
    nameWithType: (
    fullName: (
  - uid: Org.BouncyCastle.Crypto.Tls.TlsContext
    name: TlsContext
    nameWithType: TlsContext
    fullName: Org.BouncyCastle.Crypto.Tls.TlsContext
  - name: )
    nameWithType: )
    fullName: )
- uid: Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange.SkipServerCredentials*
  commentId: Overload:Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange.SkipServerCredentials
  name: SkipServerCredentials
  nameWithType: AbstractTlsKeyExchange.SkipServerCredentials
  fullName: Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange.SkipServerCredentials
- uid: Org.BouncyCastle.Crypto.Tls.TlsKeyExchange.SkipServerCredentials
  commentId: M:Org.BouncyCastle.Crypto.Tls.TlsKeyExchange.SkipServerCredentials
  parent: Org.BouncyCastle.Crypto.Tls.TlsKeyExchange
  name: SkipServerCredentials()
  nameWithType: TlsKeyExchange.SkipServerCredentials()
  fullName: Org.BouncyCastle.Crypto.Tls.TlsKeyExchange.SkipServerCredentials()
  spec.csharp:
  - uid: Org.BouncyCastle.Crypto.Tls.TlsKeyExchange.SkipServerCredentials
    name: SkipServerCredentials
    nameWithType: TlsKeyExchange.SkipServerCredentials
    fullName: Org.BouncyCastle.Crypto.Tls.TlsKeyExchange.SkipServerCredentials
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Org.BouncyCastle.Crypto.Tls.TlsKeyExchange.SkipServerCredentials
    name: SkipServerCredentials
    nameWithType: TlsKeyExchange.SkipServerCredentials
    fullName: Org.BouncyCastle.Crypto.Tls.TlsKeyExchange.SkipServerCredentials
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange.ProcessServerCertificate*
  commentId: Overload:Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange.ProcessServerCertificate
  name: ProcessServerCertificate
  nameWithType: AbstractTlsKeyExchange.ProcessServerCertificate
  fullName: Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange.ProcessServerCertificate
- uid: Org.BouncyCastle.Crypto.Tls.TlsKeyExchange.ProcessServerCertificate(Org.BouncyCastle.Crypto.Tls.Certificate)
  commentId: M:Org.BouncyCastle.Crypto.Tls.TlsKeyExchange.ProcessServerCertificate(Org.BouncyCastle.Crypto.Tls.Certificate)
  parent: Org.BouncyCastle.Crypto.Tls.TlsKeyExchange
  name: ProcessServerCertificate(Certificate)
  nameWithType: TlsKeyExchange.ProcessServerCertificate(Certificate)
  fullName: Org.BouncyCastle.Crypto.Tls.TlsKeyExchange.ProcessServerCertificate(Org.BouncyCastle.Crypto.Tls.Certificate)
  spec.csharp:
  - uid: Org.BouncyCastle.Crypto.Tls.TlsKeyExchange.ProcessServerCertificate(Org.BouncyCastle.Crypto.Tls.Certificate)
    name: ProcessServerCertificate
    nameWithType: TlsKeyExchange.ProcessServerCertificate
    fullName: Org.BouncyCastle.Crypto.Tls.TlsKeyExchange.ProcessServerCertificate
  - name: (
    nameWithType: (
    fullName: (
  - uid: Org.BouncyCastle.Crypto.Tls.Certificate
    name: Certificate
    nameWithType: Certificate
    fullName: Org.BouncyCastle.Crypto.Tls.Certificate
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Org.BouncyCastle.Crypto.Tls.TlsKeyExchange.ProcessServerCertificate(Org.BouncyCastle.Crypto.Tls.Certificate)
    name: ProcessServerCertificate
    nameWithType: TlsKeyExchange.ProcessServerCertificate
    fullName: Org.BouncyCastle.Crypto.Tls.TlsKeyExchange.ProcessServerCertificate
  - name: (
    nameWithType: (
    fullName: (
  - uid: Org.BouncyCastle.Crypto.Tls.Certificate
    name: Certificate
    nameWithType: Certificate
    fullName: Org.BouncyCastle.Crypto.Tls.Certificate
  - name: )
    nameWithType: )
    fullName: )
- uid: Org.BouncyCastle.Crypto.Tls.Certificate
  commentId: T:Org.BouncyCastle.Crypto.Tls.Certificate
  parent: Org.BouncyCastle.Crypto.Tls
  name: Certificate
  nameWithType: Certificate
  fullName: Org.BouncyCastle.Crypto.Tls.Certificate
- uid: Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange.ProcessServerCredentials*
  commentId: Overload:Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange.ProcessServerCredentials
  name: ProcessServerCredentials
  nameWithType: AbstractTlsKeyExchange.ProcessServerCredentials
  fullName: Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange.ProcessServerCredentials
- uid: Org.BouncyCastle.Crypto.Tls.TlsKeyExchange.ProcessServerCredentials(Org.BouncyCastle.Crypto.Tls.TlsCredentials)
  commentId: M:Org.BouncyCastle.Crypto.Tls.TlsKeyExchange.ProcessServerCredentials(Org.BouncyCastle.Crypto.Tls.TlsCredentials)
  parent: Org.BouncyCastle.Crypto.Tls.TlsKeyExchange
  name: ProcessServerCredentials(TlsCredentials)
  nameWithType: TlsKeyExchange.ProcessServerCredentials(TlsCredentials)
  fullName: Org.BouncyCastle.Crypto.Tls.TlsKeyExchange.ProcessServerCredentials(Org.BouncyCastle.Crypto.Tls.TlsCredentials)
  spec.csharp:
  - uid: Org.BouncyCastle.Crypto.Tls.TlsKeyExchange.ProcessServerCredentials(Org.BouncyCastle.Crypto.Tls.TlsCredentials)
    name: ProcessServerCredentials
    nameWithType: TlsKeyExchange.ProcessServerCredentials
    fullName: Org.BouncyCastle.Crypto.Tls.TlsKeyExchange.ProcessServerCredentials
  - name: (
    nameWithType: (
    fullName: (
  - uid: Org.BouncyCastle.Crypto.Tls.TlsCredentials
    name: TlsCredentials
    nameWithType: TlsCredentials
    fullName: Org.BouncyCastle.Crypto.Tls.TlsCredentials
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Org.BouncyCastle.Crypto.Tls.TlsKeyExchange.ProcessServerCredentials(Org.BouncyCastle.Crypto.Tls.TlsCredentials)
    name: ProcessServerCredentials
    nameWithType: TlsKeyExchange.ProcessServerCredentials
    fullName: Org.BouncyCastle.Crypto.Tls.TlsKeyExchange.ProcessServerCredentials
  - name: (
    nameWithType: (
    fullName: (
  - uid: Org.BouncyCastle.Crypto.Tls.TlsCredentials
    name: TlsCredentials
    nameWithType: TlsCredentials
    fullName: Org.BouncyCastle.Crypto.Tls.TlsCredentials
  - name: )
    nameWithType: )
    fullName: )
- uid: Org.BouncyCastle.Crypto.Tls.TlsCredentials
  commentId: T:Org.BouncyCastle.Crypto.Tls.TlsCredentials
  parent: Org.BouncyCastle.Crypto.Tls
  name: TlsCredentials
  nameWithType: TlsCredentials
  fullName: Org.BouncyCastle.Crypto.Tls.TlsCredentials
- uid: Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange.RequiresServerKeyExchange*
  commentId: Overload:Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange.RequiresServerKeyExchange
  name: RequiresServerKeyExchange
  nameWithType: AbstractTlsKeyExchange.RequiresServerKeyExchange
  fullName: Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange.RequiresServerKeyExchange
- uid: Org.BouncyCastle.Crypto.Tls.TlsKeyExchange.RequiresServerKeyExchange
  commentId: P:Org.BouncyCastle.Crypto.Tls.TlsKeyExchange.RequiresServerKeyExchange
  parent: Org.BouncyCastle.Crypto.Tls.TlsKeyExchange
  name: RequiresServerKeyExchange
  nameWithType: TlsKeyExchange.RequiresServerKeyExchange
  fullName: Org.BouncyCastle.Crypto.Tls.TlsKeyExchange.RequiresServerKeyExchange
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange.GenerateServerKeyExchange*
  commentId: Overload:Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange.GenerateServerKeyExchange
  name: GenerateServerKeyExchange
  nameWithType: AbstractTlsKeyExchange.GenerateServerKeyExchange
  fullName: Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange.GenerateServerKeyExchange
- uid: Org.BouncyCastle.Crypto.Tls.TlsKeyExchange.GenerateServerKeyExchange
  commentId: M:Org.BouncyCastle.Crypto.Tls.TlsKeyExchange.GenerateServerKeyExchange
  parent: Org.BouncyCastle.Crypto.Tls.TlsKeyExchange
  name: GenerateServerKeyExchange()
  nameWithType: TlsKeyExchange.GenerateServerKeyExchange()
  fullName: Org.BouncyCastle.Crypto.Tls.TlsKeyExchange.GenerateServerKeyExchange()
  spec.csharp:
  - uid: Org.BouncyCastle.Crypto.Tls.TlsKeyExchange.GenerateServerKeyExchange
    name: GenerateServerKeyExchange
    nameWithType: TlsKeyExchange.GenerateServerKeyExchange
    fullName: Org.BouncyCastle.Crypto.Tls.TlsKeyExchange.GenerateServerKeyExchange
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Org.BouncyCastle.Crypto.Tls.TlsKeyExchange.GenerateServerKeyExchange
    name: GenerateServerKeyExchange
    nameWithType: TlsKeyExchange.GenerateServerKeyExchange
    fullName: Org.BouncyCastle.Crypto.Tls.TlsKeyExchange.GenerateServerKeyExchange
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Byte[]
  isExternal: true
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullName.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange.SkipServerKeyExchange*
  commentId: Overload:Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange.SkipServerKeyExchange
  name: SkipServerKeyExchange
  nameWithType: AbstractTlsKeyExchange.SkipServerKeyExchange
  fullName: Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange.SkipServerKeyExchange
- uid: Org.BouncyCastle.Crypto.Tls.TlsKeyExchange.SkipServerKeyExchange
  commentId: M:Org.BouncyCastle.Crypto.Tls.TlsKeyExchange.SkipServerKeyExchange
  parent: Org.BouncyCastle.Crypto.Tls.TlsKeyExchange
  name: SkipServerKeyExchange()
  nameWithType: TlsKeyExchange.SkipServerKeyExchange()
  fullName: Org.BouncyCastle.Crypto.Tls.TlsKeyExchange.SkipServerKeyExchange()
  spec.csharp:
  - uid: Org.BouncyCastle.Crypto.Tls.TlsKeyExchange.SkipServerKeyExchange
    name: SkipServerKeyExchange
    nameWithType: TlsKeyExchange.SkipServerKeyExchange
    fullName: Org.BouncyCastle.Crypto.Tls.TlsKeyExchange.SkipServerKeyExchange
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Org.BouncyCastle.Crypto.Tls.TlsKeyExchange.SkipServerKeyExchange
    name: SkipServerKeyExchange
    nameWithType: TlsKeyExchange.SkipServerKeyExchange
    fullName: Org.BouncyCastle.Crypto.Tls.TlsKeyExchange.SkipServerKeyExchange
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange.ProcessServerKeyExchange*
  commentId: Overload:Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange.ProcessServerKeyExchange
  name: ProcessServerKeyExchange
  nameWithType: AbstractTlsKeyExchange.ProcessServerKeyExchange
  fullName: Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange.ProcessServerKeyExchange
- uid: Org.BouncyCastle.Crypto.Tls.TlsKeyExchange.ProcessServerKeyExchange(Stream)
  commentId: M:Org.BouncyCastle.Crypto.Tls.TlsKeyExchange.ProcessServerKeyExchange(Stream)
  parent: Org.BouncyCastle.Crypto.Tls.TlsKeyExchange
  isExternal: true
  name: ProcessServerKeyExchange(Stream)
  nameWithType: TlsKeyExchange.ProcessServerKeyExchange(Stream)
  fullName: Org.BouncyCastle.Crypto.Tls.TlsKeyExchange.ProcessServerKeyExchange(Stream)
  spec.csharp:
  - uid: Org.BouncyCastle.Crypto.Tls.TlsKeyExchange.ProcessServerKeyExchange(Stream)
    name: ProcessServerKeyExchange
    nameWithType: TlsKeyExchange.ProcessServerKeyExchange
    fullName: Org.BouncyCastle.Crypto.Tls.TlsKeyExchange.ProcessServerKeyExchange
  - name: (
    nameWithType: (
    fullName: (
  - uid: Stream
    name: Stream
    nameWithType: Stream
    fullName: Stream
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Org.BouncyCastle.Crypto.Tls.TlsKeyExchange.ProcessServerKeyExchange(Stream)
    name: ProcessServerKeyExchange
    nameWithType: TlsKeyExchange.ProcessServerKeyExchange
    fullName: Org.BouncyCastle.Crypto.Tls.TlsKeyExchange.ProcessServerKeyExchange
  - name: (
    nameWithType: (
    fullName: (
  - uid: Stream
    name: Stream
    nameWithType: Stream
    fullName: Stream
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange.ValidateCertificateRequest*
  commentId: Overload:Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange.ValidateCertificateRequest
  name: ValidateCertificateRequest
  nameWithType: AbstractTlsKeyExchange.ValidateCertificateRequest
  fullName: Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange.ValidateCertificateRequest
- uid: Org.BouncyCastle.Crypto.Tls.TlsKeyExchange.ValidateCertificateRequest(Org.BouncyCastle.Crypto.Tls.CertificateRequest)
  commentId: M:Org.BouncyCastle.Crypto.Tls.TlsKeyExchange.ValidateCertificateRequest(Org.BouncyCastle.Crypto.Tls.CertificateRequest)
  parent: Org.BouncyCastle.Crypto.Tls.TlsKeyExchange
  name: ValidateCertificateRequest(CertificateRequest)
  nameWithType: TlsKeyExchange.ValidateCertificateRequest(CertificateRequest)
  fullName: Org.BouncyCastle.Crypto.Tls.TlsKeyExchange.ValidateCertificateRequest(Org.BouncyCastle.Crypto.Tls.CertificateRequest)
  spec.csharp:
  - uid: Org.BouncyCastle.Crypto.Tls.TlsKeyExchange.ValidateCertificateRequest(Org.BouncyCastle.Crypto.Tls.CertificateRequest)
    name: ValidateCertificateRequest
    nameWithType: TlsKeyExchange.ValidateCertificateRequest
    fullName: Org.BouncyCastle.Crypto.Tls.TlsKeyExchange.ValidateCertificateRequest
  - name: (
    nameWithType: (
    fullName: (
  - uid: Org.BouncyCastle.Crypto.Tls.CertificateRequest
    name: CertificateRequest
    nameWithType: CertificateRequest
    fullName: Org.BouncyCastle.Crypto.Tls.CertificateRequest
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Org.BouncyCastle.Crypto.Tls.TlsKeyExchange.ValidateCertificateRequest(Org.BouncyCastle.Crypto.Tls.CertificateRequest)
    name: ValidateCertificateRequest
    nameWithType: TlsKeyExchange.ValidateCertificateRequest
    fullName: Org.BouncyCastle.Crypto.Tls.TlsKeyExchange.ValidateCertificateRequest
  - name: (
    nameWithType: (
    fullName: (
  - uid: Org.BouncyCastle.Crypto.Tls.CertificateRequest
    name: CertificateRequest
    nameWithType: CertificateRequest
    fullName: Org.BouncyCastle.Crypto.Tls.CertificateRequest
  - name: )
    nameWithType: )
    fullName: )
- uid: Org.BouncyCastle.Crypto.Tls.CertificateRequest
  commentId: T:Org.BouncyCastle.Crypto.Tls.CertificateRequest
  parent: Org.BouncyCastle.Crypto.Tls
  name: CertificateRequest
  nameWithType: CertificateRequest
  fullName: Org.BouncyCastle.Crypto.Tls.CertificateRequest
- uid: Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange.SkipClientCredentials*
  commentId: Overload:Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange.SkipClientCredentials
  name: SkipClientCredentials
  nameWithType: AbstractTlsKeyExchange.SkipClientCredentials
  fullName: Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange.SkipClientCredentials
- uid: Org.BouncyCastle.Crypto.Tls.TlsKeyExchange.SkipClientCredentials
  commentId: M:Org.BouncyCastle.Crypto.Tls.TlsKeyExchange.SkipClientCredentials
  parent: Org.BouncyCastle.Crypto.Tls.TlsKeyExchange
  name: SkipClientCredentials()
  nameWithType: TlsKeyExchange.SkipClientCredentials()
  fullName: Org.BouncyCastle.Crypto.Tls.TlsKeyExchange.SkipClientCredentials()
  spec.csharp:
  - uid: Org.BouncyCastle.Crypto.Tls.TlsKeyExchange.SkipClientCredentials
    name: SkipClientCredentials
    nameWithType: TlsKeyExchange.SkipClientCredentials
    fullName: Org.BouncyCastle.Crypto.Tls.TlsKeyExchange.SkipClientCredentials
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Org.BouncyCastle.Crypto.Tls.TlsKeyExchange.SkipClientCredentials
    name: SkipClientCredentials
    nameWithType: TlsKeyExchange.SkipClientCredentials
    fullName: Org.BouncyCastle.Crypto.Tls.TlsKeyExchange.SkipClientCredentials
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange.ProcessClientCredentials*
  commentId: Overload:Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange.ProcessClientCredentials
  name: ProcessClientCredentials
  nameWithType: AbstractTlsKeyExchange.ProcessClientCredentials
  fullName: Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange.ProcessClientCredentials
- uid: Org.BouncyCastle.Crypto.Tls.TlsKeyExchange.ProcessClientCredentials(Org.BouncyCastle.Crypto.Tls.TlsCredentials)
  commentId: M:Org.BouncyCastle.Crypto.Tls.TlsKeyExchange.ProcessClientCredentials(Org.BouncyCastle.Crypto.Tls.TlsCredentials)
  parent: Org.BouncyCastle.Crypto.Tls.TlsKeyExchange
  name: ProcessClientCredentials(TlsCredentials)
  nameWithType: TlsKeyExchange.ProcessClientCredentials(TlsCredentials)
  fullName: Org.BouncyCastle.Crypto.Tls.TlsKeyExchange.ProcessClientCredentials(Org.BouncyCastle.Crypto.Tls.TlsCredentials)
  spec.csharp:
  - uid: Org.BouncyCastle.Crypto.Tls.TlsKeyExchange.ProcessClientCredentials(Org.BouncyCastle.Crypto.Tls.TlsCredentials)
    name: ProcessClientCredentials
    nameWithType: TlsKeyExchange.ProcessClientCredentials
    fullName: Org.BouncyCastle.Crypto.Tls.TlsKeyExchange.ProcessClientCredentials
  - name: (
    nameWithType: (
    fullName: (
  - uid: Org.BouncyCastle.Crypto.Tls.TlsCredentials
    name: TlsCredentials
    nameWithType: TlsCredentials
    fullName: Org.BouncyCastle.Crypto.Tls.TlsCredentials
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Org.BouncyCastle.Crypto.Tls.TlsKeyExchange.ProcessClientCredentials(Org.BouncyCastle.Crypto.Tls.TlsCredentials)
    name: ProcessClientCredentials
    nameWithType: TlsKeyExchange.ProcessClientCredentials
    fullName: Org.BouncyCastle.Crypto.Tls.TlsKeyExchange.ProcessClientCredentials
  - name: (
    nameWithType: (
    fullName: (
  - uid: Org.BouncyCastle.Crypto.Tls.TlsCredentials
    name: TlsCredentials
    nameWithType: TlsCredentials
    fullName: Org.BouncyCastle.Crypto.Tls.TlsCredentials
  - name: )
    nameWithType: )
    fullName: )
- uid: Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange.ProcessClientCertificate*
  commentId: Overload:Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange.ProcessClientCertificate
  name: ProcessClientCertificate
  nameWithType: AbstractTlsKeyExchange.ProcessClientCertificate
  fullName: Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange.ProcessClientCertificate
- uid: Org.BouncyCastle.Crypto.Tls.TlsKeyExchange.ProcessClientCertificate(Org.BouncyCastle.Crypto.Tls.Certificate)
  commentId: M:Org.BouncyCastle.Crypto.Tls.TlsKeyExchange.ProcessClientCertificate(Org.BouncyCastle.Crypto.Tls.Certificate)
  parent: Org.BouncyCastle.Crypto.Tls.TlsKeyExchange
  name: ProcessClientCertificate(Certificate)
  nameWithType: TlsKeyExchange.ProcessClientCertificate(Certificate)
  fullName: Org.BouncyCastle.Crypto.Tls.TlsKeyExchange.ProcessClientCertificate(Org.BouncyCastle.Crypto.Tls.Certificate)
  spec.csharp:
  - uid: Org.BouncyCastle.Crypto.Tls.TlsKeyExchange.ProcessClientCertificate(Org.BouncyCastle.Crypto.Tls.Certificate)
    name: ProcessClientCertificate
    nameWithType: TlsKeyExchange.ProcessClientCertificate
    fullName: Org.BouncyCastle.Crypto.Tls.TlsKeyExchange.ProcessClientCertificate
  - name: (
    nameWithType: (
    fullName: (
  - uid: Org.BouncyCastle.Crypto.Tls.Certificate
    name: Certificate
    nameWithType: Certificate
    fullName: Org.BouncyCastle.Crypto.Tls.Certificate
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Org.BouncyCastle.Crypto.Tls.TlsKeyExchange.ProcessClientCertificate(Org.BouncyCastle.Crypto.Tls.Certificate)
    name: ProcessClientCertificate
    nameWithType: TlsKeyExchange.ProcessClientCertificate
    fullName: Org.BouncyCastle.Crypto.Tls.TlsKeyExchange.ProcessClientCertificate
  - name: (
    nameWithType: (
    fullName: (
  - uid: Org.BouncyCastle.Crypto.Tls.Certificate
    name: Certificate
    nameWithType: Certificate
    fullName: Org.BouncyCastle.Crypto.Tls.Certificate
  - name: )
    nameWithType: )
    fullName: )
- uid: Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange.GenerateClientKeyExchange*
  commentId: Overload:Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange.GenerateClientKeyExchange
  name: GenerateClientKeyExchange
  nameWithType: AbstractTlsKeyExchange.GenerateClientKeyExchange
  fullName: Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange.GenerateClientKeyExchange
- uid: Org.BouncyCastle.Crypto.Tls.TlsKeyExchange.GenerateClientKeyExchange(Stream)
  commentId: M:Org.BouncyCastle.Crypto.Tls.TlsKeyExchange.GenerateClientKeyExchange(Stream)
  parent: Org.BouncyCastle.Crypto.Tls.TlsKeyExchange
  isExternal: true
  name: GenerateClientKeyExchange(Stream)
  nameWithType: TlsKeyExchange.GenerateClientKeyExchange(Stream)
  fullName: Org.BouncyCastle.Crypto.Tls.TlsKeyExchange.GenerateClientKeyExchange(Stream)
  spec.csharp:
  - uid: Org.BouncyCastle.Crypto.Tls.TlsKeyExchange.GenerateClientKeyExchange(Stream)
    name: GenerateClientKeyExchange
    nameWithType: TlsKeyExchange.GenerateClientKeyExchange
    fullName: Org.BouncyCastle.Crypto.Tls.TlsKeyExchange.GenerateClientKeyExchange
  - name: (
    nameWithType: (
    fullName: (
  - uid: Stream
    name: Stream
    nameWithType: Stream
    fullName: Stream
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Org.BouncyCastle.Crypto.Tls.TlsKeyExchange.GenerateClientKeyExchange(Stream)
    name: GenerateClientKeyExchange
    nameWithType: TlsKeyExchange.GenerateClientKeyExchange
    fullName: Org.BouncyCastle.Crypto.Tls.TlsKeyExchange.GenerateClientKeyExchange
  - name: (
    nameWithType: (
    fullName: (
  - uid: Stream
    name: Stream
    nameWithType: Stream
    fullName: Stream
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange.ProcessClientKeyExchange*
  commentId: Overload:Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange.ProcessClientKeyExchange
  name: ProcessClientKeyExchange
  nameWithType: AbstractTlsKeyExchange.ProcessClientKeyExchange
  fullName: Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange.ProcessClientKeyExchange
- uid: Org.BouncyCastle.Crypto.Tls.TlsKeyExchange.ProcessClientKeyExchange(Stream)
  commentId: M:Org.BouncyCastle.Crypto.Tls.TlsKeyExchange.ProcessClientKeyExchange(Stream)
  parent: Org.BouncyCastle.Crypto.Tls.TlsKeyExchange
  isExternal: true
  name: ProcessClientKeyExchange(Stream)
  nameWithType: TlsKeyExchange.ProcessClientKeyExchange(Stream)
  fullName: Org.BouncyCastle.Crypto.Tls.TlsKeyExchange.ProcessClientKeyExchange(Stream)
  spec.csharp:
  - uid: Org.BouncyCastle.Crypto.Tls.TlsKeyExchange.ProcessClientKeyExchange(Stream)
    name: ProcessClientKeyExchange
    nameWithType: TlsKeyExchange.ProcessClientKeyExchange
    fullName: Org.BouncyCastle.Crypto.Tls.TlsKeyExchange.ProcessClientKeyExchange
  - name: (
    nameWithType: (
    fullName: (
  - uid: Stream
    name: Stream
    nameWithType: Stream
    fullName: Stream
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Org.BouncyCastle.Crypto.Tls.TlsKeyExchange.ProcessClientKeyExchange(Stream)
    name: ProcessClientKeyExchange
    nameWithType: TlsKeyExchange.ProcessClientKeyExchange
    fullName: Org.BouncyCastle.Crypto.Tls.TlsKeyExchange.ProcessClientKeyExchange
  - name: (
    nameWithType: (
    fullName: (
  - uid: Stream
    name: Stream
    nameWithType: Stream
    fullName: Stream
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange.GeneratePremasterSecret*
  commentId: Overload:Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange.GeneratePremasterSecret
  name: GeneratePremasterSecret
  nameWithType: AbstractTlsKeyExchange.GeneratePremasterSecret
  fullName: Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange.GeneratePremasterSecret
- uid: Org.BouncyCastle.Crypto.Tls.TlsKeyExchange.GeneratePremasterSecret
  commentId: M:Org.BouncyCastle.Crypto.Tls.TlsKeyExchange.GeneratePremasterSecret
  parent: Org.BouncyCastle.Crypto.Tls.TlsKeyExchange
  name: GeneratePremasterSecret()
  nameWithType: TlsKeyExchange.GeneratePremasterSecret()
  fullName: Org.BouncyCastle.Crypto.Tls.TlsKeyExchange.GeneratePremasterSecret()
  spec.csharp:
  - uid: Org.BouncyCastle.Crypto.Tls.TlsKeyExchange.GeneratePremasterSecret
    name: GeneratePremasterSecret
    nameWithType: TlsKeyExchange.GeneratePremasterSecret
    fullName: Org.BouncyCastle.Crypto.Tls.TlsKeyExchange.GeneratePremasterSecret
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Org.BouncyCastle.Crypto.Tls.TlsKeyExchange.GeneratePremasterSecret
    name: GeneratePremasterSecret
    nameWithType: TlsKeyExchange.GeneratePremasterSecret
    fullName: Org.BouncyCastle.Crypto.Tls.TlsKeyExchange.GeneratePremasterSecret
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
