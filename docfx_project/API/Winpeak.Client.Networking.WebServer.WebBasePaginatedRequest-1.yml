### YamlMime:ManagedReference
items:
- uid: Winpeak.Client.Networking.WebServer.WebBasePaginatedRequest`1
  commentId: T:Winpeak.Client.Networking.WebServer.WebBasePaginatedRequest`1
  id: WebBasePaginatedRequest`1
  parent: Winpeak.Client.Networking.WebServer
  children:
  - Winpeak.Client.Networking.WebServer.WebBasePaginatedRequest`1.#ctor
  - Winpeak.Client.Networking.WebServer.WebBasePaginatedRequest`1.Clear
  - Winpeak.Client.Networking.WebServer.WebBasePaginatedRequest`1.GetItems(System.Int32,System.Int32,System.Action{System.Collections.Generic.List{`0}})
  - Winpeak.Client.Networking.WebServer.WebBasePaginatedRequest`1.HandleNextRequest
  - Winpeak.Client.Networking.WebServer.WebBasePaginatedRequest`1.HasReceivedAllItems
  - Winpeak.Client.Networking.WebServer.WebBasePaginatedRequest`1.m_items
  - Winpeak.Client.Networking.WebServer.WebBasePaginatedRequest`1.m_itemsReceivedCallback
  - Winpeak.Client.Networking.WebServer.WebBasePaginatedRequest`1.m_requestsQueue
  - Winpeak.Client.Networking.WebServer.WebBasePaginatedRequest`1.m_waitingRequestResult
  - Winpeak.Client.Networking.WebServer.WebBasePaginatedRequest`1.ReceivedData
  - Winpeak.Client.Networking.WebServer.WebBasePaginatedRequest`1.SendRequestResult(System.Collections.Generic.List{`0})
  langs:
  - csharp
  - vb
  name: WebBasePaginatedRequest<T>
  nameWithType: WebBasePaginatedRequest<T>
  fullName: Winpeak.Client.Networking.WebServer.WebBasePaginatedRequest<T>
  type: Class
  source:
    id: WebBasePaginatedRequest
    path: ''
    startLine: 166405
  assemblies:
  - cs.temp.dll
  namespace: Winpeak.Client.Networking.WebServer
  syntax:
    content: >-
      public abstract class WebBasePaginatedRequest<T>
          where T : ITemplate
    typeParameters:
    - id: T
    content.vb: Public MustInherit Class WebBasePaginatedRequest(Of T As ITemplate)
  inheritance:
  - System.Object
  derivedClasses:
  - Winpeak.Client.Networking.WebServer.WebCallbackPaginatedRequest`1
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ToString
  - System.Object.ReferenceEquals(System.Object,System.Object)
  nameWithType.vb: WebBasePaginatedRequest(Of T)
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
  fullName.vb: Winpeak.Client.Networking.WebServer.WebBasePaginatedRequest(Of T)
  name.vb: WebBasePaginatedRequest(Of T)
- uid: Winpeak.Client.Networking.WebServer.WebBasePaginatedRequest`1.ReceivedData
  commentId: P:Winpeak.Client.Networking.WebServer.WebBasePaginatedRequest`1.ReceivedData
  id: ReceivedData
  parent: Winpeak.Client.Networking.WebServer.WebBasePaginatedRequest`1
  langs:
  - csharp
  - vb
  name: ReceivedData
  nameWithType: WebBasePaginatedRequest<T>.ReceivedData
  fullName: Winpeak.Client.Networking.WebServer.WebBasePaginatedRequest<T>.ReceivedData
  type: Property
  source:
    id: ReceivedData
    path: ''
    startLine: 166408
  assemblies:
  - cs.temp.dll
  namespace: Winpeak.Client.Networking.WebServer
  syntax:
    content: public bool ReceivedData { get; protected set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property ReceivedData As Boolean
  overload: Winpeak.Client.Networking.WebServer.WebBasePaginatedRequest`1.ReceivedData*
  nameWithType.vb: WebBasePaginatedRequest(Of T).ReceivedData
  modifiers.csharp:
  - public
  - get
  - protected set
  modifiers.vb:
  - Public
  - Get
  - Protected Set
  fullName.vb: Winpeak.Client.Networking.WebServer.WebBasePaginatedRequest(Of T).ReceivedData
- uid: Winpeak.Client.Networking.WebServer.WebBasePaginatedRequest`1.m_waitingRequestResult
  commentId: F:Winpeak.Client.Networking.WebServer.WebBasePaginatedRequest`1.m_waitingRequestResult
  id: m_waitingRequestResult
  parent: Winpeak.Client.Networking.WebServer.WebBasePaginatedRequest`1
  langs:
  - csharp
  - vb
  name: m_waitingRequestResult
  nameWithType: WebBasePaginatedRequest<T>.m_waitingRequestResult
  fullName: Winpeak.Client.Networking.WebServer.WebBasePaginatedRequest<T>.m_waitingRequestResult
  type: Field
  source:
    id: m_waitingRequestResult
    path: ''
    startLine: 166409
  assemblies:
  - cs.temp.dll
  namespace: Winpeak.Client.Networking.WebServer
  syntax:
    content: protected bool m_waitingRequestResult
    return:
      type: System.Boolean
    content.vb: Protected m_waitingRequestResult As Boolean
  nameWithType.vb: WebBasePaginatedRequest(Of T).m_waitingRequestResult
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: Winpeak.Client.Networking.WebServer.WebBasePaginatedRequest(Of T).m_waitingRequestResult
- uid: Winpeak.Client.Networking.WebServer.WebBasePaginatedRequest`1.m_requestsQueue
  commentId: F:Winpeak.Client.Networking.WebServer.WebBasePaginatedRequest`1.m_requestsQueue
  id: m_requestsQueue
  parent: Winpeak.Client.Networking.WebServer.WebBasePaginatedRequest`1
  langs:
  - csharp
  - vb
  name: m_requestsQueue
  nameWithType: WebBasePaginatedRequest<T>.m_requestsQueue
  fullName: Winpeak.Client.Networking.WebServer.WebBasePaginatedRequest<T>.m_requestsQueue
  type: Field
  source:
    id: m_requestsQueue
    path: ''
    startLine: 166410
  assemblies:
  - cs.temp.dll
  namespace: Winpeak.Client.Networking.WebServer
  syntax:
    content: protected Queue<WebBasePaginatedRequest<T>.RequestData> m_requestsQueue
    return:
      type: System.Collections.Generic.Queue{Winpeak.Client.Networking.WebServer.WebBasePaginatedRequest`1.RequestData}
    content.vb: Protected m_requestsQueue As Queue(Of WebBasePaginatedRequest(Of T).RequestData)
  nameWithType.vb: WebBasePaginatedRequest(Of T).m_requestsQueue
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: Winpeak.Client.Networking.WebServer.WebBasePaginatedRequest(Of T).m_requestsQueue
- uid: Winpeak.Client.Networking.WebServer.WebBasePaginatedRequest`1.m_items
  commentId: F:Winpeak.Client.Networking.WebServer.WebBasePaginatedRequest`1.m_items
  id: m_items
  parent: Winpeak.Client.Networking.WebServer.WebBasePaginatedRequest`1
  langs:
  - csharp
  - vb
  name: m_items
  nameWithType: WebBasePaginatedRequest<T>.m_items
  fullName: Winpeak.Client.Networking.WebServer.WebBasePaginatedRequest<T>.m_items
  type: Field
  source:
    id: m_items
    path: ''
    startLine: 166411
  assemblies:
  - cs.temp.dll
  namespace: Winpeak.Client.Networking.WebServer
  syntax:
    content: protected List<T> m_items
    return:
      type: System.Collections.Generic.List{{T}}
    content.vb: Protected m_items As List(Of T)
  nameWithType.vb: WebBasePaginatedRequest(Of T).m_items
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: Winpeak.Client.Networking.WebServer.WebBasePaginatedRequest(Of T).m_items
- uid: Winpeak.Client.Networking.WebServer.WebBasePaginatedRequest`1.m_itemsReceivedCallback
  commentId: E:Winpeak.Client.Networking.WebServer.WebBasePaginatedRequest`1.m_itemsReceivedCallback
  id: m_itemsReceivedCallback
  parent: Winpeak.Client.Networking.WebServer.WebBasePaginatedRequest`1
  langs:
  - csharp
  - vb
  name: m_itemsReceivedCallback
  nameWithType: WebBasePaginatedRequest<T>.m_itemsReceivedCallback
  fullName: Winpeak.Client.Networking.WebServer.WebBasePaginatedRequest<T>.m_itemsReceivedCallback
  type: Event
  source:
    id: m_itemsReceivedCallback
    path: ''
    startLine: 166412
  assemblies:
  - cs.temp.dll
  namespace: Winpeak.Client.Networking.WebServer
  syntax:
    content: protected event Action<List<T>> m_itemsReceivedCallback
    return:
      type: System.Action{System.Collections.Generic.List{{T}}}
    content.vb: Protected Event m_itemsReceivedCallback As Action(Of List(Of T))
  nameWithType.vb: WebBasePaginatedRequest(Of T).m_itemsReceivedCallback
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: Winpeak.Client.Networking.WebServer.WebBasePaginatedRequest(Of T).m_itemsReceivedCallback
- uid: Winpeak.Client.Networking.WebServer.WebBasePaginatedRequest`1.#ctor
  commentId: M:Winpeak.Client.Networking.WebServer.WebBasePaginatedRequest`1.#ctor
  id: '#ctor'
  parent: Winpeak.Client.Networking.WebServer.WebBasePaginatedRequest`1
  langs:
  - csharp
  - vb
  name: WebBasePaginatedRequest()
  nameWithType: WebBasePaginatedRequest<T>.WebBasePaginatedRequest()
  fullName: Winpeak.Client.Networking.WebServer.WebBasePaginatedRequest<T>.WebBasePaginatedRequest()
  type: Constructor
  source:
    id: .ctor
    path: ''
    startLine: 166414
  assemblies:
  - cs.temp.dll
  namespace: Winpeak.Client.Networking.WebServer
  syntax:
    content: protected WebBasePaginatedRequest()
    content.vb: Protected Sub New
  overload: Winpeak.Client.Networking.WebServer.WebBasePaginatedRequest`1.#ctor*
  nameWithType.vb: WebBasePaginatedRequest(Of T).WebBasePaginatedRequest()
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: Winpeak.Client.Networking.WebServer.WebBasePaginatedRequest(Of T).WebBasePaginatedRequest()
- uid: Winpeak.Client.Networking.WebServer.WebBasePaginatedRequest`1.HasReceivedAllItems
  commentId: P:Winpeak.Client.Networking.WebServer.WebBasePaginatedRequest`1.HasReceivedAllItems
  id: HasReceivedAllItems
  parent: Winpeak.Client.Networking.WebServer.WebBasePaginatedRequest`1
  langs:
  - csharp
  - vb
  name: HasReceivedAllItems
  nameWithType: WebBasePaginatedRequest<T>.HasReceivedAllItems
  fullName: Winpeak.Client.Networking.WebServer.WebBasePaginatedRequest<T>.HasReceivedAllItems
  type: Property
  source:
    id: HasReceivedAllItems
    path: ''
    startLine: 166418
  assemblies:
  - cs.temp.dll
  namespace: Winpeak.Client.Networking.WebServer
  syntax:
    content: public bool HasReceivedAllItems { get; protected set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property HasReceivedAllItems As Boolean
  overload: Winpeak.Client.Networking.WebServer.WebBasePaginatedRequest`1.HasReceivedAllItems*
  nameWithType.vb: WebBasePaginatedRequest(Of T).HasReceivedAllItems
  modifiers.csharp:
  - public
  - get
  - protected set
  modifiers.vb:
  - Public
  - Get
  - Protected Set
  fullName.vb: Winpeak.Client.Networking.WebServer.WebBasePaginatedRequest(Of T).HasReceivedAllItems
- uid: Winpeak.Client.Networking.WebServer.WebBasePaginatedRequest`1.Clear
  commentId: M:Winpeak.Client.Networking.WebServer.WebBasePaginatedRequest`1.Clear
  id: Clear
  parent: Winpeak.Client.Networking.WebServer.WebBasePaginatedRequest`1
  langs:
  - csharp
  - vb
  name: Clear()
  nameWithType: WebBasePaginatedRequest<T>.Clear()
  fullName: Winpeak.Client.Networking.WebServer.WebBasePaginatedRequest<T>.Clear()
  type: Method
  source:
    id: Clear
    path: ''
    startLine: 166420
  assemblies:
  - cs.temp.dll
  namespace: Winpeak.Client.Networking.WebServer
  syntax:
    content: public virtual void Clear()
    content.vb: Public Overridable Sub Clear
  overload: Winpeak.Client.Networking.WebServer.WebBasePaginatedRequest`1.Clear*
  nameWithType.vb: WebBasePaginatedRequest(Of T).Clear()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Winpeak.Client.Networking.WebServer.WebBasePaginatedRequest(Of T).Clear()
- uid: Winpeak.Client.Networking.WebServer.WebBasePaginatedRequest`1.SendRequestResult(System.Collections.Generic.List{`0})
  commentId: M:Winpeak.Client.Networking.WebServer.WebBasePaginatedRequest`1.SendRequestResult(System.Collections.Generic.List{`0})
  id: SendRequestResult(System.Collections.Generic.List{`0})
  parent: Winpeak.Client.Networking.WebServer.WebBasePaginatedRequest`1
  langs:
  - csharp
  - vb
  name: SendRequestResult(List<T>)
  nameWithType: WebBasePaginatedRequest<T>.SendRequestResult(List<T>)
  fullName: Winpeak.Client.Networking.WebServer.WebBasePaginatedRequest<T>.SendRequestResult(System.Collections.Generic.List<T>)
  type: Method
  source:
    id: SendRequestResult
    path: ''
    startLine: 166429
  assemblies:
  - cs.temp.dll
  namespace: Winpeak.Client.Networking.WebServer
  syntax:
    content: protected void SendRequestResult(List<T> items)
    parameters:
    - id: items
      type: System.Collections.Generic.List{{T}}
    content.vb: Protected Sub SendRequestResult(items As List(Of T))
  overload: Winpeak.Client.Networking.WebServer.WebBasePaginatedRequest`1.SendRequestResult*
  nameWithType.vb: WebBasePaginatedRequest(Of T).SendRequestResult(List(Of T))
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: Winpeak.Client.Networking.WebServer.WebBasePaginatedRequest(Of T).SendRequestResult(System.Collections.Generic.List(Of T))
  name.vb: SendRequestResult(List(Of T))
- uid: Winpeak.Client.Networking.WebServer.WebBasePaginatedRequest`1.HandleNextRequest
  commentId: M:Winpeak.Client.Networking.WebServer.WebBasePaginatedRequest`1.HandleNextRequest
  id: HandleNextRequest
  parent: Winpeak.Client.Networking.WebServer.WebBasePaginatedRequest`1
  langs:
  - csharp
  - vb
  name: HandleNextRequest()
  nameWithType: WebBasePaginatedRequest<T>.HandleNextRequest()
  fullName: Winpeak.Client.Networking.WebServer.WebBasePaginatedRequest<T>.HandleNextRequest()
  type: Method
  source:
    id: HandleNextRequest
    path: ''
    startLine: 166434
  assemblies:
  - cs.temp.dll
  namespace: Winpeak.Client.Networking.WebServer
  syntax:
    content: protected void HandleNextRequest()
    content.vb: Protected Sub HandleNextRequest
  overload: Winpeak.Client.Networking.WebServer.WebBasePaginatedRequest`1.HandleNextRequest*
  nameWithType.vb: WebBasePaginatedRequest(Of T).HandleNextRequest()
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: Winpeak.Client.Networking.WebServer.WebBasePaginatedRequest(Of T).HandleNextRequest()
- uid: Winpeak.Client.Networking.WebServer.WebBasePaginatedRequest`1.GetItems(System.Int32,System.Int32,System.Action{System.Collections.Generic.List{`0}})
  commentId: M:Winpeak.Client.Networking.WebServer.WebBasePaginatedRequest`1.GetItems(System.Int32,System.Int32,System.Action{System.Collections.Generic.List{`0}})
  id: GetItems(System.Int32,System.Int32,System.Action{System.Collections.Generic.List{`0}})
  parent: Winpeak.Client.Networking.WebServer.WebBasePaginatedRequest`1
  langs:
  - csharp
  - vb
  name: GetItems(Int32, Int32, Action<List<T>>)
  nameWithType: WebBasePaginatedRequest<T>.GetItems(Int32, Int32, Action<List<T>>)
  fullName: Winpeak.Client.Networking.WebServer.WebBasePaginatedRequest<T>.GetItems(System.Int32, System.Int32, System.Action<System.Collections.Generic.List<T>>)
  type: Method
  source:
    id: GetItems
    path: ''
    startLine: 166442
  assemblies:
  - cs.temp.dll
  namespace: Winpeak.Client.Networking.WebServer
  syntax:
    content: public abstract void GetItems(int offset, int size, Action<List<T>> callback)
    parameters:
    - id: offset
      type: System.Int32
    - id: size
      type: System.Int32
    - id: callback
      type: System.Action{System.Collections.Generic.List{{T}}}
    content.vb: Public MustOverride Sub GetItems(offset As Integer, size As Integer, callback As Action(Of List(Of T)))
  overload: Winpeak.Client.Networking.WebServer.WebBasePaginatedRequest`1.GetItems*
  nameWithType.vb: WebBasePaginatedRequest(Of T).GetItems(Int32, Int32, Action(Of List(Of T)))
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
  fullName.vb: Winpeak.Client.Networking.WebServer.WebBasePaginatedRequest(Of T).GetItems(System.Int32, System.Int32, System.Action(Of System.Collections.Generic.List(Of T)))
  name.vb: GetItems(Int32, Int32, Action(Of List(Of T)))
references:
- uid: Winpeak.Client.Networking.WebServer
  commentId: N:Winpeak.Client.Networking.WebServer
  name: Winpeak.Client.Networking.WebServer
  nameWithType: Winpeak.Client.Networking.WebServer
  fullName: Winpeak.Client.Networking.WebServer
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Winpeak.Client.Networking.WebServer.WebBasePaginatedRequest`1.ReceivedData*
  commentId: Overload:Winpeak.Client.Networking.WebServer.WebBasePaginatedRequest`1.ReceivedData
  name: ReceivedData
  nameWithType: WebBasePaginatedRequest<T>.ReceivedData
  fullName: Winpeak.Client.Networking.WebServer.WebBasePaginatedRequest<T>.ReceivedData
  nameWithType.vb: WebBasePaginatedRequest(Of T).ReceivedData
  fullName.vb: Winpeak.Client.Networking.WebServer.WebBasePaginatedRequest(Of T).ReceivedData
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Collections.Generic.Queue{Winpeak.Client.Networking.WebServer.WebBasePaginatedRequest`1.RequestData}
  commentId: T:System.Collections.Generic.Queue{Winpeak.Client.Networking.WebServer.WebBasePaginatedRequest`1.RequestData}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Queue`1
  name: Queue<WebBasePaginatedRequest.RequestData<>>
  nameWithType: Queue<WebBasePaginatedRequest.RequestData<>>
  fullName: System.Collections.Generic.Queue<Winpeak.Client.Networking.WebServer.WebBasePaginatedRequest.RequestData<>>
  nameWithType.vb: Queue(Of WebBasePaginatedRequest.RequestData(Of ))
  fullName.vb: System.Collections.Generic.Queue(Of Winpeak.Client.Networking.WebServer.WebBasePaginatedRequest.RequestData(Of ))
  name.vb: Queue(Of WebBasePaginatedRequest.RequestData(Of ))
  spec.csharp:
  - uid: System.Collections.Generic.Queue`1
    name: Queue
    nameWithType: Queue
    fullName: System.Collections.Generic.Queue
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Winpeak.Client.Networking.WebServer.WebBasePaginatedRequest`1.RequestData
    name: WebBasePaginatedRequest.RequestData
    nameWithType: WebBasePaginatedRequest.RequestData
    fullName: Winpeak.Client.Networking.WebServer.WebBasePaginatedRequest.RequestData
  - name: <
    nameWithType: <
    fullName: <
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Queue`1
    name: Queue
    nameWithType: Queue
    fullName: System.Collections.Generic.Queue
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Winpeak.Client.Networking.WebServer.WebBasePaginatedRequest`1.RequestData
    name: WebBasePaginatedRequest.RequestData
    nameWithType: WebBasePaginatedRequest.RequestData
    fullName: Winpeak.Client.Networking.WebServer.WebBasePaginatedRequest.RequestData
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Queue`1
  commentId: T:System.Collections.Generic.Queue`1
  isExternal: true
  name: Queue<T>
  nameWithType: Queue<T>
  fullName: System.Collections.Generic.Queue<T>
  nameWithType.vb: Queue(Of T)
  fullName.vb: System.Collections.Generic.Queue(Of T)
  name.vb: Queue(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.Queue`1
    name: Queue
    nameWithType: Queue
    fullName: System.Collections.Generic.Queue
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Queue`1
    name: Queue
    nameWithType: Queue
    fullName: System.Collections.Generic.Queue
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Collections.Generic.List{{T}}
  commentId: T:System.Collections.Generic.List{`0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Action{System.Collections.Generic.List{{T}}}
  commentId: T:System.Action{System.Collections.Generic.List{`0}}
  parent: System
  definition: System.Action`1
  name: Action<List<T>>
  nameWithType: Action<List<T>>
  fullName: System.Action<System.Collections.Generic.List<T>>
  nameWithType.vb: Action(Of List(Of T))
  fullName.vb: System.Action(Of System.Collections.Generic.List(Of T))
  name.vb: Action(Of List(Of T))
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Action`1
  commentId: T:System.Action`1
  isExternal: true
  name: Action<T>
  nameWithType: Action<T>
  fullName: System.Action<T>
  nameWithType.vb: Action(Of T)
  fullName.vb: System.Action(Of T)
  name.vb: Action(Of T)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Winpeak.Client.Networking.WebServer.WebBasePaginatedRequest`1.#ctor*
  commentId: Overload:Winpeak.Client.Networking.WebServer.WebBasePaginatedRequest`1.#ctor
  name: WebBasePaginatedRequest
  nameWithType: WebBasePaginatedRequest<T>.WebBasePaginatedRequest
  fullName: Winpeak.Client.Networking.WebServer.WebBasePaginatedRequest<T>.WebBasePaginatedRequest
  nameWithType.vb: WebBasePaginatedRequest(Of T).WebBasePaginatedRequest
  fullName.vb: Winpeak.Client.Networking.WebServer.WebBasePaginatedRequest(Of T).WebBasePaginatedRequest
- uid: Winpeak.Client.Networking.WebServer.WebBasePaginatedRequest`1.HasReceivedAllItems*
  commentId: Overload:Winpeak.Client.Networking.WebServer.WebBasePaginatedRequest`1.HasReceivedAllItems
  name: HasReceivedAllItems
  nameWithType: WebBasePaginatedRequest<T>.HasReceivedAllItems
  fullName: Winpeak.Client.Networking.WebServer.WebBasePaginatedRequest<T>.HasReceivedAllItems
  nameWithType.vb: WebBasePaginatedRequest(Of T).HasReceivedAllItems
  fullName.vb: Winpeak.Client.Networking.WebServer.WebBasePaginatedRequest(Of T).HasReceivedAllItems
- uid: Winpeak.Client.Networking.WebServer.WebBasePaginatedRequest`1.Clear*
  commentId: Overload:Winpeak.Client.Networking.WebServer.WebBasePaginatedRequest`1.Clear
  name: Clear
  nameWithType: WebBasePaginatedRequest<T>.Clear
  fullName: Winpeak.Client.Networking.WebServer.WebBasePaginatedRequest<T>.Clear
  nameWithType.vb: WebBasePaginatedRequest(Of T).Clear
  fullName.vb: Winpeak.Client.Networking.WebServer.WebBasePaginatedRequest(Of T).Clear
- uid: Winpeak.Client.Networking.WebServer.WebBasePaginatedRequest`1.SendRequestResult*
  commentId: Overload:Winpeak.Client.Networking.WebServer.WebBasePaginatedRequest`1.SendRequestResult
  name: SendRequestResult
  nameWithType: WebBasePaginatedRequest<T>.SendRequestResult
  fullName: Winpeak.Client.Networking.WebServer.WebBasePaginatedRequest<T>.SendRequestResult
  nameWithType.vb: WebBasePaginatedRequest(Of T).SendRequestResult
  fullName.vb: Winpeak.Client.Networking.WebServer.WebBasePaginatedRequest(Of T).SendRequestResult
- uid: Winpeak.Client.Networking.WebServer.WebBasePaginatedRequest`1.HandleNextRequest*
  commentId: Overload:Winpeak.Client.Networking.WebServer.WebBasePaginatedRequest`1.HandleNextRequest
  name: HandleNextRequest
  nameWithType: WebBasePaginatedRequest<T>.HandleNextRequest
  fullName: Winpeak.Client.Networking.WebServer.WebBasePaginatedRequest<T>.HandleNextRequest
  nameWithType.vb: WebBasePaginatedRequest(Of T).HandleNextRequest
  fullName.vb: Winpeak.Client.Networking.WebServer.WebBasePaginatedRequest(Of T).HandleNextRequest
- uid: Winpeak.Client.Networking.WebServer.WebBasePaginatedRequest`1.GetItems*
  commentId: Overload:Winpeak.Client.Networking.WebServer.WebBasePaginatedRequest`1.GetItems
  name: GetItems
  nameWithType: WebBasePaginatedRequest<T>.GetItems
  fullName: Winpeak.Client.Networking.WebServer.WebBasePaginatedRequest<T>.GetItems
  nameWithType.vb: WebBasePaginatedRequest(Of T).GetItems
  fullName.vb: Winpeak.Client.Networking.WebServer.WebBasePaginatedRequest(Of T).GetItems
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
