### YamlMime:ManagedReference
items:
- uid: Winpeak.Client.Networking.NetworkControllerImportantWrapper
  commentId: T:Winpeak.Client.Networking.NetworkControllerImportantWrapper
  id: NetworkControllerImportantWrapper
  parent: Winpeak.Client.Networking
  children:
  - Winpeak.Client.Networking.NetworkControllerImportantWrapper.Dispose
  - Winpeak.Client.Networking.NetworkControllerImportantWrapper.PACKET_LIVE_TIME
  - Winpeak.Client.Networking.NetworkControllerImportantWrapper.PACKET_MIN_SEND_TIME
  - Winpeak.Client.Networking.NetworkControllerImportantWrapper.SendMessageAsync(JObject,System.Action)
  - Winpeak.Client.Networking.NetworkControllerImportantWrapper.SendMessageAsync(System.String,System.Action)
  - Winpeak.Client.Networking.NetworkControllerImportantWrapper.StatusController
  langs:
  - csharp
  - vb
  name: NetworkControllerImportantWrapper
  nameWithType: NetworkControllerImportantWrapper
  fullName: Winpeak.Client.Networking.NetworkControllerImportantWrapper
  type: Class
  source:
    id: NetworkControllerImportantWrapper
    path: ''
    startLine: 457
  assemblies:
  - cs.temp.dll
  namespace: Winpeak.Client.Networking
  syntax:
    content: 'public class NetworkControllerImportantWrapper : IDisposable'
    content.vb: >-
      Public Class NetworkControllerImportantWrapper
          Implements IDisposable
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ToString
  - System.Object.ReferenceEquals(System.Object,System.Object)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Winpeak.Client.Networking.NetworkControllerImportantWrapper.PACKET_LIVE_TIME
  commentId: F:Winpeak.Client.Networking.NetworkControllerImportantWrapper.PACKET_LIVE_TIME
  id: PACKET_LIVE_TIME
  parent: Winpeak.Client.Networking.NetworkControllerImportantWrapper
  langs:
  - csharp
  - vb
  name: PACKET_LIVE_TIME
  nameWithType: NetworkControllerImportantWrapper.PACKET_LIVE_TIME
  fullName: Winpeak.Client.Networking.NetworkControllerImportantWrapper.PACKET_LIVE_TIME
  type: Field
  source:
    id: PACKET_LIVE_TIME
    path: ''
    startLine: 459
  assemblies:
  - cs.temp.dll
  namespace: Winpeak.Client.Networking
  syntax:
    content: public const int PACKET_LIVE_TIME = 3000
    return:
      type: System.Int32
    content.vb: Public Const PACKET_LIVE_TIME As Integer = 3000
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Winpeak.Client.Networking.NetworkControllerImportantWrapper.PACKET_MIN_SEND_TIME
  commentId: F:Winpeak.Client.Networking.NetworkControllerImportantWrapper.PACKET_MIN_SEND_TIME
  id: PACKET_MIN_SEND_TIME
  parent: Winpeak.Client.Networking.NetworkControllerImportantWrapper
  langs:
  - csharp
  - vb
  name: PACKET_MIN_SEND_TIME
  nameWithType: NetworkControllerImportantWrapper.PACKET_MIN_SEND_TIME
  fullName: Winpeak.Client.Networking.NetworkControllerImportantWrapper.PACKET_MIN_SEND_TIME
  type: Field
  source:
    id: PACKET_MIN_SEND_TIME
    path: ''
    startLine: 460
  assemblies:
  - cs.temp.dll
  namespace: Winpeak.Client.Networking
  syntax:
    content: public const int PACKET_MIN_SEND_TIME = 200
    return:
      type: System.Int32
    content.vb: Public Const PACKET_MIN_SEND_TIME As Integer = 200
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Winpeak.Client.Networking.NetworkControllerImportantWrapper.SendMessageAsync(JObject,System.Action)
  commentId: M:Winpeak.Client.Networking.NetworkControllerImportantWrapper.SendMessageAsync(JObject,System.Action)
  id: SendMessageAsync(JObject,System.Action)
  parent: Winpeak.Client.Networking.NetworkControllerImportantWrapper
  langs:
  - csharp
  - vb
  name: SendMessageAsync(JObject, Action)
  nameWithType: NetworkControllerImportantWrapper.SendMessageAsync(JObject, Action)
  fullName: Winpeak.Client.Networking.NetworkControllerImportantWrapper.SendMessageAsync(JObject, System.Action)
  type: Method
  source:
    id: SendMessageAsync
    path: ''
    startLine: 526
  assemblies:
  - cs.temp.dll
  namespace: Winpeak.Client.Networking
  syntax:
    content: public void SendMessageAsync(JObject json, Action onMessageSend = null)
    parameters:
    - id: json
      type: JObject
    - id: onMessageSend
      type: System.Action
    content.vb: Public Sub SendMessageAsync(json As JObject, onMessageSend As Action = Nothing)
  overload: Winpeak.Client.Networking.NetworkControllerImportantWrapper.SendMessageAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Winpeak.Client.Networking.NetworkControllerImportantWrapper.SendMessageAsync(System.String,System.Action)
  commentId: M:Winpeak.Client.Networking.NetworkControllerImportantWrapper.SendMessageAsync(System.String,System.Action)
  id: SendMessageAsync(System.String,System.Action)
  parent: Winpeak.Client.Networking.NetworkControllerImportantWrapper
  langs:
  - csharp
  - vb
  name: SendMessageAsync(String, Action)
  nameWithType: NetworkControllerImportantWrapper.SendMessageAsync(String, Action)
  fullName: Winpeak.Client.Networking.NetworkControllerImportantWrapper.SendMessageAsync(System.String, System.Action)
  type: Method
  source:
    id: SendMessageAsync
    path: ''
    startLine: 536
  assemblies:
  - cs.temp.dll
  namespace: Winpeak.Client.Networking
  syntax:
    content: public void SendMessageAsync(string msg, Action onMessageSend = null)
    parameters:
    - id: msg
      type: System.String
    - id: onMessageSend
      type: System.Action
    content.vb: Public Sub SendMessageAsync(msg As String, onMessageSend As Action = Nothing)
  overload: Winpeak.Client.Networking.NetworkControllerImportantWrapper.SendMessageAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Winpeak.Client.Networking.NetworkControllerImportantWrapper.Dispose
  commentId: M:Winpeak.Client.Networking.NetworkControllerImportantWrapper.Dispose
  id: Dispose
  parent: Winpeak.Client.Networking.NetworkControllerImportantWrapper
  langs:
  - csharp
  - vb
  name: Dispose()
  nameWithType: NetworkControllerImportantWrapper.Dispose()
  fullName: Winpeak.Client.Networking.NetworkControllerImportantWrapper.Dispose()
  type: Method
  source:
    id: Dispose
    path: ''
    startLine: 541
  assemblies:
  - cs.temp.dll
  namespace: Winpeak.Client.Networking
  syntax:
    content: public void Dispose()
    content.vb: Public Sub Dispose
  overload: Winpeak.Client.Networking.NetworkControllerImportantWrapper.Dispose*
  implements:
  - System.IDisposable.Dispose
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Winpeak.Client.Networking.NetworkControllerImportantWrapper.StatusController
  commentId: P:Winpeak.Client.Networking.NetworkControllerImportantWrapper.StatusController
  id: StatusController
  parent: Winpeak.Client.Networking.NetworkControllerImportantWrapper
  langs:
  - csharp
  - vb
  name: StatusController
  nameWithType: NetworkControllerImportantWrapper.StatusController
  fullName: Winpeak.Client.Networking.NetworkControllerImportantWrapper.StatusController
  type: Property
  source:
    id: StatusController
    path: ''
    startLine: 545
  assemblies:
  - cs.temp.dll
  namespace: Winpeak.Client.Networking
  syntax:
    content: public ServerConnectionStatusController StatusController { get; }
    parameters: []
    return:
      type: Winpeak.Client.Networking.ServerConnectionStatusController
    content.vb: Public ReadOnly Property StatusController As ServerConnectionStatusController
  overload: Winpeak.Client.Networking.NetworkControllerImportantWrapper.StatusController*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: Winpeak.Client.Networking
  commentId: N:Winpeak.Client.Networking
  name: Winpeak.Client.Networking
  nameWithType: Winpeak.Client.Networking
  fullName: Winpeak.Client.Networking
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Winpeak.Client.Networking.NetworkControllerImportantWrapper.SendMessageAsync*
  commentId: Overload:Winpeak.Client.Networking.NetworkControllerImportantWrapper.SendMessageAsync
  name: SendMessageAsync
  nameWithType: NetworkControllerImportantWrapper.SendMessageAsync
  fullName: Winpeak.Client.Networking.NetworkControllerImportantWrapper.SendMessageAsync
- uid: JObject
  isExternal: true
  name: JObject
  nameWithType: JObject
  fullName: JObject
- uid: System.Action
  commentId: T:System.Action
  parent: System
  isExternal: true
  name: Action
  nameWithType: Action
  fullName: System.Action
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Winpeak.Client.Networking.NetworkControllerImportantWrapper.Dispose*
  commentId: Overload:Winpeak.Client.Networking.NetworkControllerImportantWrapper.Dispose
  name: Dispose
  nameWithType: NetworkControllerImportantWrapper.Dispose
  fullName: Winpeak.Client.Networking.NetworkControllerImportantWrapper.Dispose
- uid: System.IDisposable.Dispose
  commentId: M:System.IDisposable.Dispose
  parent: System.IDisposable
  isExternal: true
  name: Dispose()
  nameWithType: IDisposable.Dispose()
  fullName: System.IDisposable.Dispose()
  spec.csharp:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Winpeak.Client.Networking.NetworkControllerImportantWrapper.StatusController*
  commentId: Overload:Winpeak.Client.Networking.NetworkControllerImportantWrapper.StatusController
  name: StatusController
  nameWithType: NetworkControllerImportantWrapper.StatusController
  fullName: Winpeak.Client.Networking.NetworkControllerImportantWrapper.StatusController
- uid: Winpeak.Client.Networking.ServerConnectionStatusController
  commentId: T:Winpeak.Client.Networking.ServerConnectionStatusController
  parent: Winpeak.Client.Networking
  name: ServerConnectionStatusController
  nameWithType: ServerConnectionStatusController
  fullName: Winpeak.Client.Networking.ServerConnectionStatusController
