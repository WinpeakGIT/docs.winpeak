### YamlMime:ManagedReference
items:
- uid: BestHTTP.SocketIO.Events.EventNames
  commentId: T:BestHTTP.SocketIO.Events.EventNames
  id: EventNames
  parent: BestHTTP.SocketIO.Events
  children:
  - BestHTTP.SocketIO.Events.EventNames.Ack
  - BestHTTP.SocketIO.Events.EventNames.BinaryAck
  - BestHTTP.SocketIO.Events.EventNames.BinaryEvent
  - BestHTTP.SocketIO.Events.EventNames.Connect
  - BestHTTP.SocketIO.Events.EventNames.Disconnect
  - BestHTTP.SocketIO.Events.EventNames.Error
  - BestHTTP.SocketIO.Events.EventNames.Event
  - BestHTTP.SocketIO.Events.EventNames.GetNameFor(BestHTTP.SocketIO.SocketIOEventTypes)
  - BestHTTP.SocketIO.Events.EventNames.GetNameFor(BestHTTP.SocketIO.TransportEventTypes)
  - BestHTTP.SocketIO.Events.EventNames.IsBlacklisted(System.String)
  langs:
  - csharp
  - vb
  name: EventNames
  nameWithType: EventNames
  fullName: BestHTTP.SocketIO.Events.EventNames
  type: Class
  source:
    id: EventNames
    path: ''
    startLine: 158924
  assemblies:
  - cs.temp.dll
  namespace: BestHTTP.SocketIO.Events
  summary: "\nHelper class to provide functions to an easy Enum->string conversation of the transport and SocketIO evenet types.\n"
  example: []
  syntax:
    content: public static class EventNames
    content.vb: Public Module EventNames
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ToString
  - System.Object.ReferenceEquals(System.Object,System.Object)
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: BestHTTP.SocketIO.Events.EventNames.Connect
  commentId: F:BestHTTP.SocketIO.Events.EventNames.Connect
  id: Connect
  parent: BestHTTP.SocketIO.Events.EventNames
  langs:
  - csharp
  - vb
  name: Connect
  nameWithType: EventNames.Connect
  fullName: BestHTTP.SocketIO.Events.EventNames.Connect
  type: Field
  source:
    id: Connect
    path: ''
    startLine: 158926
  assemblies:
  - cs.temp.dll
  namespace: BestHTTP.SocketIO.Events
  syntax:
    content: public const string Connect = "connect"
    return:
      type: System.String
    content.vb: Public Const Connect As String = "connect"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: BestHTTP.SocketIO.Events.EventNames.Disconnect
  commentId: F:BestHTTP.SocketIO.Events.EventNames.Disconnect
  id: Disconnect
  parent: BestHTTP.SocketIO.Events.EventNames
  langs:
  - csharp
  - vb
  name: Disconnect
  nameWithType: EventNames.Disconnect
  fullName: BestHTTP.SocketIO.Events.EventNames.Disconnect
  type: Field
  source:
    id: Disconnect
    path: ''
    startLine: 158927
  assemblies:
  - cs.temp.dll
  namespace: BestHTTP.SocketIO.Events
  syntax:
    content: public const string Disconnect = "disconnect"
    return:
      type: System.String
    content.vb: Public Const Disconnect As String = "disconnect"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: BestHTTP.SocketIO.Events.EventNames.Event
  commentId: F:BestHTTP.SocketIO.Events.EventNames.Event
  id: Event
  parent: BestHTTP.SocketIO.Events.EventNames
  langs:
  - csharp
  - vb
  name: Event
  nameWithType: EventNames.Event
  fullName: BestHTTP.SocketIO.Events.EventNames.Event
  type: Field
  source:
    id: Event
    path: ''
    startLine: 158928
  assemblies:
  - cs.temp.dll
  namespace: BestHTTP.SocketIO.Events
  syntax:
    content: public const string Event = "event"
    return:
      type: System.String
    content.vb: Public Const Event As String = "event"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: BestHTTP.SocketIO.Events.EventNames.Ack
  commentId: F:BestHTTP.SocketIO.Events.EventNames.Ack
  id: Ack
  parent: BestHTTP.SocketIO.Events.EventNames
  langs:
  - csharp
  - vb
  name: Ack
  nameWithType: EventNames.Ack
  fullName: BestHTTP.SocketIO.Events.EventNames.Ack
  type: Field
  source:
    id: Ack
    path: ''
    startLine: 158929
  assemblies:
  - cs.temp.dll
  namespace: BestHTTP.SocketIO.Events
  syntax:
    content: public const string Ack = "ack"
    return:
      type: System.String
    content.vb: Public Const Ack As String = "ack"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: BestHTTP.SocketIO.Events.EventNames.Error
  commentId: F:BestHTTP.SocketIO.Events.EventNames.Error
  id: Error
  parent: BestHTTP.SocketIO.Events.EventNames
  langs:
  - csharp
  - vb
  name: Error
  nameWithType: EventNames.Error
  fullName: BestHTTP.SocketIO.Events.EventNames.Error
  type: Field
  source:
    id: Error
    path: ''
    startLine: 158930
  assemblies:
  - cs.temp.dll
  namespace: BestHTTP.SocketIO.Events
  syntax:
    content: public const string Error = "error"
    return:
      type: System.String
    content.vb: Public Const Error As String = "error"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: BestHTTP.SocketIO.Events.EventNames.BinaryEvent
  commentId: F:BestHTTP.SocketIO.Events.EventNames.BinaryEvent
  id: BinaryEvent
  parent: BestHTTP.SocketIO.Events.EventNames
  langs:
  - csharp
  - vb
  name: BinaryEvent
  nameWithType: EventNames.BinaryEvent
  fullName: BestHTTP.SocketIO.Events.EventNames.BinaryEvent
  type: Field
  source:
    id: BinaryEvent
    path: ''
    startLine: 158931
  assemblies:
  - cs.temp.dll
  namespace: BestHTTP.SocketIO.Events
  syntax:
    content: public const string BinaryEvent = "binaryevent"
    return:
      type: System.String
    content.vb: Public Const BinaryEvent As String = "binaryevent"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: BestHTTP.SocketIO.Events.EventNames.BinaryAck
  commentId: F:BestHTTP.SocketIO.Events.EventNames.BinaryAck
  id: BinaryAck
  parent: BestHTTP.SocketIO.Events.EventNames
  langs:
  - csharp
  - vb
  name: BinaryAck
  nameWithType: EventNames.BinaryAck
  fullName: BestHTTP.SocketIO.Events.EventNames.BinaryAck
  type: Field
  source:
    id: BinaryAck
    path: ''
    startLine: 158932
  assemblies:
  - cs.temp.dll
  namespace: BestHTTP.SocketIO.Events
  syntax:
    content: public const string BinaryAck = "binaryack"
    return:
      type: System.String
    content.vb: Public Const BinaryAck As String = "binaryack"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: BestHTTP.SocketIO.Events.EventNames.GetNameFor(BestHTTP.SocketIO.SocketIOEventTypes)
  commentId: M:BestHTTP.SocketIO.Events.EventNames.GetNameFor(BestHTTP.SocketIO.SocketIOEventTypes)
  id: GetNameFor(BestHTTP.SocketIO.SocketIOEventTypes)
  parent: BestHTTP.SocketIO.Events.EventNames
  langs:
  - csharp
  - vb
  name: GetNameFor(SocketIOEventTypes)
  nameWithType: EventNames.GetNameFor(SocketIOEventTypes)
  fullName: BestHTTP.SocketIO.Events.EventNames.GetNameFor(BestHTTP.SocketIO.SocketIOEventTypes)
  type: Method
  source:
    id: GetNameFor
    path: ''
    startLine: 158939
  assemblies:
  - cs.temp.dll
  namespace: BestHTTP.SocketIO.Events
  syntax:
    content: public static string GetNameFor(SocketIOEventTypes type)
    parameters:
    - id: type
      type: BestHTTP.SocketIO.SocketIOEventTypes
    return:
      type: System.String
    content.vb: Public Shared Function GetNameFor(type As SocketIOEventTypes) As String
  overload: BestHTTP.SocketIO.Events.EventNames.GetNameFor*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: BestHTTP.SocketIO.Events.EventNames.GetNameFor(BestHTTP.SocketIO.TransportEventTypes)
  commentId: M:BestHTTP.SocketIO.Events.EventNames.GetNameFor(BestHTTP.SocketIO.TransportEventTypes)
  id: GetNameFor(BestHTTP.SocketIO.TransportEventTypes)
  parent: BestHTTP.SocketIO.Events.EventNames
  langs:
  - csharp
  - vb
  name: GetNameFor(TransportEventTypes)
  nameWithType: EventNames.GetNameFor(TransportEventTypes)
  fullName: BestHTTP.SocketIO.Events.EventNames.GetNameFor(BestHTTP.SocketIO.TransportEventTypes)
  type: Method
  source:
    id: GetNameFor
    path: ''
    startLine: 158944
  assemblies:
  - cs.temp.dll
  namespace: BestHTTP.SocketIO.Events
  syntax:
    content: public static string GetNameFor(TransportEventTypes transEvent)
    parameters:
    - id: transEvent
      type: BestHTTP.SocketIO.TransportEventTypes
    return:
      type: System.String
    content.vb: Public Shared Function GetNameFor(transEvent As TransportEventTypes) As String
  overload: BestHTTP.SocketIO.Events.EventNames.GetNameFor*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: BestHTTP.SocketIO.Events.EventNames.IsBlacklisted(System.String)
  commentId: M:BestHTTP.SocketIO.Events.EventNames.IsBlacklisted(System.String)
  id: IsBlacklisted(System.String)
  parent: BestHTTP.SocketIO.Events.EventNames
  langs:
  - csharp
  - vb
  name: IsBlacklisted(String)
  nameWithType: EventNames.IsBlacklisted(String)
  fullName: BestHTTP.SocketIO.Events.EventNames.IsBlacklisted(System.String)
  type: Method
  source:
    id: IsBlacklisted
    path: ''
    startLine: 158952
  assemblies:
  - cs.temp.dll
  namespace: BestHTTP.SocketIO.Events
  summary: "\nChecks an event name whether it&apos;s blacklisted or not.\n"
  example: []
  syntax:
    content: public static bool IsBlacklisted(string eventName)
    parameters:
    - id: eventName
      type: System.String
    return:
      type: System.Boolean
    content.vb: Public Shared Function IsBlacklisted(eventName As String) As Boolean
  overload: BestHTTP.SocketIO.Events.EventNames.IsBlacklisted*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: BestHTTP.SocketIO.Events
  commentId: N:BestHTTP.SocketIO.Events
  name: BestHTTP.SocketIO.Events
  nameWithType: BestHTTP.SocketIO.Events
  fullName: BestHTTP.SocketIO.Events
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: BestHTTP.SocketIO.Events.EventNames.GetNameFor*
  commentId: Overload:BestHTTP.SocketIO.Events.EventNames.GetNameFor
  name: GetNameFor
  nameWithType: EventNames.GetNameFor
  fullName: BestHTTP.SocketIO.Events.EventNames.GetNameFor
- uid: BestHTTP.SocketIO.SocketIOEventTypes
  commentId: T:BestHTTP.SocketIO.SocketIOEventTypes
  parent: BestHTTP.SocketIO
  name: SocketIOEventTypes
  nameWithType: SocketIOEventTypes
  fullName: BestHTTP.SocketIO.SocketIOEventTypes
- uid: BestHTTP.SocketIO
  commentId: N:BestHTTP.SocketIO
  name: BestHTTP.SocketIO
  nameWithType: BestHTTP.SocketIO
  fullName: BestHTTP.SocketIO
- uid: BestHTTP.SocketIO.TransportEventTypes
  commentId: T:BestHTTP.SocketIO.TransportEventTypes
  parent: BestHTTP.SocketIO
  name: TransportEventTypes
  nameWithType: TransportEventTypes
  fullName: BestHTTP.SocketIO.TransportEventTypes
- uid: BestHTTP.SocketIO.Events.EventNames.IsBlacklisted*
  commentId: Overload:BestHTTP.SocketIO.Events.EventNames.IsBlacklisted
  name: IsBlacklisted
  nameWithType: EventNames.IsBlacklisted
  fullName: BestHTTP.SocketIO.Events.EventNames.IsBlacklisted
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
