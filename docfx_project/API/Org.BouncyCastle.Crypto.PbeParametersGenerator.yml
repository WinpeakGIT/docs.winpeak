### YamlMime:ManagedReference
items:
- uid: Org.BouncyCastle.Crypto.PbeParametersGenerator
  commentId: T:Org.BouncyCastle.Crypto.PbeParametersGenerator
  id: PbeParametersGenerator
  parent: Org.BouncyCastle.Crypto
  children:
  - Org.BouncyCastle.Crypto.PbeParametersGenerator.#ctor
  - Org.BouncyCastle.Crypto.PbeParametersGenerator.GenerateDerivedMacParameters(System.Int32)
  - Org.BouncyCastle.Crypto.PbeParametersGenerator.GenerateDerivedParameters(System.Int32)
  - Org.BouncyCastle.Crypto.PbeParametersGenerator.GenerateDerivedParameters(System.Int32,System.Int32)
  - Org.BouncyCastle.Crypto.PbeParametersGenerator.GenerateDerivedParameters(System.String,System.Int32)
  - Org.BouncyCastle.Crypto.PbeParametersGenerator.GenerateDerivedParameters(System.String,System.Int32,System.Int32)
  - Org.BouncyCastle.Crypto.PbeParametersGenerator.GetPassword
  - Org.BouncyCastle.Crypto.PbeParametersGenerator.GetSalt
  - Org.BouncyCastle.Crypto.PbeParametersGenerator.Init(System.Byte[],System.Byte[],System.Int32)
  - Org.BouncyCastle.Crypto.PbeParametersGenerator.IterationCount
  - Org.BouncyCastle.Crypto.PbeParametersGenerator.mIterationCount
  - Org.BouncyCastle.Crypto.PbeParametersGenerator.mPassword
  - Org.BouncyCastle.Crypto.PbeParametersGenerator.mSalt
  - Org.BouncyCastle.Crypto.PbeParametersGenerator.Password
  - Org.BouncyCastle.Crypto.PbeParametersGenerator.Pkcs12PasswordToBytes(System.Char[])
  - Org.BouncyCastle.Crypto.PbeParametersGenerator.Pkcs12PasswordToBytes(System.Char[],System.Boolean)
  - Org.BouncyCastle.Crypto.PbeParametersGenerator.Pkcs5PasswordToBytes(System.Char[])
  - Org.BouncyCastle.Crypto.PbeParametersGenerator.Pkcs5PasswordToBytes(System.String)
  - Org.BouncyCastle.Crypto.PbeParametersGenerator.Pkcs5PasswordToUtf8Bytes(System.Char[])
  - Org.BouncyCastle.Crypto.PbeParametersGenerator.Pkcs5PasswordToUtf8Bytes(System.String)
  - Org.BouncyCastle.Crypto.PbeParametersGenerator.Salt
  langs:
  - csharp
  - vb
  name: PbeParametersGenerator
  nameWithType: PbeParametersGenerator
  fullName: Org.BouncyCastle.Crypto.PbeParametersGenerator
  type: Class
  source:
    id: PbeParametersGenerator
    path: ''
    startLine: 100578
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto
  example: []
  syntax:
    content: public abstract class PbeParametersGenerator
    content.vb: Public MustInherit Class PbeParametersGenerator
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ToString
  - System.Object.ReferenceEquals(System.Object,System.Object)
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: Org.BouncyCastle.Crypto.PbeParametersGenerator.mPassword
  commentId: F:Org.BouncyCastle.Crypto.PbeParametersGenerator.mPassword
  id: mPassword
  parent: Org.BouncyCastle.Crypto.PbeParametersGenerator
  langs:
  - csharp
  - vb
  name: mPassword
  nameWithType: PbeParametersGenerator.mPassword
  fullName: Org.BouncyCastle.Crypto.PbeParametersGenerator.mPassword
  type: Field
  source:
    id: mPassword
    path: ''
    startLine: 100580
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto
  syntax:
    content: protected byte[] mPassword
    return:
      type: System.Byte[]
    content.vb: Protected mPassword As Byte()
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Org.BouncyCastle.Crypto.PbeParametersGenerator.mSalt
  commentId: F:Org.BouncyCastle.Crypto.PbeParametersGenerator.mSalt
  id: mSalt
  parent: Org.BouncyCastle.Crypto.PbeParametersGenerator
  langs:
  - csharp
  - vb
  name: mSalt
  nameWithType: PbeParametersGenerator.mSalt
  fullName: Org.BouncyCastle.Crypto.PbeParametersGenerator.mSalt
  type: Field
  source:
    id: mSalt
    path: ''
    startLine: 100581
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto
  syntax:
    content: protected byte[] mSalt
    return:
      type: System.Byte[]
    content.vb: Protected mSalt As Byte()
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Org.BouncyCastle.Crypto.PbeParametersGenerator.mIterationCount
  commentId: F:Org.BouncyCastle.Crypto.PbeParametersGenerator.mIterationCount
  id: mIterationCount
  parent: Org.BouncyCastle.Crypto.PbeParametersGenerator
  langs:
  - csharp
  - vb
  name: mIterationCount
  nameWithType: PbeParametersGenerator.mIterationCount
  fullName: Org.BouncyCastle.Crypto.PbeParametersGenerator.mIterationCount
  type: Field
  source:
    id: mIterationCount
    path: ''
    startLine: 100582
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto
  syntax:
    content: protected int mIterationCount
    return:
      type: System.Int32
    content.vb: Protected mIterationCount As Integer
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Org.BouncyCastle.Crypto.PbeParametersGenerator.#ctor
  commentId: M:Org.BouncyCastle.Crypto.PbeParametersGenerator.#ctor
  id: '#ctor'
  parent: Org.BouncyCastle.Crypto.PbeParametersGenerator
  langs:
  - csharp
  - vb
  name: PbeParametersGenerator()
  nameWithType: PbeParametersGenerator.PbeParametersGenerator()
  fullName: Org.BouncyCastle.Crypto.PbeParametersGenerator.PbeParametersGenerator()
  type: Constructor
  source:
    id: .ctor
    path: ''
    startLine: 100587
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto
  example: []
  syntax:
    content: protected PbeParametersGenerator()
    content.vb: Protected Sub New
  overload: Org.BouncyCastle.Crypto.PbeParametersGenerator.#ctor*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Org.BouncyCastle.Crypto.PbeParametersGenerator.Init(System.Byte[],System.Byte[],System.Int32)
  commentId: M:Org.BouncyCastle.Crypto.PbeParametersGenerator.Init(System.Byte[],System.Byte[],System.Int32)
  id: Init(System.Byte[],System.Byte[],System.Int32)
  parent: Org.BouncyCastle.Crypto.PbeParametersGenerator
  langs:
  - csharp
  - vb
  name: Init(Byte[], Byte[], Int32)
  nameWithType: PbeParametersGenerator.Init(Byte[], Byte[], Int32)
  fullName: Org.BouncyCastle.Crypto.PbeParametersGenerator.Init(System.Byte[], System.Byte[], System.Int32)
  type: Method
  source:
    id: Init
    path: ''
    startLine: 100599
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto
  example: []
  syntax:
    content: public virtual void Init(byte[] password, byte[] salt, int iterationCount)
    parameters:
    - id: password
      type: System.Byte[]
    - id: salt
      type: System.Byte[]
    - id: iterationCount
      type: System.Int32
    content.vb: Public Overridable Sub Init(password As Byte(), salt As Byte(), iterationCount As Integer)
  overload: Org.BouncyCastle.Crypto.PbeParametersGenerator.Init*
  nameWithType.vb: PbeParametersGenerator.Init(Byte(), Byte(), Int32)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Org.BouncyCastle.Crypto.PbeParametersGenerator.Init(System.Byte(), System.Byte(), System.Int32)
  name.vb: Init(Byte(), Byte(), Int32)
- uid: Org.BouncyCastle.Crypto.PbeParametersGenerator.Password
  commentId: P:Org.BouncyCastle.Crypto.PbeParametersGenerator.Password
  id: Password
  parent: Org.BouncyCastle.Crypto.PbeParametersGenerator
  langs:
  - csharp
  - vb
  name: Password
  nameWithType: PbeParametersGenerator.Password
  fullName: Org.BouncyCastle.Crypto.PbeParametersGenerator.Password
  type: Property
  source:
    id: Password
    path: ''
    startLine: 100614
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto
  syntax:
    content: public virtual byte[] Password { get; }
    parameters: []
    return:
      type: System.Byte[]
    content.vb: Public Overridable ReadOnly Property Password As Byte()
  overload: Org.BouncyCastle.Crypto.PbeParametersGenerator.Password*
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: Org.BouncyCastle.Crypto.PbeParametersGenerator.GetPassword
  commentId: M:Org.BouncyCastle.Crypto.PbeParametersGenerator.GetPassword
  id: GetPassword
  parent: Org.BouncyCastle.Crypto.PbeParametersGenerator
  langs:
  - csharp
  - vb
  name: GetPassword()
  nameWithType: PbeParametersGenerator.GetPassword()
  fullName: Org.BouncyCastle.Crypto.PbeParametersGenerator.GetPassword()
  type: Method
  source:
    id: GetPassword
    path: ''
    startLine: 100624
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto
  example: []
  syntax:
    content: >-
      [Obsolete("Use 'Password' property")]

      public byte[] GetPassword()
    return:
      type: System.Byte[]
    content.vb: >-
      <Obsolete("Use 'Password' property")>

      Public Function GetPassword As Byte()
  overload: Org.BouncyCastle.Crypto.PbeParametersGenerator.GetPassword*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Use 'Password' property
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Org.BouncyCastle.Crypto.PbeParametersGenerator.Salt
  commentId: P:Org.BouncyCastle.Crypto.PbeParametersGenerator.Salt
  id: Salt
  parent: Org.BouncyCastle.Crypto.PbeParametersGenerator
  langs:
  - csharp
  - vb
  name: Salt
  nameWithType: PbeParametersGenerator.Salt
  fullName: Org.BouncyCastle.Crypto.PbeParametersGenerator.Salt
  type: Property
  source:
    id: Salt
    path: ''
    startLine: 100630
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto
  syntax:
    content: public virtual byte[] Salt { get; }
    parameters: []
    return:
      type: System.Byte[]
    content.vb: Public Overridable ReadOnly Property Salt As Byte()
  overload: Org.BouncyCastle.Crypto.PbeParametersGenerator.Salt*
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: Org.BouncyCastle.Crypto.PbeParametersGenerator.GetSalt
  commentId: M:Org.BouncyCastle.Crypto.PbeParametersGenerator.GetSalt
  id: GetSalt
  parent: Org.BouncyCastle.Crypto.PbeParametersGenerator
  langs:
  - csharp
  - vb
  name: GetSalt()
  nameWithType: PbeParametersGenerator.GetSalt()
  fullName: Org.BouncyCastle.Crypto.PbeParametersGenerator.GetSalt()
  type: Method
  source:
    id: GetSalt
    path: ''
    startLine: 100640
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto
  example: []
  syntax:
    content: >-
      [Obsolete("Use 'Salt' property")]

      public byte[] GetSalt()
    return:
      type: System.Byte[]
    content.vb: >-
      <Obsolete("Use 'Salt' property")>

      Public Function GetSalt As Byte()
  overload: Org.BouncyCastle.Crypto.PbeParametersGenerator.GetSalt*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Use 'Salt' property
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Org.BouncyCastle.Crypto.PbeParametersGenerator.IterationCount
  commentId: P:Org.BouncyCastle.Crypto.PbeParametersGenerator.IterationCount
  id: IterationCount
  parent: Org.BouncyCastle.Crypto.PbeParametersGenerator
  langs:
  - csharp
  - vb
  name: IterationCount
  nameWithType: PbeParametersGenerator.IterationCount
  fullName: Org.BouncyCastle.Crypto.PbeParametersGenerator.IterationCount
  type: Property
  source:
    id: IterationCount
    path: ''
    startLine: 100651
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto
  example: []
  syntax:
    content: public virtual int IterationCount { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Overridable ReadOnly Property IterationCount As Integer
  overload: Org.BouncyCastle.Crypto.PbeParametersGenerator.IterationCount*
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: Org.BouncyCastle.Crypto.PbeParametersGenerator.GenerateDerivedParameters(System.Int32)
  commentId: M:Org.BouncyCastle.Crypto.PbeParametersGenerator.GenerateDerivedParameters(System.Int32)
  id: GenerateDerivedParameters(System.Int32)
  parent: Org.BouncyCastle.Crypto.PbeParametersGenerator
  langs:
  - csharp
  - vb
  name: GenerateDerivedParameters(Int32)
  nameWithType: PbeParametersGenerator.GenerateDerivedParameters(Int32)
  fullName: Org.BouncyCastle.Crypto.PbeParametersGenerator.GenerateDerivedParameters(System.Int32)
  type: Method
  source:
    id: GenerateDerivedParameters
    path: ''
    startLine: 100662
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto
  example: []
  syntax:
    content: >-
      [Obsolete("Use version with 'algorithm' parameter")]

      public abstract ICipherParameters GenerateDerivedParameters(int keySize)
    parameters:
    - id: keySize
      type: System.Int32
    return:
      type: Org.BouncyCastle.Crypto.ICipherParameters
    content.vb: >-
      <Obsolete("Use version with 'algorithm' parameter")>

      Public MustOverride Function GenerateDerivedParameters(keySize As Integer) As ICipherParameters
  overload: Org.BouncyCastle.Crypto.PbeParametersGenerator.GenerateDerivedParameters*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Use version with 'algorithm' parameter
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
- uid: Org.BouncyCastle.Crypto.PbeParametersGenerator.GenerateDerivedParameters(System.String,System.Int32)
  commentId: M:Org.BouncyCastle.Crypto.PbeParametersGenerator.GenerateDerivedParameters(System.String,System.Int32)
  id: GenerateDerivedParameters(System.String,System.Int32)
  parent: Org.BouncyCastle.Crypto.PbeParametersGenerator
  langs:
  - csharp
  - vb
  name: GenerateDerivedParameters(String, Int32)
  nameWithType: PbeParametersGenerator.GenerateDerivedParameters(String, Int32)
  fullName: Org.BouncyCastle.Crypto.PbeParametersGenerator.GenerateDerivedParameters(System.String, System.Int32)
  type: Method
  source:
    id: GenerateDerivedParameters
    path: ''
    startLine: 100664
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto
  syntax:
    content: public abstract ICipherParameters GenerateDerivedParameters(string algorithm, int keySize)
    parameters:
    - id: algorithm
      type: System.String
    - id: keySize
      type: System.Int32
    return:
      type: Org.BouncyCastle.Crypto.ICipherParameters
    content.vb: Public MustOverride Function GenerateDerivedParameters(algorithm As String, keySize As Integer) As ICipherParameters
  overload: Org.BouncyCastle.Crypto.PbeParametersGenerator.GenerateDerivedParameters*
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
- uid: Org.BouncyCastle.Crypto.PbeParametersGenerator.GenerateDerivedParameters(System.Int32,System.Int32)
  commentId: M:Org.BouncyCastle.Crypto.PbeParametersGenerator.GenerateDerivedParameters(System.Int32,System.Int32)
  id: GenerateDerivedParameters(System.Int32,System.Int32)
  parent: Org.BouncyCastle.Crypto.PbeParametersGenerator
  langs:
  - csharp
  - vb
  name: GenerateDerivedParameters(Int32, Int32)
  nameWithType: PbeParametersGenerator.GenerateDerivedParameters(Int32, Int32)
  fullName: Org.BouncyCastle.Crypto.PbeParametersGenerator.GenerateDerivedParameters(System.Int32, System.Int32)
  type: Method
  source:
    id: GenerateDerivedParameters
    path: ''
    startLine: 100674
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto
  example: []
  syntax:
    content: >-
      [Obsolete("Use version with 'algorithm' parameter")]

      public abstract ICipherParameters GenerateDerivedParameters(int keySize, int ivSize)
    parameters:
    - id: keySize
      type: System.Int32
    - id: ivSize
      type: System.Int32
    return:
      type: Org.BouncyCastle.Crypto.ICipherParameters
    content.vb: >-
      <Obsolete("Use version with 'algorithm' parameter")>

      Public MustOverride Function GenerateDerivedParameters(keySize As Integer, ivSize As Integer) As ICipherParameters
  overload: Org.BouncyCastle.Crypto.PbeParametersGenerator.GenerateDerivedParameters*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Use version with 'algorithm' parameter
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
- uid: Org.BouncyCastle.Crypto.PbeParametersGenerator.GenerateDerivedParameters(System.String,System.Int32,System.Int32)
  commentId: M:Org.BouncyCastle.Crypto.PbeParametersGenerator.GenerateDerivedParameters(System.String,System.Int32,System.Int32)
  id: GenerateDerivedParameters(System.String,System.Int32,System.Int32)
  parent: Org.BouncyCastle.Crypto.PbeParametersGenerator
  langs:
  - csharp
  - vb
  name: GenerateDerivedParameters(String, Int32, Int32)
  nameWithType: PbeParametersGenerator.GenerateDerivedParameters(String, Int32, Int32)
  fullName: Org.BouncyCastle.Crypto.PbeParametersGenerator.GenerateDerivedParameters(System.String, System.Int32, System.Int32)
  type: Method
  source:
    id: GenerateDerivedParameters
    path: ''
    startLine: 100676
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto
  syntax:
    content: public abstract ICipherParameters GenerateDerivedParameters(string algorithm, int keySize, int ivSize)
    parameters:
    - id: algorithm
      type: System.String
    - id: keySize
      type: System.Int32
    - id: ivSize
      type: System.Int32
    return:
      type: Org.BouncyCastle.Crypto.ICipherParameters
    content.vb: Public MustOverride Function GenerateDerivedParameters(algorithm As String, keySize As Integer, ivSize As Integer) As ICipherParameters
  overload: Org.BouncyCastle.Crypto.PbeParametersGenerator.GenerateDerivedParameters*
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
- uid: Org.BouncyCastle.Crypto.PbeParametersGenerator.GenerateDerivedMacParameters(System.Int32)
  commentId: M:Org.BouncyCastle.Crypto.PbeParametersGenerator.GenerateDerivedMacParameters(System.Int32)
  id: GenerateDerivedMacParameters(System.Int32)
  parent: Org.BouncyCastle.Crypto.PbeParametersGenerator
  langs:
  - csharp
  - vb
  name: GenerateDerivedMacParameters(Int32)
  nameWithType: PbeParametersGenerator.GenerateDerivedMacParameters(Int32)
  fullName: Org.BouncyCastle.Crypto.PbeParametersGenerator.GenerateDerivedMacParameters(System.Int32)
  type: Method
  source:
    id: GenerateDerivedMacParameters
    path: ''
    startLine: 100685
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto
  example: []
  syntax:
    content: public abstract ICipherParameters GenerateDerivedMacParameters(int keySize)
    parameters:
    - id: keySize
      type: System.Int32
    return:
      type: Org.BouncyCastle.Crypto.ICipherParameters
    content.vb: Public MustOverride Function GenerateDerivedMacParameters(keySize As Integer) As ICipherParameters
  overload: Org.BouncyCastle.Crypto.PbeParametersGenerator.GenerateDerivedMacParameters*
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
- uid: Org.BouncyCastle.Crypto.PbeParametersGenerator.Pkcs5PasswordToBytes(System.Char[])
  commentId: M:Org.BouncyCastle.Crypto.PbeParametersGenerator.Pkcs5PasswordToBytes(System.Char[])
  id: Pkcs5PasswordToBytes(System.Char[])
  parent: Org.BouncyCastle.Crypto.PbeParametersGenerator
  langs:
  - csharp
  - vb
  name: Pkcs5PasswordToBytes(Char[])
  nameWithType: PbeParametersGenerator.Pkcs5PasswordToBytes(Char[])
  fullName: Org.BouncyCastle.Crypto.PbeParametersGenerator.Pkcs5PasswordToBytes(System.Char[])
  type: Method
  source:
    id: Pkcs5PasswordToBytes
    path: ''
    startLine: 100694
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto
  example: []
  syntax:
    content: public static byte[] Pkcs5PasswordToBytes(char[] password)
    parameters:
    - id: password
      type: System.Char[]
    return:
      type: System.Byte[]
    content.vb: Public Shared Function Pkcs5PasswordToBytes(password As Char()) As Byte()
  overload: Org.BouncyCastle.Crypto.PbeParametersGenerator.Pkcs5PasswordToBytes*
  nameWithType.vb: PbeParametersGenerator.Pkcs5PasswordToBytes(Char())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Org.BouncyCastle.Crypto.PbeParametersGenerator.Pkcs5PasswordToBytes(System.Char())
  name.vb: Pkcs5PasswordToBytes(Char())
- uid: Org.BouncyCastle.Crypto.PbeParametersGenerator.Pkcs5PasswordToBytes(System.String)
  commentId: M:Org.BouncyCastle.Crypto.PbeParametersGenerator.Pkcs5PasswordToBytes(System.String)
  id: Pkcs5PasswordToBytes(System.String)
  parent: Org.BouncyCastle.Crypto.PbeParametersGenerator
  langs:
  - csharp
  - vb
  name: Pkcs5PasswordToBytes(String)
  nameWithType: PbeParametersGenerator.Pkcs5PasswordToBytes(String)
  fullName: Org.BouncyCastle.Crypto.PbeParametersGenerator.Pkcs5PasswordToBytes(System.String)
  type: Method
  source:
    id: Pkcs5PasswordToBytes
    path: ''
    startLine: 100703
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto
  syntax:
    content: >-
      [Obsolete("Use version taking 'char[]' instead")]

      public static byte[] Pkcs5PasswordToBytes(string password)
    parameters:
    - id: password
      type: System.String
    return:
      type: System.Byte[]
    content.vb: >-
      <Obsolete("Use version taking 'char[]' instead")>

      Public Shared Function Pkcs5PasswordToBytes(password As String) As Byte()
  overload: Org.BouncyCastle.Crypto.PbeParametersGenerator.Pkcs5PasswordToBytes*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Use version taking 'char[]' instead
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Org.BouncyCastle.Crypto.PbeParametersGenerator.Pkcs5PasswordToUtf8Bytes(System.Char[])
  commentId: M:Org.BouncyCastle.Crypto.PbeParametersGenerator.Pkcs5PasswordToUtf8Bytes(System.Char[])
  id: Pkcs5PasswordToUtf8Bytes(System.Char[])
  parent: Org.BouncyCastle.Crypto.PbeParametersGenerator
  langs:
  - csharp
  - vb
  name: Pkcs5PasswordToUtf8Bytes(Char[])
  nameWithType: PbeParametersGenerator.Pkcs5PasswordToUtf8Bytes(Char[])
  fullName: Org.BouncyCastle.Crypto.PbeParametersGenerator.Pkcs5PasswordToUtf8Bytes(System.Char[])
  type: Method
  source:
    id: Pkcs5PasswordToUtf8Bytes
    path: ''
    startLine: 100720
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto
  example: []
  syntax:
    content: public static byte[] Pkcs5PasswordToUtf8Bytes(char[] password)
    parameters:
    - id: password
      type: System.Char[]
    return:
      type: System.Byte[]
    content.vb: Public Shared Function Pkcs5PasswordToUtf8Bytes(password As Char()) As Byte()
  overload: Org.BouncyCastle.Crypto.PbeParametersGenerator.Pkcs5PasswordToUtf8Bytes*
  nameWithType.vb: PbeParametersGenerator.Pkcs5PasswordToUtf8Bytes(Char())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Org.BouncyCastle.Crypto.PbeParametersGenerator.Pkcs5PasswordToUtf8Bytes(System.Char())
  name.vb: Pkcs5PasswordToUtf8Bytes(Char())
- uid: Org.BouncyCastle.Crypto.PbeParametersGenerator.Pkcs5PasswordToUtf8Bytes(System.String)
  commentId: M:Org.BouncyCastle.Crypto.PbeParametersGenerator.Pkcs5PasswordToUtf8Bytes(System.String)
  id: Pkcs5PasswordToUtf8Bytes(System.String)
  parent: Org.BouncyCastle.Crypto.PbeParametersGenerator
  langs:
  - csharp
  - vb
  name: Pkcs5PasswordToUtf8Bytes(String)
  nameWithType: PbeParametersGenerator.Pkcs5PasswordToUtf8Bytes(String)
  fullName: Org.BouncyCastle.Crypto.PbeParametersGenerator.Pkcs5PasswordToUtf8Bytes(System.String)
  type: Method
  source:
    id: Pkcs5PasswordToUtf8Bytes
    path: ''
    startLine: 100729
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto
  syntax:
    content: >-
      [Obsolete("Use version taking 'char[]' instead")]

      public static byte[] Pkcs5PasswordToUtf8Bytes(string password)
    parameters:
    - id: password
      type: System.String
    return:
      type: System.Byte[]
    content.vb: >-
      <Obsolete("Use version taking 'char[]' instead")>

      Public Shared Function Pkcs5PasswordToUtf8Bytes(password As String) As Byte()
  overload: Org.BouncyCastle.Crypto.PbeParametersGenerator.Pkcs5PasswordToUtf8Bytes*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Use version taking 'char[]' instead
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Org.BouncyCastle.Crypto.PbeParametersGenerator.Pkcs12PasswordToBytes(System.Char[])
  commentId: M:Org.BouncyCastle.Crypto.PbeParametersGenerator.Pkcs12PasswordToBytes(System.Char[])
  id: Pkcs12PasswordToBytes(System.Char[])
  parent: Org.BouncyCastle.Crypto.PbeParametersGenerator
  langs:
  - csharp
  - vb
  name: Pkcs12PasswordToBytes(Char[])
  nameWithType: PbeParametersGenerator.Pkcs12PasswordToBytes(Char[])
  fullName: Org.BouncyCastle.Crypto.PbeParametersGenerator.Pkcs12PasswordToBytes(System.Char[])
  type: Method
  source:
    id: Pkcs12PasswordToBytes
    path: ''
    startLine: 100746
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto
  example: []
  syntax:
    content: public static byte[] Pkcs12PasswordToBytes(char[] password)
    parameters:
    - id: password
      type: System.Char[]
    return:
      type: System.Byte[]
    content.vb: Public Shared Function Pkcs12PasswordToBytes(password As Char()) As Byte()
  overload: Org.BouncyCastle.Crypto.PbeParametersGenerator.Pkcs12PasswordToBytes*
  nameWithType.vb: PbeParametersGenerator.Pkcs12PasswordToBytes(Char())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Org.BouncyCastle.Crypto.PbeParametersGenerator.Pkcs12PasswordToBytes(System.Char())
  name.vb: Pkcs12PasswordToBytes(Char())
- uid: Org.BouncyCastle.Crypto.PbeParametersGenerator.Pkcs12PasswordToBytes(System.Char[],System.Boolean)
  commentId: M:Org.BouncyCastle.Crypto.PbeParametersGenerator.Pkcs12PasswordToBytes(System.Char[],System.Boolean)
  id: Pkcs12PasswordToBytes(System.Char[],System.Boolean)
  parent: Org.BouncyCastle.Crypto.PbeParametersGenerator
  langs:
  - csharp
  - vb
  name: Pkcs12PasswordToBytes(Char[], Boolean)
  nameWithType: PbeParametersGenerator.Pkcs12PasswordToBytes(Char[], Boolean)
  fullName: Org.BouncyCastle.Crypto.PbeParametersGenerator.Pkcs12PasswordToBytes(System.Char[], System.Boolean)
  type: Method
  source:
    id: Pkcs12PasswordToBytes
    path: ''
    startLine: 100752
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto
  syntax:
    content: public static byte[] Pkcs12PasswordToBytes(char[] password, bool wrongPkcs12Zero)
    parameters:
    - id: password
      type: System.Char[]
    - id: wrongPkcs12Zero
      type: System.Boolean
    return:
      type: System.Byte[]
    content.vb: Public Shared Function Pkcs12PasswordToBytes(password As Char(), wrongPkcs12Zero As Boolean) As Byte()
  overload: Org.BouncyCastle.Crypto.PbeParametersGenerator.Pkcs12PasswordToBytes*
  nameWithType.vb: PbeParametersGenerator.Pkcs12PasswordToBytes(Char(), Boolean)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Org.BouncyCastle.Crypto.PbeParametersGenerator.Pkcs12PasswordToBytes(System.Char(), System.Boolean)
  name.vb: Pkcs12PasswordToBytes(Char(), Boolean)
references:
- uid: Org.BouncyCastle.Crypto
  commentId: N:Org.BouncyCastle.Crypto
  name: Org.BouncyCastle.Crypto
  nameWithType: Org.BouncyCastle.Crypto
  fullName: Org.BouncyCastle.Crypto
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Byte[]
  isExternal: true
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullName.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Org.BouncyCastle.Crypto.PbeParametersGenerator.#ctor*
  commentId: Overload:Org.BouncyCastle.Crypto.PbeParametersGenerator.#ctor
  name: PbeParametersGenerator
  nameWithType: PbeParametersGenerator.PbeParametersGenerator
  fullName: Org.BouncyCastle.Crypto.PbeParametersGenerator.PbeParametersGenerator
- uid: Org.BouncyCastle.Crypto.PbeParametersGenerator.Init*
  commentId: Overload:Org.BouncyCastle.Crypto.PbeParametersGenerator.Init
  name: Init
  nameWithType: PbeParametersGenerator.Init
  fullName: Org.BouncyCastle.Crypto.PbeParametersGenerator.Init
- uid: Org.BouncyCastle.Crypto.PbeParametersGenerator.Password*
  commentId: Overload:Org.BouncyCastle.Crypto.PbeParametersGenerator.Password
  name: Password
  nameWithType: PbeParametersGenerator.Password
  fullName: Org.BouncyCastle.Crypto.PbeParametersGenerator.Password
- uid: Org.BouncyCastle.Crypto.PbeParametersGenerator.GetPassword*
  commentId: Overload:Org.BouncyCastle.Crypto.PbeParametersGenerator.GetPassword
  name: GetPassword
  nameWithType: PbeParametersGenerator.GetPassword
  fullName: Org.BouncyCastle.Crypto.PbeParametersGenerator.GetPassword
- uid: Org.BouncyCastle.Crypto.PbeParametersGenerator.Salt*
  commentId: Overload:Org.BouncyCastle.Crypto.PbeParametersGenerator.Salt
  name: Salt
  nameWithType: PbeParametersGenerator.Salt
  fullName: Org.BouncyCastle.Crypto.PbeParametersGenerator.Salt
- uid: Org.BouncyCastle.Crypto.PbeParametersGenerator.GetSalt*
  commentId: Overload:Org.BouncyCastle.Crypto.PbeParametersGenerator.GetSalt
  name: GetSalt
  nameWithType: PbeParametersGenerator.GetSalt
  fullName: Org.BouncyCastle.Crypto.PbeParametersGenerator.GetSalt
- uid: Org.BouncyCastle.Crypto.PbeParametersGenerator.IterationCount*
  commentId: Overload:Org.BouncyCastle.Crypto.PbeParametersGenerator.IterationCount
  name: IterationCount
  nameWithType: PbeParametersGenerator.IterationCount
  fullName: Org.BouncyCastle.Crypto.PbeParametersGenerator.IterationCount
- uid: Org.BouncyCastle.Crypto.PbeParametersGenerator.GenerateDerivedParameters*
  commentId: Overload:Org.BouncyCastle.Crypto.PbeParametersGenerator.GenerateDerivedParameters
  name: GenerateDerivedParameters
  nameWithType: PbeParametersGenerator.GenerateDerivedParameters
  fullName: Org.BouncyCastle.Crypto.PbeParametersGenerator.GenerateDerivedParameters
- uid: Org.BouncyCastle.Crypto.ICipherParameters
  commentId: T:Org.BouncyCastle.Crypto.ICipherParameters
  parent: Org.BouncyCastle.Crypto
  name: ICipherParameters
  nameWithType: ICipherParameters
  fullName: Org.BouncyCastle.Crypto.ICipherParameters
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Org.BouncyCastle.Crypto.PbeParametersGenerator.GenerateDerivedMacParameters*
  commentId: Overload:Org.BouncyCastle.Crypto.PbeParametersGenerator.GenerateDerivedMacParameters
  name: GenerateDerivedMacParameters
  nameWithType: PbeParametersGenerator.GenerateDerivedMacParameters
  fullName: Org.BouncyCastle.Crypto.PbeParametersGenerator.GenerateDerivedMacParameters
- uid: Org.BouncyCastle.Crypto.PbeParametersGenerator.Pkcs5PasswordToBytes*
  commentId: Overload:Org.BouncyCastle.Crypto.PbeParametersGenerator.Pkcs5PasswordToBytes
  name: Pkcs5PasswordToBytes
  nameWithType: PbeParametersGenerator.Pkcs5PasswordToBytes
  fullName: Org.BouncyCastle.Crypto.PbeParametersGenerator.Pkcs5PasswordToBytes
- uid: System.Char[]
  isExternal: true
  name: Char[]
  nameWithType: Char[]
  fullName: System.Char[]
  nameWithType.vb: Char()
  fullName.vb: System.Char()
  name.vb: Char()
  spec.csharp:
  - uid: System.Char
    name: Char
    nameWithType: Char
    fullName: System.Char
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Char
    name: Char
    nameWithType: Char
    fullName: System.Char
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Org.BouncyCastle.Crypto.PbeParametersGenerator.Pkcs5PasswordToUtf8Bytes*
  commentId: Overload:Org.BouncyCastle.Crypto.PbeParametersGenerator.Pkcs5PasswordToUtf8Bytes
  name: Pkcs5PasswordToUtf8Bytes
  nameWithType: PbeParametersGenerator.Pkcs5PasswordToUtf8Bytes
  fullName: Org.BouncyCastle.Crypto.PbeParametersGenerator.Pkcs5PasswordToUtf8Bytes
- uid: Org.BouncyCastle.Crypto.PbeParametersGenerator.Pkcs12PasswordToBytes*
  commentId: Overload:Org.BouncyCastle.Crypto.PbeParametersGenerator.Pkcs12PasswordToBytes
  name: Pkcs12PasswordToBytes
  nameWithType: PbeParametersGenerator.Pkcs12PasswordToBytes
  fullName: Org.BouncyCastle.Crypto.PbeParametersGenerator.Pkcs12PasswordToBytes
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
