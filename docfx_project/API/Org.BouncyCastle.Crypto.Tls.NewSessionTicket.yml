### YamlMime:ManagedReference
items:
- uid: Org.BouncyCastle.Crypto.Tls.NewSessionTicket
  commentId: T:Org.BouncyCastle.Crypto.Tls.NewSessionTicket
  id: NewSessionTicket
  parent: Org.BouncyCastle.Crypto.Tls
  children:
  - Org.BouncyCastle.Crypto.Tls.NewSessionTicket.#ctor(System.Int64,System.Byte[])
  - Org.BouncyCastle.Crypto.Tls.NewSessionTicket.Encode(Stream)
  - Org.BouncyCastle.Crypto.Tls.NewSessionTicket.mTicket
  - Org.BouncyCastle.Crypto.Tls.NewSessionTicket.mTicketLifetimeHint
  - Org.BouncyCastle.Crypto.Tls.NewSessionTicket.Parse(Stream)
  - Org.BouncyCastle.Crypto.Tls.NewSessionTicket.Ticket
  - Org.BouncyCastle.Crypto.Tls.NewSessionTicket.TicketLifetimeHint
  langs:
  - csharp
  - vb
  name: NewSessionTicket
  nameWithType: NewSessionTicket
  fullName: Org.BouncyCastle.Crypto.Tls.NewSessionTicket
  type: Class
  source:
    id: NewSessionTicket
    path: ''
    startLine: 130393
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Tls
  syntax:
    content: public class NewSessionTicket
    content.vb: Public Class NewSessionTicket
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ToString
  - System.Object.ReferenceEquals(System.Object,System.Object)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Org.BouncyCastle.Crypto.Tls.NewSessionTicket.mTicketLifetimeHint
  commentId: F:Org.BouncyCastle.Crypto.Tls.NewSessionTicket.mTicketLifetimeHint
  id: mTicketLifetimeHint
  parent: Org.BouncyCastle.Crypto.Tls.NewSessionTicket
  langs:
  - csharp
  - vb
  name: mTicketLifetimeHint
  nameWithType: NewSessionTicket.mTicketLifetimeHint
  fullName: Org.BouncyCastle.Crypto.Tls.NewSessionTicket.mTicketLifetimeHint
  type: Field
  source:
    id: mTicketLifetimeHint
    path: ''
    startLine: 130395
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Tls
  syntax:
    content: protected readonly long mTicketLifetimeHint
    return:
      type: System.Int64
    content.vb: Protected ReadOnly mTicketLifetimeHint As Long
  modifiers.csharp:
  - protected
  - readonly
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: Org.BouncyCastle.Crypto.Tls.NewSessionTicket.mTicket
  commentId: F:Org.BouncyCastle.Crypto.Tls.NewSessionTicket.mTicket
  id: mTicket
  parent: Org.BouncyCastle.Crypto.Tls.NewSessionTicket
  langs:
  - csharp
  - vb
  name: mTicket
  nameWithType: NewSessionTicket.mTicket
  fullName: Org.BouncyCastle.Crypto.Tls.NewSessionTicket.mTicket
  type: Field
  source:
    id: mTicket
    path: ''
    startLine: 130396
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Tls
  syntax:
    content: protected readonly byte[] mTicket
    return:
      type: System.Byte[]
    content.vb: Protected ReadOnly mTicket As Byte()
  modifiers.csharp:
  - protected
  - readonly
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: Org.BouncyCastle.Crypto.Tls.NewSessionTicket.#ctor(System.Int64,System.Byte[])
  commentId: M:Org.BouncyCastle.Crypto.Tls.NewSessionTicket.#ctor(System.Int64,System.Byte[])
  id: '#ctor(System.Int64,System.Byte[])'
  parent: Org.BouncyCastle.Crypto.Tls.NewSessionTicket
  langs:
  - csharp
  - vb
  name: NewSessionTicket(Int64, Byte[])
  nameWithType: NewSessionTicket.NewSessionTicket(Int64, Byte[])
  fullName: Org.BouncyCastle.Crypto.Tls.NewSessionTicket.NewSessionTicket(System.Int64, System.Byte[])
  type: Constructor
  source:
    id: .ctor
    path: ''
    startLine: 130398
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Tls
  syntax:
    content: public NewSessionTicket(long ticketLifetimeHint, byte[] ticket)
    parameters:
    - id: ticketLifetimeHint
      type: System.Int64
    - id: ticket
      type: System.Byte[]
    content.vb: Public Sub New(ticketLifetimeHint As Long, ticket As Byte())
  overload: Org.BouncyCastle.Crypto.Tls.NewSessionTicket.#ctor*
  nameWithType.vb: NewSessionTicket.NewSessionTicket(Int64, Byte())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Org.BouncyCastle.Crypto.Tls.NewSessionTicket.NewSessionTicket(System.Int64, System.Byte())
  name.vb: NewSessionTicket(Int64, Byte())
- uid: Org.BouncyCastle.Crypto.Tls.NewSessionTicket.TicketLifetimeHint
  commentId: P:Org.BouncyCastle.Crypto.Tls.NewSessionTicket.TicketLifetimeHint
  id: TicketLifetimeHint
  parent: Org.BouncyCastle.Crypto.Tls.NewSessionTicket
  langs:
  - csharp
  - vb
  name: TicketLifetimeHint
  nameWithType: NewSessionTicket.TicketLifetimeHint
  fullName: Org.BouncyCastle.Crypto.Tls.NewSessionTicket.TicketLifetimeHint
  type: Property
  source:
    id: TicketLifetimeHint
    path: ''
    startLine: 130404
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Tls
  syntax:
    content: public virtual long TicketLifetimeHint { get; }
    parameters: []
    return:
      type: System.Int64
    content.vb: Public Overridable ReadOnly Property TicketLifetimeHint As Long
  overload: Org.BouncyCastle.Crypto.Tls.NewSessionTicket.TicketLifetimeHint*
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: Org.BouncyCastle.Crypto.Tls.NewSessionTicket.Ticket
  commentId: P:Org.BouncyCastle.Crypto.Tls.NewSessionTicket.Ticket
  id: Ticket
  parent: Org.BouncyCastle.Crypto.Tls.NewSessionTicket
  langs:
  - csharp
  - vb
  name: Ticket
  nameWithType: NewSessionTicket.Ticket
  fullName: Org.BouncyCastle.Crypto.Tls.NewSessionTicket.Ticket
  type: Property
  source:
    id: Ticket
    path: ''
    startLine: 130409
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Tls
  syntax:
    content: public virtual byte[] Ticket { get; }
    parameters: []
    return:
      type: System.Byte[]
    content.vb: Public Overridable ReadOnly Property Ticket As Byte()
  overload: Org.BouncyCastle.Crypto.Tls.NewSessionTicket.Ticket*
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: Org.BouncyCastle.Crypto.Tls.NewSessionTicket.Encode(Stream)
  commentId: M:Org.BouncyCastle.Crypto.Tls.NewSessionTicket.Encode(Stream)
  id: Encode(Stream)
  parent: Org.BouncyCastle.Crypto.Tls.NewSessionTicket
  langs:
  - csharp
  - vb
  name: Encode(Stream)
  nameWithType: NewSessionTicket.Encode(Stream)
  fullName: Org.BouncyCastle.Crypto.Tls.NewSessionTicket.Encode(Stream)
  type: Method
  source:
    id: Encode
    path: ''
    startLine: 130420
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Tls
  example: []
  syntax:
    content: public virtual void Encode(Stream output)
    parameters:
    - id: output
      type: Stream
    content.vb: Public Overridable Sub Encode(output As Stream)
  overload: Org.BouncyCastle.Crypto.Tls.NewSessionTicket.Encode*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Org.BouncyCastle.Crypto.Tls.NewSessionTicket.Parse(Stream)
  commentId: M:Org.BouncyCastle.Crypto.Tls.NewSessionTicket.Parse(Stream)
  id: Parse(Stream)
  parent: Org.BouncyCastle.Crypto.Tls.NewSessionTicket
  langs:
  - csharp
  - vb
  name: Parse(Stream)
  nameWithType: NewSessionTicket.Parse(Stream)
  fullName: Org.BouncyCastle.Crypto.Tls.NewSessionTicket.Parse(Stream)
  type: Method
  source:
    id: Parse
    path: ''
    startLine: 130433
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Tls
  example: []
  syntax:
    content: public static NewSessionTicket Parse(Stream input)
    parameters:
    - id: input
      type: Stream
    return:
      type: Org.BouncyCastle.Crypto.Tls.NewSessionTicket
    content.vb: Public Shared Function Parse(input As Stream) As NewSessionTicket
  overload: Org.BouncyCastle.Crypto.Tls.NewSessionTicket.Parse*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Org.BouncyCastle.Crypto.Tls
  commentId: N:Org.BouncyCastle.Crypto.Tls
  name: Org.BouncyCastle.Crypto.Tls
  nameWithType: Org.BouncyCastle.Crypto.Tls
  fullName: Org.BouncyCastle.Crypto.Tls
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Byte[]
  isExternal: true
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullName.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Org.BouncyCastle.Crypto.Tls.NewSessionTicket.#ctor*
  commentId: Overload:Org.BouncyCastle.Crypto.Tls.NewSessionTicket.#ctor
  name: NewSessionTicket
  nameWithType: NewSessionTicket.NewSessionTicket
  fullName: Org.BouncyCastle.Crypto.Tls.NewSessionTicket.NewSessionTicket
- uid: Org.BouncyCastle.Crypto.Tls.NewSessionTicket.TicketLifetimeHint*
  commentId: Overload:Org.BouncyCastle.Crypto.Tls.NewSessionTicket.TicketLifetimeHint
  name: TicketLifetimeHint
  nameWithType: NewSessionTicket.TicketLifetimeHint
  fullName: Org.BouncyCastle.Crypto.Tls.NewSessionTicket.TicketLifetimeHint
- uid: Org.BouncyCastle.Crypto.Tls.NewSessionTicket.Ticket*
  commentId: Overload:Org.BouncyCastle.Crypto.Tls.NewSessionTicket.Ticket
  name: Ticket
  nameWithType: NewSessionTicket.Ticket
  fullName: Org.BouncyCastle.Crypto.Tls.NewSessionTicket.Ticket
- uid: Org.BouncyCastle.Crypto.Tls.NewSessionTicket.Encode*
  commentId: Overload:Org.BouncyCastle.Crypto.Tls.NewSessionTicket.Encode
  name: Encode
  nameWithType: NewSessionTicket.Encode
  fullName: Org.BouncyCastle.Crypto.Tls.NewSessionTicket.Encode
- uid: Stream
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: Stream
- uid: Org.BouncyCastle.Crypto.Tls.NewSessionTicket.Parse*
  commentId: Overload:Org.BouncyCastle.Crypto.Tls.NewSessionTicket.Parse
  name: Parse
  nameWithType: NewSessionTicket.Parse
  fullName: Org.BouncyCastle.Crypto.Tls.NewSessionTicket.Parse
- uid: Org.BouncyCastle.Crypto.Tls.NewSessionTicket
  commentId: T:Org.BouncyCastle.Crypto.Tls.NewSessionTicket
  parent: Org.BouncyCastle.Crypto.Tls
  name: NewSessionTicket
  nameWithType: NewSessionTicket
  fullName: Org.BouncyCastle.Crypto.Tls.NewSessionTicket
