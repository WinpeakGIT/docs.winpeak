### YamlMime:ManagedReference
items:
- uid: Org.BouncyCastle.Crypto.Tls.SignatureAndHashAlgorithm
  commentId: T:Org.BouncyCastle.Crypto.Tls.SignatureAndHashAlgorithm
  id: SignatureAndHashAlgorithm
  parent: Org.BouncyCastle.Crypto.Tls
  children:
  - Org.BouncyCastle.Crypto.Tls.SignatureAndHashAlgorithm.#ctor(System.Byte,System.Byte)
  - Org.BouncyCastle.Crypto.Tls.SignatureAndHashAlgorithm.Encode(Stream)
  - Org.BouncyCastle.Crypto.Tls.SignatureAndHashAlgorithm.Equals(System.Object)
  - Org.BouncyCastle.Crypto.Tls.SignatureAndHashAlgorithm.GetHashCode
  - Org.BouncyCastle.Crypto.Tls.SignatureAndHashAlgorithm.Hash
  - Org.BouncyCastle.Crypto.Tls.SignatureAndHashAlgorithm.mHash
  - Org.BouncyCastle.Crypto.Tls.SignatureAndHashAlgorithm.mSignature
  - Org.BouncyCastle.Crypto.Tls.SignatureAndHashAlgorithm.Parse(Stream)
  - Org.BouncyCastle.Crypto.Tls.SignatureAndHashAlgorithm.Signature
  langs:
  - csharp
  - vb
  name: SignatureAndHashAlgorithm
  nameWithType: SignatureAndHashAlgorithm
  fullName: Org.BouncyCastle.Crypto.Tls.SignatureAndHashAlgorithm
  type: Class
  source:
    id: SignatureAndHashAlgorithm
    path: ''
    startLine: 118075
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Tls
  example: []
  syntax:
    content: public class SignatureAndHashAlgorithm
    content.vb: Public Class SignatureAndHashAlgorithm
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ToString
  - System.Object.ReferenceEquals(System.Object,System.Object)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Org.BouncyCastle.Crypto.Tls.SignatureAndHashAlgorithm.mHash
  commentId: F:Org.BouncyCastle.Crypto.Tls.SignatureAndHashAlgorithm.mHash
  id: mHash
  parent: Org.BouncyCastle.Crypto.Tls.SignatureAndHashAlgorithm
  langs:
  - csharp
  - vb
  name: mHash
  nameWithType: SignatureAndHashAlgorithm.mHash
  fullName: Org.BouncyCastle.Crypto.Tls.SignatureAndHashAlgorithm.mHash
  type: Field
  source:
    id: mHash
    path: ''
    startLine: 118077
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Tls
  syntax:
    content: protected readonly byte mHash
    return:
      type: System.Byte
    content.vb: Protected ReadOnly mHash As Byte
  modifiers.csharp:
  - protected
  - readonly
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: Org.BouncyCastle.Crypto.Tls.SignatureAndHashAlgorithm.mSignature
  commentId: F:Org.BouncyCastle.Crypto.Tls.SignatureAndHashAlgorithm.mSignature
  id: mSignature
  parent: Org.BouncyCastle.Crypto.Tls.SignatureAndHashAlgorithm
  langs:
  - csharp
  - vb
  name: mSignature
  nameWithType: SignatureAndHashAlgorithm.mSignature
  fullName: Org.BouncyCastle.Crypto.Tls.SignatureAndHashAlgorithm.mSignature
  type: Field
  source:
    id: mSignature
    path: ''
    startLine: 118078
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Tls
  syntax:
    content: protected readonly byte mSignature
    return:
      type: System.Byte
    content.vb: Protected ReadOnly mSignature As Byte
  modifiers.csharp:
  - protected
  - readonly
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: Org.BouncyCastle.Crypto.Tls.SignatureAndHashAlgorithm.#ctor(System.Byte,System.Byte)
  commentId: M:Org.BouncyCastle.Crypto.Tls.SignatureAndHashAlgorithm.#ctor(System.Byte,System.Byte)
  id: '#ctor(System.Byte,System.Byte)'
  parent: Org.BouncyCastle.Crypto.Tls.SignatureAndHashAlgorithm
  langs:
  - csharp
  - vb
  name: SignatureAndHashAlgorithm(Byte, Byte)
  nameWithType: SignatureAndHashAlgorithm.SignatureAndHashAlgorithm(Byte, Byte)
  fullName: Org.BouncyCastle.Crypto.Tls.SignatureAndHashAlgorithm.SignatureAndHashAlgorithm(System.Byte, System.Byte)
  type: Constructor
  source:
    id: .ctor
    path: ''
    startLine: 118084
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Tls
  example: []
  syntax:
    content: public SignatureAndHashAlgorithm(byte hash, byte signature)
    parameters:
    - id: hash
      type: System.Byte
    - id: signature
      type: System.Byte
    content.vb: Public Sub New(hash As Byte, signature As Byte)
  overload: Org.BouncyCastle.Crypto.Tls.SignatureAndHashAlgorithm.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Org.BouncyCastle.Crypto.Tls.SignatureAndHashAlgorithm.Hash
  commentId: P:Org.BouncyCastle.Crypto.Tls.SignatureAndHashAlgorithm.Hash
  id: Hash
  parent: Org.BouncyCastle.Crypto.Tls.SignatureAndHashAlgorithm
  langs:
  - csharp
  - vb
  name: Hash
  nameWithType: SignatureAndHashAlgorithm.Hash
  fullName: Org.BouncyCastle.Crypto.Tls.SignatureAndHashAlgorithm.Hash
  type: Property
  source:
    id: Hash
    path: ''
    startLine: 118106
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Tls
  example: []
  syntax:
    content: public virtual byte Hash { get; }
    parameters: []
    return:
      type: System.Byte
    content.vb: Public Overridable ReadOnly Property Hash As Byte
  overload: Org.BouncyCastle.Crypto.Tls.SignatureAndHashAlgorithm.Hash*
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: Org.BouncyCastle.Crypto.Tls.SignatureAndHashAlgorithm.Signature
  commentId: P:Org.BouncyCastle.Crypto.Tls.SignatureAndHashAlgorithm.Signature
  id: Signature
  parent: Org.BouncyCastle.Crypto.Tls.SignatureAndHashAlgorithm
  langs:
  - csharp
  - vb
  name: Signature
  nameWithType: SignatureAndHashAlgorithm.Signature
  fullName: Org.BouncyCastle.Crypto.Tls.SignatureAndHashAlgorithm.Signature
  type: Property
  source:
    id: Signature
    path: ''
    startLine: 118114
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Tls
  example: []
  syntax:
    content: public virtual byte Signature { get; }
    parameters: []
    return:
      type: System.Byte
    content.vb: Public Overridable ReadOnly Property Signature As Byte
  overload: Org.BouncyCastle.Crypto.Tls.SignatureAndHashAlgorithm.Signature*
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: Org.BouncyCastle.Crypto.Tls.SignatureAndHashAlgorithm.Equals(System.Object)
  commentId: M:Org.BouncyCastle.Crypto.Tls.SignatureAndHashAlgorithm.Equals(System.Object)
  id: Equals(System.Object)
  parent: Org.BouncyCastle.Crypto.Tls.SignatureAndHashAlgorithm
  langs:
  - csharp
  - vb
  name: Equals(Object)
  nameWithType: SignatureAndHashAlgorithm.Equals(Object)
  fullName: Org.BouncyCastle.Crypto.Tls.SignatureAndHashAlgorithm.Equals(System.Object)
  type: Method
  source:
    id: Equals
    path: ''
    startLine: 118119
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Tls
  syntax:
    content: public override bool Equals(object obj)
    parameters:
    - id: obj
      type: System.Object
    return:
      type: System.Boolean
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
  overridden: System.Object.Equals(System.Object)
  overload: Org.BouncyCastle.Crypto.Tls.SignatureAndHashAlgorithm.Equals*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Org.BouncyCastle.Crypto.Tls.SignatureAndHashAlgorithm.GetHashCode
  commentId: M:Org.BouncyCastle.Crypto.Tls.SignatureAndHashAlgorithm.GetHashCode
  id: GetHashCode
  parent: Org.BouncyCastle.Crypto.Tls.SignatureAndHashAlgorithm
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: SignatureAndHashAlgorithm.GetHashCode()
  fullName: Org.BouncyCastle.Crypto.Tls.SignatureAndHashAlgorithm.GetHashCode()
  type: Method
  source:
    id: GetHashCode
    path: ''
    startLine: 118129
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Tls
  syntax:
    content: public override int GetHashCode()
    return:
      type: System.Int32
    content.vb: Public Overrides Function GetHashCode As Integer
  overridden: System.Object.GetHashCode
  overload: Org.BouncyCastle.Crypto.Tls.SignatureAndHashAlgorithm.GetHashCode*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Org.BouncyCastle.Crypto.Tls.SignatureAndHashAlgorithm.Encode(Stream)
  commentId: M:Org.BouncyCastle.Crypto.Tls.SignatureAndHashAlgorithm.Encode(Stream)
  id: Encode(Stream)
  parent: Org.BouncyCastle.Crypto.Tls.SignatureAndHashAlgorithm
  langs:
  - csharp
  - vb
  name: Encode(Stream)
  nameWithType: SignatureAndHashAlgorithm.Encode(Stream)
  fullName: Org.BouncyCastle.Crypto.Tls.SignatureAndHashAlgorithm.Encode(Stream)
  type: Method
  source:
    id: Encode
    path: ''
    startLine: 118140
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Tls
  example: []
  syntax:
    content: public virtual void Encode(Stream output)
    parameters:
    - id: output
      type: Stream
    content.vb: Public Overridable Sub Encode(output As Stream)
  overload: Org.BouncyCastle.Crypto.Tls.SignatureAndHashAlgorithm.Encode*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Org.BouncyCastle.Crypto.Tls.SignatureAndHashAlgorithm.Parse(Stream)
  commentId: M:Org.BouncyCastle.Crypto.Tls.SignatureAndHashAlgorithm.Parse(Stream)
  id: Parse(Stream)
  parent: Org.BouncyCastle.Crypto.Tls.SignatureAndHashAlgorithm
  langs:
  - csharp
  - vb
  name: Parse(Stream)
  nameWithType: SignatureAndHashAlgorithm.Parse(Stream)
  fullName: Org.BouncyCastle.Crypto.Tls.SignatureAndHashAlgorithm.Parse(Stream)
  type: Method
  source:
    id: Parse
    path: ''
    startLine: 118153
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Tls
  example: []
  syntax:
    content: public static SignatureAndHashAlgorithm Parse(Stream input)
    parameters:
    - id: input
      type: Stream
    return:
      type: Org.BouncyCastle.Crypto.Tls.SignatureAndHashAlgorithm
    content.vb: Public Shared Function Parse(input As Stream) As SignatureAndHashAlgorithm
  overload: Org.BouncyCastle.Crypto.Tls.SignatureAndHashAlgorithm.Parse*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Org.BouncyCastle.Crypto.Tls
  commentId: N:Org.BouncyCastle.Crypto.Tls
  name: Org.BouncyCastle.Crypto.Tls
  nameWithType: Org.BouncyCastle.Crypto.Tls
  fullName: Org.BouncyCastle.Crypto.Tls
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Byte
  commentId: T:System.Byte
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte
- uid: Org.BouncyCastle.Crypto.Tls.SignatureAndHashAlgorithm.#ctor*
  commentId: Overload:Org.BouncyCastle.Crypto.Tls.SignatureAndHashAlgorithm.#ctor
  name: SignatureAndHashAlgorithm
  nameWithType: SignatureAndHashAlgorithm.SignatureAndHashAlgorithm
  fullName: Org.BouncyCastle.Crypto.Tls.SignatureAndHashAlgorithm.SignatureAndHashAlgorithm
- uid: Org.BouncyCastle.Crypto.Tls.SignatureAndHashAlgorithm.Hash*
  commentId: Overload:Org.BouncyCastle.Crypto.Tls.SignatureAndHashAlgorithm.Hash
  name: Hash
  nameWithType: SignatureAndHashAlgorithm.Hash
  fullName: Org.BouncyCastle.Crypto.Tls.SignatureAndHashAlgorithm.Hash
- uid: Org.BouncyCastle.Crypto.Tls.SignatureAndHashAlgorithm.Signature*
  commentId: Overload:Org.BouncyCastle.Crypto.Tls.SignatureAndHashAlgorithm.Signature
  name: Signature
  nameWithType: SignatureAndHashAlgorithm.Signature
  fullName: Org.BouncyCastle.Crypto.Tls.SignatureAndHashAlgorithm.Signature
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Org.BouncyCastle.Crypto.Tls.SignatureAndHashAlgorithm.Equals*
  commentId: Overload:Org.BouncyCastle.Crypto.Tls.SignatureAndHashAlgorithm.Equals
  name: Equals
  nameWithType: SignatureAndHashAlgorithm.Equals
  fullName: Org.BouncyCastle.Crypto.Tls.SignatureAndHashAlgorithm.Equals
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Org.BouncyCastle.Crypto.Tls.SignatureAndHashAlgorithm.GetHashCode*
  commentId: Overload:Org.BouncyCastle.Crypto.Tls.SignatureAndHashAlgorithm.GetHashCode
  name: GetHashCode
  nameWithType: SignatureAndHashAlgorithm.GetHashCode
  fullName: Org.BouncyCastle.Crypto.Tls.SignatureAndHashAlgorithm.GetHashCode
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Org.BouncyCastle.Crypto.Tls.SignatureAndHashAlgorithm.Encode*
  commentId: Overload:Org.BouncyCastle.Crypto.Tls.SignatureAndHashAlgorithm.Encode
  name: Encode
  nameWithType: SignatureAndHashAlgorithm.Encode
  fullName: Org.BouncyCastle.Crypto.Tls.SignatureAndHashAlgorithm.Encode
- uid: Stream
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: Stream
- uid: Org.BouncyCastle.Crypto.Tls.SignatureAndHashAlgorithm.Parse*
  commentId: Overload:Org.BouncyCastle.Crypto.Tls.SignatureAndHashAlgorithm.Parse
  name: Parse
  nameWithType: SignatureAndHashAlgorithm.Parse
  fullName: Org.BouncyCastle.Crypto.Tls.SignatureAndHashAlgorithm.Parse
- uid: Org.BouncyCastle.Crypto.Tls.SignatureAndHashAlgorithm
  commentId: T:Org.BouncyCastle.Crypto.Tls.SignatureAndHashAlgorithm
  parent: Org.BouncyCastle.Crypto.Tls
  name: SignatureAndHashAlgorithm
  nameWithType: SignatureAndHashAlgorithm
  fullName: Org.BouncyCastle.Crypto.Tls.SignatureAndHashAlgorithm
