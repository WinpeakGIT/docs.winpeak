### YamlMime:ManagedReference
items:
- uid: Org.BouncyCastle.Math.Field.IPolynomial
  commentId: T:Org.BouncyCastle.Math.Field.IPolynomial
  id: IPolynomial
  parent: Org.BouncyCastle.Math.Field
  children:
  - Org.BouncyCastle.Math.Field.IPolynomial.Degree
  - Org.BouncyCastle.Math.Field.IPolynomial.GetExponentsPresent
  langs:
  - csharp
  - vb
  name: IPolynomial
  nameWithType: IPolynomial
  fullName: Org.BouncyCastle.Math.Field.IPolynomial
  type: Interface
  source:
    id: IPolynomial
    path: ''
    startLine: 50119
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Math.Field
  syntax:
    content: public interface IPolynomial
    content.vb: Public Interface IPolynomial
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Org.BouncyCastle.Math.Field.IPolynomial.Degree
  commentId: P:Org.BouncyCastle.Math.Field.IPolynomial.Degree
  id: Degree
  parent: Org.BouncyCastle.Math.Field.IPolynomial
  langs:
  - csharp
  - vb
  name: Degree
  nameWithType: IPolynomial.Degree
  fullName: Org.BouncyCastle.Math.Field.IPolynomial.Degree
  type: Property
  source:
    id: Degree
    path: ''
    startLine: 50121
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Math.Field
  syntax:
    content: int Degree { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: ReadOnly Property Degree As Integer
  overload: Org.BouncyCastle.Math.Field.IPolynomial.Degree*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Org.BouncyCastle.Math.Field.IPolynomial.GetExponentsPresent
  commentId: M:Org.BouncyCastle.Math.Field.IPolynomial.GetExponentsPresent
  id: GetExponentsPresent
  parent: Org.BouncyCastle.Math.Field.IPolynomial
  langs:
  - csharp
  - vb
  name: GetExponentsPresent()
  nameWithType: IPolynomial.GetExponentsPresent()
  fullName: Org.BouncyCastle.Math.Field.IPolynomial.GetExponentsPresent()
  type: Method
  source:
    id: GetExponentsPresent
    path: ''
    startLine: 50125
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Math.Field
  syntax:
    content: int[] GetExponentsPresent()
    return:
      type: System.Int32[]
    content.vb: Function GetExponentsPresent As Integer()
  overload: Org.BouncyCastle.Math.Field.IPolynomial.GetExponentsPresent*
references:
- uid: Org.BouncyCastle.Math.Field
  commentId: N:Org.BouncyCastle.Math.Field
  name: Org.BouncyCastle.Math.Field
  nameWithType: Org.BouncyCastle.Math.Field
  fullName: Org.BouncyCastle.Math.Field
- uid: Org.BouncyCastle.Math.Field.IPolynomial.Degree*
  commentId: Overload:Org.BouncyCastle.Math.Field.IPolynomial.Degree
  name: Degree
  nameWithType: IPolynomial.Degree
  fullName: Org.BouncyCastle.Math.Field.IPolynomial.Degree
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Org.BouncyCastle.Math.Field.IPolynomial.GetExponentsPresent*
  commentId: Overload:Org.BouncyCastle.Math.Field.IPolynomial.GetExponentsPresent
  name: GetExponentsPresent
  nameWithType: IPolynomial.GetExponentsPresent
  fullName: Org.BouncyCastle.Math.Field.IPolynomial.GetExponentsPresent
- uid: System.Int32[]
  isExternal: true
  name: Int32[]
  nameWithType: Int32[]
  fullName: System.Int32[]
  nameWithType.vb: Int32()
  fullName.vb: System.Int32()
  name.vb: Int32()
  spec.csharp:
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
