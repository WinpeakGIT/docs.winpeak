### YamlMime:ManagedReference
items:
- uid: BestHTTP.Extensions.Extensions
  commentId: T:BestHTTP.Extensions.Extensions
  id: Extensions
  parent: BestHTTP.Extensions
  children:
  - BestHTTP.Extensions.Extensions.AsciiToString(System.Byte[])
  - BestHTTP.Extensions.Extensions.CalculateMD5Hash(System.Byte[])
  - BestHTTP.Extensions.Extensions.CalculateMD5Hash(System.String)
  - BestHTTP.Extensions.Extensions.FindOption(System.String,System.String)
  - BestHTTP.Extensions.Extensions.GetASCIIBytes(System.String)
  - BestHTTP.Extensions.Extensions.GetRequestPathAndQueryURL(System.Uri)
  - BestHTTP.Extensions.Extensions.ReadBuffer(Stream,System.Byte[])
  - BestHTTP.Extensions.Extensions.SendAsASCII(BinaryWriter,System.String)
  - BestHTTP.Extensions.Extensions.ToDateTime(System.String,System.DateTime)
  - BestHTTP.Extensions.Extensions.ToInt32(System.String,System.Int32)
  - BestHTTP.Extensions.Extensions.ToInt64(System.String,System.Int64)
  - BestHTTP.Extensions.Extensions.ToStrOrEmpty(System.String)
  - BestHTTP.Extensions.Extensions.WriteAll(MemoryStream,System.Byte[])
  - BestHTTP.Extensions.Extensions.WriteArray(Stream,System.Byte[])
  - BestHTTP.Extensions.Extensions.WriteLine(FileStream)
  - BestHTTP.Extensions.Extensions.WriteLine(FileStream,System.String)
  - BestHTTP.Extensions.Extensions.WriteLine(FileStream,System.String,System.Object[])
  - BestHTTP.Extensions.Extensions.WriteLine(MemoryStream)
  - BestHTTP.Extensions.Extensions.WriteLine(MemoryStream,System.String)
  - BestHTTP.Extensions.Extensions.WriteString(MemoryStream,System.String)
  langs:
  - csharp
  - vb
  name: Extensions
  nameWithType: Extensions
  fullName: BestHTTP.Extensions.Extensions
  type: Class
  source:
    id: Extensions
    path: ''
    startLine: 24110
  assemblies:
  - cs.temp.dll
  namespace: BestHTTP.Extensions
  syntax:
    content: public static class Extensions
    content.vb: Public Module Extensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ToString
  - System.Object.ReferenceEquals(System.Object,System.Object)
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: BestHTTP.Extensions.Extensions.AsciiToString(System.Byte[])
  commentId: M:BestHTTP.Extensions.Extensions.AsciiToString(System.Byte[])
  id: AsciiToString(System.Byte[])
  isExtensionMethod: true
  parent: BestHTTP.Extensions.Extensions
  langs:
  - csharp
  - vb
  name: AsciiToString(Byte[])
  nameWithType: Extensions.AsciiToString(Byte[])
  fullName: BestHTTP.Extensions.Extensions.AsciiToString(System.Byte[])
  type: Method
  source:
    id: AsciiToString
    path: ''
    startLine: 24117
  assemblies:
  - cs.temp.dll
  namespace: BestHTTP.Extensions
  summary: "\nOn WP8 platform there are no ASCII encoding.\n"
  example: []
  syntax:
    content: public static string AsciiToString(this byte[] bytes)
    parameters:
    - id: bytes
      type: System.Byte[]
    return:
      type: System.String
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function AsciiToString(bytes As Byte()) As String
  overload: BestHTTP.Extensions.Extensions.AsciiToString*
  nameWithType.vb: Extensions.AsciiToString(Byte())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: BestHTTP.Extensions.Extensions.AsciiToString(System.Byte())
  name.vb: AsciiToString(Byte())
- uid: BestHTTP.Extensions.Extensions.GetASCIIBytes(System.String)
  commentId: M:BestHTTP.Extensions.Extensions.GetASCIIBytes(System.String)
  id: GetASCIIBytes(System.String)
  isExtensionMethod: true
  parent: BestHTTP.Extensions.Extensions
  langs:
  - csharp
  - vb
  name: GetASCIIBytes(String)
  nameWithType: Extensions.GetASCIIBytes(String)
  fullName: BestHTTP.Extensions.Extensions.GetASCIIBytes(System.String)
  type: Method
  source:
    id: GetASCIIBytes
    path: ''
    startLine: 24128
  assemblies:
  - cs.temp.dll
  namespace: BestHTTP.Extensions
  summary: "\nOn WP8 platform there are no ASCII encoding.\n"
  example: []
  syntax:
    content: public static byte[] GetASCIIBytes(this string str)
    parameters:
    - id: str
      type: System.String
    return:
      type: System.Byte[]
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetASCIIBytes(str As String) As Byte()
  overload: BestHTTP.Extensions.Extensions.GetASCIIBytes*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: BestHTTP.Extensions.Extensions.SendAsASCII(BinaryWriter,System.String)
  commentId: M:BestHTTP.Extensions.Extensions.SendAsASCII(BinaryWriter,System.String)
  id: SendAsASCII(BinaryWriter,System.String)
  isExtensionMethod: true
  parent: BestHTTP.Extensions.Extensions
  langs:
  - csharp
  - vb
  name: SendAsASCII(BinaryWriter, String)
  nameWithType: Extensions.SendAsASCII(BinaryWriter, String)
  fullName: BestHTTP.Extensions.Extensions.SendAsASCII(BinaryWriter, System.String)
  type: Method
  source:
    id: SendAsASCII
    path: ''
    startLine: 24140
  assemblies:
  - cs.temp.dll
  namespace: BestHTTP.Extensions
  syntax:
    content: public static void SendAsASCII(this BinaryWriter stream, string str)
    parameters:
    - id: stream
      type: BinaryWriter
    - id: str
      type: System.String
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Sub SendAsASCII(stream As BinaryWriter, str As String)
  overload: BestHTTP.Extensions.Extensions.SendAsASCII*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: BestHTTP.Extensions.Extensions.WriteLine(FileStream)
  commentId: M:BestHTTP.Extensions.Extensions.WriteLine(FileStream)
  id: WriteLine(FileStream)
  isExtensionMethod: true
  parent: BestHTTP.Extensions.Extensions
  langs:
  - csharp
  - vb
  name: WriteLine(FileStream)
  nameWithType: Extensions.WriteLine(FileStream)
  fullName: BestHTTP.Extensions.Extensions.WriteLine(FileStream)
  type: Method
  source:
    id: WriteLine
    path: ''
    startLine: 24154
  assemblies:
  - cs.temp.dll
  namespace: BestHTTP.Extensions
  syntax:
    content: public static void WriteLine(this FileStream fs)
    parameters:
    - id: fs
      type: FileStream
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Sub WriteLine(fs As FileStream)
  overload: BestHTTP.Extensions.Extensions.WriteLine*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: BestHTTP.Extensions.Extensions.WriteLine(FileStream,System.String)
  commentId: M:BestHTTP.Extensions.Extensions.WriteLine(FileStream,System.String)
  id: WriteLine(FileStream,System.String)
  isExtensionMethod: true
  parent: BestHTTP.Extensions.Extensions
  langs:
  - csharp
  - vb
  name: WriteLine(FileStream, String)
  nameWithType: Extensions.WriteLine(FileStream, String)
  fullName: BestHTTP.Extensions.Extensions.WriteLine(FileStream, System.String)
  type: Method
  source:
    id: WriteLine
    path: ''
    startLine: 24159
  assemblies:
  - cs.temp.dll
  namespace: BestHTTP.Extensions
  syntax:
    content: public static void WriteLine(this FileStream fs, string line)
    parameters:
    - id: fs
      type: FileStream
    - id: line
      type: System.String
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Sub WriteLine(fs As FileStream, line As String)
  overload: BestHTTP.Extensions.Extensions.WriteLine*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: BestHTTP.Extensions.Extensions.WriteLine(FileStream,System.String,System.Object[])
  commentId: M:BestHTTP.Extensions.Extensions.WriteLine(FileStream,System.String,System.Object[])
  id: WriteLine(FileStream,System.String,System.Object[])
  isExtensionMethod: true
  parent: BestHTTP.Extensions.Extensions
  langs:
  - csharp
  - vb
  name: WriteLine(FileStream, String, Object[])
  nameWithType: Extensions.WriteLine(FileStream, String, Object[])
  fullName: BestHTTP.Extensions.Extensions.WriteLine(FileStream, System.String, System.Object[])
  type: Method
  source:
    id: WriteLine
    path: ''
    startLine: 24166
  assemblies:
  - cs.temp.dll
  namespace: BestHTTP.Extensions
  syntax:
    content: public static void WriteLine(this FileStream fs, string format, params object[] values)
    parameters:
    - id: fs
      type: FileStream
    - id: format
      type: System.String
    - id: values
      type: System.Object[]
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Sub WriteLine(fs As FileStream, format As String, ParamArray values As Object())
  overload: BestHTTP.Extensions.Extensions.WriteLine*
  nameWithType.vb: Extensions.WriteLine(FileStream, String, Object())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: BestHTTP.Extensions.Extensions.WriteLine(FileStream, System.String, System.Object())
  name.vb: WriteLine(FileStream, String, Object())
- uid: BestHTTP.Extensions.Extensions.GetRequestPathAndQueryURL(System.Uri)
  commentId: M:BestHTTP.Extensions.Extensions.GetRequestPathAndQueryURL(System.Uri)
  id: GetRequestPathAndQueryURL(System.Uri)
  isExtensionMethod: true
  parent: BestHTTP.Extensions.Extensions
  langs:
  - csharp
  - vb
  name: GetRequestPathAndQueryURL(Uri)
  nameWithType: Extensions.GetRequestPathAndQueryURL(Uri)
  fullName: BestHTTP.Extensions.Extensions.GetRequestPathAndQueryURL(System.Uri)
  type: Method
  source:
    id: GetRequestPathAndQueryURL
    path: ''
    startLine: 24177
  assemblies:
  - cs.temp.dll
  namespace: BestHTTP.Extensions
  syntax:
    content: public static string GetRequestPathAndQueryURL(this Uri uri)
    parameters:
    - id: uri
      type: System.Uri
    return:
      type: System.String
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetRequestPathAndQueryURL(uri As Uri) As String
  overload: BestHTTP.Extensions.Extensions.GetRequestPathAndQueryURL*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: BestHTTP.Extensions.Extensions.FindOption(System.String,System.String)
  commentId: M:BestHTTP.Extensions.Extensions.FindOption(System.String,System.String)
  id: FindOption(System.String,System.String)
  isExtensionMethod: true
  parent: BestHTTP.Extensions.Extensions
  langs:
  - csharp
  - vb
  name: FindOption(String, String)
  nameWithType: Extensions.FindOption(String, String)
  fullName: BestHTTP.Extensions.Extensions.FindOption(System.String, System.String)
  type: Method
  source:
    id: FindOption
    path: ''
    startLine: 24188
  assemblies:
  - cs.temp.dll
  namespace: BestHTTP.Extensions
  syntax:
    content: public static string[] FindOption(this string str, string option)
    parameters:
    - id: str
      type: System.String
    - id: option
      type: System.String
    return:
      type: System.String[]
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function FindOption(str As String, option As String) As String()
  overload: BestHTTP.Extensions.Extensions.FindOption*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: BestHTTP.Extensions.Extensions.WriteArray(Stream,System.Byte[])
  commentId: M:BestHTTP.Extensions.Extensions.WriteArray(Stream,System.Byte[])
  id: WriteArray(Stream,System.Byte[])
  isExtensionMethod: true
  parent: BestHTTP.Extensions.Extensions
  langs:
  - csharp
  - vb
  name: WriteArray(Stream, Byte[])
  nameWithType: Extensions.WriteArray(Stream, Byte[])
  fullName: BestHTTP.Extensions.Extensions.WriteArray(Stream, System.Byte[])
  type: Method
  source:
    id: WriteArray
    path: ''
    startLine: 24201
  assemblies:
  - cs.temp.dll
  namespace: BestHTTP.Extensions
  syntax:
    content: public static void WriteArray(this Stream stream, byte[] array)
    parameters:
    - id: stream
      type: Stream
    - id: array
      type: System.Byte[]
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Sub WriteArray(stream As Stream, array As Byte())
  overload: BestHTTP.Extensions.Extensions.WriteArray*
  nameWithType.vb: Extensions.WriteArray(Stream, Byte())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: BestHTTP.Extensions.Extensions.WriteArray(Stream, System.Byte())
  name.vb: WriteArray(Stream, Byte())
- uid: BestHTTP.Extensions.Extensions.ToInt32(System.String,System.Int32)
  commentId: M:BestHTTP.Extensions.Extensions.ToInt32(System.String,System.Int32)
  id: ToInt32(System.String,System.Int32)
  isExtensionMethod: true
  parent: BestHTTP.Extensions.Extensions
  langs:
  - csharp
  - vb
  name: ToInt32(String, Int32)
  nameWithType: Extensions.ToInt32(String, Int32)
  fullName: BestHTTP.Extensions.Extensions.ToInt32(System.String, System.Int32)
  type: Method
  source:
    id: ToInt32
    path: ''
    startLine: 24210
  assemblies:
  - cs.temp.dll
  namespace: BestHTTP.Extensions
  syntax:
    content: public static int ToInt32(this string str, int defaultValue = 0)
    parameters:
    - id: str
      type: System.String
    - id: defaultValue
      type: System.Int32
    return:
      type: System.Int32
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ToInt32(str As String, defaultValue As Integer = 0) As Integer
  overload: BestHTTP.Extensions.Extensions.ToInt32*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: BestHTTP.Extensions.Extensions.ToInt64(System.String,System.Int64)
  commentId: M:BestHTTP.Extensions.Extensions.ToInt64(System.String,System.Int64)
  id: ToInt64(System.String,System.Int64)
  isExtensionMethod: true
  parent: BestHTTP.Extensions.Extensions
  langs:
  - csharp
  - vb
  name: ToInt64(String, Int64)
  nameWithType: Extensions.ToInt64(String, Int64)
  fullName: BestHTTP.Extensions.Extensions.ToInt64(System.String, System.Int64)
  type: Method
  source:
    id: ToInt64
    path: ''
    startLine: 24225
  assemblies:
  - cs.temp.dll
  namespace: BestHTTP.Extensions
  syntax:
    content: public static long ToInt64(this string str, long defaultValue = 0L)
    parameters:
    - id: str
      type: System.String
    - id: defaultValue
      type: System.Int64
    return:
      type: System.Int64
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ToInt64(str As String, defaultValue As Long = 0L) As Long
  overload: BestHTTP.Extensions.Extensions.ToInt64*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: BestHTTP.Extensions.Extensions.ToDateTime(System.String,System.DateTime)
  commentId: M:BestHTTP.Extensions.Extensions.ToDateTime(System.String,System.DateTime)
  id: ToDateTime(System.String,System.DateTime)
  isExtensionMethod: true
  parent: BestHTTP.Extensions.Extensions
  langs:
  - csharp
  - vb
  name: ToDateTime(String, DateTime)
  nameWithType: Extensions.ToDateTime(String, DateTime)
  fullName: BestHTTP.Extensions.Extensions.ToDateTime(System.String, System.DateTime)
  type: Method
  source:
    id: ToDateTime
    path: ''
    startLine: 24240
  assemblies:
  - cs.temp.dll
  namespace: BestHTTP.Extensions
  syntax:
    content: public static DateTime ToDateTime(this string str, DateTime defaultValue = default(DateTime))
    parameters:
    - id: str
      type: System.String
    - id: defaultValue
      type: System.DateTime
    return:
      type: System.DateTime
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ToDateTime(str As String, defaultValue As Date = Nothing) As Date
  overload: BestHTTP.Extensions.Extensions.ToDateTime*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: BestHTTP.Extensions.Extensions.ToStrOrEmpty(System.String)
  commentId: M:BestHTTP.Extensions.Extensions.ToStrOrEmpty(System.String)
  id: ToStrOrEmpty(System.String)
  isExtensionMethod: true
  parent: BestHTTP.Extensions.Extensions
  langs:
  - csharp
  - vb
  name: ToStrOrEmpty(String)
  nameWithType: Extensions.ToStrOrEmpty(String)
  fullName: BestHTTP.Extensions.Extensions.ToStrOrEmpty(System.String)
  type: Method
  source:
    id: ToStrOrEmpty
    path: ''
    startLine: 24256
  assemblies:
  - cs.temp.dll
  namespace: BestHTTP.Extensions
  syntax:
    content: public static string ToStrOrEmpty(this string str)
    parameters:
    - id: str
      type: System.String
    return:
      type: System.String
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ToStrOrEmpty(str As String) As String
  overload: BestHTTP.Extensions.Extensions.ToStrOrEmpty*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: BestHTTP.Extensions.Extensions.CalculateMD5Hash(System.String)
  commentId: M:BestHTTP.Extensions.Extensions.CalculateMD5Hash(System.String)
  id: CalculateMD5Hash(System.String)
  isExtensionMethod: true
  parent: BestHTTP.Extensions.Extensions
  langs:
  - csharp
  - vb
  name: CalculateMD5Hash(String)
  nameWithType: Extensions.CalculateMD5Hash(String)
  fullName: BestHTTP.Extensions.Extensions.CalculateMD5Hash(System.String)
  type: Method
  source:
    id: CalculateMD5Hash
    path: ''
    startLine: 24268
  assemblies:
  - cs.temp.dll
  namespace: BestHTTP.Extensions
  syntax:
    content: public static string CalculateMD5Hash(this string input)
    parameters:
    - id: input
      type: System.String
    return:
      type: System.String
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function CalculateMD5Hash(input As String) As String
  overload: BestHTTP.Extensions.Extensions.CalculateMD5Hash*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: BestHTTP.Extensions.Extensions.CalculateMD5Hash(System.Byte[])
  commentId: M:BestHTTP.Extensions.Extensions.CalculateMD5Hash(System.Byte[])
  id: CalculateMD5Hash(System.Byte[])
  isExtensionMethod: true
  parent: BestHTTP.Extensions.Extensions
  langs:
  - csharp
  - vb
  name: CalculateMD5Hash(Byte[])
  nameWithType: Extensions.CalculateMD5Hash(Byte[])
  fullName: BestHTTP.Extensions.Extensions.CalculateMD5Hash(System.Byte[])
  type: Method
  source:
    id: CalculateMD5Hash
    path: ''
    startLine: 24273
  assemblies:
  - cs.temp.dll
  namespace: BestHTTP.Extensions
  syntax:
    content: public static string CalculateMD5Hash(this byte[] input)
    parameters:
    - id: input
      type: System.Byte[]
    return:
      type: System.String
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function CalculateMD5Hash(input As Byte()) As String
  overload: BestHTTP.Extensions.Extensions.CalculateMD5Hash*
  nameWithType.vb: Extensions.CalculateMD5Hash(Byte())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: BestHTTP.Extensions.Extensions.CalculateMD5Hash(System.Byte())
  name.vb: CalculateMD5Hash(Byte())
- uid: BestHTTP.Extensions.Extensions.ReadBuffer(Stream,System.Byte[])
  commentId: M:BestHTTP.Extensions.Extensions.ReadBuffer(Stream,System.Byte[])
  id: ReadBuffer(Stream,System.Byte[])
  isExtensionMethod: true
  parent: BestHTTP.Extensions.Extensions
  langs:
  - csharp
  - vb
  name: ReadBuffer(Stream, Byte[])
  nameWithType: Extensions.ReadBuffer(Stream, Byte[])
  fullName: BestHTTP.Extensions.Extensions.ReadBuffer(Stream, System.Byte[])
  type: Method
  source:
    id: ReadBuffer
    path: ''
    startLine: 24443
  assemblies:
  - cs.temp.dll
  namespace: BestHTTP.Extensions
  summary: "\nWill fill the entire buffer from the stream. Will throw an exception when the underlying stream is closed.\n"
  example: []
  syntax:
    content: public static void ReadBuffer(this Stream stream, byte[] buffer)
    parameters:
    - id: stream
      type: Stream
    - id: buffer
      type: System.Byte[]
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Sub ReadBuffer(stream As Stream, buffer As Byte())
  overload: BestHTTP.Extensions.Extensions.ReadBuffer*
  nameWithType.vb: Extensions.ReadBuffer(Stream, Byte())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: BestHTTP.Extensions.Extensions.ReadBuffer(Stream, System.Byte())
  name.vb: ReadBuffer(Stream, Byte())
- uid: BestHTTP.Extensions.Extensions.WriteAll(MemoryStream,System.Byte[])
  commentId: M:BestHTTP.Extensions.Extensions.WriteAll(MemoryStream,System.Byte[])
  id: WriteAll(MemoryStream,System.Byte[])
  isExtensionMethod: true
  parent: BestHTTP.Extensions.Extensions
  langs:
  - csharp
  - vb
  name: WriteAll(MemoryStream, Byte[])
  nameWithType: Extensions.WriteAll(MemoryStream, Byte[])
  fullName: BestHTTP.Extensions.Extensions.WriteAll(MemoryStream, System.Byte[])
  type: Method
  source:
    id: WriteAll
    path: ''
    startLine: 24462
  assemblies:
  - cs.temp.dll
  namespace: BestHTTP.Extensions
  syntax:
    content: public static void WriteAll(this MemoryStream ms, byte[] buffer)
    parameters:
    - id: ms
      type: MemoryStream
    - id: buffer
      type: System.Byte[]
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Sub WriteAll(ms As MemoryStream, buffer As Byte())
  overload: BestHTTP.Extensions.Extensions.WriteAll*
  nameWithType.vb: Extensions.WriteAll(MemoryStream, Byte())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: BestHTTP.Extensions.Extensions.WriteAll(MemoryStream, System.Byte())
  name.vb: WriteAll(MemoryStream, Byte())
- uid: BestHTTP.Extensions.Extensions.WriteString(MemoryStream,System.String)
  commentId: M:BestHTTP.Extensions.Extensions.WriteString(MemoryStream,System.String)
  id: WriteString(MemoryStream,System.String)
  isExtensionMethod: true
  parent: BestHTTP.Extensions.Extensions
  langs:
  - csharp
  - vb
  name: WriteString(MemoryStream, String)
  nameWithType: Extensions.WriteString(MemoryStream, String)
  fullName: BestHTTP.Extensions.Extensions.WriteString(MemoryStream, System.String)
  type: Method
  source:
    id: WriteString
    path: ''
    startLine: 24467
  assemblies:
  - cs.temp.dll
  namespace: BestHTTP.Extensions
  syntax:
    content: public static void WriteString(this MemoryStream ms, string str)
    parameters:
    - id: ms
      type: MemoryStream
    - id: str
      type: System.String
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Sub WriteString(ms As MemoryStream, str As String)
  overload: BestHTTP.Extensions.Extensions.WriteString*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: BestHTTP.Extensions.Extensions.WriteLine(MemoryStream)
  commentId: M:BestHTTP.Extensions.Extensions.WriteLine(MemoryStream)
  id: WriteLine(MemoryStream)
  isExtensionMethod: true
  parent: BestHTTP.Extensions.Extensions
  langs:
  - csharp
  - vb
  name: WriteLine(MemoryStream)
  nameWithType: Extensions.WriteLine(MemoryStream)
  fullName: BestHTTP.Extensions.Extensions.WriteLine(MemoryStream)
  type: Method
  source:
    id: WriteLine
    path: ''
    startLine: 24473
  assemblies:
  - cs.temp.dll
  namespace: BestHTTP.Extensions
  syntax:
    content: public static void WriteLine(this MemoryStream ms)
    parameters:
    - id: ms
      type: MemoryStream
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Sub WriteLine(ms As MemoryStream)
  overload: BestHTTP.Extensions.Extensions.WriteLine*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: BestHTTP.Extensions.Extensions.WriteLine(MemoryStream,System.String)
  commentId: M:BestHTTP.Extensions.Extensions.WriteLine(MemoryStream,System.String)
  id: WriteLine(MemoryStream,System.String)
  isExtensionMethod: true
  parent: BestHTTP.Extensions.Extensions
  langs:
  - csharp
  - vb
  name: WriteLine(MemoryStream, String)
  nameWithType: Extensions.WriteLine(MemoryStream, String)
  fullName: BestHTTP.Extensions.Extensions.WriteLine(MemoryStream, System.String)
  type: Method
  source:
    id: WriteLine
    path: ''
    startLine: 24478
  assemblies:
  - cs.temp.dll
  namespace: BestHTTP.Extensions
  syntax:
    content: public static void WriteLine(this MemoryStream ms, string str)
    parameters:
    - id: ms
      type: MemoryStream
    - id: str
      type: System.String
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Sub WriteLine(ms As MemoryStream, str As String)
  overload: BestHTTP.Extensions.Extensions.WriteLine*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: BestHTTP.Extensions
  commentId: N:BestHTTP.Extensions
  name: BestHTTP.Extensions
  nameWithType: BestHTTP.Extensions
  fullName: BestHTTP.Extensions
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: BestHTTP.Extensions.Extensions.AsciiToString*
  commentId: Overload:BestHTTP.Extensions.Extensions.AsciiToString
  name: AsciiToString
  nameWithType: Extensions.AsciiToString
  fullName: BestHTTP.Extensions.Extensions.AsciiToString
- uid: System.Byte[]
  isExternal: true
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullName.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: BestHTTP.Extensions.Extensions.GetASCIIBytes*
  commentId: Overload:BestHTTP.Extensions.Extensions.GetASCIIBytes
  name: GetASCIIBytes
  nameWithType: Extensions.GetASCIIBytes
  fullName: BestHTTP.Extensions.Extensions.GetASCIIBytes
- uid: BestHTTP.Extensions.Extensions.SendAsASCII*
  commentId: Overload:BestHTTP.Extensions.Extensions.SendAsASCII
  name: SendAsASCII
  nameWithType: Extensions.SendAsASCII
  fullName: BestHTTP.Extensions.Extensions.SendAsASCII
- uid: BinaryWriter
  commentId: '!:BinaryWriter'
  isExternal: true
  name: BinaryWriter
  nameWithType: BinaryWriter
  fullName: BinaryWriter
- uid: BestHTTP.Extensions.Extensions.WriteLine*
  commentId: Overload:BestHTTP.Extensions.Extensions.WriteLine
  name: WriteLine
  nameWithType: Extensions.WriteLine
  fullName: BestHTTP.Extensions.Extensions.WriteLine
- uid: FileStream
  isExternal: true
  name: FileStream
  nameWithType: FileStream
  fullName: FileStream
- uid: System.Object[]
  isExternal: true
  name: Object[]
  nameWithType: Object[]
  fullName: System.Object[]
  nameWithType.vb: Object()
  fullName.vb: System.Object()
  name.vb: Object()
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: BestHTTP.Extensions.Extensions.GetRequestPathAndQueryURL*
  commentId: Overload:BestHTTP.Extensions.Extensions.GetRequestPathAndQueryURL
  name: GetRequestPathAndQueryURL
  nameWithType: Extensions.GetRequestPathAndQueryURL
  fullName: BestHTTP.Extensions.Extensions.GetRequestPathAndQueryURL
- uid: System.Uri
  commentId: T:System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: BestHTTP.Extensions.Extensions.FindOption*
  commentId: Overload:BestHTTP.Extensions.Extensions.FindOption
  name: FindOption
  nameWithType: Extensions.FindOption
  fullName: BestHTTP.Extensions.Extensions.FindOption
- uid: System.String[]
  isExternal: true
  name: String[]
  nameWithType: String[]
  fullName: System.String[]
  nameWithType.vb: String()
  fullName.vb: System.String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: BestHTTP.Extensions.Extensions.WriteArray*
  commentId: Overload:BestHTTP.Extensions.Extensions.WriteArray
  name: WriteArray
  nameWithType: Extensions.WriteArray
  fullName: BestHTTP.Extensions.Extensions.WriteArray
- uid: Stream
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: Stream
- uid: BestHTTP.Extensions.Extensions.ToInt32*
  commentId: Overload:BestHTTP.Extensions.Extensions.ToInt32
  name: ToInt32
  nameWithType: Extensions.ToInt32
  fullName: BestHTTP.Extensions.Extensions.ToInt32
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: BestHTTP.Extensions.Extensions.ToInt64*
  commentId: Overload:BestHTTP.Extensions.Extensions.ToInt64
  name: ToInt64
  nameWithType: Extensions.ToInt64
  fullName: BestHTTP.Extensions.Extensions.ToInt64
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: BestHTTP.Extensions.Extensions.ToDateTime*
  commentId: Overload:BestHTTP.Extensions.Extensions.ToDateTime
  name: ToDateTime
  nameWithType: Extensions.ToDateTime
  fullName: BestHTTP.Extensions.Extensions.ToDateTime
- uid: System.DateTime
  commentId: T:System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: BestHTTP.Extensions.Extensions.ToStrOrEmpty*
  commentId: Overload:BestHTTP.Extensions.Extensions.ToStrOrEmpty
  name: ToStrOrEmpty
  nameWithType: Extensions.ToStrOrEmpty
  fullName: BestHTTP.Extensions.Extensions.ToStrOrEmpty
- uid: BestHTTP.Extensions.Extensions.CalculateMD5Hash*
  commentId: Overload:BestHTTP.Extensions.Extensions.CalculateMD5Hash
  name: CalculateMD5Hash
  nameWithType: Extensions.CalculateMD5Hash
  fullName: BestHTTP.Extensions.Extensions.CalculateMD5Hash
- uid: BestHTTP.Extensions.Extensions.ReadBuffer*
  commentId: Overload:BestHTTP.Extensions.Extensions.ReadBuffer
  name: ReadBuffer
  nameWithType: Extensions.ReadBuffer
  fullName: BestHTTP.Extensions.Extensions.ReadBuffer
- uid: BestHTTP.Extensions.Extensions.WriteAll*
  commentId: Overload:BestHTTP.Extensions.Extensions.WriteAll
  name: WriteAll
  nameWithType: Extensions.WriteAll
  fullName: BestHTTP.Extensions.Extensions.WriteAll
- uid: MemoryStream
  isExternal: true
  name: MemoryStream
  nameWithType: MemoryStream
  fullName: MemoryStream
- uid: BestHTTP.Extensions.Extensions.WriteString*
  commentId: Overload:BestHTTP.Extensions.Extensions.WriteString
  name: WriteString
  nameWithType: Extensions.WriteString
  fullName: BestHTTP.Extensions.Extensions.WriteString
