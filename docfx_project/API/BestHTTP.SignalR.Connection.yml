### YamlMime:ManagedReference
items:
- uid: BestHTTP.SignalR.Connection
  commentId: T:BestHTTP.SignalR.Connection
  id: Connection
  parent: BestHTTP.SignalR
  children:
  - BestHTTP.SignalR.Connection.#ctor(System.Uri)
  - BestHTTP.SignalR.Connection.#ctor(System.Uri,Hub[])
  - BestHTTP.SignalR.Connection.#ctor(System.Uri,System.String[])
  - BestHTTP.SignalR.Connection.AdditionalQueryParams
  - BestHTTP.SignalR.Connection.AuthenticationProvider
  - BestHTTP.SignalR.Connection.BestHTTP#SignalR#IConnection#BuildUri(BestHTTP.SignalR.RequestTypes)
  - BestHTTP.SignalR.Connection.BestHTTP#SignalR#IConnection#BuildUri(BestHTTP.SignalR.RequestTypes,TransportBase)
  - BestHTTP.SignalR.Connection.BestHTTP#SignalR#IConnection#Error(System.String)
  - BestHTTP.SignalR.Connection.BestHTTP#SignalR#IConnection#OnMessage(IServerMessage)
  - BestHTTP.SignalR.Connection.BestHTTP#SignalR#IConnection#ParseResponse(System.String)
  - BestHTTP.SignalR.Connection.BestHTTP#SignalR#IConnection#PrepareRequest(BestHTTP.HTTPRequest,BestHTTP.SignalR.RequestTypes)
  - BestHTTP.SignalR.Connection.BestHTTP#SignalR#IConnection#TransportAborted
  - BestHTTP.SignalR.Connection.BestHTTP#SignalR#IConnection#TransportReconnected
  - BestHTTP.SignalR.Connection.BestHTTP#SignalR#IConnection#TransportStarted
  - BestHTTP.SignalR.Connection.Close
  - BestHTTP.SignalR.Connection.DefaultEncoder
  - BestHTTP.SignalR.Connection.Hubs
  - BestHTTP.SignalR.Connection.Item(System.Int32)
  - BestHTTP.SignalR.Connection.Item(System.String)
  - BestHTTP.SignalR.Connection.JsonEncoder
  - BestHTTP.SignalR.Connection.NegotiationResult
  - BestHTTP.SignalR.Connection.OnClosed
  - BestHTTP.SignalR.Connection.OnConnected
  - BestHTTP.SignalR.Connection.OnError
  - BestHTTP.SignalR.Connection.OnNonHubMessage
  - BestHTTP.SignalR.Connection.OnReconnected
  - BestHTTP.SignalR.Connection.OnReconnecting
  - BestHTTP.SignalR.Connection.OnStateChanged
  - BestHTTP.SignalR.Connection.Open
  - BestHTTP.SignalR.Connection.PingInterval
  - BestHTTP.SignalR.Connection.Protocol
  - BestHTTP.SignalR.Connection.QueryParamsOnlyForHandshake
  - BestHTTP.SignalR.Connection.Reconnect
  - BestHTTP.SignalR.Connection.ReconnectDelay
  - BestHTTP.SignalR.Connection.RequestPreparator
  - BestHTTP.SignalR.Connection.Send(System.Object)
  - BestHTTP.SignalR.Connection.SendJson(System.String)
  - BestHTTP.SignalR.Connection.State
  - BestHTTP.SignalR.Connection.Transport
  - BestHTTP.SignalR.Connection.Uri
  langs:
  - csharp
  - vb
  name: Connection
  nameWithType: Connection
  fullName: BestHTTP.SignalR.Connection
  type: Class
  source:
    id: Connection
    path: ''
    startLine: 21012
  assemblies:
  - cs.temp.dll
  namespace: BestHTTP.SignalR
  summary: "\nThe main SignalR class. This is the entry point to connect to a SignalR service.\n"
  example: []
  syntax:
    content: 'public sealed class Connection : IHeartbeat, IConnection'
    content.vb: >-
      Public NotInheritable Class Connection
          Inherits IHeartbeat
          Implements IConnection
  inheritance:
  - System.Object
  implements:
  - BestHTTP.SignalR.IConnection
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: BestHTTP.SignalR.Connection.DefaultEncoder
  commentId: F:BestHTTP.SignalR.Connection.DefaultEncoder
  id: DefaultEncoder
  parent: BestHTTP.SignalR.Connection
  langs:
  - csharp
  - vb
  name: DefaultEncoder
  nameWithType: Connection.DefaultEncoder
  fullName: BestHTTP.SignalR.Connection.DefaultEncoder
  type: Field
  source:
    id: DefaultEncoder
    path: ''
    startLine: 21019
  assemblies:
  - cs.temp.dll
  namespace: BestHTTP.SignalR
  summary: "\nThe default Json encode/decoder that will be used to encode/decode the event arguments.\n"
  example: []
  syntax:
    content: public static IJsonEncoder DefaultEncoder
    return:
      type: IJsonEncoder
    content.vb: Public Shared DefaultEncoder As IJsonEncoder
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: BestHTTP.SignalR.Connection.Uri
  commentId: P:BestHTTP.SignalR.Connection.Uri
  id: Uri
  parent: BestHTTP.SignalR.Connection
  langs:
  - csharp
  - vb
  name: Uri
  nameWithType: Connection.Uri
  fullName: BestHTTP.SignalR.Connection.Uri
  type: Property
  source:
    id: Uri
    path: ''
    startLine: 21029
  assemblies:
  - cs.temp.dll
  namespace: BestHTTP.SignalR
  summary: "\nThe base url endpoint where the SignalR service can be found.\n"
  example: []
  syntax:
    content: public Uri Uri { get; }
    parameters: []
    return:
      type: System.Uri
    content.vb: Public ReadOnly Property Uri As Uri
  overload: BestHTTP.SignalR.Connection.Uri*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: BestHTTP.SignalR.Connection.State
  commentId: P:BestHTTP.SignalR.Connection.State
  id: State
  parent: BestHTTP.SignalR.Connection
  langs:
  - csharp
  - vb
  name: State
  nameWithType: Connection.State
  fullName: BestHTTP.SignalR.Connection.State
  type: Property
  source:
    id: State
    path: ''
    startLine: 21034
  assemblies:
  - cs.temp.dll
  namespace: BestHTTP.SignalR
  summary: "\nCurrent State of the SignalR connection.\n"
  example: []
  syntax:
    content: public ConnectionStates State { get; }
    parameters: []
    return:
      type: BestHTTP.SignalR.ConnectionStates
    content.vb: Public ReadOnly Property State As ConnectionStates
  overload: BestHTTP.SignalR.Connection.State*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: BestHTTP.SignalR.Connection.NegotiationResult
  commentId: P:BestHTTP.SignalR.Connection.NegotiationResult
  id: NegotiationResult
  parent: BestHTTP.SignalR.Connection
  langs:
  - csharp
  - vb
  name: NegotiationResult
  nameWithType: Connection.NegotiationResult
  fullName: BestHTTP.SignalR.Connection.NegotiationResult
  type: Property
  source:
    id: NegotiationResult
    path: ''
    startLine: 21051
  assemblies:
  - cs.temp.dll
  namespace: BestHTTP.SignalR
  summary: "\nResult of the negotiation request from the server.\n"
  example: []
  syntax:
    content: public NegotiationData NegotiationResult { get; }
    parameters: []
    return:
      type: BestHTTP.SignalR.NegotiationData
    content.vb: Public ReadOnly Property NegotiationResult As NegotiationData
  overload: BestHTTP.SignalR.Connection.NegotiationResult*
  implements:
  - BestHTTP.SignalR.IConnection.NegotiationResult
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: BestHTTP.SignalR.Connection.Hubs
  commentId: P:BestHTTP.SignalR.Connection.Hubs
  id: Hubs
  parent: BestHTTP.SignalR.Connection
  langs:
  - csharp
  - vb
  name: Hubs
  nameWithType: Connection.Hubs
  fullName: BestHTTP.SignalR.Connection.Hubs
  type: Property
  source:
    id: Hubs
    path: ''
    startLine: 21056
  assemblies:
  - cs.temp.dll
  namespace: BestHTTP.SignalR
  summary: "\nThe hubs that the client is connected to.\n"
  example: []
  syntax:
    content: public Hub[] Hubs { get; }
    parameters: []
    return:
      type: Hub[]
    content.vb: Public ReadOnly Property Hubs As Hub()
  overload: BestHTTP.SignalR.Connection.Hubs*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: BestHTTP.SignalR.Connection.Transport
  commentId: P:BestHTTP.SignalR.Connection.Transport
  id: Transport
  parent: BestHTTP.SignalR.Connection
  langs:
  - csharp
  - vb
  name: Transport
  nameWithType: Connection.Transport
  fullName: BestHTTP.SignalR.Connection.Transport
  type: Property
  source:
    id: Transport
    path: ''
    startLine: 21061
  assemblies:
  - cs.temp.dll
  namespace: BestHTTP.SignalR
  summary: "\nThe transport that is used to send and receive messages.\n"
  example: []
  syntax:
    content: public TransportBase Transport { get; }
    parameters: []
    return:
      type: TransportBase
    content.vb: Public ReadOnly Property Transport As TransportBase
  overload: BestHTTP.SignalR.Connection.Transport*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: BestHTTP.SignalR.Connection.Protocol
  commentId: P:BestHTTP.SignalR.Connection.Protocol
  id: Protocol
  parent: BestHTTP.SignalR.Connection
  langs:
  - csharp
  - vb
  name: Protocol
  nameWithType: Connection.Protocol
  fullName: BestHTTP.SignalR.Connection.Protocol
  type: Property
  source:
    id: Protocol
    path: ''
    startLine: 21066
  assemblies:
  - cs.temp.dll
  namespace: BestHTTP.SignalR
  summary: "\nCurrent client protocol in use.\n"
  example: []
  syntax:
    content: public ProtocolVersions Protocol { get; }
    parameters: []
    return:
      type: BestHTTP.SignalR.ProtocolVersions
    content.vb: Public ReadOnly Property Protocol As ProtocolVersions
  overload: BestHTTP.SignalR.Connection.Protocol*
  implements:
  - BestHTTP.SignalR.IConnection.Protocol
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: BestHTTP.SignalR.Connection.AdditionalQueryParams
  commentId: P:BestHTTP.SignalR.Connection.AdditionalQueryParams
  id: AdditionalQueryParams
  parent: BestHTTP.SignalR.Connection
  langs:
  - csharp
  - vb
  name: AdditionalQueryParams
  nameWithType: Connection.AdditionalQueryParams
  fullName: BestHTTP.SignalR.Connection.AdditionalQueryParams
  type: Property
  source:
    id: AdditionalQueryParams
    path: ''
    startLine: 21072
  assemblies:
  - cs.temp.dll
  namespace: BestHTTP.SignalR
  summary: "\nAdditional query parameters that will be passed for the handshake uri. If the value is null, or an empty string it will be not appended to the query only the key.\n<remarks>The keys and values must be escaped properly, as the plugin will not escape these. </remarks>\n"
  example: []
  syntax:
    content: public ObservableDictionary<string, string> AdditionalQueryParams { get; set; }
    parameters: []
    return:
      type: ObservableDictionary{System.String,System.String}
    content.vb: Public Property AdditionalQueryParams As ObservableDictionary(Of String, String)
  overload: BestHTTP.SignalR.Connection.AdditionalQueryParams*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: BestHTTP.SignalR.Connection.QueryParamsOnlyForHandshake
  commentId: P:BestHTTP.SignalR.Connection.QueryParamsOnlyForHandshake
  id: QueryParamsOnlyForHandshake
  parent: BestHTTP.SignalR.Connection
  langs:
  - csharp
  - vb
  name: QueryParamsOnlyForHandshake
  nameWithType: Connection.QueryParamsOnlyForHandshake
  fullName: BestHTTP.SignalR.Connection.QueryParamsOnlyForHandshake
  type: Property
  source:
    id: QueryParamsOnlyForHandshake
    path: ''
    startLine: 21096
  assemblies:
  - cs.temp.dll
  namespace: BestHTTP.SignalR
  summary: "\nIf it&apos;s false, the parameters in the AdditionalQueryParams will be passed for all http requests. Its default value is true.\n"
  example: []
  syntax:
    content: public bool QueryParamsOnlyForHandshake { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property QueryParamsOnlyForHandshake As Boolean
  overload: BestHTTP.SignalR.Connection.QueryParamsOnlyForHandshake*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: BestHTTP.SignalR.Connection.JsonEncoder
  commentId: P:BestHTTP.SignalR.Connection.JsonEncoder
  id: JsonEncoder
  parent: BestHTTP.SignalR.Connection
  langs:
  - csharp
  - vb
  name: JsonEncoder
  nameWithType: Connection.JsonEncoder
  fullName: BestHTTP.SignalR.Connection.JsonEncoder
  type: Property
  source:
    id: JsonEncoder
    path: ''
    startLine: 21101
  assemblies:
  - cs.temp.dll
  namespace: BestHTTP.SignalR
  summary: "\nThe Json encoder that will be used by the connection and the transport.\n"
  example: []
  syntax:
    content: public IJsonEncoder JsonEncoder { get; set; }
    parameters: []
    return:
      type: IJsonEncoder
    content.vb: Public Property JsonEncoder As IJsonEncoder
  overload: BestHTTP.SignalR.Connection.JsonEncoder*
  implements:
  - BestHTTP.SignalR.IConnection.JsonEncoder
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: BestHTTP.SignalR.Connection.AuthenticationProvider
  commentId: P:BestHTTP.SignalR.Connection.AuthenticationProvider
  id: AuthenticationProvider
  parent: BestHTTP.SignalR.Connection
  langs:
  - csharp
  - vb
  name: AuthenticationProvider
  nameWithType: Connection.AuthenticationProvider
  fullName: BestHTTP.SignalR.Connection.AuthenticationProvider
  type: Property
  source:
    id: AuthenticationProvider
    path: ''
    startLine: 21106
  assemblies:
  - cs.temp.dll
  namespace: BestHTTP.SignalR
  summary: "\nAn IAuthenticationProvider implementation that will be used to authenticate the connection.\n"
  example: []
  syntax:
    content: public IAuthenticationProvider AuthenticationProvider { get; set; }
    parameters: []
    return:
      type: IAuthenticationProvider
    content.vb: Public Property AuthenticationProvider As IAuthenticationProvider
  overload: BestHTTP.SignalR.Connection.AuthenticationProvider*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: BestHTTP.SignalR.Connection.PingInterval
  commentId: P:BestHTTP.SignalR.Connection.PingInterval
  id: PingInterval
  parent: BestHTTP.SignalR.Connection
  langs:
  - csharp
  - vb
  name: PingInterval
  nameWithType: Connection.PingInterval
  fullName: BestHTTP.SignalR.Connection.PingInterval
  type: Property
  source:
    id: PingInterval
    path: ''
    startLine: 21111
  assemblies:
  - cs.temp.dll
  namespace: BestHTTP.SignalR
  summary: "\nHow much time we have to wait between two pings.\n"
  example: []
  syntax:
    content: public TimeSpan PingInterval { get; set; }
    parameters: []
    return:
      type: System.TimeSpan
    content.vb: Public Property PingInterval As TimeSpan
  overload: BestHTTP.SignalR.Connection.PingInterval*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: BestHTTP.SignalR.Connection.ReconnectDelay
  commentId: P:BestHTTP.SignalR.Connection.ReconnectDelay
  id: ReconnectDelay
  parent: BestHTTP.SignalR.Connection
  langs:
  - csharp
  - vb
  name: ReconnectDelay
  nameWithType: Connection.ReconnectDelay
  fullName: BestHTTP.SignalR.Connection.ReconnectDelay
  type: Property
  source:
    id: ReconnectDelay
    path: ''
    startLine: 21116
  assemblies:
  - cs.temp.dll
  namespace: BestHTTP.SignalR
  summary: "\nWait time before the plugin should do a reconnect attempt. Its default value is 5 seconds.\n"
  example: []
  syntax:
    content: public TimeSpan ReconnectDelay { get; set; }
    parameters: []
    return:
      type: System.TimeSpan
    content.vb: Public Property ReconnectDelay As TimeSpan
  overload: BestHTTP.SignalR.Connection.ReconnectDelay*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: BestHTTP.SignalR.Connection.OnConnected
  commentId: E:BestHTTP.SignalR.Connection.OnConnected
  id: OnConnected
  parent: BestHTTP.SignalR.Connection
  langs:
  - csharp
  - vb
  name: OnConnected
  nameWithType: Connection.OnConnected
  fullName: BestHTTP.SignalR.Connection.OnConnected
  type: Event
  source:
    id: OnConnected
    path: ''
    startLine: 21125
  assemblies:
  - cs.temp.dll
  namespace: BestHTTP.SignalR
  summary: "\nCalled when the protocol is open for communication.\n"
  example: []
  syntax:
    content: public event OnConnectedDelegate OnConnected
    return:
      type: BestHTTP.SignalR.OnConnectedDelegate
    content.vb: Public Event OnConnected As OnConnectedDelegate
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: BestHTTP.SignalR.Connection.OnClosed
  commentId: E:BestHTTP.SignalR.Connection.OnClosed
  id: OnClosed
  parent: BestHTTP.SignalR.Connection
  langs:
  - csharp
  - vb
  name: OnClosed
  nameWithType: Connection.OnClosed
  fullName: BestHTTP.SignalR.Connection.OnClosed
  type: Event
  source:
    id: OnClosed
    path: ''
    startLine: 21130
  assemblies:
  - cs.temp.dll
  namespace: BestHTTP.SignalR
  summary: "\nCalled when the connection is closed, and no further messages are sent or received.\n"
  example: []
  syntax:
    content: public event OnClosedDelegate OnClosed
    return:
      type: BestHTTP.SignalR.OnClosedDelegate
    content.vb: Public Event OnClosed As OnClosedDelegate
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: BestHTTP.SignalR.Connection.OnError
  commentId: E:BestHTTP.SignalR.Connection.OnError
  id: OnError
  parent: BestHTTP.SignalR.Connection
  langs:
  - csharp
  - vb
  name: OnError
  nameWithType: Connection.OnError
  fullName: BestHTTP.SignalR.Connection.OnError
  type: Event
  source:
    id: OnError
    path: ''
    startLine: 21135
  assemblies:
  - cs.temp.dll
  namespace: BestHTTP.SignalR
  summary: "\nCalled when an error occures. If the connection is already Started, it will try to do a reconnect, otherwise it will close the connection.\n"
  example: []
  syntax:
    content: public event OnErrorDelegate OnError
    return:
      type: BestHTTP.SignalR.OnErrorDelegate
    content.vb: Public Event OnError As OnErrorDelegate
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: BestHTTP.SignalR.Connection.OnReconnecting
  commentId: E:BestHTTP.SignalR.Connection.OnReconnecting
  id: OnReconnecting
  parent: BestHTTP.SignalR.Connection
  langs:
  - csharp
  - vb
  name: OnReconnecting
  nameWithType: Connection.OnReconnecting
  fullName: BestHTTP.SignalR.Connection.OnReconnecting
  type: Event
  source:
    id: OnReconnecting
    path: ''
    startLine: 21140
  assemblies:
  - cs.temp.dll
  namespace: BestHTTP.SignalR
  summary: "\nThis event called when a reconnection attempt are started. If fails to reconnect an OnError and OnClosed events are called.\n"
  example: []
  syntax:
    content: public event OnConnectedDelegate OnReconnecting
    return:
      type: BestHTTP.SignalR.OnConnectedDelegate
    content.vb: Public Event OnReconnecting As OnConnectedDelegate
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: BestHTTP.SignalR.Connection.OnReconnected
  commentId: E:BestHTTP.SignalR.Connection.OnReconnected
  id: OnReconnected
  parent: BestHTTP.SignalR.Connection
  langs:
  - csharp
  - vb
  name: OnReconnected
  nameWithType: Connection.OnReconnected
  fullName: BestHTTP.SignalR.Connection.OnReconnected
  type: Event
  source:
    id: OnReconnected
    path: ''
    startLine: 21145
  assemblies:
  - cs.temp.dll
  namespace: BestHTTP.SignalR
  summary: "\nThis event called when the reconnection attempt succeded.\n"
  example: []
  syntax:
    content: public event OnConnectedDelegate OnReconnected
    return:
      type: BestHTTP.SignalR.OnConnectedDelegate
    content.vb: Public Event OnReconnected As OnConnectedDelegate
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: BestHTTP.SignalR.Connection.OnStateChanged
  commentId: E:BestHTTP.SignalR.Connection.OnStateChanged
  id: OnStateChanged
  parent: BestHTTP.SignalR.Connection
  langs:
  - csharp
  - vb
  name: OnStateChanged
  nameWithType: Connection.OnStateChanged
  fullName: BestHTTP.SignalR.Connection.OnStateChanged
  type: Event
  source:
    id: OnStateChanged
    path: ''
    startLine: 21150
  assemblies:
  - cs.temp.dll
  namespace: BestHTTP.SignalR
  summary: "\nCalled every time when the connection&apos;s state changes.\n"
  example: []
  syntax:
    content: public event OnStateChanged OnStateChanged
    return:
      type: BestHTTP.SignalR.OnStateChanged
    content.vb: Public Event OnStateChanged As OnStateChanged
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: BestHTTP.SignalR.Connection.OnNonHubMessage
  commentId: E:BestHTTP.SignalR.Connection.OnNonHubMessage
  id: OnNonHubMessage
  parent: BestHTTP.SignalR.Connection
  langs:
  - csharp
  - vb
  name: OnNonHubMessage
  nameWithType: Connection.OnNonHubMessage
  fullName: BestHTTP.SignalR.Connection.OnNonHubMessage
  type: Event
  source:
    id: OnNonHubMessage
    path: ''
    startLine: 21155
  assemblies:
  - cs.temp.dll
  namespace: BestHTTP.SignalR
  summary: "\nIt&apos;s called when a non-Hub message received. The data can be anything from primitive types to array of complex objects.\n"
  example: []
  syntax:
    content: public event OnNonHubMessageDelegate OnNonHubMessage
    return:
      type: BestHTTP.SignalR.OnNonHubMessageDelegate
    content.vb: Public Event OnNonHubMessage As OnNonHubMessageDelegate
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: BestHTTP.SignalR.Connection.RequestPreparator
  commentId: P:BestHTTP.SignalR.Connection.RequestPreparator
  id: RequestPreparator
  parent: BestHTTP.SignalR.Connection
  langs:
  - csharp
  - vb
  name: RequestPreparator
  nameWithType: Connection.RequestPreparator
  fullName: BestHTTP.SignalR.Connection.RequestPreparator
  type: Property
  source:
    id: RequestPreparator
    path: ''
    startLine: 21160
  assemblies:
  - cs.temp.dll
  namespace: BestHTTP.SignalR
  summary: "\nWith this delegate all requests can be further customized.\n"
  example: []
  syntax:
    content: public OnPrepareRequestDelegate RequestPreparator { get; set; }
    parameters: []
    return:
      type: BestHTTP.SignalR.OnPrepareRequestDelegate
    content.vb: Public Property RequestPreparator As OnPrepareRequestDelegate
  overload: BestHTTP.SignalR.Connection.RequestPreparator*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: BestHTTP.SignalR.Connection.Item(System.Int32)
  commentId: P:BestHTTP.SignalR.Connection.Item(System.Int32)
  id: Item(System.Int32)
  parent: BestHTTP.SignalR.Connection
  langs:
  - csharp
  - vb
  name: Item[Int32]
  nameWithType: Connection.Item[Int32]
  fullName: BestHTTP.SignalR.Connection.Item[System.Int32]
  type: Property
  source:
    id: this[]
    path: ''
    startLine: 21169
  assemblies:
  - cs.temp.dll
  namespace: BestHTTP.SignalR
  summary: "\nIndexer property the access hubs by index.\n"
  example: []
  syntax:
    content: public Hub this[int idx] { get; }
    parameters:
    - id: idx
      type: System.Int32
    return:
      type: Hub
    content.vb: Public ReadOnly Property Item(idx As Integer) As Hub
  overload: BestHTTP.SignalR.Connection.Item*
  nameWithType.vb: Connection.Item(Int32)
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: BestHTTP.SignalR.Connection.Item(System.Int32)
  name.vb: Item(Int32)
- uid: BestHTTP.SignalR.Connection.Item(System.String)
  commentId: P:BestHTTP.SignalR.Connection.Item(System.String)
  id: Item(System.String)
  parent: BestHTTP.SignalR.Connection
  langs:
  - csharp
  - vb
  name: Item[String]
  nameWithType: Connection.Item[String]
  fullName: BestHTTP.SignalR.Connection.Item[System.String]
  type: Property
  source:
    id: this[]
    path: ''
    startLine: 21174
  assemblies:
  - cs.temp.dll
  namespace: BestHTTP.SignalR
  summary: "\nIndexer property the access hubs by name.\n"
  example: []
  syntax:
    content: public Hub this[string hubName] { get; }
    parameters:
    - id: hubName
      type: System.String
    return:
      type: Hub
    content.vb: Public ReadOnly Property Item(hubName As String) As Hub
  overload: BestHTTP.SignalR.Connection.Item*
  nameWithType.vb: Connection.Item(String)
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: BestHTTP.SignalR.Connection.Item(System.String)
  name.vb: Item(String)
- uid: BestHTTP.SignalR.Connection.#ctor(System.Uri,System.String[])
  commentId: M:BestHTTP.SignalR.Connection.#ctor(System.Uri,System.String[])
  id: '#ctor(System.Uri,System.String[])'
  parent: BestHTTP.SignalR.Connection
  langs:
  - csharp
  - vb
  name: Connection(Uri, String[])
  nameWithType: Connection.Connection(Uri, String[])
  fullName: BestHTTP.SignalR.Connection.Connection(System.Uri, System.String[])
  type: Constructor
  source:
    id: .ctor
    path: ''
    startLine: 21351
  assemblies:
  - cs.temp.dll
  namespace: BestHTTP.SignalR
  syntax:
    content: public Connection(Uri uri, params string[] hubNames)
    parameters:
    - id: uri
      type: System.Uri
    - id: hubNames
      type: System.String[]
    content.vb: Public Sub New(uri As Uri, ParamArray hubNames As String())
  overload: BestHTTP.SignalR.Connection.#ctor*
  nameWithType.vb: Connection.Connection(Uri, String())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: BestHTTP.SignalR.Connection.Connection(System.Uri, System.String())
  name.vb: Connection(Uri, String())
- uid: BestHTTP.SignalR.Connection.#ctor(System.Uri,Hub[])
  commentId: M:BestHTTP.SignalR.Connection.#ctor(System.Uri,Hub[])
  id: '#ctor(System.Uri,Hub[])'
  parent: BestHTTP.SignalR.Connection
  langs:
  - csharp
  - vb
  name: Connection(Uri, Hub[])
  nameWithType: Connection.Connection(Uri, Hub[])
  fullName: BestHTTP.SignalR.Connection.Connection(System.Uri, Hub[])
  type: Constructor
  source:
    id: .ctor
    path: ''
    startLine: 21363
  assemblies:
  - cs.temp.dll
  namespace: BestHTTP.SignalR
  syntax:
    content: public Connection(Uri uri, params Hub[] hubs)
    parameters:
    - id: uri
      type: System.Uri
    - id: hubs
      type: Hub[]
    content.vb: Public Sub New(uri As Uri, ParamArray hubs As Hub())
  overload: BestHTTP.SignalR.Connection.#ctor*
  nameWithType.vb: Connection.Connection(Uri, Hub())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: BestHTTP.SignalR.Connection.Connection(System.Uri, Hub())
  name.vb: Connection(Uri, Hub())
- uid: BestHTTP.SignalR.Connection.#ctor(System.Uri)
  commentId: M:BestHTTP.SignalR.Connection.#ctor(System.Uri)
  id: '#ctor(System.Uri)'
  parent: BestHTTP.SignalR.Connection
  langs:
  - csharp
  - vb
  name: Connection(Uri)
  nameWithType: Connection.Connection(Uri)
  fullName: BestHTTP.SignalR.Connection.Connection(System.Uri)
  type: Constructor
  source:
    id: .ctor
    path: ''
    startLine: 21372
  assemblies:
  - cs.temp.dll
  namespace: BestHTTP.SignalR
  syntax:
    content: public Connection(Uri uri)
    parameters:
    - id: uri
      type: System.Uri
    content.vb: Public Sub New(uri As Uri)
  overload: BestHTTP.SignalR.Connection.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: BestHTTP.SignalR.Connection.Open
  commentId: M:BestHTTP.SignalR.Connection.Open
  id: Open
  parent: BestHTTP.SignalR.Connection
  langs:
  - csharp
  - vb
  name: Open()
  nameWithType: Connection.Open()
  fullName: BestHTTP.SignalR.Connection.Open()
  type: Method
  source:
    id: Open
    path: ''
    startLine: 21393
  assemblies:
  - cs.temp.dll
  namespace: BestHTTP.SignalR
  summary: "\nThis function will start to authenticate if required, and the SignalR protocol negotiation.\n"
  example: []
  syntax:
    content: public void Open()
    content.vb: Public Sub Open
  overload: BestHTTP.SignalR.Connection.Open*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: BestHTTP.SignalR.Connection.Close
  commentId: M:BestHTTP.SignalR.Connection.Close
  id: Close
  parent: BestHTTP.SignalR.Connection
  langs:
  - csharp
  - vb
  name: Close()
  nameWithType: Connection.Close()
  fullName: BestHTTP.SignalR.Connection.Close()
  type: Method
  source:
    id: Close
    path: ''
    startLine: 21518
  assemblies:
  - cs.temp.dll
  namespace: BestHTTP.SignalR
  summary: "\nCloses the connection and shuts down the transport.\n"
  example: []
  syntax:
    content: public void Close()
    content.vb: Public Sub Close
  overload: BestHTTP.SignalR.Connection.Close*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: BestHTTP.SignalR.Connection.Reconnect
  commentId: M:BestHTTP.SignalR.Connection.Reconnect
  id: Reconnect
  parent: BestHTTP.SignalR.Connection
  langs:
  - csharp
  - vb
  name: Reconnect()
  nameWithType: Connection.Reconnect()
  fullName: BestHTTP.SignalR.Connection.Reconnect()
  type: Method
  source:
    id: Reconnect
    path: ''
    startLine: 21568
  assemblies:
  - cs.temp.dll
  namespace: BestHTTP.SignalR
  summary: "\nInitiates a reconnect to the SignalR server.\n"
  example: []
  syntax:
    content: public void Reconnect()
    content.vb: Public Sub Reconnect
  overload: BestHTTP.SignalR.Connection.Reconnect*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: BestHTTP.SignalR.Connection.Send(System.Object)
  commentId: M:BestHTTP.SignalR.Connection.Send(System.Object)
  id: Send(System.Object)
  parent: BestHTTP.SignalR.Connection
  langs:
  - csharp
  - vb
  name: Send(Object)
  nameWithType: Connection.Send(Object)
  fullName: BestHTTP.SignalR.Connection.Send(System.Object)
  type: Method
  source:
    id: Send
    path: ''
    startLine: 21607
  assemblies:
  - cs.temp.dll
  namespace: BestHTTP.SignalR
  summary: "\nWill encode the argument to a Json string using the Connection&apos;s JsonEncoder, then will send it to the server.\n"
  example: []
  syntax:
    content: public bool Send(object arg)
    parameters:
    - id: arg
      type: System.Object
    return:
      type: System.Boolean
      description: True if the plugin was able to send out the message
    content.vb: Public Function Send(arg As Object) As Boolean
  overload: BestHTTP.SignalR.Connection.Send*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: BestHTTP.SignalR.Connection.SendJson(System.String)
  commentId: M:BestHTTP.SignalR.Connection.SendJson(System.String)
  id: SendJson(System.String)
  parent: BestHTTP.SignalR.Connection
  langs:
  - csharp
  - vb
  name: SendJson(String)
  nameWithType: Connection.SendJson(String)
  fullName: BestHTTP.SignalR.Connection.SendJson(System.String)
  type: Method
  source:
    id: SendJson
    path: ''
    startLine: 21632
  assemblies:
  - cs.temp.dll
  namespace: BestHTTP.SignalR
  summary: "\nSends the given json string to the server.\n"
  example: []
  syntax:
    content: public bool SendJson(string json)
    parameters:
    - id: json
      type: System.String
    return:
      type: System.Boolean
      description: True if the plugin was able to send out the message
    content.vb: Public Function SendJson(json As String) As Boolean
  overload: BestHTTP.SignalR.Connection.SendJson*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: BestHTTP.SignalR.Connection.BestHTTP#SignalR#IConnection#OnMessage(IServerMessage)
  commentId: M:BestHTTP.SignalR.Connection.BestHTTP#SignalR#IConnection#OnMessage(IServerMessage)
  id: BestHTTP#SignalR#IConnection#OnMessage(IServerMessage)
  isEii: true
  parent: BestHTTP.SignalR.Connection
  langs:
  - csharp
  - vb
  name: IConnection.OnMessage(IServerMessage)
  nameWithType: Connection.IConnection.OnMessage(IServerMessage)
  fullName: BestHTTP.SignalR.Connection.BestHTTP.SignalR.IConnection.OnMessage(IServerMessage)
  type: Method
  source:
    id: BestHTTP.SignalR.IConnection.OnMessage
    path: ''
    startLine: 21655
  assemblies:
  - cs.temp.dll
  namespace: BestHTTP.SignalR
  summary: "\nCalled when we receive a message from the server\n"
  example: []
  syntax:
    content: void IConnection.OnMessage(IServerMessage msg)
    parameters:
    - id: msg
      type: IServerMessage
    content.vb: Sub BestHTTP.SignalR.IConnection.OnMessage(msg As IServerMessage) Implements IConnection.OnMessage
  overload: BestHTTP.SignalR.Connection.BestHTTP#SignalR#IConnection#OnMessage*
  implements:
  - BestHTTP.SignalR.IConnection.OnMessage(IServerMessage)
  nameWithType.vb: Connection.BestHTTP.SignalR.IConnection.OnMessage(IServerMessage)
  name.vb: BestHTTP.SignalR.IConnection.OnMessage(IServerMessage)
- uid: BestHTTP.SignalR.Connection.BestHTTP#SignalR#IConnection#TransportStarted
  commentId: M:BestHTTP.SignalR.Connection.BestHTTP#SignalR#IConnection#TransportStarted
  id: BestHTTP#SignalR#IConnection#TransportStarted
  isEii: true
  parent: BestHTTP.SignalR.Connection
  langs:
  - csharp
  - vb
  name: IConnection.TransportStarted()
  nameWithType: Connection.IConnection.TransportStarted()
  fullName: BestHTTP.SignalR.Connection.BestHTTP.SignalR.IConnection.TransportStarted()
  type: Method
  source:
    id: BestHTTP.SignalR.IConnection.TransportStarted
    path: ''
    startLine: 21741
  assemblies:
  - cs.temp.dll
  namespace: BestHTTP.SignalR
  summary: "\nCalled from the transport implementations when the Start request finishes successfully.\n"
  example: []
  syntax:
    content: void IConnection.TransportStarted()
    content.vb: Sub BestHTTP.SignalR.IConnection.TransportStarted Implements IConnection.TransportStarted
  overload: BestHTTP.SignalR.Connection.BestHTTP#SignalR#IConnection#TransportStarted*
  implements:
  - BestHTTP.SignalR.IConnection.TransportStarted
  nameWithType.vb: Connection.BestHTTP.SignalR.IConnection.TransportStarted()
  name.vb: BestHTTP.SignalR.IConnection.TransportStarted()
- uid: BestHTTP.SignalR.Connection.BestHTTP#SignalR#IConnection#TransportReconnected
  commentId: M:BestHTTP.SignalR.Connection.BestHTTP#SignalR#IConnection#TransportReconnected
  id: BestHTTP#SignalR#IConnection#TransportReconnected
  isEii: true
  parent: BestHTTP.SignalR.Connection
  langs:
  - csharp
  - vb
  name: IConnection.TransportReconnected()
  nameWithType: Connection.IConnection.TransportReconnected()
  fullName: BestHTTP.SignalR.Connection.BestHTTP.SignalR.IConnection.TransportReconnected()
  type: Method
  source:
    id: BestHTTP.SignalR.IConnection.TransportReconnected
    path: ''
    startLine: 21775
  assemblies:
  - cs.temp.dll
  namespace: BestHTTP.SignalR
  summary: "\nCalled when the transport sucessfully reconnected to the server.\n"
  example: []
  syntax:
    content: void IConnection.TransportReconnected()
    content.vb: Sub BestHTTP.SignalR.IConnection.TransportReconnected Implements IConnection.TransportReconnected
  overload: BestHTTP.SignalR.Connection.BestHTTP#SignalR#IConnection#TransportReconnected*
  implements:
  - BestHTTP.SignalR.IConnection.TransportReconnected
  nameWithType.vb: Connection.BestHTTP.SignalR.IConnection.TransportReconnected()
  name.vb: BestHTTP.SignalR.IConnection.TransportReconnected()
- uid: BestHTTP.SignalR.Connection.BestHTTP#SignalR#IConnection#TransportAborted
  commentId: M:BestHTTP.SignalR.Connection.BestHTTP#SignalR#IConnection#TransportAborted
  id: BestHTTP#SignalR#IConnection#TransportAborted
  isEii: true
  parent: BestHTTP.SignalR.Connection
  langs:
  - csharp
  - vb
  name: IConnection.TransportAborted()
  nameWithType: Connection.IConnection.TransportAborted()
  fullName: BestHTTP.SignalR.Connection.BestHTTP.SignalR.IConnection.TransportAborted()
  type: Method
  source:
    id: BestHTTP.SignalR.IConnection.TransportAborted
    path: ''
    startLine: 21800
  assemblies:
  - cs.temp.dll
  namespace: BestHTTP.SignalR
  summary: "\nCalled from the transport implementation when the Abort request finishes successfully.\n"
  example: []
  syntax:
    content: void IConnection.TransportAborted()
    content.vb: Sub BestHTTP.SignalR.IConnection.TransportAborted Implements IConnection.TransportAborted
  overload: BestHTTP.SignalR.Connection.BestHTTP#SignalR#IConnection#TransportAborted*
  implements:
  - BestHTTP.SignalR.IConnection.TransportAborted
  nameWithType.vb: Connection.BestHTTP.SignalR.IConnection.TransportAborted()
  name.vb: BestHTTP.SignalR.IConnection.TransportAborted()
- uid: BestHTTP.SignalR.Connection.BestHTTP#SignalR#IConnection#Error(System.String)
  commentId: M:BestHTTP.SignalR.Connection.BestHTTP#SignalR#IConnection#Error(System.String)
  id: BestHTTP#SignalR#IConnection#Error(System.String)
  isEii: true
  parent: BestHTTP.SignalR.Connection
  langs:
  - csharp
  - vb
  name: IConnection.Error(String)
  nameWithType: Connection.IConnection.Error(String)
  fullName: BestHTTP.SignalR.Connection.BestHTTP.SignalR.IConnection.Error(System.String)
  type: Method
  source:
    id: BestHTTP.SignalR.IConnection.Error
    path: ''
    startLine: 21808
  assemblies:
  - cs.temp.dll
  namespace: BestHTTP.SignalR
  summary: "\nCalled when an error occures. If the connection is in the Connected state, it will start the reconnect process, otherwise it will close the connection.\n"
  example: []
  syntax:
    content: void IConnection.Error(string reason)
    parameters:
    - id: reason
      type: System.String
    content.vb: Sub BestHTTP.SignalR.IConnection.Error(reason As String) Implements IConnection.Error
  overload: BestHTTP.SignalR.Connection.BestHTTP#SignalR#IConnection#Error*
  implements:
  - BestHTTP.SignalR.IConnection.Error(System.String)
  nameWithType.vb: Connection.BestHTTP.SignalR.IConnection.Error(String)
  name.vb: BestHTTP.SignalR.IConnection.Error(String)
- uid: BestHTTP.SignalR.Connection.BestHTTP#SignalR#IConnection#BuildUri(BestHTTP.SignalR.RequestTypes)
  commentId: M:BestHTTP.SignalR.Connection.BestHTTP#SignalR#IConnection#BuildUri(BestHTTP.SignalR.RequestTypes)
  id: BestHTTP#SignalR#IConnection#BuildUri(BestHTTP.SignalR.RequestTypes)
  isEii: true
  parent: BestHTTP.SignalR.Connection
  langs:
  - csharp
  - vb
  name: IConnection.BuildUri(RequestTypes)
  nameWithType: Connection.IConnection.BuildUri(RequestTypes)
  fullName: BestHTTP.SignalR.Connection.BestHTTP.SignalR.IConnection.BuildUri(BestHTTP.SignalR.RequestTypes)
  type: Method
  source:
    id: BestHTTP.SignalR.IConnection.BuildUri
    path: ''
    startLine: 21840
  assemblies:
  - cs.temp.dll
  namespace: BestHTTP.SignalR
  summary: "\nCreates an Uri instance for the given request type.\n"
  example: []
  syntax:
    content: Uri IConnection.BuildUri(RequestTypes type)
    parameters:
    - id: type
      type: BestHTTP.SignalR.RequestTypes
    return:
      type: System.Uri
    content.vb: Function BestHTTP.SignalR.IConnection.BuildUri(type As RequestTypes) As Uri Implements IConnection.BuildUri
  overload: BestHTTP.SignalR.Connection.BestHTTP#SignalR#IConnection#BuildUri*
  implements:
  - BestHTTP.SignalR.IConnection.BuildUri(BestHTTP.SignalR.RequestTypes)
  nameWithType.vb: Connection.BestHTTP.SignalR.IConnection.BuildUri(RequestTypes)
  name.vb: BestHTTP.SignalR.IConnection.BuildUri(RequestTypes)
- uid: BestHTTP.SignalR.Connection.BestHTTP#SignalR#IConnection#BuildUri(BestHTTP.SignalR.RequestTypes,TransportBase)
  commentId: M:BestHTTP.SignalR.Connection.BestHTTP#SignalR#IConnection#BuildUri(BestHTTP.SignalR.RequestTypes,TransportBase)
  id: BestHTTP#SignalR#IConnection#BuildUri(BestHTTP.SignalR.RequestTypes,TransportBase)
  isEii: true
  parent: BestHTTP.SignalR.Connection
  langs:
  - csharp
  - vb
  name: IConnection.BuildUri(RequestTypes, TransportBase)
  nameWithType: Connection.IConnection.BuildUri(RequestTypes, TransportBase)
  fullName: BestHTTP.SignalR.Connection.BestHTTP.SignalR.IConnection.BuildUri(BestHTTP.SignalR.RequestTypes, TransportBase)
  type: Method
  source:
    id: BestHTTP.SignalR.IConnection.BuildUri
    path: ''
    startLine: 21848
  assemblies:
  - cs.temp.dll
  namespace: BestHTTP.SignalR
  summary: "\nCreates an Uri instance from the given parameters.\n"
  example: []
  syntax:
    content: Uri IConnection.BuildUri(RequestTypes type, TransportBase transport)
    parameters:
    - id: type
      type: BestHTTP.SignalR.RequestTypes
    - id: transport
      type: TransportBase
    return:
      type: System.Uri
    content.vb: Function BestHTTP.SignalR.IConnection.BuildUri(type As RequestTypes, transport As TransportBase) As Uri Implements IConnection.BuildUri
  overload: BestHTTP.SignalR.Connection.BestHTTP#SignalR#IConnection#BuildUri*
  implements:
  - BestHTTP.SignalR.IConnection.BuildUri(BestHTTP.SignalR.RequestTypes,TransportBase)
  nameWithType.vb: Connection.BestHTTP.SignalR.IConnection.BuildUri(RequestTypes, TransportBase)
  name.vb: BestHTTP.SignalR.IConnection.BuildUri(RequestTypes, TransportBase)
- uid: BestHTTP.SignalR.Connection.BestHTTP#SignalR#IConnection#PrepareRequest(BestHTTP.HTTPRequest,BestHTTP.SignalR.RequestTypes)
  commentId: M:BestHTTP.SignalR.Connection.BestHTTP#SignalR#IConnection#PrepareRequest(BestHTTP.HTTPRequest,BestHTTP.SignalR.RequestTypes)
  id: BestHTTP#SignalR#IConnection#PrepareRequest(BestHTTP.HTTPRequest,BestHTTP.SignalR.RequestTypes)
  isEii: true
  parent: BestHTTP.SignalR.Connection
  langs:
  - csharp
  - vb
  name: IConnection.PrepareRequest(HTTPRequest, RequestTypes)
  nameWithType: Connection.IConnection.PrepareRequest(HTTPRequest, RequestTypes)
  fullName: BestHTTP.SignalR.Connection.BestHTTP.SignalR.IConnection.PrepareRequest(BestHTTP.HTTPRequest, BestHTTP.SignalR.RequestTypes)
  type: Method
  source:
    id: BestHTTP.SignalR.IConnection.PrepareRequest
    path: ''
    startLine: 21984
  assemblies:
  - cs.temp.dll
  namespace: BestHTTP.SignalR
  summary: "\nIt&apos;s called on every request before sending it out to the server.\n"
  example: []
  syntax:
    content: HTTPRequest IConnection.PrepareRequest(HTTPRequest req, RequestTypes type)
    parameters:
    - id: req
      type: BestHTTP.HTTPRequest
    - id: type
      type: BestHTTP.SignalR.RequestTypes
    return:
      type: BestHTTP.HTTPRequest
    content.vb: Function BestHTTP.SignalR.IConnection.PrepareRequest(req As HTTPRequest, type As RequestTypes) As HTTPRequest Implements IConnection.PrepareRequest
  overload: BestHTTP.SignalR.Connection.BestHTTP#SignalR#IConnection#PrepareRequest*
  implements:
  - BestHTTP.SignalR.IConnection.PrepareRequest(BestHTTP.HTTPRequest,BestHTTP.SignalR.RequestTypes)
  nameWithType.vb: Connection.BestHTTP.SignalR.IConnection.PrepareRequest(HTTPRequest, RequestTypes)
  name.vb: BestHTTP.SignalR.IConnection.PrepareRequest(HTTPRequest, RequestTypes)
- uid: BestHTTP.SignalR.Connection.BestHTTP#SignalR#IConnection#ParseResponse(System.String)
  commentId: M:BestHTTP.SignalR.Connection.BestHTTP#SignalR#IConnection#ParseResponse(System.String)
  id: BestHTTP#SignalR#IConnection#ParseResponse(System.String)
  isEii: true
  parent: BestHTTP.SignalR.Connection
  langs:
  - csharp
  - vb
  name: IConnection.ParseResponse(String)
  nameWithType: Connection.IConnection.ParseResponse(String)
  fullName: BestHTTP.SignalR.Connection.BestHTTP.SignalR.IConnection.ParseResponse(System.String)
  type: Method
  source:
    id: BestHTTP.SignalR.IConnection.ParseResponse
    path: ''
    startLine: 21998
  assemblies:
  - cs.temp.dll
  namespace: BestHTTP.SignalR
  summary: "\nWill parse a &quot;{ &apos;Response&apos;: &apos;xyz&apos; }&quot; object and returns with &apos;xyz&apos;. If it fails to parse, or getting the &apos;Response&apos; key, it will call the Error function.\n"
  example: []
  syntax:
    content: string IConnection.ParseResponse(string responseStr)
    parameters:
    - id: responseStr
      type: System.String
    return:
      type: System.String
    content.vb: Function BestHTTP.SignalR.IConnection.ParseResponse(responseStr As String) As String Implements IConnection.ParseResponse
  overload: BestHTTP.SignalR.Connection.BestHTTP#SignalR#IConnection#ParseResponse*
  implements:
  - BestHTTP.SignalR.IConnection.ParseResponse(System.String)
  nameWithType.vb: Connection.BestHTTP.SignalR.IConnection.ParseResponse(String)
  name.vb: BestHTTP.SignalR.IConnection.ParseResponse(String)
references:
- uid: BestHTTP.SignalR
  commentId: N:BestHTTP.SignalR
  name: BestHTTP.SignalR
  nameWithType: BestHTTP.SignalR
  fullName: BestHTTP.SignalR
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: BestHTTP.SignalR.IConnection
  commentId: T:BestHTTP.SignalR.IConnection
  parent: BestHTTP.SignalR
  name: IConnection
  nameWithType: IConnection
  fullName: BestHTTP.SignalR.IConnection
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: IJsonEncoder
  isExternal: true
  name: IJsonEncoder
  nameWithType: IJsonEncoder
  fullName: IJsonEncoder
- uid: BestHTTP.SignalR.Connection.Uri*
  commentId: Overload:BestHTTP.SignalR.Connection.Uri
  name: Uri
  nameWithType: Connection.Uri
  fullName: BestHTTP.SignalR.Connection.Uri
- uid: System.Uri
  commentId: T:System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: BestHTTP.SignalR.Connection.State*
  commentId: Overload:BestHTTP.SignalR.Connection.State
  name: State
  nameWithType: Connection.State
  fullName: BestHTTP.SignalR.Connection.State
- uid: BestHTTP.SignalR.ConnectionStates
  commentId: T:BestHTTP.SignalR.ConnectionStates
  parent: BestHTTP.SignalR
  name: ConnectionStates
  nameWithType: ConnectionStates
  fullName: BestHTTP.SignalR.ConnectionStates
- uid: BestHTTP.SignalR.Connection.NegotiationResult*
  commentId: Overload:BestHTTP.SignalR.Connection.NegotiationResult
  name: NegotiationResult
  nameWithType: Connection.NegotiationResult
  fullName: BestHTTP.SignalR.Connection.NegotiationResult
- uid: BestHTTP.SignalR.IConnection.NegotiationResult
  commentId: P:BestHTTP.SignalR.IConnection.NegotiationResult
  parent: BestHTTP.SignalR.IConnection
  name: NegotiationResult
  nameWithType: IConnection.NegotiationResult
  fullName: BestHTTP.SignalR.IConnection.NegotiationResult
- uid: BestHTTP.SignalR.NegotiationData
  commentId: T:BestHTTP.SignalR.NegotiationData
  parent: BestHTTP.SignalR
  name: NegotiationData
  nameWithType: NegotiationData
  fullName: BestHTTP.SignalR.NegotiationData
- uid: BestHTTP.SignalR.Connection.Hubs*
  commentId: Overload:BestHTTP.SignalR.Connection.Hubs
  name: Hubs
  nameWithType: Connection.Hubs
  fullName: BestHTTP.SignalR.Connection.Hubs
- uid: Hub[]
  isExternal: true
  name: Hub[]
  nameWithType: Hub[]
  fullName: Hub[]
  nameWithType.vb: Hub()
  fullName.vb: Hub()
  name.vb: Hub()
  spec.csharp:
  - uid: Hub
    name: Hub
    nameWithType: Hub
    fullName: Hub
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: Hub
    name: Hub
    nameWithType: Hub
    fullName: Hub
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: BestHTTP.SignalR.Connection.Transport*
  commentId: Overload:BestHTTP.SignalR.Connection.Transport
  name: Transport
  nameWithType: Connection.Transport
  fullName: BestHTTP.SignalR.Connection.Transport
- uid: TransportBase
  isExternal: true
  name: TransportBase
  nameWithType: TransportBase
  fullName: TransportBase
- uid: BestHTTP.SignalR.Connection.Protocol*
  commentId: Overload:BestHTTP.SignalR.Connection.Protocol
  name: Protocol
  nameWithType: Connection.Protocol
  fullName: BestHTTP.SignalR.Connection.Protocol
- uid: BestHTTP.SignalR.IConnection.Protocol
  commentId: P:BestHTTP.SignalR.IConnection.Protocol
  parent: BestHTTP.SignalR.IConnection
  name: Protocol
  nameWithType: IConnection.Protocol
  fullName: BestHTTP.SignalR.IConnection.Protocol
- uid: BestHTTP.SignalR.ProtocolVersions
  commentId: T:BestHTTP.SignalR.ProtocolVersions
  parent: BestHTTP.SignalR
  name: ProtocolVersions
  nameWithType: ProtocolVersions
  fullName: BestHTTP.SignalR.ProtocolVersions
- uid: BestHTTP.SignalR.Connection.AdditionalQueryParams*
  commentId: Overload:BestHTTP.SignalR.Connection.AdditionalQueryParams
  name: AdditionalQueryParams
  nameWithType: Connection.AdditionalQueryParams
  fullName: BestHTTP.SignalR.Connection.AdditionalQueryParams
- uid: ObservableDictionary{System.String,System.String}
  commentId: '!:ObservableDictionary{System.String,System.String}'
  definition: ObservableDictionary`2
  name: ObservableDictionary<String, String>
  nameWithType: ObservableDictionary<String, String>
  fullName: ObservableDictionary<System.String, System.String>
  nameWithType.vb: ObservableDictionary(Of String, String)
  fullName.vb: ObservableDictionary(Of System.String, System.String)
  name.vb: ObservableDictionary(Of String, String)
  spec.csharp:
  - uid: ObservableDictionary`2
    name: ObservableDictionary
    nameWithType: ObservableDictionary
    fullName: ObservableDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: ObservableDictionary`2
    name: ObservableDictionary
    nameWithType: ObservableDictionary
    fullName: ObservableDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: ObservableDictionary`2
  isExternal: true
  name: ObservableDictionary<, >
  nameWithType: ObservableDictionary<, >
  fullName: ObservableDictionary<, >
  nameWithType.vb: ObservableDictionary(Of , )
  fullName.vb: ObservableDictionary(Of , )
  name.vb: ObservableDictionary(Of , )
  spec.csharp:
  - uid: ObservableDictionary`2
    name: ObservableDictionary
    nameWithType: ObservableDictionary
    fullName: ObservableDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: ObservableDictionary`2
    name: ObservableDictionary
    nameWithType: ObservableDictionary
    fullName: ObservableDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: BestHTTP.SignalR.Connection.QueryParamsOnlyForHandshake*
  commentId: Overload:BestHTTP.SignalR.Connection.QueryParamsOnlyForHandshake
  name: QueryParamsOnlyForHandshake
  nameWithType: Connection.QueryParamsOnlyForHandshake
  fullName: BestHTTP.SignalR.Connection.QueryParamsOnlyForHandshake
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: BestHTTP.SignalR.Connection.JsonEncoder*
  commentId: Overload:BestHTTP.SignalR.Connection.JsonEncoder
  name: JsonEncoder
  nameWithType: Connection.JsonEncoder
  fullName: BestHTTP.SignalR.Connection.JsonEncoder
- uid: BestHTTP.SignalR.IConnection.JsonEncoder
  commentId: P:BestHTTP.SignalR.IConnection.JsonEncoder
  parent: BestHTTP.SignalR.IConnection
  name: JsonEncoder
  nameWithType: IConnection.JsonEncoder
  fullName: BestHTTP.SignalR.IConnection.JsonEncoder
- uid: BestHTTP.SignalR.Connection.AuthenticationProvider*
  commentId: Overload:BestHTTP.SignalR.Connection.AuthenticationProvider
  name: AuthenticationProvider
  nameWithType: Connection.AuthenticationProvider
  fullName: BestHTTP.SignalR.Connection.AuthenticationProvider
- uid: IAuthenticationProvider
  commentId: '!:IAuthenticationProvider'
  isExternal: true
  name: IAuthenticationProvider
  nameWithType: IAuthenticationProvider
  fullName: IAuthenticationProvider
- uid: BestHTTP.SignalR.Connection.PingInterval*
  commentId: Overload:BestHTTP.SignalR.Connection.PingInterval
  name: PingInterval
  nameWithType: Connection.PingInterval
  fullName: BestHTTP.SignalR.Connection.PingInterval
- uid: System.TimeSpan
  commentId: T:System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: BestHTTP.SignalR.Connection.ReconnectDelay*
  commentId: Overload:BestHTTP.SignalR.Connection.ReconnectDelay
  name: ReconnectDelay
  nameWithType: Connection.ReconnectDelay
  fullName: BestHTTP.SignalR.Connection.ReconnectDelay
- uid: BestHTTP.SignalR.OnConnectedDelegate
  commentId: T:BestHTTP.SignalR.OnConnectedDelegate
  parent: BestHTTP.SignalR
  name: OnConnectedDelegate
  nameWithType: OnConnectedDelegate
  fullName: BestHTTP.SignalR.OnConnectedDelegate
- uid: BestHTTP.SignalR.OnClosedDelegate
  commentId: T:BestHTTP.SignalR.OnClosedDelegate
  parent: BestHTTP.SignalR
  name: OnClosedDelegate
  nameWithType: OnClosedDelegate
  fullName: BestHTTP.SignalR.OnClosedDelegate
- uid: BestHTTP.SignalR.OnErrorDelegate
  commentId: T:BestHTTP.SignalR.OnErrorDelegate
  parent: BestHTTP.SignalR
  name: OnErrorDelegate
  nameWithType: OnErrorDelegate
  fullName: BestHTTP.SignalR.OnErrorDelegate
- uid: BestHTTP.SignalR.OnStateChanged
  commentId: T:BestHTTP.SignalR.OnStateChanged
  parent: BestHTTP.SignalR
  name: OnStateChanged
  nameWithType: OnStateChanged
  fullName: BestHTTP.SignalR.OnStateChanged
- uid: BestHTTP.SignalR.OnNonHubMessageDelegate
  commentId: T:BestHTTP.SignalR.OnNonHubMessageDelegate
  parent: BestHTTP.SignalR
  name: OnNonHubMessageDelegate
  nameWithType: OnNonHubMessageDelegate
  fullName: BestHTTP.SignalR.OnNonHubMessageDelegate
- uid: BestHTTP.SignalR.Connection.RequestPreparator*
  commentId: Overload:BestHTTP.SignalR.Connection.RequestPreparator
  name: RequestPreparator
  nameWithType: Connection.RequestPreparator
  fullName: BestHTTP.SignalR.Connection.RequestPreparator
- uid: BestHTTP.SignalR.OnPrepareRequestDelegate
  commentId: T:BestHTTP.SignalR.OnPrepareRequestDelegate
  parent: BestHTTP.SignalR
  name: OnPrepareRequestDelegate
  nameWithType: OnPrepareRequestDelegate
  fullName: BestHTTP.SignalR.OnPrepareRequestDelegate
- uid: BestHTTP.SignalR.Connection.Item*
  commentId: Overload:BestHTTP.SignalR.Connection.Item
  name: Item
  nameWithType: Connection.Item
  fullName: BestHTTP.SignalR.Connection.Item
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Hub
  isExternal: true
  name: Hub
  nameWithType: Hub
  fullName: Hub
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: BestHTTP.SignalR.Connection.#ctor*
  commentId: Overload:BestHTTP.SignalR.Connection.#ctor
  name: Connection
  nameWithType: Connection.Connection
  fullName: BestHTTP.SignalR.Connection.Connection
- uid: System.String[]
  isExternal: true
  name: String[]
  nameWithType: String[]
  fullName: System.String[]
  nameWithType.vb: String()
  fullName.vb: System.String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: BestHTTP.SignalR.Connection.Open*
  commentId: Overload:BestHTTP.SignalR.Connection.Open
  name: Open
  nameWithType: Connection.Open
  fullName: BestHTTP.SignalR.Connection.Open
- uid: BestHTTP.SignalR.Connection.Close*
  commentId: Overload:BestHTTP.SignalR.Connection.Close
  name: Close
  nameWithType: Connection.Close
  fullName: BestHTTP.SignalR.Connection.Close
- uid: BestHTTP.SignalR.Connection.Reconnect*
  commentId: Overload:BestHTTP.SignalR.Connection.Reconnect
  name: Reconnect
  nameWithType: Connection.Reconnect
  fullName: BestHTTP.SignalR.Connection.Reconnect
- uid: BestHTTP.SignalR.Connection.Send*
  commentId: Overload:BestHTTP.SignalR.Connection.Send
  name: Send
  nameWithType: Connection.Send
  fullName: BestHTTP.SignalR.Connection.Send
- uid: BestHTTP.SignalR.Connection.SendJson*
  commentId: Overload:BestHTTP.SignalR.Connection.SendJson
  name: SendJson
  nameWithType: Connection.SendJson
  fullName: BestHTTP.SignalR.Connection.SendJson
- uid: BestHTTP.SignalR.Connection.BestHTTP#SignalR#IConnection#OnMessage*
  commentId: Overload:BestHTTP.SignalR.Connection.BestHTTP#SignalR#IConnection#OnMessage
  name: IConnection.OnMessage
  nameWithType: Connection.IConnection.OnMessage
  fullName: BestHTTP.SignalR.Connection.BestHTTP.SignalR.IConnection.OnMessage
  nameWithType.vb: Connection.BestHTTP.SignalR.IConnection.OnMessage
  name.vb: BestHTTP.SignalR.IConnection.OnMessage
- uid: BestHTTP.SignalR.IConnection.OnMessage(IServerMessage)
  commentId: M:BestHTTP.SignalR.IConnection.OnMessage(IServerMessage)
  parent: BestHTTP.SignalR.IConnection
  isExternal: true
  name: OnMessage(IServerMessage)
  nameWithType: IConnection.OnMessage(IServerMessage)
  fullName: BestHTTP.SignalR.IConnection.OnMessage(IServerMessage)
  spec.csharp:
  - uid: BestHTTP.SignalR.IConnection.OnMessage(IServerMessage)
    name: OnMessage
    nameWithType: IConnection.OnMessage
    fullName: BestHTTP.SignalR.IConnection.OnMessage
  - name: (
    nameWithType: (
    fullName: (
  - uid: IServerMessage
    name: IServerMessage
    nameWithType: IServerMessage
    fullName: IServerMessage
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BestHTTP.SignalR.IConnection.OnMessage(IServerMessage)
    name: OnMessage
    nameWithType: IConnection.OnMessage
    fullName: BestHTTP.SignalR.IConnection.OnMessage
  - name: (
    nameWithType: (
    fullName: (
  - uid: IServerMessage
    name: IServerMessage
    nameWithType: IServerMessage
    fullName: IServerMessage
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: IServerMessage
  isExternal: true
  name: IServerMessage
  nameWithType: IServerMessage
  fullName: IServerMessage
- uid: BestHTTP.SignalR.Connection.BestHTTP#SignalR#IConnection#TransportStarted*
  commentId: Overload:BestHTTP.SignalR.Connection.BestHTTP#SignalR#IConnection#TransportStarted
  name: IConnection.TransportStarted
  nameWithType: Connection.IConnection.TransportStarted
  fullName: BestHTTP.SignalR.Connection.BestHTTP.SignalR.IConnection.TransportStarted
  nameWithType.vb: Connection.BestHTTP.SignalR.IConnection.TransportStarted
  name.vb: BestHTTP.SignalR.IConnection.TransportStarted
- uid: BestHTTP.SignalR.IConnection.TransportStarted
  commentId: M:BestHTTP.SignalR.IConnection.TransportStarted
  parent: BestHTTP.SignalR.IConnection
  name: TransportStarted()
  nameWithType: IConnection.TransportStarted()
  fullName: BestHTTP.SignalR.IConnection.TransportStarted()
  spec.csharp:
  - uid: BestHTTP.SignalR.IConnection.TransportStarted
    name: TransportStarted
    nameWithType: IConnection.TransportStarted
    fullName: BestHTTP.SignalR.IConnection.TransportStarted
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BestHTTP.SignalR.IConnection.TransportStarted
    name: TransportStarted
    nameWithType: IConnection.TransportStarted
    fullName: BestHTTP.SignalR.IConnection.TransportStarted
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: BestHTTP.SignalR.Connection.BestHTTP#SignalR#IConnection#TransportReconnected*
  commentId: Overload:BestHTTP.SignalR.Connection.BestHTTP#SignalR#IConnection#TransportReconnected
  name: IConnection.TransportReconnected
  nameWithType: Connection.IConnection.TransportReconnected
  fullName: BestHTTP.SignalR.Connection.BestHTTP.SignalR.IConnection.TransportReconnected
  nameWithType.vb: Connection.BestHTTP.SignalR.IConnection.TransportReconnected
  name.vb: BestHTTP.SignalR.IConnection.TransportReconnected
- uid: BestHTTP.SignalR.IConnection.TransportReconnected
  commentId: M:BestHTTP.SignalR.IConnection.TransportReconnected
  parent: BestHTTP.SignalR.IConnection
  name: TransportReconnected()
  nameWithType: IConnection.TransportReconnected()
  fullName: BestHTTP.SignalR.IConnection.TransportReconnected()
  spec.csharp:
  - uid: BestHTTP.SignalR.IConnection.TransportReconnected
    name: TransportReconnected
    nameWithType: IConnection.TransportReconnected
    fullName: BestHTTP.SignalR.IConnection.TransportReconnected
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BestHTTP.SignalR.IConnection.TransportReconnected
    name: TransportReconnected
    nameWithType: IConnection.TransportReconnected
    fullName: BestHTTP.SignalR.IConnection.TransportReconnected
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: BestHTTP.SignalR.Connection.BestHTTP#SignalR#IConnection#TransportAborted*
  commentId: Overload:BestHTTP.SignalR.Connection.BestHTTP#SignalR#IConnection#TransportAborted
  name: IConnection.TransportAborted
  nameWithType: Connection.IConnection.TransportAborted
  fullName: BestHTTP.SignalR.Connection.BestHTTP.SignalR.IConnection.TransportAborted
  nameWithType.vb: Connection.BestHTTP.SignalR.IConnection.TransportAborted
  name.vb: BestHTTP.SignalR.IConnection.TransportAborted
- uid: BestHTTP.SignalR.IConnection.TransportAborted
  commentId: M:BestHTTP.SignalR.IConnection.TransportAborted
  parent: BestHTTP.SignalR.IConnection
  name: TransportAborted()
  nameWithType: IConnection.TransportAborted()
  fullName: BestHTTP.SignalR.IConnection.TransportAborted()
  spec.csharp:
  - uid: BestHTTP.SignalR.IConnection.TransportAborted
    name: TransportAborted
    nameWithType: IConnection.TransportAborted
    fullName: BestHTTP.SignalR.IConnection.TransportAborted
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BestHTTP.SignalR.IConnection.TransportAborted
    name: TransportAborted
    nameWithType: IConnection.TransportAborted
    fullName: BestHTTP.SignalR.IConnection.TransportAborted
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: BestHTTP.SignalR.Connection.BestHTTP#SignalR#IConnection#Error*
  commentId: Overload:BestHTTP.SignalR.Connection.BestHTTP#SignalR#IConnection#Error
  name: IConnection.Error
  nameWithType: Connection.IConnection.Error
  fullName: BestHTTP.SignalR.Connection.BestHTTP.SignalR.IConnection.Error
  nameWithType.vb: Connection.BestHTTP.SignalR.IConnection.Error
  name.vb: BestHTTP.SignalR.IConnection.Error
- uid: BestHTTP.SignalR.IConnection.Error(System.String)
  commentId: M:BestHTTP.SignalR.IConnection.Error(System.String)
  parent: BestHTTP.SignalR.IConnection
  isExternal: true
  name: Error(String)
  nameWithType: IConnection.Error(String)
  fullName: BestHTTP.SignalR.IConnection.Error(System.String)
  spec.csharp:
  - uid: BestHTTP.SignalR.IConnection.Error(System.String)
    name: Error
    nameWithType: IConnection.Error
    fullName: BestHTTP.SignalR.IConnection.Error
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BestHTTP.SignalR.IConnection.Error(System.String)
    name: Error
    nameWithType: IConnection.Error
    fullName: BestHTTP.SignalR.IConnection.Error
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BestHTTP.SignalR.Connection.BestHTTP#SignalR#IConnection#BuildUri*
  commentId: Overload:BestHTTP.SignalR.Connection.BestHTTP#SignalR#IConnection#BuildUri
  name: IConnection.BuildUri
  nameWithType: Connection.IConnection.BuildUri
  fullName: BestHTTP.SignalR.Connection.BestHTTP.SignalR.IConnection.BuildUri
  nameWithType.vb: Connection.BestHTTP.SignalR.IConnection.BuildUri
  name.vb: BestHTTP.SignalR.IConnection.BuildUri
- uid: BestHTTP.SignalR.IConnection.BuildUri(BestHTTP.SignalR.RequestTypes)
  commentId: M:BestHTTP.SignalR.IConnection.BuildUri(BestHTTP.SignalR.RequestTypes)
  parent: BestHTTP.SignalR.IConnection
  name: BuildUri(RequestTypes)
  nameWithType: IConnection.BuildUri(RequestTypes)
  fullName: BestHTTP.SignalR.IConnection.BuildUri(BestHTTP.SignalR.RequestTypes)
  spec.csharp:
  - uid: BestHTTP.SignalR.IConnection.BuildUri(BestHTTP.SignalR.RequestTypes)
    name: BuildUri
    nameWithType: IConnection.BuildUri
    fullName: BestHTTP.SignalR.IConnection.BuildUri
  - name: (
    nameWithType: (
    fullName: (
  - uid: BestHTTP.SignalR.RequestTypes
    name: RequestTypes
    nameWithType: RequestTypes
    fullName: BestHTTP.SignalR.RequestTypes
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BestHTTP.SignalR.IConnection.BuildUri(BestHTTP.SignalR.RequestTypes)
    name: BuildUri
    nameWithType: IConnection.BuildUri
    fullName: BestHTTP.SignalR.IConnection.BuildUri
  - name: (
    nameWithType: (
    fullName: (
  - uid: BestHTTP.SignalR.RequestTypes
    name: RequestTypes
    nameWithType: RequestTypes
    fullName: BestHTTP.SignalR.RequestTypes
  - name: )
    nameWithType: )
    fullName: )
- uid: BestHTTP.SignalR.RequestTypes
  commentId: T:BestHTTP.SignalR.RequestTypes
  parent: BestHTTP.SignalR
  name: RequestTypes
  nameWithType: RequestTypes
  fullName: BestHTTP.SignalR.RequestTypes
- uid: BestHTTP.SignalR.IConnection.BuildUri(BestHTTP.SignalR.RequestTypes,TransportBase)
  commentId: M:BestHTTP.SignalR.IConnection.BuildUri(BestHTTP.SignalR.RequestTypes,TransportBase)
  parent: BestHTTP.SignalR.IConnection
  isExternal: true
  name: BuildUri(RequestTypes, TransportBase)
  nameWithType: IConnection.BuildUri(RequestTypes, TransportBase)
  fullName: BestHTTP.SignalR.IConnection.BuildUri(BestHTTP.SignalR.RequestTypes, TransportBase)
  spec.csharp:
  - uid: BestHTTP.SignalR.IConnection.BuildUri(BestHTTP.SignalR.RequestTypes,TransportBase)
    name: BuildUri
    nameWithType: IConnection.BuildUri
    fullName: BestHTTP.SignalR.IConnection.BuildUri
  - name: (
    nameWithType: (
    fullName: (
  - uid: BestHTTP.SignalR.RequestTypes
    name: RequestTypes
    nameWithType: RequestTypes
    fullName: BestHTTP.SignalR.RequestTypes
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: TransportBase
    name: TransportBase
    nameWithType: TransportBase
    fullName: TransportBase
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BestHTTP.SignalR.IConnection.BuildUri(BestHTTP.SignalR.RequestTypes,TransportBase)
    name: BuildUri
    nameWithType: IConnection.BuildUri
    fullName: BestHTTP.SignalR.IConnection.BuildUri
  - name: (
    nameWithType: (
    fullName: (
  - uid: BestHTTP.SignalR.RequestTypes
    name: RequestTypes
    nameWithType: RequestTypes
    fullName: BestHTTP.SignalR.RequestTypes
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: TransportBase
    name: TransportBase
    nameWithType: TransportBase
    fullName: TransportBase
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BestHTTP.SignalR.Connection.BestHTTP#SignalR#IConnection#PrepareRequest*
  commentId: Overload:BestHTTP.SignalR.Connection.BestHTTP#SignalR#IConnection#PrepareRequest
  name: IConnection.PrepareRequest
  nameWithType: Connection.IConnection.PrepareRequest
  fullName: BestHTTP.SignalR.Connection.BestHTTP.SignalR.IConnection.PrepareRequest
  nameWithType.vb: Connection.BestHTTP.SignalR.IConnection.PrepareRequest
  name.vb: BestHTTP.SignalR.IConnection.PrepareRequest
- uid: BestHTTP.SignalR.IConnection.PrepareRequest(BestHTTP.HTTPRequest,BestHTTP.SignalR.RequestTypes)
  commentId: M:BestHTTP.SignalR.IConnection.PrepareRequest(BestHTTP.HTTPRequest,BestHTTP.SignalR.RequestTypes)
  parent: BestHTTP.SignalR.IConnection
  name: PrepareRequest(HTTPRequest, RequestTypes)
  nameWithType: IConnection.PrepareRequest(HTTPRequest, RequestTypes)
  fullName: BestHTTP.SignalR.IConnection.PrepareRequest(BestHTTP.HTTPRequest, BestHTTP.SignalR.RequestTypes)
  spec.csharp:
  - uid: BestHTTP.SignalR.IConnection.PrepareRequest(BestHTTP.HTTPRequest,BestHTTP.SignalR.RequestTypes)
    name: PrepareRequest
    nameWithType: IConnection.PrepareRequest
    fullName: BestHTTP.SignalR.IConnection.PrepareRequest
  - name: (
    nameWithType: (
    fullName: (
  - uid: BestHTTP.HTTPRequest
    name: HTTPRequest
    nameWithType: HTTPRequest
    fullName: BestHTTP.HTTPRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BestHTTP.SignalR.RequestTypes
    name: RequestTypes
    nameWithType: RequestTypes
    fullName: BestHTTP.SignalR.RequestTypes
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BestHTTP.SignalR.IConnection.PrepareRequest(BestHTTP.HTTPRequest,BestHTTP.SignalR.RequestTypes)
    name: PrepareRequest
    nameWithType: IConnection.PrepareRequest
    fullName: BestHTTP.SignalR.IConnection.PrepareRequest
  - name: (
    nameWithType: (
    fullName: (
  - uid: BestHTTP.HTTPRequest
    name: HTTPRequest
    nameWithType: HTTPRequest
    fullName: BestHTTP.HTTPRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BestHTTP.SignalR.RequestTypes
    name: RequestTypes
    nameWithType: RequestTypes
    fullName: BestHTTP.SignalR.RequestTypes
  - name: )
    nameWithType: )
    fullName: )
- uid: BestHTTP.HTTPRequest
  commentId: T:BestHTTP.HTTPRequest
  parent: BestHTTP
  name: HTTPRequest
  nameWithType: HTTPRequest
  fullName: BestHTTP.HTTPRequest
- uid: BestHTTP
  commentId: N:BestHTTP
  name: BestHTTP
  nameWithType: BestHTTP
  fullName: BestHTTP
- uid: BestHTTP.SignalR.Connection.BestHTTP#SignalR#IConnection#ParseResponse*
  commentId: Overload:BestHTTP.SignalR.Connection.BestHTTP#SignalR#IConnection#ParseResponse
  name: IConnection.ParseResponse
  nameWithType: Connection.IConnection.ParseResponse
  fullName: BestHTTP.SignalR.Connection.BestHTTP.SignalR.IConnection.ParseResponse
  nameWithType.vb: Connection.BestHTTP.SignalR.IConnection.ParseResponse
  name.vb: BestHTTP.SignalR.IConnection.ParseResponse
- uid: BestHTTP.SignalR.IConnection.ParseResponse(System.String)
  commentId: M:BestHTTP.SignalR.IConnection.ParseResponse(System.String)
  parent: BestHTTP.SignalR.IConnection
  isExternal: true
  name: ParseResponse(String)
  nameWithType: IConnection.ParseResponse(String)
  fullName: BestHTTP.SignalR.IConnection.ParseResponse(System.String)
  spec.csharp:
  - uid: BestHTTP.SignalR.IConnection.ParseResponse(System.String)
    name: ParseResponse
    nameWithType: IConnection.ParseResponse
    fullName: BestHTTP.SignalR.IConnection.ParseResponse
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BestHTTP.SignalR.IConnection.ParseResponse(System.String)
    name: ParseResponse
    nameWithType: IConnection.ParseResponse
    fullName: BestHTTP.SignalR.IConnection.ParseResponse
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
