### YamlMime:ManagedReference
items:
- uid: Org.BouncyCastle.Crypto.Tls.ByteQueue
  commentId: T:Org.BouncyCastle.Crypto.Tls.ByteQueue
  id: ByteQueue
  parent: Org.BouncyCastle.Crypto.Tls
  children:
  - Org.BouncyCastle.Crypto.Tls.ByteQueue.#ctor
  - Org.BouncyCastle.Crypto.Tls.ByteQueue.#ctor(System.Int32)
  - Org.BouncyCastle.Crypto.Tls.ByteQueue.AddData(System.Byte[],System.Int32,System.Int32)
  - Org.BouncyCastle.Crypto.Tls.ByteQueue.Available
  - Org.BouncyCastle.Crypto.Tls.ByteQueue.NextTwoPow(System.Int32)
  - Org.BouncyCastle.Crypto.Tls.ByteQueue.Read(System.Byte[],System.Int32,System.Int32,System.Int32)
  - Org.BouncyCastle.Crypto.Tls.ByteQueue.RemoveData(System.Byte[],System.Int32,System.Int32,System.Int32)
  - Org.BouncyCastle.Crypto.Tls.ByteQueue.RemoveData(System.Int32)
  - Org.BouncyCastle.Crypto.Tls.ByteQueue.RemoveData(System.Int32,System.Int32)
  langs:
  - csharp
  - vb
  name: ByteQueue
  nameWithType: ByteQueue
  fullName: Org.BouncyCastle.Crypto.Tls.ByteQueue
  type: Class
  source:
    id: ByteQueue
    path: ''
    startLine: 75381
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Tls
  remarks: "\nA queue for bytes.\n<p>\nThis file could be more optimized.\n</p>\n"
  example: []
  syntax:
    content: public class ByteQueue
    content.vb: Public Class ByteQueue
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ToString
  - System.Object.ReferenceEquals(System.Object,System.Object)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Org.BouncyCastle.Crypto.Tls.ByteQueue.NextTwoPow(System.Int32)
  commentId: M:Org.BouncyCastle.Crypto.Tls.ByteQueue.NextTwoPow(System.Int32)
  id: NextTwoPow(System.Int32)
  parent: Org.BouncyCastle.Crypto.Tls.ByteQueue
  langs:
  - csharp
  - vb
  name: NextTwoPow(Int32)
  nameWithType: ByteQueue.NextTwoPow(Int32)
  fullName: Org.BouncyCastle.Crypto.Tls.ByteQueue.NextTwoPow(System.Int32)
  type: Method
  source:
    id: NextTwoPow
    path: ''
    startLine: 75384
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Tls
  example: []
  syntax:
    content: public static int NextTwoPow(int i)
    parameters:
    - id: i
      type: System.Int32
    return:
      type: System.Int32
      description: The smallest number which can be written as 2^x which is bigger than i.
    content.vb: Public Shared Function NextTwoPow(i As Integer) As Integer
  overload: Org.BouncyCastle.Crypto.Tls.ByteQueue.NextTwoPow*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Org.BouncyCastle.Crypto.Tls.ByteQueue.#ctor
  commentId: M:Org.BouncyCastle.Crypto.Tls.ByteQueue.#ctor
  id: '#ctor'
  parent: Org.BouncyCastle.Crypto.Tls.ByteQueue
  langs:
  - csharp
  - vb
  name: ByteQueue()
  nameWithType: ByteQueue.ByteQueue()
  fullName: Org.BouncyCastle.Crypto.Tls.ByteQueue.ByteQueue()
  type: Constructor
  source:
    id: .ctor
    path: ''
    startLine: 75420
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Tls
  syntax:
    content: public ByteQueue()
    content.vb: Public Sub New
  overload: Org.BouncyCastle.Crypto.Tls.ByteQueue.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Org.BouncyCastle.Crypto.Tls.ByteQueue.#ctor(System.Int32)
  commentId: M:Org.BouncyCastle.Crypto.Tls.ByteQueue.#ctor(System.Int32)
  id: '#ctor(System.Int32)'
  parent: Org.BouncyCastle.Crypto.Tls.ByteQueue
  langs:
  - csharp
  - vb
  name: ByteQueue(Int32)
  nameWithType: ByteQueue.ByteQueue(Int32)
  fullName: Org.BouncyCastle.Crypto.Tls.ByteQueue.ByteQueue(System.Int32)
  type: Constructor
  source:
    id: .ctor
    path: ''
    startLine: 75425
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Tls
  syntax:
    content: public ByteQueue(int capacity)
    parameters:
    - id: capacity
      type: System.Int32
    content.vb: Public Sub New(capacity As Integer)
  overload: Org.BouncyCastle.Crypto.Tls.ByteQueue.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Org.BouncyCastle.Crypto.Tls.ByteQueue.Read(System.Byte[],System.Int32,System.Int32,System.Int32)
  commentId: M:Org.BouncyCastle.Crypto.Tls.ByteQueue.Read(System.Byte[],System.Int32,System.Int32,System.Int32)
  id: Read(System.Byte[],System.Int32,System.Int32,System.Int32)
  parent: Org.BouncyCastle.Crypto.Tls.ByteQueue
  langs:
  - csharp
  - vb
  name: Read(Byte[], Int32, Int32, Int32)
  nameWithType: ByteQueue.Read(Byte[], Int32, Int32, Int32)
  fullName: Org.BouncyCastle.Crypto.Tls.ByteQueue.Read(System.Byte[], System.Int32, System.Int32, System.Int32)
  type: Method
  source:
    id: Read
    path: ''
    startLine: 75435
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Tls
  summary: Read data from the buffer.
  example: []
  syntax:
    content: public void Read(byte[] buf, int offset, int len, int skip)
    parameters:
    - id: buf
      type: System.Byte[]
      description: The buffer where the read data will be copied to.
    - id: offset
      type: System.Int32
      description: How many bytes to skip at the beginning of buf.
    - id: len
      type: System.Int32
      description: How many bytes to read at all.
    - id: skip
      type: System.Int32
      description: How many bytes from our data to skip.
    content.vb: Public Sub Read(buf As Byte(), offset As Integer, len As Integer, skip As Integer)
  overload: Org.BouncyCastle.Crypto.Tls.ByteQueue.Read*
  nameWithType.vb: ByteQueue.Read(Byte(), Int32, Int32, Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Org.BouncyCastle.Crypto.Tls.ByteQueue.Read(System.Byte(), System.Int32, System.Int32, System.Int32)
  name.vb: Read(Byte(), Int32, Int32, Int32)
- uid: Org.BouncyCastle.Crypto.Tls.ByteQueue.AddData(System.Byte[],System.Int32,System.Int32)
  commentId: M:Org.BouncyCastle.Crypto.Tls.ByteQueue.AddData(System.Byte[],System.Int32,System.Int32)
  id: AddData(System.Byte[],System.Int32,System.Int32)
  parent: Org.BouncyCastle.Crypto.Tls.ByteQueue
  langs:
  - csharp
  - vb
  name: AddData(Byte[], Int32, Int32)
  nameWithType: ByteQueue.AddData(Byte[], Int32, Int32)
  fullName: Org.BouncyCastle.Crypto.Tls.ByteQueue.AddData(System.Byte[], System.Int32, System.Int32)
  type: Method
  source:
    id: AddData
    path: ''
    startLine: 75456
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Tls
  summary: Add some data to our buffer.
  example: []
  syntax:
    content: public void AddData(byte[] data, int offset, int len)
    parameters:
    - id: data
      type: System.Byte[]
      description: A byte-array to read data from.
    - id: offset
      type: System.Int32
      description: How many bytes to skip at the beginning of the array.
    - id: len
      type: System.Int32
      description: How many bytes to read from the array.
    content.vb: Public Sub AddData(data As Byte(), offset As Integer, len As Integer)
  overload: Org.BouncyCastle.Crypto.Tls.ByteQueue.AddData*
  nameWithType.vb: ByteQueue.AddData(Byte(), Int32, Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Org.BouncyCastle.Crypto.Tls.ByteQueue.AddData(System.Byte(), System.Int32, System.Int32)
  name.vb: AddData(Byte(), Int32, Int32)
- uid: Org.BouncyCastle.Crypto.Tls.ByteQueue.RemoveData(System.Int32)
  commentId: M:Org.BouncyCastle.Crypto.Tls.ByteQueue.RemoveData(System.Int32)
  id: RemoveData(System.Int32)
  parent: Org.BouncyCastle.Crypto.Tls.ByteQueue
  langs:
  - csharp
  - vb
  name: RemoveData(Int32)
  nameWithType: ByteQueue.RemoveData(Int32)
  fullName: Org.BouncyCastle.Crypto.Tls.ByteQueue.RemoveData(System.Int32)
  type: Method
  source:
    id: RemoveData
    path: ''
    startLine: 75483
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Tls
  summary: Remove some bytes from our data from the beginning.
  example: []
  syntax:
    content: public void RemoveData(int i)
    parameters:
    - id: i
      type: System.Int32
      description: How many bytes to remove.
    content.vb: Public Sub RemoveData(i As Integer)
  overload: Org.BouncyCastle.Crypto.Tls.ByteQueue.RemoveData*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Org.BouncyCastle.Crypto.Tls.ByteQueue.RemoveData(System.Byte[],System.Int32,System.Int32,System.Int32)
  commentId: M:Org.BouncyCastle.Crypto.Tls.ByteQueue.RemoveData(System.Byte[],System.Int32,System.Int32,System.Int32)
  id: RemoveData(System.Byte[],System.Int32,System.Int32,System.Int32)
  parent: Org.BouncyCastle.Crypto.Tls.ByteQueue
  langs:
  - csharp
  - vb
  name: RemoveData(Byte[], Int32, Int32, Int32)
  nameWithType: ByteQueue.RemoveData(Byte[], Int32, Int32, Int32)
  fullName: Org.BouncyCastle.Crypto.Tls.ByteQueue.RemoveData(System.Byte[], System.Int32, System.Int32, System.Int32)
  type: Method
  source:
    id: RemoveData
    path: ''
    startLine: 75498
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Tls
  syntax:
    content: public void RemoveData(byte[] buf, int off, int len, int skip)
    parameters:
    - id: buf
      type: System.Byte[]
    - id: off
      type: System.Int32
    - id: len
      type: System.Int32
    - id: skip
      type: System.Int32
    content.vb: Public Sub RemoveData(buf As Byte(), off As Integer, len As Integer, skip As Integer)
  overload: Org.BouncyCastle.Crypto.Tls.ByteQueue.RemoveData*
  nameWithType.vb: ByteQueue.RemoveData(Byte(), Int32, Int32, Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Org.BouncyCastle.Crypto.Tls.ByteQueue.RemoveData(System.Byte(), System.Int32, System.Int32, System.Int32)
  name.vb: RemoveData(Byte(), Int32, Int32, Int32)
- uid: Org.BouncyCastle.Crypto.Tls.ByteQueue.RemoveData(System.Int32,System.Int32)
  commentId: M:Org.BouncyCastle.Crypto.Tls.ByteQueue.RemoveData(System.Int32,System.Int32)
  id: RemoveData(System.Int32,System.Int32)
  parent: Org.BouncyCastle.Crypto.Tls.ByteQueue
  langs:
  - csharp
  - vb
  name: RemoveData(Int32, Int32)
  nameWithType: ByteQueue.RemoveData(Int32, Int32)
  fullName: Org.BouncyCastle.Crypto.Tls.ByteQueue.RemoveData(System.Int32, System.Int32)
  type: Method
  source:
    id: RemoveData
    path: ''
    startLine: 75504
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Tls
  syntax:
    content: public byte[] RemoveData(int len, int skip)
    parameters:
    - id: len
      type: System.Int32
    - id: skip
      type: System.Int32
    return:
      type: System.Byte[]
    content.vb: Public Function RemoveData(len As Integer, skip As Integer) As Byte()
  overload: Org.BouncyCastle.Crypto.Tls.ByteQueue.RemoveData*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Org.BouncyCastle.Crypto.Tls.ByteQueue.Available
  commentId: P:Org.BouncyCastle.Crypto.Tls.ByteQueue.Available
  id: Available
  parent: Org.BouncyCastle.Crypto.Tls.ByteQueue
  langs:
  - csharp
  - vb
  name: Available
  nameWithType: ByteQueue.Available
  fullName: Org.BouncyCastle.Crypto.Tls.ByteQueue.Available
  type: Property
  source:
    id: Available
    path: ''
    startLine: 75512
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Tls
  summary: The number of bytes which are available in this buffer.
  example: []
  syntax:
    content: public int Available { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property Available As Integer
  overload: Org.BouncyCastle.Crypto.Tls.ByteQueue.Available*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: Org.BouncyCastle.Crypto.Tls
  commentId: N:Org.BouncyCastle.Crypto.Tls
  name: Org.BouncyCastle.Crypto.Tls
  nameWithType: Org.BouncyCastle.Crypto.Tls
  fullName: Org.BouncyCastle.Crypto.Tls
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Org.BouncyCastle.Crypto.Tls.ByteQueue.NextTwoPow*
  commentId: Overload:Org.BouncyCastle.Crypto.Tls.ByteQueue.NextTwoPow
  name: NextTwoPow
  nameWithType: ByteQueue.NextTwoPow
  fullName: Org.BouncyCastle.Crypto.Tls.ByteQueue.NextTwoPow
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Org.BouncyCastle.Crypto.Tls.ByteQueue.#ctor*
  commentId: Overload:Org.BouncyCastle.Crypto.Tls.ByteQueue.#ctor
  name: ByteQueue
  nameWithType: ByteQueue.ByteQueue
  fullName: Org.BouncyCastle.Crypto.Tls.ByteQueue.ByteQueue
- uid: Org.BouncyCastle.Crypto.Tls.ByteQueue.Read*
  commentId: Overload:Org.BouncyCastle.Crypto.Tls.ByteQueue.Read
  name: Read
  nameWithType: ByteQueue.Read
  fullName: Org.BouncyCastle.Crypto.Tls.ByteQueue.Read
- uid: System.Byte[]
  isExternal: true
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullName.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Org.BouncyCastle.Crypto.Tls.ByteQueue.AddData*
  commentId: Overload:Org.BouncyCastle.Crypto.Tls.ByteQueue.AddData
  name: AddData
  nameWithType: ByteQueue.AddData
  fullName: Org.BouncyCastle.Crypto.Tls.ByteQueue.AddData
- uid: Org.BouncyCastle.Crypto.Tls.ByteQueue.RemoveData*
  commentId: Overload:Org.BouncyCastle.Crypto.Tls.ByteQueue.RemoveData
  name: RemoveData
  nameWithType: ByteQueue.RemoveData
  fullName: Org.BouncyCastle.Crypto.Tls.ByteQueue.RemoveData
- uid: Org.BouncyCastle.Crypto.Tls.ByteQueue.Available*
  commentId: Overload:Org.BouncyCastle.Crypto.Tls.ByteQueue.Available
  name: Available
  nameWithType: ByteQueue.Available
  fullName: Org.BouncyCastle.Crypto.Tls.ByteQueue.Available
