### YamlMime:ManagedReference
items:
- uid: Org.BouncyCastle.Crypto.Generators.RsaKeyPairGenerator
  commentId: T:Org.BouncyCastle.Crypto.Generators.RsaKeyPairGenerator
  id: RsaKeyPairGenerator
  parent: Org.BouncyCastle.Crypto.Generators
  children:
  - Org.BouncyCastle.Crypto.Generators.RsaKeyPairGenerator.ChooseRandomPrime(System.Int32,BigInteger)
  - Org.BouncyCastle.Crypto.Generators.RsaKeyPairGenerator.DefaultPublicExponent
  - Org.BouncyCastle.Crypto.Generators.RsaKeyPairGenerator.DefaultTests
  - Org.BouncyCastle.Crypto.Generators.RsaKeyPairGenerator.GenerateKeyPair
  - Org.BouncyCastle.Crypto.Generators.RsaKeyPairGenerator.Init(Org.BouncyCastle.Crypto.KeyGenerationParameters)
  - Org.BouncyCastle.Crypto.Generators.RsaKeyPairGenerator.One
  - Org.BouncyCastle.Crypto.Generators.RsaKeyPairGenerator.parameters
  langs:
  - csharp
  - vb
  name: RsaKeyPairGenerator
  nameWithType: RsaKeyPairGenerator
  fullName: Org.BouncyCastle.Crypto.Generators.RsaKeyPairGenerator
  type: Class
  source:
    id: RsaKeyPairGenerator
    path: ''
    startLine: 102976
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Generators
  example: []
  syntax:
    content: 'public class RsaKeyPairGenerator : IAsymmetricCipherKeyPairGenerator'
    content.vb: >-
      Public Class RsaKeyPairGenerator
          Implements IAsymmetricCipherKeyPairGenerator
  inheritance:
  - System.Object
  implements:
  - Org.BouncyCastle.Crypto.IAsymmetricCipherKeyPairGenerator
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ToString
  - System.Object.ReferenceEquals(System.Object,System.Object)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Org.BouncyCastle.Crypto.Generators.RsaKeyPairGenerator.One
  commentId: F:Org.BouncyCastle.Crypto.Generators.RsaKeyPairGenerator.One
  id: One
  parent: Org.BouncyCastle.Crypto.Generators.RsaKeyPairGenerator
  langs:
  - csharp
  - vb
  name: One
  nameWithType: RsaKeyPairGenerator.One
  fullName: Org.BouncyCastle.Crypto.Generators.RsaKeyPairGenerator.One
  type: Field
  source:
    id: One
    path: ''
    startLine: 102983
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Generators
  syntax:
    content: protected static readonly BigInteger One
    return:
      type: BigInteger
    content.vb: Protected Shared ReadOnly One As BigInteger
  modifiers.csharp:
  - protected
  - static
  - readonly
  modifiers.vb:
  - Protected
  - Shared
  - ReadOnly
- uid: Org.BouncyCastle.Crypto.Generators.RsaKeyPairGenerator.DefaultPublicExponent
  commentId: F:Org.BouncyCastle.Crypto.Generators.RsaKeyPairGenerator.DefaultPublicExponent
  id: DefaultPublicExponent
  parent: Org.BouncyCastle.Crypto.Generators.RsaKeyPairGenerator
  langs:
  - csharp
  - vb
  name: DefaultPublicExponent
  nameWithType: RsaKeyPairGenerator.DefaultPublicExponent
  fullName: Org.BouncyCastle.Crypto.Generators.RsaKeyPairGenerator.DefaultPublicExponent
  type: Field
  source:
    id: DefaultPublicExponent
    path: ''
    startLine: 102984
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Generators
  syntax:
    content: protected static readonly BigInteger DefaultPublicExponent
    return:
      type: BigInteger
    content.vb: Protected Shared ReadOnly DefaultPublicExponent As BigInteger
  modifiers.csharp:
  - protected
  - static
  - readonly
  modifiers.vb:
  - Protected
  - Shared
  - ReadOnly
- uid: Org.BouncyCastle.Crypto.Generators.RsaKeyPairGenerator.DefaultTests
  commentId: F:Org.BouncyCastle.Crypto.Generators.RsaKeyPairGenerator.DefaultTests
  id: DefaultTests
  parent: Org.BouncyCastle.Crypto.Generators.RsaKeyPairGenerator
  langs:
  - csharp
  - vb
  name: DefaultTests
  nameWithType: RsaKeyPairGenerator.DefaultTests
  fullName: Org.BouncyCastle.Crypto.Generators.RsaKeyPairGenerator.DefaultTests
  type: Field
  source:
    id: DefaultTests
    path: ''
    startLine: 102985
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Generators
  syntax:
    content: protected const int DefaultTests = 100
    return:
      type: System.Int32
    content.vb: Protected Const DefaultTests As Integer = 100
  modifiers.csharp:
  - protected
  - const
  modifiers.vb:
  - Protected
  - Const
- uid: Org.BouncyCastle.Crypto.Generators.RsaKeyPairGenerator.parameters
  commentId: F:Org.BouncyCastle.Crypto.Generators.RsaKeyPairGenerator.parameters
  id: parameters
  parent: Org.BouncyCastle.Crypto.Generators.RsaKeyPairGenerator
  langs:
  - csharp
  - vb
  name: parameters
  nameWithType: RsaKeyPairGenerator.parameters
  fullName: Org.BouncyCastle.Crypto.Generators.RsaKeyPairGenerator.parameters
  type: Field
  source:
    id: parameters
    path: ''
    startLine: 102987
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Generators
  syntax:
    content: protected RsaKeyGenerationParameters parameters
    return:
      type: RsaKeyGenerationParameters
    content.vb: Protected parameters As RsaKeyGenerationParameters
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Org.BouncyCastle.Crypto.Generators.RsaKeyPairGenerator.Init(Org.BouncyCastle.Crypto.KeyGenerationParameters)
  commentId: M:Org.BouncyCastle.Crypto.Generators.RsaKeyPairGenerator.Init(Org.BouncyCastle.Crypto.KeyGenerationParameters)
  id: Init(Org.BouncyCastle.Crypto.KeyGenerationParameters)
  parent: Org.BouncyCastle.Crypto.Generators.RsaKeyPairGenerator
  langs:
  - csharp
  - vb
  name: Init(KeyGenerationParameters)
  nameWithType: RsaKeyPairGenerator.Init(KeyGenerationParameters)
  fullName: Org.BouncyCastle.Crypto.Generators.RsaKeyPairGenerator.Init(Org.BouncyCastle.Crypto.KeyGenerationParameters)
  type: Method
  source:
    id: Init
    path: ''
    startLine: 102989
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Generators
  syntax:
    content: public virtual void Init(KeyGenerationParameters parameters)
    parameters:
    - id: parameters
      type: Org.BouncyCastle.Crypto.KeyGenerationParameters
    content.vb: Public Overridable Sub Init(parameters As KeyGenerationParameters)
  overload: Org.BouncyCastle.Crypto.Generators.RsaKeyPairGenerator.Init*
  implements:
  - Org.BouncyCastle.Crypto.IAsymmetricCipherKeyPairGenerator.Init(Org.BouncyCastle.Crypto.KeyGenerationParameters)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Org.BouncyCastle.Crypto.Generators.RsaKeyPairGenerator.GenerateKeyPair
  commentId: M:Org.BouncyCastle.Crypto.Generators.RsaKeyPairGenerator.GenerateKeyPair
  id: GenerateKeyPair
  parent: Org.BouncyCastle.Crypto.Generators.RsaKeyPairGenerator
  langs:
  - csharp
  - vb
  name: GenerateKeyPair()
  nameWithType: RsaKeyPairGenerator.GenerateKeyPair()
  fullName: Org.BouncyCastle.Crypto.Generators.RsaKeyPairGenerator.GenerateKeyPair()
  type: Method
  source:
    id: GenerateKeyPair
    path: ''
    startLine: 103003
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Generators
  syntax:
    content: public virtual AsymmetricCipherKeyPair GenerateKeyPair()
    return:
      type: Org.BouncyCastle.Crypto.AsymmetricCipherKeyPair
    content.vb: Public Overridable Function GenerateKeyPair As AsymmetricCipherKeyPair
  overload: Org.BouncyCastle.Crypto.Generators.RsaKeyPairGenerator.GenerateKeyPair*
  implements:
  - Org.BouncyCastle.Crypto.IAsymmetricCipherKeyPairGenerator.GenerateKeyPair
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Org.BouncyCastle.Crypto.Generators.RsaKeyPairGenerator.ChooseRandomPrime(System.Int32,BigInteger)
  commentId: M:Org.BouncyCastle.Crypto.Generators.RsaKeyPairGenerator.ChooseRandomPrime(System.Int32,BigInteger)
  id: ChooseRandomPrime(System.Int32,BigInteger)
  parent: Org.BouncyCastle.Crypto.Generators.RsaKeyPairGenerator
  langs:
  - csharp
  - vb
  name: ChooseRandomPrime(Int32, BigInteger)
  nameWithType: RsaKeyPairGenerator.ChooseRandomPrime(Int32, BigInteger)
  fullName: Org.BouncyCastle.Crypto.Generators.RsaKeyPairGenerator.ChooseRandomPrime(System.Int32, BigInteger)
  type: Method
  source:
    id: ChooseRandomPrime
    path: ''
    startLine: 103104
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Generators
  summary: Choose a random prime value for use with RSA
  example: []
  syntax:
    content: protected virtual BigInteger ChooseRandomPrime(int bitlength, BigInteger e)
    parameters:
    - id: bitlength
      type: System.Int32
      description: the bit-length of the returned prime
    - id: e
      type: BigInteger
      description: the RSA public exponent
    return:
      type: BigInteger
      description: a prime p, with (p-1) relatively prime to e
    content.vb: Protected Overridable Function ChooseRandomPrime(bitlength As Integer, e As BigInteger) As BigInteger
  overload: Org.BouncyCastle.Crypto.Generators.RsaKeyPairGenerator.ChooseRandomPrime*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
references:
- uid: Org.BouncyCastle.Crypto.Generators
  commentId: N:Org.BouncyCastle.Crypto.Generators
  name: Org.BouncyCastle.Crypto.Generators
  nameWithType: Org.BouncyCastle.Crypto.Generators
  fullName: Org.BouncyCastle.Crypto.Generators
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Org.BouncyCastle.Crypto.IAsymmetricCipherKeyPairGenerator
  commentId: T:Org.BouncyCastle.Crypto.IAsymmetricCipherKeyPairGenerator
  parent: Org.BouncyCastle.Crypto
  name: IAsymmetricCipherKeyPairGenerator
  nameWithType: IAsymmetricCipherKeyPairGenerator
  fullName: Org.BouncyCastle.Crypto.IAsymmetricCipherKeyPairGenerator
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Org.BouncyCastle.Crypto
  commentId: N:Org.BouncyCastle.Crypto
  name: Org.BouncyCastle.Crypto
  nameWithType: Org.BouncyCastle.Crypto
  fullName: Org.BouncyCastle.Crypto
- uid: BigInteger
  isExternal: true
  name: BigInteger
  nameWithType: BigInteger
  fullName: BigInteger
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: RsaKeyGenerationParameters
  commentId: '!:RsaKeyGenerationParameters'
  isExternal: true
  name: RsaKeyGenerationParameters
  nameWithType: RsaKeyGenerationParameters
  fullName: RsaKeyGenerationParameters
- uid: Org.BouncyCastle.Crypto.Generators.RsaKeyPairGenerator.Init*
  commentId: Overload:Org.BouncyCastle.Crypto.Generators.RsaKeyPairGenerator.Init
  name: Init
  nameWithType: RsaKeyPairGenerator.Init
  fullName: Org.BouncyCastle.Crypto.Generators.RsaKeyPairGenerator.Init
- uid: Org.BouncyCastle.Crypto.IAsymmetricCipherKeyPairGenerator.Init(Org.BouncyCastle.Crypto.KeyGenerationParameters)
  commentId: M:Org.BouncyCastle.Crypto.IAsymmetricCipherKeyPairGenerator.Init(Org.BouncyCastle.Crypto.KeyGenerationParameters)
  parent: Org.BouncyCastle.Crypto.IAsymmetricCipherKeyPairGenerator
  name: Init(KeyGenerationParameters)
  nameWithType: IAsymmetricCipherKeyPairGenerator.Init(KeyGenerationParameters)
  fullName: Org.BouncyCastle.Crypto.IAsymmetricCipherKeyPairGenerator.Init(Org.BouncyCastle.Crypto.KeyGenerationParameters)
  spec.csharp:
  - uid: Org.BouncyCastle.Crypto.IAsymmetricCipherKeyPairGenerator.Init(Org.BouncyCastle.Crypto.KeyGenerationParameters)
    name: Init
    nameWithType: IAsymmetricCipherKeyPairGenerator.Init
    fullName: Org.BouncyCastle.Crypto.IAsymmetricCipherKeyPairGenerator.Init
  - name: (
    nameWithType: (
    fullName: (
  - uid: Org.BouncyCastle.Crypto.KeyGenerationParameters
    name: KeyGenerationParameters
    nameWithType: KeyGenerationParameters
    fullName: Org.BouncyCastle.Crypto.KeyGenerationParameters
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Org.BouncyCastle.Crypto.IAsymmetricCipherKeyPairGenerator.Init(Org.BouncyCastle.Crypto.KeyGenerationParameters)
    name: Init
    nameWithType: IAsymmetricCipherKeyPairGenerator.Init
    fullName: Org.BouncyCastle.Crypto.IAsymmetricCipherKeyPairGenerator.Init
  - name: (
    nameWithType: (
    fullName: (
  - uid: Org.BouncyCastle.Crypto.KeyGenerationParameters
    name: KeyGenerationParameters
    nameWithType: KeyGenerationParameters
    fullName: Org.BouncyCastle.Crypto.KeyGenerationParameters
  - name: )
    nameWithType: )
    fullName: )
- uid: Org.BouncyCastle.Crypto.KeyGenerationParameters
  commentId: T:Org.BouncyCastle.Crypto.KeyGenerationParameters
  parent: Org.BouncyCastle.Crypto
  name: KeyGenerationParameters
  nameWithType: KeyGenerationParameters
  fullName: Org.BouncyCastle.Crypto.KeyGenerationParameters
- uid: Org.BouncyCastle.Crypto.Generators.RsaKeyPairGenerator.GenerateKeyPair*
  commentId: Overload:Org.BouncyCastle.Crypto.Generators.RsaKeyPairGenerator.GenerateKeyPair
  name: GenerateKeyPair
  nameWithType: RsaKeyPairGenerator.GenerateKeyPair
  fullName: Org.BouncyCastle.Crypto.Generators.RsaKeyPairGenerator.GenerateKeyPair
- uid: Org.BouncyCastle.Crypto.IAsymmetricCipherKeyPairGenerator.GenerateKeyPair
  commentId: M:Org.BouncyCastle.Crypto.IAsymmetricCipherKeyPairGenerator.GenerateKeyPair
  parent: Org.BouncyCastle.Crypto.IAsymmetricCipherKeyPairGenerator
  name: GenerateKeyPair()
  nameWithType: IAsymmetricCipherKeyPairGenerator.GenerateKeyPair()
  fullName: Org.BouncyCastle.Crypto.IAsymmetricCipherKeyPairGenerator.GenerateKeyPair()
  spec.csharp:
  - uid: Org.BouncyCastle.Crypto.IAsymmetricCipherKeyPairGenerator.GenerateKeyPair
    name: GenerateKeyPair
    nameWithType: IAsymmetricCipherKeyPairGenerator.GenerateKeyPair
    fullName: Org.BouncyCastle.Crypto.IAsymmetricCipherKeyPairGenerator.GenerateKeyPair
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Org.BouncyCastle.Crypto.IAsymmetricCipherKeyPairGenerator.GenerateKeyPair
    name: GenerateKeyPair
    nameWithType: IAsymmetricCipherKeyPairGenerator.GenerateKeyPair
    fullName: Org.BouncyCastle.Crypto.IAsymmetricCipherKeyPairGenerator.GenerateKeyPair
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Org.BouncyCastle.Crypto.AsymmetricCipherKeyPair
  commentId: T:Org.BouncyCastle.Crypto.AsymmetricCipherKeyPair
  parent: Org.BouncyCastle.Crypto
  name: AsymmetricCipherKeyPair
  nameWithType: AsymmetricCipherKeyPair
  fullName: Org.BouncyCastle.Crypto.AsymmetricCipherKeyPair
- uid: Org.BouncyCastle.Crypto.Generators.RsaKeyPairGenerator.ChooseRandomPrime*
  commentId: Overload:Org.BouncyCastle.Crypto.Generators.RsaKeyPairGenerator.ChooseRandomPrime
  name: ChooseRandomPrime
  nameWithType: RsaKeyPairGenerator.ChooseRandomPrime
  fullName: Org.BouncyCastle.Crypto.Generators.RsaKeyPairGenerator.ChooseRandomPrime
