### YamlMime:ManagedReference
items:
- uid: Org.BouncyCastle.Crypto.Tls.AlwaysValidVerifyer
  commentId: T:Org.BouncyCastle.Crypto.Tls.AlwaysValidVerifyer
  id: AlwaysValidVerifyer
  parent: Org.BouncyCastle.Crypto.Tls
  children:
  - Org.BouncyCastle.Crypto.Tls.AlwaysValidVerifyer.IsValid(System.Uri,X509CertificateStructure[])
  langs:
  - csharp
  - vb
  name: AlwaysValidVerifyer
  nameWithType: AlwaysValidVerifyer
  fullName: Org.BouncyCastle.Crypto.Tls.AlwaysValidVerifyer
  type: Class
  source:
    id: AlwaysValidVerifyer
    path: ''
    startLine: 66335
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Tls
  remarks: "\nA certificate verifyer, that will always return true.\n<pre>\nDO NOT USE THIS FILE UNLESS YOU KNOW EXACTLY WHAT YOU ARE DOING.\n</pre>\n"
  example: []
  syntax:
    content: 'public class AlwaysValidVerifyer : ICertificateVerifyer'
    content.vb: >-
      Public Class AlwaysValidVerifyer
          Implements ICertificateVerifyer
  inheritance:
  - System.Object
  implements:
  - Org.BouncyCastle.Crypto.Tls.ICertificateVerifyer
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ToString
  - System.Object.ReferenceEquals(System.Object,System.Object)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Org.BouncyCastle.Crypto.Tls.AlwaysValidVerifyer.IsValid(System.Uri,X509CertificateStructure[])
  commentId: M:Org.BouncyCastle.Crypto.Tls.AlwaysValidVerifyer.IsValid(System.Uri,X509CertificateStructure[])
  id: IsValid(System.Uri,X509CertificateStructure[])
  parent: Org.BouncyCastle.Crypto.Tls.AlwaysValidVerifyer
  langs:
  - csharp
  - vb
  name: IsValid(Uri, X509CertificateStructure[])
  nameWithType: AlwaysValidVerifyer.IsValid(Uri, X509CertificateStructure[])
  fullName: Org.BouncyCastle.Crypto.Tls.AlwaysValidVerifyer.IsValid(System.Uri, X509CertificateStructure[])
  type: Method
  source:
    id: IsValid
    path: ''
    startLine: 66338
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Tls
  summary: Return true.
  example: []
  syntax:
    content: public bool IsValid(Uri targetUri, X509CertificateStructure[] certs)
    parameters:
    - id: targetUri
      type: System.Uri
    - id: certs
      type: X509CertificateStructure[]
    return:
      type: System.Boolean
    content.vb: Public Function IsValid(targetUri As Uri, certs As X509CertificateStructure()) As Boolean
  overload: Org.BouncyCastle.Crypto.Tls.AlwaysValidVerifyer.IsValid*
  implements:
  - Org.BouncyCastle.Crypto.Tls.ICertificateVerifyer.IsValid(System.Uri,X509CertificateStructure[])
  nameWithType.vb: AlwaysValidVerifyer.IsValid(Uri, X509CertificateStructure())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Org.BouncyCastle.Crypto.Tls.AlwaysValidVerifyer.IsValid(System.Uri, X509CertificateStructure())
  name.vb: IsValid(Uri, X509CertificateStructure())
references:
- uid: Org.BouncyCastle.Crypto.Tls
  commentId: N:Org.BouncyCastle.Crypto.Tls
  name: Org.BouncyCastle.Crypto.Tls
  nameWithType: Org.BouncyCastle.Crypto.Tls
  fullName: Org.BouncyCastle.Crypto.Tls
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Org.BouncyCastle.Crypto.Tls.ICertificateVerifyer
  commentId: T:Org.BouncyCastle.Crypto.Tls.ICertificateVerifyer
  parent: Org.BouncyCastle.Crypto.Tls
  name: ICertificateVerifyer
  nameWithType: ICertificateVerifyer
  fullName: Org.BouncyCastle.Crypto.Tls.ICertificateVerifyer
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Org.BouncyCastle.Crypto.Tls.AlwaysValidVerifyer.IsValid*
  commentId: Overload:Org.BouncyCastle.Crypto.Tls.AlwaysValidVerifyer.IsValid
  name: IsValid
  nameWithType: AlwaysValidVerifyer.IsValid
  fullName: Org.BouncyCastle.Crypto.Tls.AlwaysValidVerifyer.IsValid
- uid: Org.BouncyCastle.Crypto.Tls.ICertificateVerifyer.IsValid(System.Uri,X509CertificateStructure[])
  commentId: M:Org.BouncyCastle.Crypto.Tls.ICertificateVerifyer.IsValid(System.Uri,X509CertificateStructure[])
  parent: Org.BouncyCastle.Crypto.Tls.ICertificateVerifyer
  isExternal: true
  name: IsValid(Uri, X509CertificateStructure[])
  nameWithType: ICertificateVerifyer.IsValid(Uri, X509CertificateStructure[])
  fullName: Org.BouncyCastle.Crypto.Tls.ICertificateVerifyer.IsValid(System.Uri, X509CertificateStructure[])
  nameWithType.vb: ICertificateVerifyer.IsValid(Uri, X509CertificateStructure())
  fullName.vb: Org.BouncyCastle.Crypto.Tls.ICertificateVerifyer.IsValid(System.Uri, X509CertificateStructure())
  name.vb: IsValid(Uri, X509CertificateStructure())
  spec.csharp:
  - uid: Org.BouncyCastle.Crypto.Tls.ICertificateVerifyer.IsValid(System.Uri,X509CertificateStructure[])
    name: IsValid
    nameWithType: ICertificateVerifyer.IsValid
    fullName: Org.BouncyCastle.Crypto.Tls.ICertificateVerifyer.IsValid
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: X509CertificateStructure
    name: X509CertificateStructure
    nameWithType: X509CertificateStructure
    fullName: X509CertificateStructure
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Org.BouncyCastle.Crypto.Tls.ICertificateVerifyer.IsValid(System.Uri,X509CertificateStructure[])
    name: IsValid
    nameWithType: ICertificateVerifyer.IsValid
    fullName: Org.BouncyCastle.Crypto.Tls.ICertificateVerifyer.IsValid
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: X509CertificateStructure
    name: X509CertificateStructure
    nameWithType: X509CertificateStructure
    fullName: X509CertificateStructure
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Uri
  commentId: T:System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: X509CertificateStructure[]
  isExternal: true
  name: X509CertificateStructure[]
  nameWithType: X509CertificateStructure[]
  fullName: X509CertificateStructure[]
  nameWithType.vb: X509CertificateStructure()
  fullName.vb: X509CertificateStructure()
  name.vb: X509CertificateStructure()
  spec.csharp:
  - uid: X509CertificateStructure
    name: X509CertificateStructure
    nameWithType: X509CertificateStructure
    fullName: X509CertificateStructure
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: X509CertificateStructure
    name: X509CertificateStructure
    nameWithType: X509CertificateStructure
    fullName: X509CertificateStructure
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
