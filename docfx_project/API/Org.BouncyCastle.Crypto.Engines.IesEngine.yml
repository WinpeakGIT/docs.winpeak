### YamlMime:ManagedReference
items:
- uid: Org.BouncyCastle.Crypto.Engines.IesEngine
  commentId: T:Org.BouncyCastle.Crypto.Engines.IesEngine
  id: IesEngine
  parent: Org.BouncyCastle.Crypto.Engines
  children:
  - Org.BouncyCastle.Crypto.Engines.IesEngine.#ctor(Org.BouncyCastle.Crypto.IBasicAgreement,Org.BouncyCastle.Crypto.IDerivationFunction,Org.BouncyCastle.Crypto.IMac)
  - Org.BouncyCastle.Crypto.Engines.IesEngine.#ctor(Org.BouncyCastle.Crypto.IBasicAgreement,Org.BouncyCastle.Crypto.IDerivationFunction,Org.BouncyCastle.Crypto.IMac,Org.BouncyCastle.Crypto.BufferedBlockCipher)
  - Org.BouncyCastle.Crypto.Engines.IesEngine.Init(System.Boolean,Org.BouncyCastle.Crypto.ICipherParameters,Org.BouncyCastle.Crypto.ICipherParameters,Org.BouncyCastle.Crypto.ICipherParameters)
  - Org.BouncyCastle.Crypto.Engines.IesEngine.ProcessBlock(System.Byte[],System.Int32,System.Int32)
  langs:
  - csharp
  - vb
  name: IesEngine
  nameWithType: IesEngine
  fullName: Org.BouncyCastle.Crypto.Engines.IesEngine
  type: Class
  source:
    id: IesEngine
    path: ''
    startLine: 100097
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Engines
  example: []
  syntax:
    content: public class IesEngine
    content.vb: Public Class IesEngine
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ToString
  - System.Object.ReferenceEquals(System.Object,System.Object)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Org.BouncyCastle.Crypto.Engines.IesEngine.#ctor(Org.BouncyCastle.Crypto.IBasicAgreement,Org.BouncyCastle.Crypto.IDerivationFunction,Org.BouncyCastle.Crypto.IMac)
  commentId: M:Org.BouncyCastle.Crypto.Engines.IesEngine.#ctor(Org.BouncyCastle.Crypto.IBasicAgreement,Org.BouncyCastle.Crypto.IDerivationFunction,Org.BouncyCastle.Crypto.IMac)
  id: '#ctor(Org.BouncyCastle.Crypto.IBasicAgreement,Org.BouncyCastle.Crypto.IDerivationFunction,Org.BouncyCastle.Crypto.IMac)'
  parent: Org.BouncyCastle.Crypto.Engines.IesEngine
  langs:
  - csharp
  - vb
  name: IesEngine(IBasicAgreement, IDerivationFunction, IMac)
  nameWithType: IesEngine.IesEngine(IBasicAgreement, IDerivationFunction, IMac)
  fullName: Org.BouncyCastle.Crypto.Engines.IesEngine.IesEngine(Org.BouncyCastle.Crypto.IBasicAgreement, Org.BouncyCastle.Crypto.IDerivationFunction, Org.BouncyCastle.Crypto.IMac)
  type: Constructor
  source:
    id: .ctor
    path: ''
    startLine: 100117
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Engines
  example: []
  syntax:
    content: public IesEngine(IBasicAgreement agree, IDerivationFunction kdf, IMac mac)
    parameters:
    - id: agree
      type: Org.BouncyCastle.Crypto.IBasicAgreement
    - id: kdf
      type: Org.BouncyCastle.Crypto.IDerivationFunction
    - id: mac
      type: Org.BouncyCastle.Crypto.IMac
    content.vb: Public Sub New(agree As IBasicAgreement, kdf As IDerivationFunction, mac As IMac)
  overload: Org.BouncyCastle.Crypto.Engines.IesEngine.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Org.BouncyCastle.Crypto.Engines.IesEngine.#ctor(Org.BouncyCastle.Crypto.IBasicAgreement,Org.BouncyCastle.Crypto.IDerivationFunction,Org.BouncyCastle.Crypto.IMac,Org.BouncyCastle.Crypto.BufferedBlockCipher)
  commentId: M:Org.BouncyCastle.Crypto.Engines.IesEngine.#ctor(Org.BouncyCastle.Crypto.IBasicAgreement,Org.BouncyCastle.Crypto.IDerivationFunction,Org.BouncyCastle.Crypto.IMac,Org.BouncyCastle.Crypto.BufferedBlockCipher)
  id: '#ctor(Org.BouncyCastle.Crypto.IBasicAgreement,Org.BouncyCastle.Crypto.IDerivationFunction,Org.BouncyCastle.Crypto.IMac,Org.BouncyCastle.Crypto.BufferedBlockCipher)'
  parent: Org.BouncyCastle.Crypto.Engines.IesEngine
  langs:
  - csharp
  - vb
  name: IesEngine(IBasicAgreement, IDerivationFunction, IMac, BufferedBlockCipher)
  nameWithType: IesEngine.IesEngine(IBasicAgreement, IDerivationFunction, IMac, BufferedBlockCipher)
  fullName: Org.BouncyCastle.Crypto.Engines.IesEngine.IesEngine(Org.BouncyCastle.Crypto.IBasicAgreement, Org.BouncyCastle.Crypto.IDerivationFunction, Org.BouncyCastle.Crypto.IMac, Org.BouncyCastle.Crypto.BufferedBlockCipher)
  type: Constructor
  source:
    id: .ctor
    path: ''
    startLine: 100138
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Engines
  example: []
  syntax:
    content: public IesEngine(IBasicAgreement agree, IDerivationFunction kdf, IMac mac, BufferedBlockCipher cipher)
    parameters:
    - id: agree
      type: Org.BouncyCastle.Crypto.IBasicAgreement
    - id: kdf
      type: Org.BouncyCastle.Crypto.IDerivationFunction
    - id: mac
      type: Org.BouncyCastle.Crypto.IMac
    - id: cipher
      type: Org.BouncyCastle.Crypto.BufferedBlockCipher
    content.vb: Public Sub New(agree As IBasicAgreement, kdf As IDerivationFunction, mac As IMac, cipher As BufferedBlockCipher)
  overload: Org.BouncyCastle.Crypto.Engines.IesEngine.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Org.BouncyCastle.Crypto.Engines.IesEngine.Init(System.Boolean,Org.BouncyCastle.Crypto.ICipherParameters,Org.BouncyCastle.Crypto.ICipherParameters,Org.BouncyCastle.Crypto.ICipherParameters)
  commentId: M:Org.BouncyCastle.Crypto.Engines.IesEngine.Init(System.Boolean,Org.BouncyCastle.Crypto.ICipherParameters,Org.BouncyCastle.Crypto.ICipherParameters,Org.BouncyCastle.Crypto.ICipherParameters)
  id: Init(System.Boolean,Org.BouncyCastle.Crypto.ICipherParameters,Org.BouncyCastle.Crypto.ICipherParameters,Org.BouncyCastle.Crypto.ICipherParameters)
  parent: Org.BouncyCastle.Crypto.Engines.IesEngine
  langs:
  - csharp
  - vb
  name: Init(Boolean, ICipherParameters, ICipherParameters, ICipherParameters)
  nameWithType: IesEngine.Init(Boolean, ICipherParameters, ICipherParameters, ICipherParameters)
  fullName: Org.BouncyCastle.Crypto.Engines.IesEngine.Init(System.Boolean, Org.BouncyCastle.Crypto.ICipherParameters, Org.BouncyCastle.Crypto.ICipherParameters, Org.BouncyCastle.Crypto.ICipherParameters)
  type: Method
  source:
    id: Init
    path: ''
    startLine: 100159
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Engines
  example: []
  syntax:
    content: public virtual void Init(bool forEncryption, ICipherParameters privParameters, ICipherParameters pubParameters, ICipherParameters iesParameters)
    parameters:
    - id: forEncryption
      type: System.Boolean
    - id: privParameters
      type: Org.BouncyCastle.Crypto.ICipherParameters
    - id: pubParameters
      type: Org.BouncyCastle.Crypto.ICipherParameters
    - id: iesParameters
      type: Org.BouncyCastle.Crypto.ICipherParameters
    content.vb: Public Overridable Sub Init(forEncryption As Boolean, privParameters As ICipherParameters, pubParameters As ICipherParameters, iesParameters As ICipherParameters)
  overload: Org.BouncyCastle.Crypto.Engines.IesEngine.Init*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Org.BouncyCastle.Crypto.Engines.IesEngine.ProcessBlock(System.Byte[],System.Int32,System.Int32)
  commentId: M:Org.BouncyCastle.Crypto.Engines.IesEngine.ProcessBlock(System.Byte[],System.Int32,System.Int32)
  id: ProcessBlock(System.Byte[],System.Int32,System.Int32)
  parent: Org.BouncyCastle.Crypto.Engines.IesEngine
  langs:
  - csharp
  - vb
  name: ProcessBlock(Byte[], Int32, Int32)
  nameWithType: IesEngine.ProcessBlock(Byte[], Int32, Int32)
  fullName: Org.BouncyCastle.Crypto.Engines.IesEngine.ProcessBlock(System.Byte[], System.Int32, System.Int32)
  type: Method
  source:
    id: ProcessBlock
    path: ''
    startLine: 100304
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Engines
  syntax:
    content: public virtual byte[] ProcessBlock(byte[] input, int inOff, int inLen)
    parameters:
    - id: input
      type: System.Byte[]
    - id: inOff
      type: System.Int32
    - id: inLen
      type: System.Int32
    return:
      type: System.Byte[]
    content.vb: Public Overridable Function ProcessBlock(input As Byte(), inOff As Integer, inLen As Integer) As Byte()
  overload: Org.BouncyCastle.Crypto.Engines.IesEngine.ProcessBlock*
  nameWithType.vb: IesEngine.ProcessBlock(Byte(), Int32, Int32)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Org.BouncyCastle.Crypto.Engines.IesEngine.ProcessBlock(System.Byte(), System.Int32, System.Int32)
  name.vb: ProcessBlock(Byte(), Int32, Int32)
references:
- uid: Org.BouncyCastle.Crypto.Engines
  commentId: N:Org.BouncyCastle.Crypto.Engines
  name: Org.BouncyCastle.Crypto.Engines
  nameWithType: Org.BouncyCastle.Crypto.Engines
  fullName: Org.BouncyCastle.Crypto.Engines
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Org.BouncyCastle.Crypto.Engines.IesEngine.#ctor*
  commentId: Overload:Org.BouncyCastle.Crypto.Engines.IesEngine.#ctor
  name: IesEngine
  nameWithType: IesEngine.IesEngine
  fullName: Org.BouncyCastle.Crypto.Engines.IesEngine.IesEngine
- uid: Org.BouncyCastle.Crypto.IBasicAgreement
  commentId: T:Org.BouncyCastle.Crypto.IBasicAgreement
  parent: Org.BouncyCastle.Crypto
  name: IBasicAgreement
  nameWithType: IBasicAgreement
  fullName: Org.BouncyCastle.Crypto.IBasicAgreement
- uid: Org.BouncyCastle.Crypto.IDerivationFunction
  commentId: T:Org.BouncyCastle.Crypto.IDerivationFunction
  parent: Org.BouncyCastle.Crypto
  name: IDerivationFunction
  nameWithType: IDerivationFunction
  fullName: Org.BouncyCastle.Crypto.IDerivationFunction
- uid: Org.BouncyCastle.Crypto.IMac
  commentId: T:Org.BouncyCastle.Crypto.IMac
  parent: Org.BouncyCastle.Crypto
  name: IMac
  nameWithType: IMac
  fullName: Org.BouncyCastle.Crypto.IMac
- uid: Org.BouncyCastle.Crypto
  commentId: N:Org.BouncyCastle.Crypto
  name: Org.BouncyCastle.Crypto
  nameWithType: Org.BouncyCastle.Crypto
  fullName: Org.BouncyCastle.Crypto
- uid: Org.BouncyCastle.Crypto.BufferedBlockCipher
  commentId: T:Org.BouncyCastle.Crypto.BufferedBlockCipher
  parent: Org.BouncyCastle.Crypto
  name: BufferedBlockCipher
  nameWithType: BufferedBlockCipher
  fullName: Org.BouncyCastle.Crypto.BufferedBlockCipher
- uid: Org.BouncyCastle.Crypto.Engines.IesEngine.Init*
  commentId: Overload:Org.BouncyCastle.Crypto.Engines.IesEngine.Init
  name: Init
  nameWithType: IesEngine.Init
  fullName: Org.BouncyCastle.Crypto.Engines.IesEngine.Init
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Org.BouncyCastle.Crypto.ICipherParameters
  commentId: T:Org.BouncyCastle.Crypto.ICipherParameters
  parent: Org.BouncyCastle.Crypto
  name: ICipherParameters
  nameWithType: ICipherParameters
  fullName: Org.BouncyCastle.Crypto.ICipherParameters
- uid: Org.BouncyCastle.Crypto.Engines.IesEngine.ProcessBlock*
  commentId: Overload:Org.BouncyCastle.Crypto.Engines.IesEngine.ProcessBlock
  name: ProcessBlock
  nameWithType: IesEngine.ProcessBlock
  fullName: Org.BouncyCastle.Crypto.Engines.IesEngine.ProcessBlock
- uid: System.Byte[]
  isExternal: true
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullName.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
