### YamlMime:ManagedReference
items:
- uid: Org.BouncyCastle.Crypto.Engines.SerpentEngineBase
  commentId: T:Org.BouncyCastle.Crypto.Engines.SerpentEngineBase
  id: SerpentEngineBase
  parent: Org.BouncyCastle.Crypto.Engines
  children:
  - Org.BouncyCastle.Crypto.Engines.SerpentEngineBase.#ctor
  - Org.BouncyCastle.Crypto.Engines.SerpentEngineBase.AlgorithmName
  - Org.BouncyCastle.Crypto.Engines.SerpentEngineBase.BlockSize
  - Org.BouncyCastle.Crypto.Engines.SerpentEngineBase.DecryptBlock(System.Byte[],System.Int32,System.Byte[],System.Int32)
  - Org.BouncyCastle.Crypto.Engines.SerpentEngineBase.EncryptBlock(System.Byte[],System.Int32,System.Byte[],System.Int32)
  - Org.BouncyCastle.Crypto.Engines.SerpentEngineBase.encrypting
  - Org.BouncyCastle.Crypto.Engines.SerpentEngineBase.GetBlockSize
  - Org.BouncyCastle.Crypto.Engines.SerpentEngineBase.Ib0(System.Int32,System.Int32,System.Int32,System.Int32)
  - Org.BouncyCastle.Crypto.Engines.SerpentEngineBase.Ib1(System.Int32,System.Int32,System.Int32,System.Int32)
  - Org.BouncyCastle.Crypto.Engines.SerpentEngineBase.Ib2(System.Int32,System.Int32,System.Int32,System.Int32)
  - Org.BouncyCastle.Crypto.Engines.SerpentEngineBase.Ib3(System.Int32,System.Int32,System.Int32,System.Int32)
  - Org.BouncyCastle.Crypto.Engines.SerpentEngineBase.Ib4(System.Int32,System.Int32,System.Int32,System.Int32)
  - Org.BouncyCastle.Crypto.Engines.SerpentEngineBase.Ib5(System.Int32,System.Int32,System.Int32,System.Int32)
  - Org.BouncyCastle.Crypto.Engines.SerpentEngineBase.Ib6(System.Int32,System.Int32,System.Int32,System.Int32)
  - Org.BouncyCastle.Crypto.Engines.SerpentEngineBase.Ib7(System.Int32,System.Int32,System.Int32,System.Int32)
  - Org.BouncyCastle.Crypto.Engines.SerpentEngineBase.Init(System.Boolean,Org.BouncyCastle.Crypto.ICipherParameters)
  - Org.BouncyCastle.Crypto.Engines.SerpentEngineBase.InverseLT
  - Org.BouncyCastle.Crypto.Engines.SerpentEngineBase.IsPartialBlockOkay
  - Org.BouncyCastle.Crypto.Engines.SerpentEngineBase.LT
  - Org.BouncyCastle.Crypto.Engines.SerpentEngineBase.MakeWorkingKey(System.Byte[])
  - Org.BouncyCastle.Crypto.Engines.SerpentEngineBase.ProcessBlock(System.Byte[],System.Int32,System.Byte[],System.Int32)
  - Org.BouncyCastle.Crypto.Engines.SerpentEngineBase.Reset
  - Org.BouncyCastle.Crypto.Engines.SerpentEngineBase.RotateLeft(System.Int32,System.Int32)
  - Org.BouncyCastle.Crypto.Engines.SerpentEngineBase.Sb0(System.Int32,System.Int32,System.Int32,System.Int32)
  - Org.BouncyCastle.Crypto.Engines.SerpentEngineBase.Sb1(System.Int32,System.Int32,System.Int32,System.Int32)
  - Org.BouncyCastle.Crypto.Engines.SerpentEngineBase.Sb2(System.Int32,System.Int32,System.Int32,System.Int32)
  - Org.BouncyCastle.Crypto.Engines.SerpentEngineBase.Sb3(System.Int32,System.Int32,System.Int32,System.Int32)
  - Org.BouncyCastle.Crypto.Engines.SerpentEngineBase.Sb4(System.Int32,System.Int32,System.Int32,System.Int32)
  - Org.BouncyCastle.Crypto.Engines.SerpentEngineBase.Sb5(System.Int32,System.Int32,System.Int32,System.Int32)
  - Org.BouncyCastle.Crypto.Engines.SerpentEngineBase.Sb6(System.Int32,System.Int32,System.Int32,System.Int32)
  - Org.BouncyCastle.Crypto.Engines.SerpentEngineBase.Sb7(System.Int32,System.Int32,System.Int32,System.Int32)
  - Org.BouncyCastle.Crypto.Engines.SerpentEngineBase.wKey
  - Org.BouncyCastle.Crypto.Engines.SerpentEngineBase.X0
  - Org.BouncyCastle.Crypto.Engines.SerpentEngineBase.X1
  - Org.BouncyCastle.Crypto.Engines.SerpentEngineBase.X2
  - Org.BouncyCastle.Crypto.Engines.SerpentEngineBase.X3
  langs:
  - csharp
  - vb
  name: SerpentEngineBase
  nameWithType: SerpentEngineBase
  fullName: Org.BouncyCastle.Crypto.Engines.SerpentEngineBase
  type: Class
  source:
    id: SerpentEngineBase
    path: ''
    startLine: 116811
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Engines
  syntax:
    content: 'public abstract class SerpentEngineBase : IBlockCipher'
    content.vb: >-
      Public MustInherit Class SerpentEngineBase
          Implements IBlockCipher
  inheritance:
  - System.Object
  derivedClasses:
  - Org.BouncyCastle.Crypto.Engines.SerpentEngine
  implements:
  - Org.BouncyCastle.Crypto.IBlockCipher
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ToString
  - System.Object.ReferenceEquals(System.Object,System.Object)
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: Org.BouncyCastle.Crypto.Engines.SerpentEngineBase.BlockSize
  commentId: F:Org.BouncyCastle.Crypto.Engines.SerpentEngineBase.BlockSize
  id: BlockSize
  parent: Org.BouncyCastle.Crypto.Engines.SerpentEngineBase
  langs:
  - csharp
  - vb
  name: BlockSize
  nameWithType: SerpentEngineBase.BlockSize
  fullName: Org.BouncyCastle.Crypto.Engines.SerpentEngineBase.BlockSize
  type: Field
  source:
    id: BlockSize
    path: ''
    startLine: 116814
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Engines
  syntax:
    content: protected static readonly int BlockSize
    return:
      type: System.Int32
    content.vb: Protected Shared ReadOnly BlockSize As Integer
  modifiers.csharp:
  - protected
  - static
  - readonly
  modifiers.vb:
  - Protected
  - Shared
  - ReadOnly
- uid: Org.BouncyCastle.Crypto.Engines.SerpentEngineBase.encrypting
  commentId: F:Org.BouncyCastle.Crypto.Engines.SerpentEngineBase.encrypting
  id: encrypting
  parent: Org.BouncyCastle.Crypto.Engines.SerpentEngineBase
  langs:
  - csharp
  - vb
  name: encrypting
  nameWithType: SerpentEngineBase.encrypting
  fullName: Org.BouncyCastle.Crypto.Engines.SerpentEngineBase.encrypting
  type: Field
  source:
    id: encrypting
    path: ''
    startLine: 116819
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Engines
  syntax:
    content: protected bool encrypting
    return:
      type: System.Boolean
    content.vb: Protected encrypting As Boolean
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Org.BouncyCastle.Crypto.Engines.SerpentEngineBase.wKey
  commentId: F:Org.BouncyCastle.Crypto.Engines.SerpentEngineBase.wKey
  id: wKey
  parent: Org.BouncyCastle.Crypto.Engines.SerpentEngineBase
  langs:
  - csharp
  - vb
  name: wKey
  nameWithType: SerpentEngineBase.wKey
  fullName: Org.BouncyCastle.Crypto.Engines.SerpentEngineBase.wKey
  type: Field
  source:
    id: wKey
    path: ''
    startLine: 116820
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Engines
  syntax:
    content: protected int[] wKey
    return:
      type: System.Int32[]
    content.vb: Protected wKey As Integer()
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Org.BouncyCastle.Crypto.Engines.SerpentEngineBase.X0
  commentId: F:Org.BouncyCastle.Crypto.Engines.SerpentEngineBase.X0
  id: X0
  parent: Org.BouncyCastle.Crypto.Engines.SerpentEngineBase
  langs:
  - csharp
  - vb
  name: X0
  nameWithType: SerpentEngineBase.X0
  fullName: Org.BouncyCastle.Crypto.Engines.SerpentEngineBase.X0
  type: Field
  source:
    id: X0
    path: ''
    startLine: 116822
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Engines
  syntax:
    content: protected int X0
    return:
      type: System.Int32
    content.vb: Protected X0 As Integer
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Org.BouncyCastle.Crypto.Engines.SerpentEngineBase.X1
  commentId: F:Org.BouncyCastle.Crypto.Engines.SerpentEngineBase.X1
  id: X1
  parent: Org.BouncyCastle.Crypto.Engines.SerpentEngineBase
  langs:
  - csharp
  - vb
  name: X1
  nameWithType: SerpentEngineBase.X1
  fullName: Org.BouncyCastle.Crypto.Engines.SerpentEngineBase.X1
  type: Field
  source:
    id: X1
    path: ''
    startLine: 116822
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Engines
  syntax:
    content: protected int X1
    return:
      type: System.Int32
    content.vb: Protected X1 As Integer
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Org.BouncyCastle.Crypto.Engines.SerpentEngineBase.X2
  commentId: F:Org.BouncyCastle.Crypto.Engines.SerpentEngineBase.X2
  id: X2
  parent: Org.BouncyCastle.Crypto.Engines.SerpentEngineBase
  langs:
  - csharp
  - vb
  name: X2
  nameWithType: SerpentEngineBase.X2
  fullName: Org.BouncyCastle.Crypto.Engines.SerpentEngineBase.X2
  type: Field
  source:
    id: X2
    path: ''
    startLine: 116822
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Engines
  syntax:
    content: protected int X2
    return:
      type: System.Int32
    content.vb: Protected X2 As Integer
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Org.BouncyCastle.Crypto.Engines.SerpentEngineBase.X3
  commentId: F:Org.BouncyCastle.Crypto.Engines.SerpentEngineBase.X3
  id: X3
  parent: Org.BouncyCastle.Crypto.Engines.SerpentEngineBase
  langs:
  - csharp
  - vb
  name: X3
  nameWithType: SerpentEngineBase.X3
  fullName: Org.BouncyCastle.Crypto.Engines.SerpentEngineBase.X3
  type: Field
  source:
    id: X3
    path: ''
    startLine: 116822
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Engines
  syntax:
    content: protected int X3
    return:
      type: System.Int32
    content.vb: Protected X3 As Integer
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Org.BouncyCastle.Crypto.Engines.SerpentEngineBase.#ctor
  commentId: M:Org.BouncyCastle.Crypto.Engines.SerpentEngineBase.#ctor
  id: '#ctor'
  parent: Org.BouncyCastle.Crypto.Engines.SerpentEngineBase
  langs:
  - csharp
  - vb
  name: SerpentEngineBase()
  nameWithType: SerpentEngineBase.SerpentEngineBase()
  fullName: Org.BouncyCastle.Crypto.Engines.SerpentEngineBase.SerpentEngineBase()
  type: Constructor
  source:
    id: .ctor
    path: ''
    startLine: 116824
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Engines
  syntax:
    content: protected SerpentEngineBase()
    content.vb: Protected Sub New
  overload: Org.BouncyCastle.Crypto.Engines.SerpentEngineBase.#ctor*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Org.BouncyCastle.Crypto.Engines.SerpentEngineBase.Init(System.Boolean,Org.BouncyCastle.Crypto.ICipherParameters)
  commentId: M:Org.BouncyCastle.Crypto.Engines.SerpentEngineBase.Init(System.Boolean,Org.BouncyCastle.Crypto.ICipherParameters)
  id: Init(System.Boolean,Org.BouncyCastle.Crypto.ICipherParameters)
  parent: Org.BouncyCastle.Crypto.Engines.SerpentEngineBase
  langs:
  - csharp
  - vb
  name: Init(Boolean, ICipherParameters)
  nameWithType: SerpentEngineBase.Init(Boolean, ICipherParameters)
  fullName: Org.BouncyCastle.Crypto.Engines.SerpentEngineBase.Init(System.Boolean, Org.BouncyCastle.Crypto.ICipherParameters)
  type: Method
  source:
    id: Init
    path: ''
    startLine: 116836
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Engines
  example: []
  syntax:
    content: public virtual void Init(bool encrypting, ICipherParameters parameters)
    parameters:
    - id: encrypting
      type: System.Boolean
    - id: parameters
      type: Org.BouncyCastle.Crypto.ICipherParameters
    content.vb: Public Overridable Sub Init(encrypting As Boolean, parameters As ICipherParameters)
  overload: Org.BouncyCastle.Crypto.Engines.SerpentEngineBase.Init*
  implements:
  - Org.BouncyCastle.Crypto.IBlockCipher.Init(System.Boolean,Org.BouncyCastle.Crypto.ICipherParameters)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Org.BouncyCastle.Crypto.Engines.SerpentEngineBase.AlgorithmName
  commentId: P:Org.BouncyCastle.Crypto.Engines.SerpentEngineBase.AlgorithmName
  id: AlgorithmName
  parent: Org.BouncyCastle.Crypto.Engines.SerpentEngineBase
  langs:
  - csharp
  - vb
  name: AlgorithmName
  nameWithType: SerpentEngineBase.AlgorithmName
  fullName: Org.BouncyCastle.Crypto.Engines.SerpentEngineBase.AlgorithmName
  type: Property
  source:
    id: AlgorithmName
    path: ''
    startLine: 116845
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Engines
  syntax:
    content: public virtual string AlgorithmName { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Overridable ReadOnly Property AlgorithmName As String
  overload: Org.BouncyCastle.Crypto.Engines.SerpentEngineBase.AlgorithmName*
  implements:
  - Org.BouncyCastle.Crypto.IBlockCipher.AlgorithmName
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: Org.BouncyCastle.Crypto.Engines.SerpentEngineBase.IsPartialBlockOkay
  commentId: P:Org.BouncyCastle.Crypto.Engines.SerpentEngineBase.IsPartialBlockOkay
  id: IsPartialBlockOkay
  parent: Org.BouncyCastle.Crypto.Engines.SerpentEngineBase
  langs:
  - csharp
  - vb
  name: IsPartialBlockOkay
  nameWithType: SerpentEngineBase.IsPartialBlockOkay
  fullName: Org.BouncyCastle.Crypto.Engines.SerpentEngineBase.IsPartialBlockOkay
  type: Property
  source:
    id: IsPartialBlockOkay
    path: ''
    startLine: 116850
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Engines
  syntax:
    content: public virtual bool IsPartialBlockOkay { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Overridable ReadOnly Property IsPartialBlockOkay As Boolean
  overload: Org.BouncyCastle.Crypto.Engines.SerpentEngineBase.IsPartialBlockOkay*
  implements:
  - Org.BouncyCastle.Crypto.IBlockCipher.IsPartialBlockOkay
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: Org.BouncyCastle.Crypto.Engines.SerpentEngineBase.GetBlockSize
  commentId: M:Org.BouncyCastle.Crypto.Engines.SerpentEngineBase.GetBlockSize
  id: GetBlockSize
  parent: Org.BouncyCastle.Crypto.Engines.SerpentEngineBase
  langs:
  - csharp
  - vb
  name: GetBlockSize()
  nameWithType: SerpentEngineBase.GetBlockSize()
  fullName: Org.BouncyCastle.Crypto.Engines.SerpentEngineBase.GetBlockSize()
  type: Method
  source:
    id: GetBlockSize
    path: ''
    startLine: 116855
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Engines
  syntax:
    content: public virtual int GetBlockSize()
    return:
      type: System.Int32
    content.vb: Public Overridable Function GetBlockSize As Integer
  overload: Org.BouncyCastle.Crypto.Engines.SerpentEngineBase.GetBlockSize*
  implements:
  - Org.BouncyCastle.Crypto.IBlockCipher.GetBlockSize
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Org.BouncyCastle.Crypto.Engines.SerpentEngineBase.ProcessBlock(System.Byte[],System.Int32,System.Byte[],System.Int32)
  commentId: M:Org.BouncyCastle.Crypto.Engines.SerpentEngineBase.ProcessBlock(System.Byte[],System.Int32,System.Byte[],System.Int32)
  id: ProcessBlock(System.Byte[],System.Int32,System.Byte[],System.Int32)
  parent: Org.BouncyCastle.Crypto.Engines.SerpentEngineBase
  langs:
  - csharp
  - vb
  name: ProcessBlock(Byte[], Int32, Byte[], Int32)
  nameWithType: SerpentEngineBase.ProcessBlock(Byte[], Int32, Byte[], Int32)
  fullName: Org.BouncyCastle.Crypto.Engines.SerpentEngineBase.ProcessBlock(System.Byte[], System.Int32, System.Byte[], System.Int32)
  type: Method
  source:
    id: ProcessBlock
    path: ''
    startLine: 116873
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Engines
  example: []
  syntax:
    content: public int ProcessBlock(byte[] input, int inOff, byte[] output, int outOff)
    parameters:
    - id: input
      type: System.Byte[]
    - id: inOff
      type: System.Int32
    - id: output
      type: System.Byte[]
    - id: outOff
      type: System.Int32
    return:
      type: System.Int32
    content.vb: Public Function ProcessBlock(input As Byte(), inOff As Integer, output As Byte(), outOff As Integer) As Integer
  overload: Org.BouncyCastle.Crypto.Engines.SerpentEngineBase.ProcessBlock*
  implements:
  - Org.BouncyCastle.Crypto.IBlockCipher.ProcessBlock(System.Byte[],System.Int32,System.Byte[],System.Int32)
  nameWithType.vb: SerpentEngineBase.ProcessBlock(Byte(), Int32, Byte(), Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Org.BouncyCastle.Crypto.Engines.SerpentEngineBase.ProcessBlock(System.Byte(), System.Int32, System.Byte(), System.Int32)
  name.vb: ProcessBlock(Byte(), Int32, Byte(), Int32)
- uid: Org.BouncyCastle.Crypto.Engines.SerpentEngineBase.Reset
  commentId: M:Org.BouncyCastle.Crypto.Engines.SerpentEngineBase.Reset
  id: Reset
  parent: Org.BouncyCastle.Crypto.Engines.SerpentEngineBase
  langs:
  - csharp
  - vb
  name: Reset()
  nameWithType: SerpentEngineBase.Reset()
  fullName: Org.BouncyCastle.Crypto.Engines.SerpentEngineBase.Reset()
  type: Method
  source:
    id: Reset
    path: ''
    startLine: 116893
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Engines
  syntax:
    content: public virtual void Reset()
    content.vb: Public Overridable Sub Reset
  overload: Org.BouncyCastle.Crypto.Engines.SerpentEngineBase.Reset*
  implements:
  - Org.BouncyCastle.Crypto.IBlockCipher.Reset
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Org.BouncyCastle.Crypto.Engines.SerpentEngineBase.RotateLeft(System.Int32,System.Int32)
  commentId: M:Org.BouncyCastle.Crypto.Engines.SerpentEngineBase.RotateLeft(System.Int32,System.Int32)
  id: RotateLeft(System.Int32,System.Int32)
  parent: Org.BouncyCastle.Crypto.Engines.SerpentEngineBase
  langs:
  - csharp
  - vb
  name: RotateLeft(Int32, Int32)
  nameWithType: SerpentEngineBase.RotateLeft(Int32, Int32)
  fullName: Org.BouncyCastle.Crypto.Engines.SerpentEngineBase.RotateLeft(System.Int32, System.Int32)
  type: Method
  source:
    id: RotateLeft
    path: ''
    startLine: 116897
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Engines
  syntax:
    content: protected static int RotateLeft(int x, int bits)
    parameters:
    - id: x
      type: System.Int32
    - id: bits
      type: System.Int32
    return:
      type: System.Int32
    content.vb: Protected Shared Function RotateLeft(x As Integer, bits As Integer) As Integer
  overload: Org.BouncyCastle.Crypto.Engines.SerpentEngineBase.RotateLeft*
  modifiers.csharp:
  - protected
  - static
  modifiers.vb:
  - Protected
  - Shared
- uid: Org.BouncyCastle.Crypto.Engines.SerpentEngineBase.Sb0(System.Int32,System.Int32,System.Int32,System.Int32)
  commentId: M:Org.BouncyCastle.Crypto.Engines.SerpentEngineBase.Sb0(System.Int32,System.Int32,System.Int32,System.Int32)
  id: Sb0(System.Int32,System.Int32,System.Int32,System.Int32)
  parent: Org.BouncyCastle.Crypto.Engines.SerpentEngineBase
  langs:
  - csharp
  - vb
  name: Sb0(Int32, Int32, Int32, Int32)
  nameWithType: SerpentEngineBase.Sb0(Int32, Int32, Int32, Int32)
  fullName: Org.BouncyCastle.Crypto.Engines.SerpentEngineBase.Sb0(System.Int32, System.Int32, System.Int32, System.Int32)
  type: Method
  source:
    id: Sb0
    path: ''
    startLine: 116934
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Engines
  syntax:
    content: protected void Sb0(int a, int b, int c, int d)
    parameters:
    - id: a
      type: System.Int32
    - id: b
      type: System.Int32
    - id: c
      type: System.Int32
    - id: d
      type: System.Int32
    content.vb: Protected Sub Sb0(a As Integer, b As Integer, c As Integer, d As Integer)
  overload: Org.BouncyCastle.Crypto.Engines.SerpentEngineBase.Sb0*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Org.BouncyCastle.Crypto.Engines.SerpentEngineBase.Ib0(System.Int32,System.Int32,System.Int32,System.Int32)
  commentId: M:Org.BouncyCastle.Crypto.Engines.SerpentEngineBase.Ib0(System.Int32,System.Int32,System.Int32,System.Int32)
  id: Ib0(System.Int32,System.Int32,System.Int32,System.Int32)
  parent: Org.BouncyCastle.Crypto.Engines.SerpentEngineBase
  langs:
  - csharp
  - vb
  name: Ib0(Int32, Int32, Int32, Int32)
  nameWithType: SerpentEngineBase.Ib0(Int32, Int32, Int32, Int32)
  fullName: Org.BouncyCastle.Crypto.Engines.SerpentEngineBase.Ib0(System.Int32, System.Int32, System.Int32, System.Int32)
  type: Method
  source:
    id: Ib0
    path: ''
    startLine: 116950
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Engines
  example: []
  syntax:
    content: protected void Ib0(int a, int b, int c, int d)
    parameters:
    - id: a
      type: System.Int32
    - id: b
      type: System.Int32
    - id: c
      type: System.Int32
    - id: d
      type: System.Int32
    content.vb: Protected Sub Ib0(a As Integer, b As Integer, c As Integer, d As Integer)
  overload: Org.BouncyCastle.Crypto.Engines.SerpentEngineBase.Ib0*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Org.BouncyCastle.Crypto.Engines.SerpentEngineBase.Sb1(System.Int32,System.Int32,System.Int32,System.Int32)
  commentId: M:Org.BouncyCastle.Crypto.Engines.SerpentEngineBase.Sb1(System.Int32,System.Int32,System.Int32,System.Int32)
  id: Sb1(System.Int32,System.Int32,System.Int32,System.Int32)
  parent: Org.BouncyCastle.Crypto.Engines.SerpentEngineBase
  langs:
  - csharp
  - vb
  name: Sb1(Int32, Int32, Int32, Int32)
  nameWithType: SerpentEngineBase.Sb1(Int32, Int32, Int32, Int32)
  fullName: Org.BouncyCastle.Crypto.Engines.SerpentEngineBase.Sb1(System.Int32, System.Int32, System.Int32, System.Int32)
  type: Method
  source:
    id: Sb1
    path: ''
    startLine: 116966
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Engines
  example: []
  syntax:
    content: protected void Sb1(int a, int b, int c, int d)
    parameters:
    - id: a
      type: System.Int32
    - id: b
      type: System.Int32
    - id: c
      type: System.Int32
    - id: d
      type: System.Int32
    content.vb: Protected Sub Sb1(a As Integer, b As Integer, c As Integer, d As Integer)
  overload: Org.BouncyCastle.Crypto.Engines.SerpentEngineBase.Sb1*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Org.BouncyCastle.Crypto.Engines.SerpentEngineBase.Ib1(System.Int32,System.Int32,System.Int32,System.Int32)
  commentId: M:Org.BouncyCastle.Crypto.Engines.SerpentEngineBase.Ib1(System.Int32,System.Int32,System.Int32,System.Int32)
  id: Ib1(System.Int32,System.Int32,System.Int32,System.Int32)
  parent: Org.BouncyCastle.Crypto.Engines.SerpentEngineBase
  langs:
  - csharp
  - vb
  name: Ib1(Int32, Int32, Int32, Int32)
  nameWithType: SerpentEngineBase.Ib1(Int32, Int32, Int32, Int32)
  fullName: Org.BouncyCastle.Crypto.Engines.SerpentEngineBase.Ib1(System.Int32, System.Int32, System.Int32, System.Int32)
  type: Method
  source:
    id: Ib1
    path: ''
    startLine: 116982
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Engines
  example: []
  syntax:
    content: protected void Ib1(int a, int b, int c, int d)
    parameters:
    - id: a
      type: System.Int32
    - id: b
      type: System.Int32
    - id: c
      type: System.Int32
    - id: d
      type: System.Int32
    content.vb: Protected Sub Ib1(a As Integer, b As Integer, c As Integer, d As Integer)
  overload: Org.BouncyCastle.Crypto.Engines.SerpentEngineBase.Ib1*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Org.BouncyCastle.Crypto.Engines.SerpentEngineBase.Sb2(System.Int32,System.Int32,System.Int32,System.Int32)
  commentId: M:Org.BouncyCastle.Crypto.Engines.SerpentEngineBase.Sb2(System.Int32,System.Int32,System.Int32,System.Int32)
  id: Sb2(System.Int32,System.Int32,System.Int32,System.Int32)
  parent: Org.BouncyCastle.Crypto.Engines.SerpentEngineBase
  langs:
  - csharp
  - vb
  name: Sb2(Int32, Int32, Int32, Int32)
  nameWithType: SerpentEngineBase.Sb2(Int32, Int32, Int32, Int32)
  fullName: Org.BouncyCastle.Crypto.Engines.SerpentEngineBase.Sb2(System.Int32, System.Int32, System.Int32, System.Int32)
  type: Method
  source:
    id: Sb2
    path: ''
    startLine: 117000
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Engines
  example: []
  syntax:
    content: protected void Sb2(int a, int b, int c, int d)
    parameters:
    - id: a
      type: System.Int32
    - id: b
      type: System.Int32
    - id: c
      type: System.Int32
    - id: d
      type: System.Int32
    content.vb: Protected Sub Sb2(a As Integer, b As Integer, c As Integer, d As Integer)
  overload: Org.BouncyCastle.Crypto.Engines.SerpentEngineBase.Sb2*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Org.BouncyCastle.Crypto.Engines.SerpentEngineBase.Ib2(System.Int32,System.Int32,System.Int32,System.Int32)
  commentId: M:Org.BouncyCastle.Crypto.Engines.SerpentEngineBase.Ib2(System.Int32,System.Int32,System.Int32,System.Int32)
  id: Ib2(System.Int32,System.Int32,System.Int32,System.Int32)
  parent: Org.BouncyCastle.Crypto.Engines.SerpentEngineBase
  langs:
  - csharp
  - vb
  name: Ib2(Int32, Int32, Int32, Int32)
  nameWithType: SerpentEngineBase.Ib2(Int32, Int32, Int32, Int32)
  fullName: Org.BouncyCastle.Crypto.Engines.SerpentEngineBase.Ib2(System.Int32, System.Int32, System.Int32, System.Int32)
  type: Method
  source:
    id: Ib2
    path: ''
    startLine: 117017
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Engines
  example: []
  syntax:
    content: protected void Ib2(int a, int b, int c, int d)
    parameters:
    - id: a
      type: System.Int32
    - id: b
      type: System.Int32
    - id: c
      type: System.Int32
    - id: d
      type: System.Int32
    content.vb: Protected Sub Ib2(a As Integer, b As Integer, c As Integer, d As Integer)
  overload: Org.BouncyCastle.Crypto.Engines.SerpentEngineBase.Ib2*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Org.BouncyCastle.Crypto.Engines.SerpentEngineBase.Sb3(System.Int32,System.Int32,System.Int32,System.Int32)
  commentId: M:Org.BouncyCastle.Crypto.Engines.SerpentEngineBase.Sb3(System.Int32,System.Int32,System.Int32,System.Int32)
  id: Sb3(System.Int32,System.Int32,System.Int32,System.Int32)
  parent: Org.BouncyCastle.Crypto.Engines.SerpentEngineBase
  langs:
  - csharp
  - vb
  name: Sb3(Int32, Int32, Int32, Int32)
  nameWithType: SerpentEngineBase.Sb3(Int32, Int32, Int32, Int32)
  fullName: Org.BouncyCastle.Crypto.Engines.SerpentEngineBase.Sb3(System.Int32, System.Int32, System.Int32, System.Int32)
  type: Method
  source:
    id: Sb3
    path: ''
    startLine: 117038
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Engines
  example: []
  syntax:
    content: protected void Sb3(int a, int b, int c, int d)
    parameters:
    - id: a
      type: System.Int32
    - id: b
      type: System.Int32
    - id: c
      type: System.Int32
    - id: d
      type: System.Int32
    content.vb: Protected Sub Sb3(a As Integer, b As Integer, c As Integer, d As Integer)
  overload: Org.BouncyCastle.Crypto.Engines.SerpentEngineBase.Sb3*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Org.BouncyCastle.Crypto.Engines.SerpentEngineBase.Ib3(System.Int32,System.Int32,System.Int32,System.Int32)
  commentId: M:Org.BouncyCastle.Crypto.Engines.SerpentEngineBase.Ib3(System.Int32,System.Int32,System.Int32,System.Int32)
  id: Ib3(System.Int32,System.Int32,System.Int32,System.Int32)
  parent: Org.BouncyCastle.Crypto.Engines.SerpentEngineBase
  langs:
  - csharp
  - vb
  name: Ib3(Int32, Int32, Int32, Int32)
  nameWithType: SerpentEngineBase.Ib3(Int32, Int32, Int32, Int32)
  fullName: Org.BouncyCastle.Crypto.Engines.SerpentEngineBase.Ib3(System.Int32, System.Int32, System.Int32, System.Int32)
  type: Method
  source:
    id: Ib3
    path: ''
    startLine: 117059
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Engines
  example: []
  syntax:
    content: protected void Ib3(int a, int b, int c, int d)
    parameters:
    - id: a
      type: System.Int32
    - id: b
      type: System.Int32
    - id: c
      type: System.Int32
    - id: d
      type: System.Int32
    content.vb: Protected Sub Ib3(a As Integer, b As Integer, c As Integer, d As Integer)
  overload: Org.BouncyCastle.Crypto.Engines.SerpentEngineBase.Ib3*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Org.BouncyCastle.Crypto.Engines.SerpentEngineBase.Sb4(System.Int32,System.Int32,System.Int32,System.Int32)
  commentId: M:Org.BouncyCastle.Crypto.Engines.SerpentEngineBase.Sb4(System.Int32,System.Int32,System.Int32,System.Int32)
  id: Sb4(System.Int32,System.Int32,System.Int32,System.Int32)
  parent: Org.BouncyCastle.Crypto.Engines.SerpentEngineBase
  langs:
  - csharp
  - vb
  name: Sb4(Int32, Int32, Int32, Int32)
  nameWithType: SerpentEngineBase.Sb4(Int32, Int32, Int32, Int32)
  fullName: Org.BouncyCastle.Crypto.Engines.SerpentEngineBase.Sb4(System.Int32, System.Int32, System.Int32, System.Int32)
  type: Method
  source:
    id: Sb4
    path: ''
    startLine: 117080
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Engines
  example: []
  syntax:
    content: protected void Sb4(int a, int b, int c, int d)
    parameters:
    - id: a
      type: System.Int32
    - id: b
      type: System.Int32
    - id: c
      type: System.Int32
    - id: d
      type: System.Int32
    content.vb: Protected Sub Sb4(a As Integer, b As Integer, c As Integer, d As Integer)
  overload: Org.BouncyCastle.Crypto.Engines.SerpentEngineBase.Sb4*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Org.BouncyCastle.Crypto.Engines.SerpentEngineBase.Ib4(System.Int32,System.Int32,System.Int32,System.Int32)
  commentId: M:Org.BouncyCastle.Crypto.Engines.SerpentEngineBase.Ib4(System.Int32,System.Int32,System.Int32,System.Int32)
  id: Ib4(System.Int32,System.Int32,System.Int32,System.Int32)
  parent: Org.BouncyCastle.Crypto.Engines.SerpentEngineBase
  langs:
  - csharp
  - vb
  name: Ib4(Int32, Int32, Int32, Int32)
  nameWithType: SerpentEngineBase.Ib4(Int32, Int32, Int32, Int32)
  fullName: Org.BouncyCastle.Crypto.Engines.SerpentEngineBase.Ib4(System.Int32, System.Int32, System.Int32, System.Int32)
  type: Method
  source:
    id: Ib4
    path: ''
    startLine: 117100
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Engines
  example: []
  syntax:
    content: protected void Ib4(int a, int b, int c, int d)
    parameters:
    - id: a
      type: System.Int32
    - id: b
      type: System.Int32
    - id: c
      type: System.Int32
    - id: d
      type: System.Int32
    content.vb: Protected Sub Ib4(a As Integer, b As Integer, c As Integer, d As Integer)
  overload: Org.BouncyCastle.Crypto.Engines.SerpentEngineBase.Ib4*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Org.BouncyCastle.Crypto.Engines.SerpentEngineBase.Sb5(System.Int32,System.Int32,System.Int32,System.Int32)
  commentId: M:Org.BouncyCastle.Crypto.Engines.SerpentEngineBase.Sb5(System.Int32,System.Int32,System.Int32,System.Int32)
  id: Sb5(System.Int32,System.Int32,System.Int32,System.Int32)
  parent: Org.BouncyCastle.Crypto.Engines.SerpentEngineBase
  langs:
  - csharp
  - vb
  name: Sb5(Int32, Int32, Int32, Int32)
  nameWithType: SerpentEngineBase.Sb5(Int32, Int32, Int32, Int32)
  fullName: Org.BouncyCastle.Crypto.Engines.SerpentEngineBase.Sb5(System.Int32, System.Int32, System.Int32, System.Int32)
  type: Method
  source:
    id: Sb5
    path: ''
    startLine: 117120
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Engines
  example: []
  syntax:
    content: protected void Sb5(int a, int b, int c, int d)
    parameters:
    - id: a
      type: System.Int32
    - id: b
      type: System.Int32
    - id: c
      type: System.Int32
    - id: d
      type: System.Int32
    content.vb: Protected Sub Sb5(a As Integer, b As Integer, c As Integer, d As Integer)
  overload: Org.BouncyCastle.Crypto.Engines.SerpentEngineBase.Sb5*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Org.BouncyCastle.Crypto.Engines.SerpentEngineBase.Ib5(System.Int32,System.Int32,System.Int32,System.Int32)
  commentId: M:Org.BouncyCastle.Crypto.Engines.SerpentEngineBase.Ib5(System.Int32,System.Int32,System.Int32,System.Int32)
  id: Ib5(System.Int32,System.Int32,System.Int32,System.Int32)
  parent: Org.BouncyCastle.Crypto.Engines.SerpentEngineBase
  langs:
  - csharp
  - vb
  name: Ib5(Int32, Int32, Int32, Int32)
  nameWithType: SerpentEngineBase.Ib5(Int32, Int32, Int32, Int32)
  fullName: Org.BouncyCastle.Crypto.Engines.SerpentEngineBase.Ib5(System.Int32, System.Int32, System.Int32, System.Int32)
  type: Method
  source:
    id: Ib5
    path: ''
    startLine: 117141
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Engines
  example: []
  syntax:
    content: protected void Ib5(int a, int b, int c, int d)
    parameters:
    - id: a
      type: System.Int32
    - id: b
      type: System.Int32
    - id: c
      type: System.Int32
    - id: d
      type: System.Int32
    content.vb: Protected Sub Ib5(a As Integer, b As Integer, c As Integer, d As Integer)
  overload: Org.BouncyCastle.Crypto.Engines.SerpentEngineBase.Ib5*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Org.BouncyCastle.Crypto.Engines.SerpentEngineBase.Sb6(System.Int32,System.Int32,System.Int32,System.Int32)
  commentId: M:Org.BouncyCastle.Crypto.Engines.SerpentEngineBase.Sb6(System.Int32,System.Int32,System.Int32,System.Int32)
  id: Sb6(System.Int32,System.Int32,System.Int32,System.Int32)
  parent: Org.BouncyCastle.Crypto.Engines.SerpentEngineBase
  langs:
  - csharp
  - vb
  name: Sb6(Int32, Int32, Int32, Int32)
  nameWithType: SerpentEngineBase.Sb6(Int32, Int32, Int32, Int32)
  fullName: Org.BouncyCastle.Crypto.Engines.SerpentEngineBase.Sb6(System.Int32, System.Int32, System.Int32, System.Int32)
  type: Method
  source:
    id: Sb6
    path: ''
    startLine: 117161
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Engines
  example: []
  syntax:
    content: protected void Sb6(int a, int b, int c, int d)
    parameters:
    - id: a
      type: System.Int32
    - id: b
      type: System.Int32
    - id: c
      type: System.Int32
    - id: d
      type: System.Int32
    content.vb: Protected Sub Sb6(a As Integer, b As Integer, c As Integer, d As Integer)
  overload: Org.BouncyCastle.Crypto.Engines.SerpentEngineBase.Sb6*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Org.BouncyCastle.Crypto.Engines.SerpentEngineBase.Ib6(System.Int32,System.Int32,System.Int32,System.Int32)
  commentId: M:Org.BouncyCastle.Crypto.Engines.SerpentEngineBase.Ib6(System.Int32,System.Int32,System.Int32,System.Int32)
  id: Ib6(System.Int32,System.Int32,System.Int32,System.Int32)
  parent: Org.BouncyCastle.Crypto.Engines.SerpentEngineBase
  langs:
  - csharp
  - vb
  name: Ib6(Int32, Int32, Int32, Int32)
  nameWithType: SerpentEngineBase.Ib6(Int32, Int32, Int32, Int32)
  fullName: Org.BouncyCastle.Crypto.Engines.SerpentEngineBase.Ib6(System.Int32, System.Int32, System.Int32, System.Int32)
  type: Method
  source:
    id: Ib6
    path: ''
    startLine: 117181
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Engines
  example: []
  syntax:
    content: protected void Ib6(int a, int b, int c, int d)
    parameters:
    - id: a
      type: System.Int32
    - id: b
      type: System.Int32
    - id: c
      type: System.Int32
    - id: d
      type: System.Int32
    content.vb: Protected Sub Ib6(a As Integer, b As Integer, c As Integer, d As Integer)
  overload: Org.BouncyCastle.Crypto.Engines.SerpentEngineBase.Ib6*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Org.BouncyCastle.Crypto.Engines.SerpentEngineBase.Sb7(System.Int32,System.Int32,System.Int32,System.Int32)
  commentId: M:Org.BouncyCastle.Crypto.Engines.SerpentEngineBase.Sb7(System.Int32,System.Int32,System.Int32,System.Int32)
  id: Sb7(System.Int32,System.Int32,System.Int32,System.Int32)
  parent: Org.BouncyCastle.Crypto.Engines.SerpentEngineBase
  langs:
  - csharp
  - vb
  name: Sb7(Int32, Int32, Int32, Int32)
  nameWithType: SerpentEngineBase.Sb7(Int32, Int32, Int32, Int32)
  fullName: Org.BouncyCastle.Crypto.Engines.SerpentEngineBase.Sb7(System.Int32, System.Int32, System.Int32, System.Int32)
  type: Method
  source:
    id: Sb7
    path: ''
    startLine: 117201
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Engines
  example: []
  syntax:
    content: protected void Sb7(int a, int b, int c, int d)
    parameters:
    - id: a
      type: System.Int32
    - id: b
      type: System.Int32
    - id: c
      type: System.Int32
    - id: d
      type: System.Int32
    content.vb: Protected Sub Sb7(a As Integer, b As Integer, c As Integer, d As Integer)
  overload: Org.BouncyCastle.Crypto.Engines.SerpentEngineBase.Sb7*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Org.BouncyCastle.Crypto.Engines.SerpentEngineBase.Ib7(System.Int32,System.Int32,System.Int32,System.Int32)
  commentId: M:Org.BouncyCastle.Crypto.Engines.SerpentEngineBase.Ib7(System.Int32,System.Int32,System.Int32,System.Int32)
  id: Ib7(System.Int32,System.Int32,System.Int32,System.Int32)
  parent: Org.BouncyCastle.Crypto.Engines.SerpentEngineBase
  langs:
  - csharp
  - vb
  name: Ib7(Int32, Int32, Int32, Int32)
  nameWithType: SerpentEngineBase.Ib7(Int32, Int32, Int32, Int32)
  fullName: Org.BouncyCastle.Crypto.Engines.SerpentEngineBase.Ib7(System.Int32, System.Int32, System.Int32, System.Int32)
  type: Method
  source:
    id: Ib7
    path: ''
    startLine: 117222
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Engines
  example: []
  syntax:
    content: protected void Ib7(int a, int b, int c, int d)
    parameters:
    - id: a
      type: System.Int32
    - id: b
      type: System.Int32
    - id: c
      type: System.Int32
    - id: d
      type: System.Int32
    content.vb: Protected Sub Ib7(a As Integer, b As Integer, c As Integer, d As Integer)
  overload: Org.BouncyCastle.Crypto.Engines.SerpentEngineBase.Ib7*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Org.BouncyCastle.Crypto.Engines.SerpentEngineBase.LT
  commentId: M:Org.BouncyCastle.Crypto.Engines.SerpentEngineBase.LT
  id: LT
  parent: Org.BouncyCastle.Crypto.Engines.SerpentEngineBase
  langs:
  - csharp
  - vb
  name: LT()
  nameWithType: SerpentEngineBase.LT()
  fullName: Org.BouncyCastle.Crypto.Engines.SerpentEngineBase.LT()
  type: Method
  source:
    id: LT
    path: ''
    startLine: 117238
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Engines
  example: []
  syntax:
    content: protected void LT()
    content.vb: Protected Sub LT
  overload: Org.BouncyCastle.Crypto.Engines.SerpentEngineBase.LT*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Org.BouncyCastle.Crypto.Engines.SerpentEngineBase.InverseLT
  commentId: M:Org.BouncyCastle.Crypto.Engines.SerpentEngineBase.InverseLT
  id: InverseLT
  parent: Org.BouncyCastle.Crypto.Engines.SerpentEngineBase
  langs:
  - csharp
  - vb
  name: InverseLT()
  nameWithType: SerpentEngineBase.InverseLT()
  fullName: Org.BouncyCastle.Crypto.Engines.SerpentEngineBase.InverseLT()
  type: Method
  source:
    id: InverseLT
    path: ''
    startLine: 117254
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Engines
  example: []
  syntax:
    content: protected void InverseLT()
    content.vb: Protected Sub InverseLT
  overload: Org.BouncyCastle.Crypto.Engines.SerpentEngineBase.InverseLT*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Org.BouncyCastle.Crypto.Engines.SerpentEngineBase.MakeWorkingKey(System.Byte[])
  commentId: M:Org.BouncyCastle.Crypto.Engines.SerpentEngineBase.MakeWorkingKey(System.Byte[])
  id: MakeWorkingKey(System.Byte[])
  parent: Org.BouncyCastle.Crypto.Engines.SerpentEngineBase
  langs:
  - csharp
  - vb
  name: MakeWorkingKey(Byte[])
  nameWithType: SerpentEngineBase.MakeWorkingKey(Byte[])
  fullName: Org.BouncyCastle.Crypto.Engines.SerpentEngineBase.MakeWorkingKey(System.Byte[])
  type: Method
  source:
    id: MakeWorkingKey
    path: ''
    startLine: 117266
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Engines
  syntax:
    content: protected abstract int[] MakeWorkingKey(byte[] key)
    parameters:
    - id: key
      type: System.Byte[]
    return:
      type: System.Int32[]
    content.vb: Protected MustOverride Function MakeWorkingKey(key As Byte()) As Integer()
  overload: Org.BouncyCastle.Crypto.Engines.SerpentEngineBase.MakeWorkingKey*
  nameWithType.vb: SerpentEngineBase.MakeWorkingKey(Byte())
  modifiers.csharp:
  - protected
  - abstract
  modifiers.vb:
  - Protected
  - MustOverride
  fullName.vb: Org.BouncyCastle.Crypto.Engines.SerpentEngineBase.MakeWorkingKey(System.Byte())
  name.vb: MakeWorkingKey(Byte())
- uid: Org.BouncyCastle.Crypto.Engines.SerpentEngineBase.EncryptBlock(System.Byte[],System.Int32,System.Byte[],System.Int32)
  commentId: M:Org.BouncyCastle.Crypto.Engines.SerpentEngineBase.EncryptBlock(System.Byte[],System.Int32,System.Byte[],System.Int32)
  id: EncryptBlock(System.Byte[],System.Int32,System.Byte[],System.Int32)
  parent: Org.BouncyCastle.Crypto.Engines.SerpentEngineBase
  langs:
  - csharp
  - vb
  name: EncryptBlock(Byte[], Int32, Byte[], Int32)
  nameWithType: SerpentEngineBase.EncryptBlock(Byte[], Int32, Byte[], Int32)
  fullName: Org.BouncyCastle.Crypto.Engines.SerpentEngineBase.EncryptBlock(System.Byte[], System.Int32, System.Byte[], System.Int32)
  type: Method
  source:
    id: EncryptBlock
    path: ''
    startLine: 117268
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Engines
  syntax:
    content: protected abstract void EncryptBlock(byte[] input, int inOff, byte[] output, int outOff)
    parameters:
    - id: input
      type: System.Byte[]
    - id: inOff
      type: System.Int32
    - id: output
      type: System.Byte[]
    - id: outOff
      type: System.Int32
    content.vb: Protected MustOverride Sub EncryptBlock(input As Byte(), inOff As Integer, output As Byte(), outOff As Integer)
  overload: Org.BouncyCastle.Crypto.Engines.SerpentEngineBase.EncryptBlock*
  nameWithType.vb: SerpentEngineBase.EncryptBlock(Byte(), Int32, Byte(), Int32)
  modifiers.csharp:
  - protected
  - abstract
  modifiers.vb:
  - Protected
  - MustOverride
  fullName.vb: Org.BouncyCastle.Crypto.Engines.SerpentEngineBase.EncryptBlock(System.Byte(), System.Int32, System.Byte(), System.Int32)
  name.vb: EncryptBlock(Byte(), Int32, Byte(), Int32)
- uid: Org.BouncyCastle.Crypto.Engines.SerpentEngineBase.DecryptBlock(System.Byte[],System.Int32,System.Byte[],System.Int32)
  commentId: M:Org.BouncyCastle.Crypto.Engines.SerpentEngineBase.DecryptBlock(System.Byte[],System.Int32,System.Byte[],System.Int32)
  id: DecryptBlock(System.Byte[],System.Int32,System.Byte[],System.Int32)
  parent: Org.BouncyCastle.Crypto.Engines.SerpentEngineBase
  langs:
  - csharp
  - vb
  name: DecryptBlock(Byte[], Int32, Byte[], Int32)
  nameWithType: SerpentEngineBase.DecryptBlock(Byte[], Int32, Byte[], Int32)
  fullName: Org.BouncyCastle.Crypto.Engines.SerpentEngineBase.DecryptBlock(System.Byte[], System.Int32, System.Byte[], System.Int32)
  type: Method
  source:
    id: DecryptBlock
    path: ''
    startLine: 117270
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Engines
  syntax:
    content: protected abstract void DecryptBlock(byte[] input, int inOff, byte[] output, int outOff)
    parameters:
    - id: input
      type: System.Byte[]
    - id: inOff
      type: System.Int32
    - id: output
      type: System.Byte[]
    - id: outOff
      type: System.Int32
    content.vb: Protected MustOverride Sub DecryptBlock(input As Byte(), inOff As Integer, output As Byte(), outOff As Integer)
  overload: Org.BouncyCastle.Crypto.Engines.SerpentEngineBase.DecryptBlock*
  nameWithType.vb: SerpentEngineBase.DecryptBlock(Byte(), Int32, Byte(), Int32)
  modifiers.csharp:
  - protected
  - abstract
  modifiers.vb:
  - Protected
  - MustOverride
  fullName.vb: Org.BouncyCastle.Crypto.Engines.SerpentEngineBase.DecryptBlock(System.Byte(), System.Int32, System.Byte(), System.Int32)
  name.vb: DecryptBlock(Byte(), Int32, Byte(), Int32)
references:
- uid: Org.BouncyCastle.Crypto.Engines
  commentId: N:Org.BouncyCastle.Crypto.Engines
  name: Org.BouncyCastle.Crypto.Engines
  nameWithType: Org.BouncyCastle.Crypto.Engines
  fullName: Org.BouncyCastle.Crypto.Engines
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Org.BouncyCastle.Crypto.IBlockCipher
  commentId: T:Org.BouncyCastle.Crypto.IBlockCipher
  parent: Org.BouncyCastle.Crypto
  name: IBlockCipher
  nameWithType: IBlockCipher
  fullName: Org.BouncyCastle.Crypto.IBlockCipher
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Org.BouncyCastle.Crypto
  commentId: N:Org.BouncyCastle.Crypto
  name: Org.BouncyCastle.Crypto
  nameWithType: Org.BouncyCastle.Crypto
  fullName: Org.BouncyCastle.Crypto
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Int32[]
  isExternal: true
  name: Int32[]
  nameWithType: Int32[]
  fullName: System.Int32[]
  nameWithType.vb: Int32()
  fullName.vb: System.Int32()
  name.vb: Int32()
  spec.csharp:
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Org.BouncyCastle.Crypto.Engines.SerpentEngineBase.#ctor*
  commentId: Overload:Org.BouncyCastle.Crypto.Engines.SerpentEngineBase.#ctor
  name: SerpentEngineBase
  nameWithType: SerpentEngineBase.SerpentEngineBase
  fullName: Org.BouncyCastle.Crypto.Engines.SerpentEngineBase.SerpentEngineBase
- uid: Org.BouncyCastle.Crypto.Engines.SerpentEngineBase.Init*
  commentId: Overload:Org.BouncyCastle.Crypto.Engines.SerpentEngineBase.Init
  name: Init
  nameWithType: SerpentEngineBase.Init
  fullName: Org.BouncyCastle.Crypto.Engines.SerpentEngineBase.Init
- uid: Org.BouncyCastle.Crypto.IBlockCipher.Init(System.Boolean,Org.BouncyCastle.Crypto.ICipherParameters)
  commentId: M:Org.BouncyCastle.Crypto.IBlockCipher.Init(System.Boolean,Org.BouncyCastle.Crypto.ICipherParameters)
  parent: Org.BouncyCastle.Crypto.IBlockCipher
  isExternal: true
  name: Init(Boolean, ICipherParameters)
  nameWithType: IBlockCipher.Init(Boolean, ICipherParameters)
  fullName: Org.BouncyCastle.Crypto.IBlockCipher.Init(System.Boolean, Org.BouncyCastle.Crypto.ICipherParameters)
  spec.csharp:
  - uid: Org.BouncyCastle.Crypto.IBlockCipher.Init(System.Boolean,Org.BouncyCastle.Crypto.ICipherParameters)
    name: Init
    nameWithType: IBlockCipher.Init
    fullName: Org.BouncyCastle.Crypto.IBlockCipher.Init
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Org.BouncyCastle.Crypto.ICipherParameters
    name: ICipherParameters
    nameWithType: ICipherParameters
    fullName: Org.BouncyCastle.Crypto.ICipherParameters
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Org.BouncyCastle.Crypto.IBlockCipher.Init(System.Boolean,Org.BouncyCastle.Crypto.ICipherParameters)
    name: Init
    nameWithType: IBlockCipher.Init
    fullName: Org.BouncyCastle.Crypto.IBlockCipher.Init
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Org.BouncyCastle.Crypto.ICipherParameters
    name: ICipherParameters
    nameWithType: ICipherParameters
    fullName: Org.BouncyCastle.Crypto.ICipherParameters
  - name: )
    nameWithType: )
    fullName: )
- uid: Org.BouncyCastle.Crypto.ICipherParameters
  commentId: T:Org.BouncyCastle.Crypto.ICipherParameters
  parent: Org.BouncyCastle.Crypto
  name: ICipherParameters
  nameWithType: ICipherParameters
  fullName: Org.BouncyCastle.Crypto.ICipherParameters
- uid: Org.BouncyCastle.Crypto.Engines.SerpentEngineBase.AlgorithmName*
  commentId: Overload:Org.BouncyCastle.Crypto.Engines.SerpentEngineBase.AlgorithmName
  name: AlgorithmName
  nameWithType: SerpentEngineBase.AlgorithmName
  fullName: Org.BouncyCastle.Crypto.Engines.SerpentEngineBase.AlgorithmName
- uid: Org.BouncyCastle.Crypto.IBlockCipher.AlgorithmName
  commentId: P:Org.BouncyCastle.Crypto.IBlockCipher.AlgorithmName
  parent: Org.BouncyCastle.Crypto.IBlockCipher
  name: AlgorithmName
  nameWithType: IBlockCipher.AlgorithmName
  fullName: Org.BouncyCastle.Crypto.IBlockCipher.AlgorithmName
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Org.BouncyCastle.Crypto.Engines.SerpentEngineBase.IsPartialBlockOkay*
  commentId: Overload:Org.BouncyCastle.Crypto.Engines.SerpentEngineBase.IsPartialBlockOkay
  name: IsPartialBlockOkay
  nameWithType: SerpentEngineBase.IsPartialBlockOkay
  fullName: Org.BouncyCastle.Crypto.Engines.SerpentEngineBase.IsPartialBlockOkay
- uid: Org.BouncyCastle.Crypto.IBlockCipher.IsPartialBlockOkay
  commentId: P:Org.BouncyCastle.Crypto.IBlockCipher.IsPartialBlockOkay
  parent: Org.BouncyCastle.Crypto.IBlockCipher
  name: IsPartialBlockOkay
  nameWithType: IBlockCipher.IsPartialBlockOkay
  fullName: Org.BouncyCastle.Crypto.IBlockCipher.IsPartialBlockOkay
- uid: Org.BouncyCastle.Crypto.Engines.SerpentEngineBase.GetBlockSize*
  commentId: Overload:Org.BouncyCastle.Crypto.Engines.SerpentEngineBase.GetBlockSize
  name: GetBlockSize
  nameWithType: SerpentEngineBase.GetBlockSize
  fullName: Org.BouncyCastle.Crypto.Engines.SerpentEngineBase.GetBlockSize
- uid: Org.BouncyCastle.Crypto.IBlockCipher.GetBlockSize
  commentId: M:Org.BouncyCastle.Crypto.IBlockCipher.GetBlockSize
  parent: Org.BouncyCastle.Crypto.IBlockCipher
  name: GetBlockSize()
  nameWithType: IBlockCipher.GetBlockSize()
  fullName: Org.BouncyCastle.Crypto.IBlockCipher.GetBlockSize()
  spec.csharp:
  - uid: Org.BouncyCastle.Crypto.IBlockCipher.GetBlockSize
    name: GetBlockSize
    nameWithType: IBlockCipher.GetBlockSize
    fullName: Org.BouncyCastle.Crypto.IBlockCipher.GetBlockSize
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Org.BouncyCastle.Crypto.IBlockCipher.GetBlockSize
    name: GetBlockSize
    nameWithType: IBlockCipher.GetBlockSize
    fullName: Org.BouncyCastle.Crypto.IBlockCipher.GetBlockSize
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Org.BouncyCastle.Crypto.Engines.SerpentEngineBase.ProcessBlock*
  commentId: Overload:Org.BouncyCastle.Crypto.Engines.SerpentEngineBase.ProcessBlock
  name: ProcessBlock
  nameWithType: SerpentEngineBase.ProcessBlock
  fullName: Org.BouncyCastle.Crypto.Engines.SerpentEngineBase.ProcessBlock
- uid: Org.BouncyCastle.Crypto.IBlockCipher.ProcessBlock(System.Byte[],System.Int32,System.Byte[],System.Int32)
  commentId: M:Org.BouncyCastle.Crypto.IBlockCipher.ProcessBlock(System.Byte[],System.Int32,System.Byte[],System.Int32)
  parent: Org.BouncyCastle.Crypto.IBlockCipher
  isExternal: true
  name: ProcessBlock(Byte[], Int32, Byte[], Int32)
  nameWithType: IBlockCipher.ProcessBlock(Byte[], Int32, Byte[], Int32)
  fullName: Org.BouncyCastle.Crypto.IBlockCipher.ProcessBlock(System.Byte[], System.Int32, System.Byte[], System.Int32)
  nameWithType.vb: IBlockCipher.ProcessBlock(Byte(), Int32, Byte(), Int32)
  fullName.vb: Org.BouncyCastle.Crypto.IBlockCipher.ProcessBlock(System.Byte(), System.Int32, System.Byte(), System.Int32)
  name.vb: ProcessBlock(Byte(), Int32, Byte(), Int32)
  spec.csharp:
  - uid: Org.BouncyCastle.Crypto.IBlockCipher.ProcessBlock(System.Byte[],System.Int32,System.Byte[],System.Int32)
    name: ProcessBlock
    nameWithType: IBlockCipher.ProcessBlock
    fullName: Org.BouncyCastle.Crypto.IBlockCipher.ProcessBlock
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Org.BouncyCastle.Crypto.IBlockCipher.ProcessBlock(System.Byte[],System.Int32,System.Byte[],System.Int32)
    name: ProcessBlock
    nameWithType: IBlockCipher.ProcessBlock
    fullName: Org.BouncyCastle.Crypto.IBlockCipher.ProcessBlock
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Byte[]
  isExternal: true
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullName.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Org.BouncyCastle.Crypto.Engines.SerpentEngineBase.Reset*
  commentId: Overload:Org.BouncyCastle.Crypto.Engines.SerpentEngineBase.Reset
  name: Reset
  nameWithType: SerpentEngineBase.Reset
  fullName: Org.BouncyCastle.Crypto.Engines.SerpentEngineBase.Reset
- uid: Org.BouncyCastle.Crypto.IBlockCipher.Reset
  commentId: M:Org.BouncyCastle.Crypto.IBlockCipher.Reset
  parent: Org.BouncyCastle.Crypto.IBlockCipher
  name: Reset()
  nameWithType: IBlockCipher.Reset()
  fullName: Org.BouncyCastle.Crypto.IBlockCipher.Reset()
  spec.csharp:
  - uid: Org.BouncyCastle.Crypto.IBlockCipher.Reset
    name: Reset
    nameWithType: IBlockCipher.Reset
    fullName: Org.BouncyCastle.Crypto.IBlockCipher.Reset
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Org.BouncyCastle.Crypto.IBlockCipher.Reset
    name: Reset
    nameWithType: IBlockCipher.Reset
    fullName: Org.BouncyCastle.Crypto.IBlockCipher.Reset
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Org.BouncyCastle.Crypto.Engines.SerpentEngineBase.RotateLeft*
  commentId: Overload:Org.BouncyCastle.Crypto.Engines.SerpentEngineBase.RotateLeft
  name: RotateLeft
  nameWithType: SerpentEngineBase.RotateLeft
  fullName: Org.BouncyCastle.Crypto.Engines.SerpentEngineBase.RotateLeft
- uid: Org.BouncyCastle.Crypto.Engines.SerpentEngineBase.Sb0*
  commentId: Overload:Org.BouncyCastle.Crypto.Engines.SerpentEngineBase.Sb0
  name: Sb0
  nameWithType: SerpentEngineBase.Sb0
  fullName: Org.BouncyCastle.Crypto.Engines.SerpentEngineBase.Sb0
- uid: Org.BouncyCastle.Crypto.Engines.SerpentEngineBase.Ib0*
  commentId: Overload:Org.BouncyCastle.Crypto.Engines.SerpentEngineBase.Ib0
  name: Ib0
  nameWithType: SerpentEngineBase.Ib0
  fullName: Org.BouncyCastle.Crypto.Engines.SerpentEngineBase.Ib0
- uid: Org.BouncyCastle.Crypto.Engines.SerpentEngineBase.Sb1*
  commentId: Overload:Org.BouncyCastle.Crypto.Engines.SerpentEngineBase.Sb1
  name: Sb1
  nameWithType: SerpentEngineBase.Sb1
  fullName: Org.BouncyCastle.Crypto.Engines.SerpentEngineBase.Sb1
- uid: Org.BouncyCastle.Crypto.Engines.SerpentEngineBase.Ib1*
  commentId: Overload:Org.BouncyCastle.Crypto.Engines.SerpentEngineBase.Ib1
  name: Ib1
  nameWithType: SerpentEngineBase.Ib1
  fullName: Org.BouncyCastle.Crypto.Engines.SerpentEngineBase.Ib1
- uid: Org.BouncyCastle.Crypto.Engines.SerpentEngineBase.Sb2*
  commentId: Overload:Org.BouncyCastle.Crypto.Engines.SerpentEngineBase.Sb2
  name: Sb2
  nameWithType: SerpentEngineBase.Sb2
  fullName: Org.BouncyCastle.Crypto.Engines.SerpentEngineBase.Sb2
- uid: Org.BouncyCastle.Crypto.Engines.SerpentEngineBase.Ib2*
  commentId: Overload:Org.BouncyCastle.Crypto.Engines.SerpentEngineBase.Ib2
  name: Ib2
  nameWithType: SerpentEngineBase.Ib2
  fullName: Org.BouncyCastle.Crypto.Engines.SerpentEngineBase.Ib2
- uid: Org.BouncyCastle.Crypto.Engines.SerpentEngineBase.Sb3*
  commentId: Overload:Org.BouncyCastle.Crypto.Engines.SerpentEngineBase.Sb3
  name: Sb3
  nameWithType: SerpentEngineBase.Sb3
  fullName: Org.BouncyCastle.Crypto.Engines.SerpentEngineBase.Sb3
- uid: Org.BouncyCastle.Crypto.Engines.SerpentEngineBase.Ib3*
  commentId: Overload:Org.BouncyCastle.Crypto.Engines.SerpentEngineBase.Ib3
  name: Ib3
  nameWithType: SerpentEngineBase.Ib3
  fullName: Org.BouncyCastle.Crypto.Engines.SerpentEngineBase.Ib3
- uid: Org.BouncyCastle.Crypto.Engines.SerpentEngineBase.Sb4*
  commentId: Overload:Org.BouncyCastle.Crypto.Engines.SerpentEngineBase.Sb4
  name: Sb4
  nameWithType: SerpentEngineBase.Sb4
  fullName: Org.BouncyCastle.Crypto.Engines.SerpentEngineBase.Sb4
- uid: Org.BouncyCastle.Crypto.Engines.SerpentEngineBase.Ib4*
  commentId: Overload:Org.BouncyCastle.Crypto.Engines.SerpentEngineBase.Ib4
  name: Ib4
  nameWithType: SerpentEngineBase.Ib4
  fullName: Org.BouncyCastle.Crypto.Engines.SerpentEngineBase.Ib4
- uid: Org.BouncyCastle.Crypto.Engines.SerpentEngineBase.Sb5*
  commentId: Overload:Org.BouncyCastle.Crypto.Engines.SerpentEngineBase.Sb5
  name: Sb5
  nameWithType: SerpentEngineBase.Sb5
  fullName: Org.BouncyCastle.Crypto.Engines.SerpentEngineBase.Sb5
- uid: Org.BouncyCastle.Crypto.Engines.SerpentEngineBase.Ib5*
  commentId: Overload:Org.BouncyCastle.Crypto.Engines.SerpentEngineBase.Ib5
  name: Ib5
  nameWithType: SerpentEngineBase.Ib5
  fullName: Org.BouncyCastle.Crypto.Engines.SerpentEngineBase.Ib5
- uid: Org.BouncyCastle.Crypto.Engines.SerpentEngineBase.Sb6*
  commentId: Overload:Org.BouncyCastle.Crypto.Engines.SerpentEngineBase.Sb6
  name: Sb6
  nameWithType: SerpentEngineBase.Sb6
  fullName: Org.BouncyCastle.Crypto.Engines.SerpentEngineBase.Sb6
- uid: Org.BouncyCastle.Crypto.Engines.SerpentEngineBase.Ib6*
  commentId: Overload:Org.BouncyCastle.Crypto.Engines.SerpentEngineBase.Ib6
  name: Ib6
  nameWithType: SerpentEngineBase.Ib6
  fullName: Org.BouncyCastle.Crypto.Engines.SerpentEngineBase.Ib6
- uid: Org.BouncyCastle.Crypto.Engines.SerpentEngineBase.Sb7*
  commentId: Overload:Org.BouncyCastle.Crypto.Engines.SerpentEngineBase.Sb7
  name: Sb7
  nameWithType: SerpentEngineBase.Sb7
  fullName: Org.BouncyCastle.Crypto.Engines.SerpentEngineBase.Sb7
- uid: Org.BouncyCastle.Crypto.Engines.SerpentEngineBase.Ib7*
  commentId: Overload:Org.BouncyCastle.Crypto.Engines.SerpentEngineBase.Ib7
  name: Ib7
  nameWithType: SerpentEngineBase.Ib7
  fullName: Org.BouncyCastle.Crypto.Engines.SerpentEngineBase.Ib7
- uid: Org.BouncyCastle.Crypto.Engines.SerpentEngineBase.LT*
  commentId: Overload:Org.BouncyCastle.Crypto.Engines.SerpentEngineBase.LT
  name: LT
  nameWithType: SerpentEngineBase.LT
  fullName: Org.BouncyCastle.Crypto.Engines.SerpentEngineBase.LT
- uid: Org.BouncyCastle.Crypto.Engines.SerpentEngineBase.InverseLT*
  commentId: Overload:Org.BouncyCastle.Crypto.Engines.SerpentEngineBase.InverseLT
  name: InverseLT
  nameWithType: SerpentEngineBase.InverseLT
  fullName: Org.BouncyCastle.Crypto.Engines.SerpentEngineBase.InverseLT
- uid: Org.BouncyCastle.Crypto.Engines.SerpentEngineBase.MakeWorkingKey*
  commentId: Overload:Org.BouncyCastle.Crypto.Engines.SerpentEngineBase.MakeWorkingKey
  name: MakeWorkingKey
  nameWithType: SerpentEngineBase.MakeWorkingKey
  fullName: Org.BouncyCastle.Crypto.Engines.SerpentEngineBase.MakeWorkingKey
- uid: Org.BouncyCastle.Crypto.Engines.SerpentEngineBase.EncryptBlock*
  commentId: Overload:Org.BouncyCastle.Crypto.Engines.SerpentEngineBase.EncryptBlock
  name: EncryptBlock
  nameWithType: SerpentEngineBase.EncryptBlock
  fullName: Org.BouncyCastle.Crypto.Engines.SerpentEngineBase.EncryptBlock
- uid: Org.BouncyCastle.Crypto.Engines.SerpentEngineBase.DecryptBlock*
  commentId: Overload:Org.BouncyCastle.Crypto.Engines.SerpentEngineBase.DecryptBlock
  name: DecryptBlock
  nameWithType: SerpentEngineBase.DecryptBlock
  fullName: Org.BouncyCastle.Crypto.Engines.SerpentEngineBase.DecryptBlock
