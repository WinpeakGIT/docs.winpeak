### YamlMime:ManagedReference
items:
- uid: BestHTTP.SignalR.Messages.FailureMessage
  commentId: T:BestHTTP.SignalR.Messages.FailureMessage
  id: FailureMessage
  parent: BestHTTP.SignalR.Messages
  children:
  - BestHTTP.SignalR.Messages.FailureMessage.AdditionalData
  - BestHTTP.SignalR.Messages.FailureMessage.BestHTTP#SignalR#Messages#IServerMessage#Parse(System.Object)
  - BestHTTP.SignalR.Messages.FailureMessage.BestHTTP#SignalR#Messages#IServerMessage#Type
  - BestHTTP.SignalR.Messages.FailureMessage.ErrorMessage
  - BestHTTP.SignalR.Messages.FailureMessage.InvocationId
  - BestHTTP.SignalR.Messages.FailureMessage.IsHubError
  - BestHTTP.SignalR.Messages.FailureMessage.StackTrace
  - BestHTTP.SignalR.Messages.FailureMessage.State
  langs:
  - csharp
  - vb
  name: FailureMessage
  nameWithType: FailureMessage
  fullName: BestHTTP.SignalR.Messages.FailureMessage
  type: Class
  source:
    id: FailureMessage
    path: ''
    startLine: 10292
  assemblies:
  - cs.temp.dll
  namespace: BestHTTP.SignalR.Messages
  syntax:
    content: 'public sealed class FailureMessage : IServerMessage, IHubMessage'
    content.vb: >-
      Public NotInheritable Class FailureMessage
          Implements IServerMessage, IHubMessage
  inheritance:
  - System.Object
  implements:
  - BestHTTP.SignalR.Messages.IServerMessage
  - BestHTTP.SignalR.Messages.IHubMessage
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ToString
  - System.Object.ReferenceEquals(System.Object,System.Object)
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: BestHTTP.SignalR.Messages.FailureMessage.BestHTTP#SignalR#Messages#IServerMessage#Type
  commentId: P:BestHTTP.SignalR.Messages.FailureMessage.BestHTTP#SignalR#Messages#IServerMessage#Type
  id: BestHTTP#SignalR#Messages#IServerMessage#Type
  isEii: true
  parent: BestHTTP.SignalR.Messages.FailureMessage
  langs:
  - csharp
  - vb
  name: IServerMessage.Type
  nameWithType: FailureMessage.IServerMessage.Type
  fullName: BestHTTP.SignalR.Messages.FailureMessage.BestHTTP.SignalR.Messages.IServerMessage.Type
  type: Property
  source:
    id: BestHTTP.SignalR.Messages.IServerMessage.Type
    path: ''
    startLine: 10294
  assemblies:
  - cs.temp.dll
  namespace: BestHTTP.SignalR.Messages
  syntax:
    content: MessageTypes IServerMessage.Type { get; }
    parameters: []
    return:
      type: BestHTTP.SignalR.MessageTypes
    content.vb: ReadOnly WriteOnly Property BestHTTP.SignalR.Messages.IServerMessage.Type As MessageTypes Implements IServerMessage.Type
  overload: BestHTTP.SignalR.Messages.FailureMessage.BestHTTP#SignalR#Messages#IServerMessage#Type*
  implements:
  - BestHTTP.SignalR.Messages.IServerMessage.Type
  nameWithType.vb: FailureMessage.BestHTTP.SignalR.Messages.IServerMessage.Type
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
  name.vb: BestHTTP.SignalR.Messages.IServerMessage.Type
- uid: BestHTTP.SignalR.Messages.FailureMessage.InvocationId
  commentId: P:BestHTTP.SignalR.Messages.FailureMessage.InvocationId
  id: InvocationId
  parent: BestHTTP.SignalR.Messages.FailureMessage
  langs:
  - csharp
  - vb
  name: InvocationId
  nameWithType: FailureMessage.InvocationId
  fullName: BestHTTP.SignalR.Messages.FailureMessage.InvocationId
  type: Property
  source:
    id: InvocationId
    path: ''
    startLine: 10299
  assemblies:
  - cs.temp.dll
  namespace: BestHTTP.SignalR.Messages
  summary: "\nThe unique id that the client set when called the server side method. Used by the plugin to deliver this message to the good Hub.\n"
  example: []
  syntax:
    content: public ulong InvocationId { get; }
    parameters: []
    return:
      type: System.UInt64
    content.vb: Public ReadOnly Property InvocationId As ULong
  overload: BestHTTP.SignalR.Messages.FailureMessage.InvocationId*
  implements:
  - BestHTTP.SignalR.Messages.IHubMessage.InvocationId
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: BestHTTP.SignalR.Messages.FailureMessage.IsHubError
  commentId: P:BestHTTP.SignalR.Messages.FailureMessage.IsHubError
  id: IsHubError
  parent: BestHTTP.SignalR.Messages.FailureMessage
  langs:
  - csharp
  - vb
  name: IsHubError
  nameWithType: FailureMessage.IsHubError
  fullName: BestHTTP.SignalR.Messages.FailureMessage.IsHubError
  type: Property
  source:
    id: IsHubError
    path: ''
    startLine: 10304
  assemblies:
  - cs.temp.dll
  namespace: BestHTTP.SignalR.Messages
  summary: "\nTrue if it&apos;s a hub error.\n"
  example: []
  syntax:
    content: public bool IsHubError { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsHubError As Boolean
  overload: BestHTTP.SignalR.Messages.FailureMessage.IsHubError*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: BestHTTP.SignalR.Messages.FailureMessage.ErrorMessage
  commentId: P:BestHTTP.SignalR.Messages.FailureMessage.ErrorMessage
  id: ErrorMessage
  parent: BestHTTP.SignalR.Messages.FailureMessage
  langs:
  - csharp
  - vb
  name: ErrorMessage
  nameWithType: FailureMessage.ErrorMessage
  fullName: BestHTTP.SignalR.Messages.FailureMessage.ErrorMessage
  type: Property
  source:
    id: ErrorMessage
    path: ''
    startLine: 10309
  assemblies:
  - cs.temp.dll
  namespace: BestHTTP.SignalR.Messages
  summary: "\nIf the method call failed, it contains the error message to detail what happened.\n"
  example: []
  syntax:
    content: public string ErrorMessage { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property ErrorMessage As String
  overload: BestHTTP.SignalR.Messages.FailureMessage.ErrorMessage*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: BestHTTP.SignalR.Messages.FailureMessage.AdditionalData
  commentId: P:BestHTTP.SignalR.Messages.FailureMessage.AdditionalData
  id: AdditionalData
  parent: BestHTTP.SignalR.Messages.FailureMessage
  langs:
  - csharp
  - vb
  name: AdditionalData
  nameWithType: FailureMessage.AdditionalData
  fullName: BestHTTP.SignalR.Messages.FailureMessage.AdditionalData
  type: Property
  source:
    id: AdditionalData
    path: ''
    startLine: 10317
  assemblies:
  - cs.temp.dll
  namespace: BestHTTP.SignalR.Messages
  summary: "\nA dictionary that may contain additional error data (can only be present for hub errors). It can be null.\n"
  example: []
  syntax:
    content: public IDictionary<string, object> AdditionalData { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IDictionary{System.String,System.Object}
    content.vb: Public ReadOnly Property AdditionalData As IDictionary(Of String, Object)
  overload: BestHTTP.SignalR.Messages.FailureMessage.AdditionalData*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: BestHTTP.SignalR.Messages.FailureMessage.StackTrace
  commentId: P:BestHTTP.SignalR.Messages.FailureMessage.StackTrace
  id: StackTrace
  parent: BestHTTP.SignalR.Messages.FailureMessage
  langs:
  - csharp
  - vb
  name: StackTrace
  nameWithType: FailureMessage.StackTrace
  fullName: BestHTTP.SignalR.Messages.FailureMessage.StackTrace
  type: Property
  source:
    id: StackTrace
    path: ''
    startLine: 10323
  assemblies:
  - cs.temp.dll
  namespace: BestHTTP.SignalR.Messages
  summary: "\nStack trace of the error. It present only if detailed error reporting is turned on on the server (https://msdn.microsoft.com/en-us/library/microsoft.aspnet.signalr.hubconfiguration.enabledetailederrors%28v=vs.118%29.aspx).\n"
  example: []
  syntax:
    content: public string StackTrace { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property StackTrace As String
  overload: BestHTTP.SignalR.Messages.FailureMessage.StackTrace*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: BestHTTP.SignalR.Messages.FailureMessage.State
  commentId: P:BestHTTP.SignalR.Messages.FailureMessage.State
  id: State
  parent: BestHTTP.SignalR.Messages.FailureMessage
  langs:
  - csharp
  - vb
  name: State
  nameWithType: FailureMessage.State
  fullName: BestHTTP.SignalR.Messages.FailureMessage.State
  type: Property
  source:
    id: State
    path: ''
    startLine: 10331
  assemblies:
  - cs.temp.dll
  namespace: BestHTTP.SignalR.Messages
  summary: "\nState changes of the hub. It&apos;s handled automatically by the Hub.\n"
  example: []
  syntax:
    content: public IDictionary<string, object> State { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IDictionary{System.String,System.Object}
    content.vb: Public ReadOnly Property State As IDictionary(Of String, Object)
  overload: BestHTTP.SignalR.Messages.FailureMessage.State*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: BestHTTP.SignalR.Messages.FailureMessage.BestHTTP#SignalR#Messages#IServerMessage#Parse(System.Object)
  commentId: M:BestHTTP.SignalR.Messages.FailureMessage.BestHTTP#SignalR#Messages#IServerMessage#Parse(System.Object)
  id: BestHTTP#SignalR#Messages#IServerMessage#Parse(System.Object)
  isEii: true
  parent: BestHTTP.SignalR.Messages.FailureMessage
  langs:
  - csharp
  - vb
  name: IServerMessage.Parse(Object)
  nameWithType: FailureMessage.IServerMessage.Parse(Object)
  fullName: BestHTTP.SignalR.Messages.FailureMessage.BestHTTP.SignalR.Messages.IServerMessage.Parse(System.Object)
  type: Method
  source:
    id: BestHTTP.SignalR.Messages.IServerMessage.Parse
    path: ''
    startLine: 10334
  assemblies:
  - cs.temp.dll
  namespace: BestHTTP.SignalR.Messages
  syntax:
    content: void IServerMessage.Parse(object data)
    parameters:
    - id: data
      type: System.Object
    content.vb: Sub BestHTTP.SignalR.Messages.IServerMessage.Parse(data As Object) Implements IServerMessage.Parse
  overload: BestHTTP.SignalR.Messages.FailureMessage.BestHTTP#SignalR#Messages#IServerMessage#Parse*
  implements:
  - BestHTTP.SignalR.Messages.IServerMessage.Parse(System.Object)
  nameWithType.vb: FailureMessage.BestHTTP.SignalR.Messages.IServerMessage.Parse(Object)
  name.vb: BestHTTP.SignalR.Messages.IServerMessage.Parse(Object)
references:
- uid: BestHTTP.SignalR.Messages
  commentId: N:BestHTTP.SignalR.Messages
  name: BestHTTP.SignalR.Messages
  nameWithType: BestHTTP.SignalR.Messages
  fullName: BestHTTP.SignalR.Messages
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: BestHTTP.SignalR.Messages.IServerMessage
  commentId: T:BestHTTP.SignalR.Messages.IServerMessage
  parent: BestHTTP.SignalR.Messages
  name: IServerMessage
  nameWithType: IServerMessage
  fullName: BestHTTP.SignalR.Messages.IServerMessage
- uid: BestHTTP.SignalR.Messages.IHubMessage
  commentId: T:BestHTTP.SignalR.Messages.IHubMessage
  parent: BestHTTP.SignalR.Messages
  name: IHubMessage
  nameWithType: IHubMessage
  fullName: BestHTTP.SignalR.Messages.IHubMessage
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: BestHTTP.SignalR.Messages.FailureMessage.BestHTTP#SignalR#Messages#IServerMessage#Type*
  commentId: Overload:BestHTTP.SignalR.Messages.FailureMessage.BestHTTP#SignalR#Messages#IServerMessage#Type
  name: IServerMessage.Type
  nameWithType: FailureMessage.IServerMessage.Type
  fullName: BestHTTP.SignalR.Messages.FailureMessage.BestHTTP.SignalR.Messages.IServerMessage.Type
  nameWithType.vb: FailureMessage.BestHTTP.SignalR.Messages.IServerMessage.Type
  name.vb: BestHTTP.SignalR.Messages.IServerMessage.Type
- uid: BestHTTP.SignalR.Messages.IServerMessage.Type
  commentId: P:BestHTTP.SignalR.Messages.IServerMessage.Type
  parent: BestHTTP.SignalR.Messages.IServerMessage
  name: Type
  nameWithType: IServerMessage.Type
  fullName: BestHTTP.SignalR.Messages.IServerMessage.Type
- uid: BestHTTP.SignalR.MessageTypes
  commentId: T:BestHTTP.SignalR.MessageTypes
  parent: BestHTTP.SignalR
  name: MessageTypes
  nameWithType: MessageTypes
  fullName: BestHTTP.SignalR.MessageTypes
- uid: BestHTTP.SignalR
  commentId: N:BestHTTP.SignalR
  name: BestHTTP.SignalR
  nameWithType: BestHTTP.SignalR
  fullName: BestHTTP.SignalR
- uid: BestHTTP.SignalR.Messages.FailureMessage.InvocationId*
  commentId: Overload:BestHTTP.SignalR.Messages.FailureMessage.InvocationId
  name: InvocationId
  nameWithType: FailureMessage.InvocationId
  fullName: BestHTTP.SignalR.Messages.FailureMessage.InvocationId
- uid: BestHTTP.SignalR.Messages.IHubMessage.InvocationId
  commentId: P:BestHTTP.SignalR.Messages.IHubMessage.InvocationId
  parent: BestHTTP.SignalR.Messages.IHubMessage
  name: InvocationId
  nameWithType: IHubMessage.InvocationId
  fullName: BestHTTP.SignalR.Messages.IHubMessage.InvocationId
- uid: System.UInt64
  commentId: T:System.UInt64
  parent: System
  isExternal: true
  name: UInt64
  nameWithType: UInt64
  fullName: System.UInt64
- uid: BestHTTP.SignalR.Messages.FailureMessage.IsHubError*
  commentId: Overload:BestHTTP.SignalR.Messages.FailureMessage.IsHubError
  name: IsHubError
  nameWithType: FailureMessage.IsHubError
  fullName: BestHTTP.SignalR.Messages.FailureMessage.IsHubError
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: BestHTTP.SignalR.Messages.FailureMessage.ErrorMessage*
  commentId: Overload:BestHTTP.SignalR.Messages.FailureMessage.ErrorMessage
  name: ErrorMessage
  nameWithType: FailureMessage.ErrorMessage
  fullName: BestHTTP.SignalR.Messages.FailureMessage.ErrorMessage
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: BestHTTP.SignalR.Messages.FailureMessage.AdditionalData*
  commentId: Overload:BestHTTP.SignalR.Messages.FailureMessage.AdditionalData
  name: AdditionalData
  nameWithType: FailureMessage.AdditionalData
  fullName: BestHTTP.SignalR.Messages.FailureMessage.AdditionalData
- uid: System.Collections.Generic.IDictionary{System.String,System.Object}
  commentId: T:System.Collections.Generic.IDictionary{System.String,System.Object}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IDictionary`2
  name: IDictionary<String, Object>
  nameWithType: IDictionary<String, Object>
  fullName: System.Collections.Generic.IDictionary<System.String, System.Object>
  nameWithType.vb: IDictionary(Of String, Object)
  fullName.vb: System.Collections.Generic.IDictionary(Of System.String, System.Object)
  name.vb: IDictionary(Of String, Object)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IDictionary`2
  commentId: T:System.Collections.Generic.IDictionary`2
  isExternal: true
  name: IDictionary<TKey, TValue>
  nameWithType: IDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>
  nameWithType.vb: IDictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.IDictionary(Of TKey, TValue)
  name.vb: IDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: BestHTTP.SignalR.Messages.FailureMessage.StackTrace*
  commentId: Overload:BestHTTP.SignalR.Messages.FailureMessage.StackTrace
  name: StackTrace
  nameWithType: FailureMessage.StackTrace
  fullName: BestHTTP.SignalR.Messages.FailureMessage.StackTrace
- uid: BestHTTP.SignalR.Messages.FailureMessage.State*
  commentId: Overload:BestHTTP.SignalR.Messages.FailureMessage.State
  name: State
  nameWithType: FailureMessage.State
  fullName: BestHTTP.SignalR.Messages.FailureMessage.State
- uid: BestHTTP.SignalR.Messages.FailureMessage.BestHTTP#SignalR#Messages#IServerMessage#Parse*
  commentId: Overload:BestHTTP.SignalR.Messages.FailureMessage.BestHTTP#SignalR#Messages#IServerMessage#Parse
  name: IServerMessage.Parse
  nameWithType: FailureMessage.IServerMessage.Parse
  fullName: BestHTTP.SignalR.Messages.FailureMessage.BestHTTP.SignalR.Messages.IServerMessage.Parse
  nameWithType.vb: FailureMessage.BestHTTP.SignalR.Messages.IServerMessage.Parse
  name.vb: BestHTTP.SignalR.Messages.IServerMessage.Parse
- uid: BestHTTP.SignalR.Messages.IServerMessage.Parse(System.Object)
  commentId: M:BestHTTP.SignalR.Messages.IServerMessage.Parse(System.Object)
  parent: BestHTTP.SignalR.Messages.IServerMessage
  isExternal: true
  name: Parse(Object)
  nameWithType: IServerMessage.Parse(Object)
  fullName: BestHTTP.SignalR.Messages.IServerMessage.Parse(System.Object)
  spec.csharp:
  - uid: BestHTTP.SignalR.Messages.IServerMessage.Parse(System.Object)
    name: Parse
    nameWithType: IServerMessage.Parse
    fullName: BestHTTP.SignalR.Messages.IServerMessage.Parse
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BestHTTP.SignalR.Messages.IServerMessage.Parse(System.Object)
    name: Parse
    nameWithType: IServerMessage.Parse
    fullName: BestHTTP.SignalR.Messages.IServerMessage.Parse
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
