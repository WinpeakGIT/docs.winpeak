### YamlMime:ManagedReference
items:
- uid: BestHTTP.Authentication.Credentials
  commentId: T:BestHTTP.Authentication.Credentials
  id: Credentials
  parent: BestHTTP.Authentication
  children:
  - BestHTTP.Authentication.Credentials.#ctor(BestHTTP.Authentication.AuthenticationTypes,System.String,System.String)
  - BestHTTP.Authentication.Credentials.#ctor(System.String,System.String)
  - BestHTTP.Authentication.Credentials.Password
  - BestHTTP.Authentication.Credentials.Type
  - BestHTTP.Authentication.Credentials.UserName
  langs:
  - csharp
  - vb
  name: Credentials
  nameWithType: Credentials
  fullName: BestHTTP.Authentication.Credentials
  type: Class
  source:
    id: Credentials
    path: ''
    startLine: 164671
  assemblies:
  - cs.temp.dll
  namespace: BestHTTP.Authentication
  summary: "\nHold all information that required to authenticate to a remote server.\n"
  example: []
  syntax:
    content: public sealed class Credentials
    content.vb: Public NotInheritable Class Credentials
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ToString
  - System.Object.ReferenceEquals(System.Object,System.Object)
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: BestHTTP.Authentication.Credentials.Type
  commentId: P:BestHTTP.Authentication.Credentials.Type
  id: Type
  parent: BestHTTP.Authentication.Credentials
  langs:
  - csharp
  - vb
  name: Type
  nameWithType: Credentials.Type
  fullName: BestHTTP.Authentication.Credentials.Type
  type: Property
  source:
    id: Type
    path: ''
    startLine: 164676
  assemblies:
  - cs.temp.dll
  namespace: BestHTTP.Authentication
  summary: "\nThe type of the Authentication. If you don&apos;t know what to use, the preferred way is to choose Unknow.\n"
  example: []
  syntax:
    content: public AuthenticationTypes Type { get; }
    parameters: []
    return:
      type: BestHTTP.Authentication.AuthenticationTypes
    content.vb: Public ReadOnly Property Type As AuthenticationTypes
  overload: BestHTTP.Authentication.Credentials.Type*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: BestHTTP.Authentication.Credentials.UserName
  commentId: P:BestHTTP.Authentication.Credentials.UserName
  id: UserName
  parent: BestHTTP.Authentication.Credentials
  langs:
  - csharp
  - vb
  name: UserName
  nameWithType: Credentials.UserName
  fullName: BestHTTP.Authentication.Credentials.UserName
  type: Property
  source:
    id: UserName
    path: ''
    startLine: 164681
  assemblies:
  - cs.temp.dll
  namespace: BestHTTP.Authentication
  summary: "\nThe username to authenticate on the remote server.\n"
  example: []
  syntax:
    content: public string UserName { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property UserName As String
  overload: BestHTTP.Authentication.Credentials.UserName*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: BestHTTP.Authentication.Credentials.Password
  commentId: P:BestHTTP.Authentication.Credentials.Password
  id: Password
  parent: BestHTTP.Authentication.Credentials
  langs:
  - csharp
  - vb
  name: Password
  nameWithType: Credentials.Password
  fullName: BestHTTP.Authentication.Credentials.Password
  type: Property
  source:
    id: Password
    path: ''
    startLine: 164686
  assemblies:
  - cs.temp.dll
  namespace: BestHTTP.Authentication
  summary: "\nThe password to use in the authentication process. The password will be stored only in this class.\n"
  example: []
  syntax:
    content: public string Password { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property Password As String
  overload: BestHTTP.Authentication.Credentials.Password*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: BestHTTP.Authentication.Credentials.#ctor(System.String,System.String)
  commentId: M:BestHTTP.Authentication.Credentials.#ctor(System.String,System.String)
  id: '#ctor(System.String,System.String)'
  parent: BestHTTP.Authentication.Credentials
  langs:
  - csharp
  - vb
  name: Credentials(String, String)
  nameWithType: Credentials.Credentials(String, String)
  fullName: BestHTTP.Authentication.Credentials.Credentials(System.String, System.String)
  type: Constructor
  source:
    id: .ctor
    path: ''
    startLine: 164691
  assemblies:
  - cs.temp.dll
  namespace: BestHTTP.Authentication
  summary: "\nSet up the authentication credentials with the username and password. The Type will be set to Unknown.\n"
  example: []
  syntax:
    content: public Credentials(string userName, string password)
    parameters:
    - id: userName
      type: System.String
    - id: password
      type: System.String
    content.vb: Public Sub New(userName As String, password As String)
  overload: BestHTTP.Authentication.Credentials.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: BestHTTP.Authentication.Credentials.#ctor(BestHTTP.Authentication.AuthenticationTypes,System.String,System.String)
  commentId: M:BestHTTP.Authentication.Credentials.#ctor(BestHTTP.Authentication.AuthenticationTypes,System.String,System.String)
  id: '#ctor(BestHTTP.Authentication.AuthenticationTypes,System.String,System.String)'
  parent: BestHTTP.Authentication.Credentials
  langs:
  - csharp
  - vb
  name: Credentials(AuthenticationTypes, String, String)
  nameWithType: Credentials.Credentials(AuthenticationTypes, String, String)
  fullName: BestHTTP.Authentication.Credentials.Credentials(BestHTTP.Authentication.AuthenticationTypes, System.String, System.String)
  type: Constructor
  source:
    id: .ctor
    path: ''
    startLine: 164699
  assemblies:
  - cs.temp.dll
  namespace: BestHTTP.Authentication
  summary: "\nSet up the authentication credentials with the given authentication type, username and password.\n"
  example: []
  syntax:
    content: public Credentials(AuthenticationTypes type, string userName, string password)
    parameters:
    - id: type
      type: BestHTTP.Authentication.AuthenticationTypes
    - id: userName
      type: System.String
    - id: password
      type: System.String
    content.vb: Public Sub New(type As AuthenticationTypes, userName As String, password As String)
  overload: BestHTTP.Authentication.Credentials.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: BestHTTP.Authentication
  commentId: N:BestHTTP.Authentication
  name: BestHTTP.Authentication
  nameWithType: BestHTTP.Authentication
  fullName: BestHTTP.Authentication
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: BestHTTP.Authentication.Credentials.Type*
  commentId: Overload:BestHTTP.Authentication.Credentials.Type
  name: Type
  nameWithType: Credentials.Type
  fullName: BestHTTP.Authentication.Credentials.Type
- uid: BestHTTP.Authentication.AuthenticationTypes
  commentId: T:BestHTTP.Authentication.AuthenticationTypes
  parent: BestHTTP.Authentication
  name: AuthenticationTypes
  nameWithType: AuthenticationTypes
  fullName: BestHTTP.Authentication.AuthenticationTypes
- uid: BestHTTP.Authentication.Credentials.UserName*
  commentId: Overload:BestHTTP.Authentication.Credentials.UserName
  name: UserName
  nameWithType: Credentials.UserName
  fullName: BestHTTP.Authentication.Credentials.UserName
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: BestHTTP.Authentication.Credentials.Password*
  commentId: Overload:BestHTTP.Authentication.Credentials.Password
  name: Password
  nameWithType: Credentials.Password
  fullName: BestHTTP.Authentication.Credentials.Password
- uid: BestHTTP.Authentication.Credentials.#ctor*
  commentId: Overload:BestHTTP.Authentication.Credentials.#ctor
  name: Credentials
  nameWithType: Credentials.Credentials
  fullName: BestHTTP.Authentication.Credentials.Credentials
