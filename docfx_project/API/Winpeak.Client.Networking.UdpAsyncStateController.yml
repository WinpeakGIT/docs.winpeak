### YamlMime:ManagedReference
items:
- uid: Winpeak.Client.Networking.UdpAsyncStateController
  commentId: T:Winpeak.Client.Networking.UdpAsyncStateController
  id: UdpAsyncStateController
  parent: Winpeak.Client.Networking
  children:
  - Winpeak.Client.Networking.UdpAsyncStateController.#ctor(UdpClient,IPEndPoint)
  - Winpeak.Client.Networking.UdpAsyncStateController._controlIpEndPoint
  - Winpeak.Client.Networking.UdpAsyncStateController.GetResult(IAsyncResult@)
  - Winpeak.Client.Networking.UdpAsyncStateController.IsOperationDone
  - Winpeak.Client.Networking.UdpAsyncStateController.IsOperationProceedBytes
  - Winpeak.Client.Networking.UdpAsyncStateController.operationResult
  - Winpeak.Client.Networking.UdpAsyncStateController.UdpClient
  langs:
  - csharp
  - vb
  name: UdpAsyncStateController
  nameWithType: UdpAsyncStateController
  fullName: Winpeak.Client.Networking.UdpAsyncStateController
  type: Class
  source:
    id: UdpAsyncStateController
    path: ''
    startLine: 3548
  assemblies:
  - cs.temp.dll
  namespace: Winpeak.Client.Networking
  syntax:
    content: public abstract class UdpAsyncStateController
    content.vb: Public MustInherit Class UdpAsyncStateController
  inheritance:
  - System.Object
  derivedClasses:
  - Winpeak.Client.Networking.UdpAsyncReceiveState
  - Winpeak.Client.Networking.UdpAsyncSendState
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ToString
  - System.Object.ReferenceEquals(System.Object,System.Object)
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: Winpeak.Client.Networking.UdpAsyncStateController.UdpClient
  commentId: F:Winpeak.Client.Networking.UdpAsyncStateController.UdpClient
  id: UdpClient
  parent: Winpeak.Client.Networking.UdpAsyncStateController
  langs:
  - csharp
  - vb
  name: UdpClient
  nameWithType: UdpAsyncStateController.UdpClient
  fullName: Winpeak.Client.Networking.UdpAsyncStateController.UdpClient
  type: Field
  source:
    id: UdpClient
    path: ''
    startLine: 3550
  assemblies:
  - cs.temp.dll
  namespace: Winpeak.Client.Networking
  syntax:
    content: public readonly UdpClient UdpClient
    return:
      type: UdpClient
    content.vb: Public ReadOnly UdpClient As UdpClient
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Winpeak.Client.Networking.UdpAsyncStateController._controlIpEndPoint
  commentId: F:Winpeak.Client.Networking.UdpAsyncStateController._controlIpEndPoint
  id: _controlIpEndPoint
  parent: Winpeak.Client.Networking.UdpAsyncStateController
  langs:
  - csharp
  - vb
  name: _controlIpEndPoint
  nameWithType: UdpAsyncStateController._controlIpEndPoint
  fullName: Winpeak.Client.Networking.UdpAsyncStateController._controlIpEndPoint
  type: Field
  source:
    id: _controlIpEndPoint
    path: ''
    startLine: 3551
  assemblies:
  - cs.temp.dll
  namespace: Winpeak.Client.Networking
  syntax:
    content: protected IPEndPoint _controlIpEndPoint
    return:
      type: IPEndPoint
    content.vb: Protected _controlIpEndPoint As IPEndPoint
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Winpeak.Client.Networking.UdpAsyncStateController.IsOperationDone
  commentId: P:Winpeak.Client.Networking.UdpAsyncStateController.IsOperationDone
  id: IsOperationDone
  parent: Winpeak.Client.Networking.UdpAsyncStateController
  langs:
  - csharp
  - vb
  name: IsOperationDone
  nameWithType: UdpAsyncStateController.IsOperationDone
  fullName: Winpeak.Client.Networking.UdpAsyncStateController.IsOperationDone
  type: Property
  source:
    id: IsOperationDone
    path: ''
    startLine: 3552
  assemblies:
  - cs.temp.dll
  namespace: Winpeak.Client.Networking
  syntax:
    content: public bool IsOperationDone { get; protected set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property IsOperationDone As Boolean
  overload: Winpeak.Client.Networking.UdpAsyncStateController.IsOperationDone*
  modifiers.csharp:
  - public
  - get
  - protected set
  modifiers.vb:
  - Public
  - Get
  - Protected Set
- uid: Winpeak.Client.Networking.UdpAsyncStateController.operationResult
  commentId: F:Winpeak.Client.Networking.UdpAsyncStateController.operationResult
  id: operationResult
  parent: Winpeak.Client.Networking.UdpAsyncStateController
  langs:
  - csharp
  - vb
  name: operationResult
  nameWithType: UdpAsyncStateController.operationResult
  fullName: Winpeak.Client.Networking.UdpAsyncStateController.operationResult
  type: Field
  source:
    id: operationResult
    path: ''
    startLine: 3553
  assemblies:
  - cs.temp.dll
  namespace: Winpeak.Client.Networking
  syntax:
    content: protected string operationResult
    return:
      type: System.String
    content.vb: Protected operationResult As String
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Winpeak.Client.Networking.UdpAsyncStateController.IsOperationProceedBytes
  commentId: P:Winpeak.Client.Networking.UdpAsyncStateController.IsOperationProceedBytes
  id: IsOperationProceedBytes
  parent: Winpeak.Client.Networking.UdpAsyncStateController
  langs:
  - csharp
  - vb
  name: IsOperationProceedBytes
  nameWithType: UdpAsyncStateController.IsOperationProceedBytes
  fullName: Winpeak.Client.Networking.UdpAsyncStateController.IsOperationProceedBytes
  type: Property
  source:
    id: IsOperationProceedBytes
    path: ''
    startLine: 3558
  assemblies:
  - cs.temp.dll
  namespace: Winpeak.Client.Networking
  summary: "\nIf more than 0 bytes were proceeded, than this flag is true;\n"
  example: []
  syntax:
    content: public bool IsOperationProceedBytes { get; protected set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property IsOperationProceedBytes As Boolean
  overload: Winpeak.Client.Networking.UdpAsyncStateController.IsOperationProceedBytes*
  modifiers.csharp:
  - public
  - get
  - protected set
  modifiers.vb:
  - Public
  - Get
  - Protected Set
- uid: Winpeak.Client.Networking.UdpAsyncStateController.#ctor(UdpClient,IPEndPoint)
  commentId: M:Winpeak.Client.Networking.UdpAsyncStateController.#ctor(UdpClient,IPEndPoint)
  id: '#ctor(UdpClient,IPEndPoint)'
  parent: Winpeak.Client.Networking.UdpAsyncStateController
  langs:
  - csharp
  - vb
  name: UdpAsyncStateController(UdpClient, IPEndPoint)
  nameWithType: UdpAsyncStateController.UdpAsyncStateController(UdpClient, IPEndPoint)
  fullName: Winpeak.Client.Networking.UdpAsyncStateController.UdpAsyncStateController(UdpClient, IPEndPoint)
  type: Constructor
  source:
    id: .ctor
    path: ''
    startLine: 3560
  assemblies:
  - cs.temp.dll
  namespace: Winpeak.Client.Networking
  syntax:
    content: protected UdpAsyncStateController(UdpClient udpClient, IPEndPoint controlIpEndPoint)
    parameters:
    - id: udpClient
      type: UdpClient
    - id: controlIpEndPoint
      type: IPEndPoint
    content.vb: Protected Sub New(udpClient As UdpClient, controlIpEndPoint As IPEndPoint)
  overload: Winpeak.Client.Networking.UdpAsyncStateController.#ctor*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Winpeak.Client.Networking.UdpAsyncStateController.GetResult(IAsyncResult@)
  commentId: M:Winpeak.Client.Networking.UdpAsyncStateController.GetResult(IAsyncResult@)
  id: GetResult(IAsyncResult@)
  parent: Winpeak.Client.Networking.UdpAsyncStateController
  langs:
  - csharp
  - vb
  name: GetResult(ref IAsyncResult)
  nameWithType: UdpAsyncStateController.GetResult(ref IAsyncResult)
  fullName: Winpeak.Client.Networking.UdpAsyncStateController.GetResult(ref IAsyncResult)
  type: Method
  source:
    id: GetResult
    path: ''
    startLine: 3575
  assemblies:
  - cs.temp.dll
  namespace: Winpeak.Client.Networking
  summary: "\n//Аргумент резалт требуется для имплементации интерфейса, но структура инкапсулирует в себе те данные,\n//которые в нём передаются ссылочно, чтобы избежать боксинга-анбоксинга, т.к операций будет много - \n//оверхет нафиг не нужен\n"
  example: []
  syntax:
    content: public abstract string GetResult(ref IAsyncResult result)
    parameters:
    - id: result
      type: IAsyncResult
      description: ''
    return:
      type: System.String
      description: ''
    content.vb: Public MustOverride Function GetResult(ByRef result As IAsyncResult) As String
  overload: Winpeak.Client.Networking.UdpAsyncStateController.GetResult*
  nameWithType.vb: UdpAsyncStateController.GetResult(ByRef IAsyncResult)
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
  fullName.vb: Winpeak.Client.Networking.UdpAsyncStateController.GetResult(ByRef IAsyncResult)
  name.vb: GetResult(ByRef IAsyncResult)
references:
- uid: Winpeak.Client.Networking
  commentId: N:Winpeak.Client.Networking
  name: Winpeak.Client.Networking
  nameWithType: Winpeak.Client.Networking
  fullName: Winpeak.Client.Networking
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: UdpClient
  isExternal: true
  name: UdpClient
  nameWithType: UdpClient
  fullName: UdpClient
- uid: IPEndPoint
  isExternal: true
  name: IPEndPoint
  nameWithType: IPEndPoint
  fullName: IPEndPoint
- uid: Winpeak.Client.Networking.UdpAsyncStateController.IsOperationDone*
  commentId: Overload:Winpeak.Client.Networking.UdpAsyncStateController.IsOperationDone
  name: IsOperationDone
  nameWithType: UdpAsyncStateController.IsOperationDone
  fullName: Winpeak.Client.Networking.UdpAsyncStateController.IsOperationDone
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Winpeak.Client.Networking.UdpAsyncStateController.IsOperationProceedBytes*
  commentId: Overload:Winpeak.Client.Networking.UdpAsyncStateController.IsOperationProceedBytes
  name: IsOperationProceedBytes
  nameWithType: UdpAsyncStateController.IsOperationProceedBytes
  fullName: Winpeak.Client.Networking.UdpAsyncStateController.IsOperationProceedBytes
- uid: Winpeak.Client.Networking.UdpAsyncStateController.#ctor*
  commentId: Overload:Winpeak.Client.Networking.UdpAsyncStateController.#ctor
  name: UdpAsyncStateController
  nameWithType: UdpAsyncStateController.UdpAsyncStateController
  fullName: Winpeak.Client.Networking.UdpAsyncStateController.UdpAsyncStateController
- uid: Winpeak.Client.Networking.UdpAsyncStateController.GetResult*
  commentId: Overload:Winpeak.Client.Networking.UdpAsyncStateController.GetResult
  name: GetResult
  nameWithType: UdpAsyncStateController.GetResult
  fullName: Winpeak.Client.Networking.UdpAsyncStateController.GetResult
- uid: IAsyncResult
  isExternal: true
  name: IAsyncResult
  nameWithType: IAsyncResult
  fullName: IAsyncResult
