### YamlMime:ManagedReference
items:
- uid: Winpeak.Client.Models.LimitedQueue`1
  commentId: T:Winpeak.Client.Models.LimitedQueue`1
  id: LimitedQueue`1
  parent: Winpeak.Client.Models
  children:
  - Winpeak.Client.Models.LimitedQueue`1.#ctor(System.Int32)
  - Winpeak.Client.Models.LimitedQueue`1.Enqueue(`0)
  - Winpeak.Client.Models.LimitedQueue`1.Limit
  langs:
  - csharp
  - vb
  name: LimitedQueue<T>
  nameWithType: LimitedQueue<T>
  fullName: Winpeak.Client.Models.LimitedQueue<T>
  type: Class
  source:
    id: LimitedQueue
    path: ''
    startLine: 168389
  assemblies:
  - cs.temp.dll
  namespace: Winpeak.Client.Models
  syntax:
    content: 'public class LimitedQueue<T> : Queue<T>, ICollection, IReadOnlyCollection<T>, IEnumerable<T>, IEnumerable'
    typeParameters:
    - id: T
    content.vb: >-
      Public Class LimitedQueue(Of T)
          Inherits Queue(Of T)
          Implements ICollection, IReadOnlyCollection(Of T), IEnumerable(Of T), IEnumerable
  inheritance:
  - System.Object
  - System.Collections.Generic.Queue{{T}}
  implements:
  - System.Collections.ICollection
  - System.Collections.Generic.IReadOnlyCollection{{T}}
  - System.Collections.Generic.IEnumerable{{T}}
  - System.Collections.IEnumerable
  inheritedMembers:
  - System.Collections.Generic.Queue{{T}}.Clear
  - System.Collections.Generic.Queue{{T}}.CopyTo({T}[],System.Int32)
  - System.Collections.Generic.Queue{{T}}.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  - System.Collections.Generic.Queue{{T}}.GetEnumerator
  - System.Collections.Generic.Queue{{T}}.System#Collections#Generic#IEnumerable{T}#GetEnumerator
  - System.Collections.Generic.Queue{{T}}.System#Collections#IEnumerable#GetEnumerator
  - System.Collections.Generic.Queue{{T}}.Dequeue
  - System.Collections.Generic.Queue{{T}}.TryDequeue({T}@)
  - System.Collections.Generic.Queue{{T}}.Peek
  - System.Collections.Generic.Queue{{T}}.TryPeek({T}@)
  - System.Collections.Generic.Queue{{T}}.Contains({T})
  - System.Collections.Generic.Queue{{T}}.ToArray
  - System.Collections.Generic.Queue{{T}}.TrimExcess
  - System.Collections.Generic.Queue{{T}}.Count
  - System.Collections.Generic.Queue{{T}}.System#Collections#ICollection#IsSynchronized
  - System.Collections.Generic.Queue{{T}}.System#Collections#ICollection#SyncRoot
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ToString
  - System.Object.ReferenceEquals(System.Object,System.Object)
  nameWithType.vb: LimitedQueue(Of T)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
  fullName.vb: Winpeak.Client.Models.LimitedQueue(Of T)
  name.vb: LimitedQueue(Of T)
- uid: Winpeak.Client.Models.LimitedQueue`1.Limit
  commentId: F:Winpeak.Client.Models.LimitedQueue`1.Limit
  id: Limit
  parent: Winpeak.Client.Models.LimitedQueue`1
  langs:
  - csharp
  - vb
  name: Limit
  nameWithType: LimitedQueue<T>.Limit
  fullName: Winpeak.Client.Models.LimitedQueue<T>.Limit
  type: Field
  source:
    id: Limit
    path: ''
    startLine: 168391
  assemblies:
  - cs.temp.dll
  namespace: Winpeak.Client.Models
  syntax:
    content: public readonly int Limit
    return:
      type: System.Int32
    content.vb: Public ReadOnly Limit As Integer
  nameWithType.vb: LimitedQueue(Of T).Limit
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: Winpeak.Client.Models.LimitedQueue(Of T).Limit
- uid: Winpeak.Client.Models.LimitedQueue`1.#ctor(System.Int32)
  commentId: M:Winpeak.Client.Models.LimitedQueue`1.#ctor(System.Int32)
  id: '#ctor(System.Int32)'
  parent: Winpeak.Client.Models.LimitedQueue`1
  langs:
  - csharp
  - vb
  name: LimitedQueue(Int32)
  nameWithType: LimitedQueue<T>.LimitedQueue(Int32)
  fullName: Winpeak.Client.Models.LimitedQueue<T>.LimitedQueue(System.Int32)
  type: Constructor
  source:
    id: .ctor
    path: ''
    startLine: 168393
  assemblies:
  - cs.temp.dll
  namespace: Winpeak.Client.Models
  syntax:
    content: public LimitedQueue(int limit)
    parameters:
    - id: limit
      type: System.Int32
    content.vb: Public Sub New(limit As Integer)
  overload: Winpeak.Client.Models.LimitedQueue`1.#ctor*
  nameWithType.vb: LimitedQueue(Of T).LimitedQueue(Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Winpeak.Client.Models.LimitedQueue(Of T).LimitedQueue(System.Int32)
- uid: Winpeak.Client.Models.LimitedQueue`1.Enqueue(`0)
  commentId: M:Winpeak.Client.Models.LimitedQueue`1.Enqueue(`0)
  id: Enqueue(`0)
  parent: Winpeak.Client.Models.LimitedQueue`1
  langs:
  - csharp
  - vb
  name: Enqueue(T)
  nameWithType: LimitedQueue<T>.Enqueue(T)
  fullName: Winpeak.Client.Models.LimitedQueue<T>.Enqueue(T)
  type: Method
  source:
    id: Enqueue
    path: ''
    startLine: 168397
  assemblies:
  - cs.temp.dll
  namespace: Winpeak.Client.Models
  syntax:
    content: public void Enqueue(T item)
    parameters:
    - id: item
      type: '{T}'
    content.vb: Public Sub Enqueue(item As T)
  overload: Winpeak.Client.Models.LimitedQueue`1.Enqueue*
  nameWithType.vb: LimitedQueue(Of T).Enqueue(T)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Winpeak.Client.Models.LimitedQueue(Of T).Enqueue(T)
references:
- uid: Winpeak.Client.Models
  commentId: N:Winpeak.Client.Models
  name: Winpeak.Client.Models
  nameWithType: Winpeak.Client.Models
  fullName: Winpeak.Client.Models
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Collections.Generic.Queue{{T}}
  commentId: T:System.Collections.Generic.Queue{`0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Queue`1
  name: Queue<T>
  nameWithType: Queue<T>
  fullName: System.Collections.Generic.Queue<T>
  nameWithType.vb: Queue(Of T)
  fullName.vb: System.Collections.Generic.Queue(Of T)
  name.vb: Queue(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.Queue`1
    name: Queue
    nameWithType: Queue
    fullName: System.Collections.Generic.Queue
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Queue`1
    name: Queue
    nameWithType: Queue
    fullName: System.Collections.Generic.Queue
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ICollection
  commentId: T:System.Collections.ICollection
  parent: System.Collections
  isExternal: true
  name: ICollection
  nameWithType: ICollection
  fullName: System.Collections.ICollection
- uid: System.Collections.Generic.IReadOnlyCollection{{T}}
  commentId: T:System.Collections.Generic.IReadOnlyCollection{`0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IReadOnlyCollection`1
  name: IReadOnlyCollection<T>
  nameWithType: IReadOnlyCollection<T>
  fullName: System.Collections.Generic.IReadOnlyCollection<T>
  nameWithType.vb: IReadOnlyCollection(Of T)
  fullName.vb: System.Collections.Generic.IReadOnlyCollection(Of T)
  name.vb: IReadOnlyCollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    nameWithType: IReadOnlyCollection
    fullName: System.Collections.Generic.IReadOnlyCollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    nameWithType: IReadOnlyCollection
    fullName: System.Collections.Generic.IReadOnlyCollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{{T}}
  commentId: T:System.Collections.Generic.IEnumerable{`0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.IEnumerable
  commentId: T:System.Collections.IEnumerable
  parent: System.Collections
  isExternal: true
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: System.Collections.Generic.Queue{{T}}.Clear
  commentId: M:System.Collections.Generic.Queue{`0}.Clear
  parent: System.Collections.Generic.Queue{{T}}
  definition: System.Collections.Generic.Queue`1.Clear
  name: Clear()
  nameWithType: Queue<T>.Clear()
  fullName: System.Collections.Generic.Queue<T>.Clear()
  nameWithType.vb: Queue(Of T).Clear()
  fullName.vb: System.Collections.Generic.Queue(Of T).Clear()
  spec.csharp:
  - uid: System.Collections.Generic.Queue`1.Clear
    name: Clear
    nameWithType: Queue<T>.Clear
    fullName: System.Collections.Generic.Queue<T>.Clear
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.Queue`1.Clear
    name: Clear
    nameWithType: Queue(Of T).Clear
    fullName: System.Collections.Generic.Queue(Of T).Clear
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Queue{{T}}.CopyTo({T}[],System.Int32)
  commentId: M:System.Collections.Generic.Queue{`0}.CopyTo(`0[],System.Int32)
  parent: System.Collections.Generic.Queue{{T}}
  definition: System.Collections.Generic.Queue`1.CopyTo(`0[],System.Int32)
  name: CopyTo(T[], Int32)
  nameWithType: Queue<T>.CopyTo(T[], Int32)
  fullName: System.Collections.Generic.Queue<T>.CopyTo(T[], System.Int32)
  nameWithType.vb: Queue(Of T).CopyTo(T(), Int32)
  fullName.vb: System.Collections.Generic.Queue(Of T).CopyTo(T(), System.Int32)
  name.vb: CopyTo(T(), Int32)
  spec.csharp:
  - uid: System.Collections.Generic.Queue`1.CopyTo(`0[],System.Int32)
    name: CopyTo
    nameWithType: Queue<T>.CopyTo
    fullName: System.Collections.Generic.Queue<T>.CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.Queue`1.CopyTo(`0[],System.Int32)
    name: CopyTo
    nameWithType: Queue(Of T).CopyTo
    fullName: System.Collections.Generic.Queue(Of T).CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Queue{{T}}.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  commentId: M:System.Collections.Generic.Queue{`0}.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  parent: System.Collections.Generic.Queue{{T}}
  definition: System.Collections.Generic.Queue`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  name: ICollection.CopyTo(Array, Int32)
  nameWithType: Queue<T>.ICollection.CopyTo(Array, Int32)
  fullName: System.Collections.Generic.Queue<T>.System.Collections.ICollection.CopyTo(System.Array, System.Int32)
  nameWithType.vb: Queue(Of T).System.Collections.ICollection.CopyTo(Array, Int32)
  fullName.vb: System.Collections.Generic.Queue(Of T).System.Collections.ICollection.CopyTo(System.Array, System.Int32)
  name.vb: System.Collections.ICollection.CopyTo(Array, Int32)
  spec.csharp:
  - uid: System.Collections.Generic.Queue`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
    name: ICollection.CopyTo
    nameWithType: Queue<T>.ICollection.CopyTo
    fullName: System.Collections.Generic.Queue<T>.System.Collections.ICollection.CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Array
    name: Array
    nameWithType: Array
    fullName: System.Array
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.Queue`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
    name: System.Collections.ICollection.CopyTo
    nameWithType: Queue(Of T).System.Collections.ICollection.CopyTo
    fullName: System.Collections.Generic.Queue(Of T).System.Collections.ICollection.CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Array
    name: Array
    nameWithType: Array
    fullName: System.Array
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Queue{{T}}.GetEnumerator
  commentId: M:System.Collections.Generic.Queue{`0}.GetEnumerator
  parent: System.Collections.Generic.Queue{{T}}
  definition: System.Collections.Generic.Queue`1.GetEnumerator
  name: GetEnumerator()
  nameWithType: Queue<T>.GetEnumerator()
  fullName: System.Collections.Generic.Queue<T>.GetEnumerator()
  nameWithType.vb: Queue(Of T).GetEnumerator()
  fullName.vb: System.Collections.Generic.Queue(Of T).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.Queue`1.GetEnumerator
    name: GetEnumerator
    nameWithType: Queue<T>.GetEnumerator
    fullName: System.Collections.Generic.Queue<T>.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.Queue`1.GetEnumerator
    name: GetEnumerator
    nameWithType: Queue(Of T).GetEnumerator
    fullName: System.Collections.Generic.Queue(Of T).GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Queue{{T}}.System#Collections#Generic#IEnumerable{T}#GetEnumerator
  commentId: M:System.Collections.Generic.Queue{`0}.System#Collections#Generic#IEnumerable{T}#GetEnumerator
  parent: System.Collections.Generic.Queue{{T}}
  definition: System.Collections.Generic.Queue`1.System#Collections#Generic#IEnumerable{T}#GetEnumerator
  name: IEnumerable<T>.GetEnumerator()
  nameWithType: Queue<T>.IEnumerable<T>.GetEnumerator()
  fullName: System.Collections.Generic.Queue<T>.System.Collections.Generic.IEnumerable<T>.GetEnumerator()
  nameWithType.vb: Queue(Of T).System.Collections.Generic.IEnumerable<T>.GetEnumerator()
  fullName.vb: System.Collections.Generic.Queue(Of T).System.Collections.Generic.IEnumerable<T>.GetEnumerator()
  name.vb: System.Collections.Generic.IEnumerable<T>.GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.Queue`1.System#Collections#Generic#IEnumerable{T}#GetEnumerator
    name: IEnumerable<T>.GetEnumerator
    nameWithType: Queue<T>.IEnumerable<T>.GetEnumerator
    fullName: System.Collections.Generic.Queue<T>.System.Collections.Generic.IEnumerable<T>.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.Queue`1.System#Collections#Generic#IEnumerable{T}#GetEnumerator
    name: System.Collections.Generic.IEnumerable<T>.GetEnumerator
    nameWithType: Queue(Of T).System.Collections.Generic.IEnumerable<T>.GetEnumerator
    fullName: System.Collections.Generic.Queue(Of T).System.Collections.Generic.IEnumerable<T>.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Queue{{T}}.System#Collections#IEnumerable#GetEnumerator
  commentId: M:System.Collections.Generic.Queue{`0}.System#Collections#IEnumerable#GetEnumerator
  parent: System.Collections.Generic.Queue{{T}}
  definition: System.Collections.Generic.Queue`1.System#Collections#IEnumerable#GetEnumerator
  name: IEnumerable.GetEnumerator()
  nameWithType: Queue<T>.IEnumerable.GetEnumerator()
  fullName: System.Collections.Generic.Queue<T>.System.Collections.IEnumerable.GetEnumerator()
  nameWithType.vb: Queue(Of T).System.Collections.IEnumerable.GetEnumerator()
  fullName.vb: System.Collections.Generic.Queue(Of T).System.Collections.IEnumerable.GetEnumerator()
  name.vb: System.Collections.IEnumerable.GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.Queue`1.System#Collections#IEnumerable#GetEnumerator
    name: IEnumerable.GetEnumerator
    nameWithType: Queue<T>.IEnumerable.GetEnumerator
    fullName: System.Collections.Generic.Queue<T>.System.Collections.IEnumerable.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.Queue`1.System#Collections#IEnumerable#GetEnumerator
    name: System.Collections.IEnumerable.GetEnumerator
    nameWithType: Queue(Of T).System.Collections.IEnumerable.GetEnumerator
    fullName: System.Collections.Generic.Queue(Of T).System.Collections.IEnumerable.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Queue{{T}}.Dequeue
  commentId: M:System.Collections.Generic.Queue{`0}.Dequeue
  parent: System.Collections.Generic.Queue{{T}}
  definition: System.Collections.Generic.Queue`1.Dequeue
  name: Dequeue()
  nameWithType: Queue<T>.Dequeue()
  fullName: System.Collections.Generic.Queue<T>.Dequeue()
  nameWithType.vb: Queue(Of T).Dequeue()
  fullName.vb: System.Collections.Generic.Queue(Of T).Dequeue()
  spec.csharp:
  - uid: System.Collections.Generic.Queue`1.Dequeue
    name: Dequeue
    nameWithType: Queue<T>.Dequeue
    fullName: System.Collections.Generic.Queue<T>.Dequeue
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.Queue`1.Dequeue
    name: Dequeue
    nameWithType: Queue(Of T).Dequeue
    fullName: System.Collections.Generic.Queue(Of T).Dequeue
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Queue{{T}}.TryDequeue({T}@)
  commentId: M:System.Collections.Generic.Queue{`0}.TryDequeue(`0@)
  parent: System.Collections.Generic.Queue{{T}}
  definition: System.Collections.Generic.Queue`1.TryDequeue(`0@)
  name: TryDequeue(T)
  nameWithType: Queue<T>.TryDequeue(T)
  fullName: System.Collections.Generic.Queue<T>.TryDequeue(T)
  nameWithType.vb: Queue(Of T).TryDequeue(T)
  fullName.vb: System.Collections.Generic.Queue(Of T).TryDequeue(T)
  spec.csharp:
  - uid: System.Collections.Generic.Queue`1.TryDequeue(`0@)
    name: TryDequeue
    nameWithType: Queue<T>.TryDequeue
    fullName: System.Collections.Generic.Queue<T>.TryDequeue
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.Queue`1.TryDequeue(`0@)
    name: TryDequeue
    nameWithType: Queue(Of T).TryDequeue
    fullName: System.Collections.Generic.Queue(Of T).TryDequeue
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Queue{{T}}.Peek
  commentId: M:System.Collections.Generic.Queue{`0}.Peek
  parent: System.Collections.Generic.Queue{{T}}
  definition: System.Collections.Generic.Queue`1.Peek
  name: Peek()
  nameWithType: Queue<T>.Peek()
  fullName: System.Collections.Generic.Queue<T>.Peek()
  nameWithType.vb: Queue(Of T).Peek()
  fullName.vb: System.Collections.Generic.Queue(Of T).Peek()
  spec.csharp:
  - uid: System.Collections.Generic.Queue`1.Peek
    name: Peek
    nameWithType: Queue<T>.Peek
    fullName: System.Collections.Generic.Queue<T>.Peek
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.Queue`1.Peek
    name: Peek
    nameWithType: Queue(Of T).Peek
    fullName: System.Collections.Generic.Queue(Of T).Peek
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Queue{{T}}.TryPeek({T}@)
  commentId: M:System.Collections.Generic.Queue{`0}.TryPeek(`0@)
  parent: System.Collections.Generic.Queue{{T}}
  definition: System.Collections.Generic.Queue`1.TryPeek(`0@)
  name: TryPeek(T)
  nameWithType: Queue<T>.TryPeek(T)
  fullName: System.Collections.Generic.Queue<T>.TryPeek(T)
  nameWithType.vb: Queue(Of T).TryPeek(T)
  fullName.vb: System.Collections.Generic.Queue(Of T).TryPeek(T)
  spec.csharp:
  - uid: System.Collections.Generic.Queue`1.TryPeek(`0@)
    name: TryPeek
    nameWithType: Queue<T>.TryPeek
    fullName: System.Collections.Generic.Queue<T>.TryPeek
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.Queue`1.TryPeek(`0@)
    name: TryPeek
    nameWithType: Queue(Of T).TryPeek
    fullName: System.Collections.Generic.Queue(Of T).TryPeek
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Queue{{T}}.Contains({T})
  commentId: M:System.Collections.Generic.Queue{`0}.Contains(`0)
  parent: System.Collections.Generic.Queue{{T}}
  definition: System.Collections.Generic.Queue`1.Contains(`0)
  name: Contains(T)
  nameWithType: Queue<T>.Contains(T)
  fullName: System.Collections.Generic.Queue<T>.Contains(T)
  nameWithType.vb: Queue(Of T).Contains(T)
  fullName.vb: System.Collections.Generic.Queue(Of T).Contains(T)
  spec.csharp:
  - uid: System.Collections.Generic.Queue`1.Contains(`0)
    name: Contains
    nameWithType: Queue<T>.Contains
    fullName: System.Collections.Generic.Queue<T>.Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.Queue`1.Contains(`0)
    name: Contains
    nameWithType: Queue(Of T).Contains
    fullName: System.Collections.Generic.Queue(Of T).Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Queue{{T}}.ToArray
  commentId: M:System.Collections.Generic.Queue{`0}.ToArray
  parent: System.Collections.Generic.Queue{{T}}
  definition: System.Collections.Generic.Queue`1.ToArray
  name: ToArray()
  nameWithType: Queue<T>.ToArray()
  fullName: System.Collections.Generic.Queue<T>.ToArray()
  nameWithType.vb: Queue(Of T).ToArray()
  fullName.vb: System.Collections.Generic.Queue(Of T).ToArray()
  spec.csharp:
  - uid: System.Collections.Generic.Queue`1.ToArray
    name: ToArray
    nameWithType: Queue<T>.ToArray
    fullName: System.Collections.Generic.Queue<T>.ToArray
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.Queue`1.ToArray
    name: ToArray
    nameWithType: Queue(Of T).ToArray
    fullName: System.Collections.Generic.Queue(Of T).ToArray
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Queue{{T}}.TrimExcess
  commentId: M:System.Collections.Generic.Queue{`0}.TrimExcess
  parent: System.Collections.Generic.Queue{{T}}
  definition: System.Collections.Generic.Queue`1.TrimExcess
  name: TrimExcess()
  nameWithType: Queue<T>.TrimExcess()
  fullName: System.Collections.Generic.Queue<T>.TrimExcess()
  nameWithType.vb: Queue(Of T).TrimExcess()
  fullName.vb: System.Collections.Generic.Queue(Of T).TrimExcess()
  spec.csharp:
  - uid: System.Collections.Generic.Queue`1.TrimExcess
    name: TrimExcess
    nameWithType: Queue<T>.TrimExcess
    fullName: System.Collections.Generic.Queue<T>.TrimExcess
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.Queue`1.TrimExcess
    name: TrimExcess
    nameWithType: Queue(Of T).TrimExcess
    fullName: System.Collections.Generic.Queue(Of T).TrimExcess
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Queue{{T}}.Count
  commentId: P:System.Collections.Generic.Queue{`0}.Count
  parent: System.Collections.Generic.Queue{{T}}
  definition: System.Collections.Generic.Queue`1.Count
  name: Count
  nameWithType: Queue<T>.Count
  fullName: System.Collections.Generic.Queue<T>.Count
  nameWithType.vb: Queue(Of T).Count
  fullName.vb: System.Collections.Generic.Queue(Of T).Count
- uid: System.Collections.Generic.Queue{{T}}.System#Collections#ICollection#IsSynchronized
  commentId: P:System.Collections.Generic.Queue{`0}.System#Collections#ICollection#IsSynchronized
  parent: System.Collections.Generic.Queue{{T}}
  definition: System.Collections.Generic.Queue`1.System#Collections#ICollection#IsSynchronized
  name: ICollection.IsSynchronized
  nameWithType: Queue<T>.ICollection.IsSynchronized
  fullName: System.Collections.Generic.Queue<T>.System.Collections.ICollection.IsSynchronized
  nameWithType.vb: Queue(Of T).System.Collections.ICollection.IsSynchronized
  fullName.vb: System.Collections.Generic.Queue(Of T).System.Collections.ICollection.IsSynchronized
  name.vb: System.Collections.ICollection.IsSynchronized
- uid: System.Collections.Generic.Queue{{T}}.System#Collections#ICollection#SyncRoot
  commentId: P:System.Collections.Generic.Queue{`0}.System#Collections#ICollection#SyncRoot
  parent: System.Collections.Generic.Queue{{T}}
  definition: System.Collections.Generic.Queue`1.System#Collections#ICollection#SyncRoot
  name: ICollection.SyncRoot
  nameWithType: Queue<T>.ICollection.SyncRoot
  fullName: System.Collections.Generic.Queue<T>.System.Collections.ICollection.SyncRoot
  nameWithType.vb: Queue(Of T).System.Collections.ICollection.SyncRoot
  fullName.vb: System.Collections.Generic.Queue(Of T).System.Collections.ICollection.SyncRoot
  name.vb: System.Collections.ICollection.SyncRoot
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Collections.Generic.Queue`1
  commentId: T:System.Collections.Generic.Queue`1
  isExternal: true
  name: Queue<T>
  nameWithType: Queue<T>
  fullName: System.Collections.Generic.Queue<T>
  nameWithType.vb: Queue(Of T)
  fullName.vb: System.Collections.Generic.Queue(Of T)
  name.vb: Queue(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.Queue`1
    name: Queue
    nameWithType: Queue
    fullName: System.Collections.Generic.Queue
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Queue`1
    name: Queue
    nameWithType: Queue
    fullName: System.Collections.Generic.Queue
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Collections
  commentId: N:System.Collections
  isExternal: true
  name: System.Collections
  nameWithType: System.Collections
  fullName: System.Collections
- uid: System.Collections.Generic.IReadOnlyCollection`1
  commentId: T:System.Collections.Generic.IReadOnlyCollection`1
  isExternal: true
  name: IReadOnlyCollection<T>
  nameWithType: IReadOnlyCollection<T>
  fullName: System.Collections.Generic.IReadOnlyCollection<T>
  nameWithType.vb: IReadOnlyCollection(Of T)
  fullName.vb: System.Collections.Generic.IReadOnlyCollection(Of T)
  name.vb: IReadOnlyCollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    nameWithType: IReadOnlyCollection
    fullName: System.Collections.Generic.IReadOnlyCollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    nameWithType: IReadOnlyCollection
    fullName: System.Collections.Generic.IReadOnlyCollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Queue`1.Clear
  commentId: M:System.Collections.Generic.Queue`1.Clear
  isExternal: true
  name: Clear()
  nameWithType: Queue<T>.Clear()
  fullName: System.Collections.Generic.Queue<T>.Clear()
  nameWithType.vb: Queue(Of T).Clear()
  fullName.vb: System.Collections.Generic.Queue(Of T).Clear()
  spec.csharp:
  - uid: System.Collections.Generic.Queue`1.Clear
    name: Clear
    nameWithType: Queue<T>.Clear
    fullName: System.Collections.Generic.Queue<T>.Clear
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.Queue`1.Clear
    name: Clear
    nameWithType: Queue(Of T).Clear
    fullName: System.Collections.Generic.Queue(Of T).Clear
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Queue`1.CopyTo(`0[],System.Int32)
  commentId: M:System.Collections.Generic.Queue`1.CopyTo(`0[],System.Int32)
  isExternal: true
  name: CopyTo(T[], Int32)
  nameWithType: Queue<T>.CopyTo(T[], Int32)
  fullName: System.Collections.Generic.Queue<T>.CopyTo(T[], System.Int32)
  nameWithType.vb: Queue(Of T).CopyTo(T(), Int32)
  fullName.vb: System.Collections.Generic.Queue(Of T).CopyTo(T(), System.Int32)
  name.vb: CopyTo(T(), Int32)
  spec.csharp:
  - uid: System.Collections.Generic.Queue`1.CopyTo(`0[],System.Int32)
    name: CopyTo
    nameWithType: Queue<T>.CopyTo
    fullName: System.Collections.Generic.Queue<T>.CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.Queue`1.CopyTo(`0[],System.Int32)
    name: CopyTo
    nameWithType: Queue(Of T).CopyTo
    fullName: System.Collections.Generic.Queue(Of T).CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Queue`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  commentId: M:System.Collections.Generic.Queue`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  isExternal: true
  name: ICollection.CopyTo(Array, Int32)
  nameWithType: Queue<T>.ICollection.CopyTo(Array, Int32)
  fullName: System.Collections.Generic.Queue<T>.System.Collections.ICollection.CopyTo(System.Array, System.Int32)
  nameWithType.vb: Queue(Of T).System.Collections.ICollection.CopyTo(Array, Int32)
  fullName.vb: System.Collections.Generic.Queue(Of T).System.Collections.ICollection.CopyTo(System.Array, System.Int32)
  name.vb: System.Collections.ICollection.CopyTo(Array, Int32)
  spec.csharp:
  - uid: System.Collections.Generic.Queue`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
    name: ICollection.CopyTo
    nameWithType: Queue<T>.ICollection.CopyTo
    fullName: System.Collections.Generic.Queue<T>.System.Collections.ICollection.CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Array
    name: Array
    nameWithType: Array
    fullName: System.Array
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.Queue`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
    name: System.Collections.ICollection.CopyTo
    nameWithType: Queue(Of T).System.Collections.ICollection.CopyTo
    fullName: System.Collections.Generic.Queue(Of T).System.Collections.ICollection.CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Array
    name: Array
    nameWithType: Array
    fullName: System.Array
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Queue`1.GetEnumerator
  commentId: M:System.Collections.Generic.Queue`1.GetEnumerator
  isExternal: true
  name: GetEnumerator()
  nameWithType: Queue<T>.GetEnumerator()
  fullName: System.Collections.Generic.Queue<T>.GetEnumerator()
  nameWithType.vb: Queue(Of T).GetEnumerator()
  fullName.vb: System.Collections.Generic.Queue(Of T).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.Queue`1.GetEnumerator
    name: GetEnumerator
    nameWithType: Queue<T>.GetEnumerator
    fullName: System.Collections.Generic.Queue<T>.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.Queue`1.GetEnumerator
    name: GetEnumerator
    nameWithType: Queue(Of T).GetEnumerator
    fullName: System.Collections.Generic.Queue(Of T).GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Queue`1.System#Collections#Generic#IEnumerable{T}#GetEnumerator
  commentId: M:System.Collections.Generic.Queue`1.System#Collections#Generic#IEnumerable{T}#GetEnumerator
  isExternal: true
  name: IEnumerable<T>.GetEnumerator()
  nameWithType: Queue<T>.IEnumerable<T>.GetEnumerator()
  fullName: System.Collections.Generic.Queue<T>.System.Collections.Generic.IEnumerable<T>.GetEnumerator()
  nameWithType.vb: Queue(Of T).System.Collections.Generic.IEnumerable<T>.GetEnumerator()
  fullName.vb: System.Collections.Generic.Queue(Of T).System.Collections.Generic.IEnumerable<T>.GetEnumerator()
  name.vb: System.Collections.Generic.IEnumerable<T>.GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.Queue`1.System#Collections#Generic#IEnumerable{T}#GetEnumerator
    name: IEnumerable<T>.GetEnumerator
    nameWithType: Queue<T>.IEnumerable<T>.GetEnumerator
    fullName: System.Collections.Generic.Queue<T>.System.Collections.Generic.IEnumerable<T>.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.Queue`1.System#Collections#Generic#IEnumerable{T}#GetEnumerator
    name: System.Collections.Generic.IEnumerable<T>.GetEnumerator
    nameWithType: Queue(Of T).System.Collections.Generic.IEnumerable<T>.GetEnumerator
    fullName: System.Collections.Generic.Queue(Of T).System.Collections.Generic.IEnumerable<T>.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Queue`1.System#Collections#IEnumerable#GetEnumerator
  commentId: M:System.Collections.Generic.Queue`1.System#Collections#IEnumerable#GetEnumerator
  isExternal: true
  name: IEnumerable.GetEnumerator()
  nameWithType: Queue<T>.IEnumerable.GetEnumerator()
  fullName: System.Collections.Generic.Queue<T>.System.Collections.IEnumerable.GetEnumerator()
  nameWithType.vb: Queue(Of T).System.Collections.IEnumerable.GetEnumerator()
  fullName.vb: System.Collections.Generic.Queue(Of T).System.Collections.IEnumerable.GetEnumerator()
  name.vb: System.Collections.IEnumerable.GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.Queue`1.System#Collections#IEnumerable#GetEnumerator
    name: IEnumerable.GetEnumerator
    nameWithType: Queue<T>.IEnumerable.GetEnumerator
    fullName: System.Collections.Generic.Queue<T>.System.Collections.IEnumerable.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.Queue`1.System#Collections#IEnumerable#GetEnumerator
    name: System.Collections.IEnumerable.GetEnumerator
    nameWithType: Queue(Of T).System.Collections.IEnumerable.GetEnumerator
    fullName: System.Collections.Generic.Queue(Of T).System.Collections.IEnumerable.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Queue`1.Dequeue
  commentId: M:System.Collections.Generic.Queue`1.Dequeue
  isExternal: true
  name: Dequeue()
  nameWithType: Queue<T>.Dequeue()
  fullName: System.Collections.Generic.Queue<T>.Dequeue()
  nameWithType.vb: Queue(Of T).Dequeue()
  fullName.vb: System.Collections.Generic.Queue(Of T).Dequeue()
  spec.csharp:
  - uid: System.Collections.Generic.Queue`1.Dequeue
    name: Dequeue
    nameWithType: Queue<T>.Dequeue
    fullName: System.Collections.Generic.Queue<T>.Dequeue
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.Queue`1.Dequeue
    name: Dequeue
    nameWithType: Queue(Of T).Dequeue
    fullName: System.Collections.Generic.Queue(Of T).Dequeue
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Queue`1.TryDequeue(`0@)
  commentId: M:System.Collections.Generic.Queue`1.TryDequeue(`0@)
  isExternal: true
  name: TryDequeue(T)
  nameWithType: Queue<T>.TryDequeue(T)
  fullName: System.Collections.Generic.Queue<T>.TryDequeue(T)
  nameWithType.vb: Queue(Of T).TryDequeue(T)
  fullName.vb: System.Collections.Generic.Queue(Of T).TryDequeue(T)
  spec.csharp:
  - uid: System.Collections.Generic.Queue`1.TryDequeue(`0@)
    name: TryDequeue
    nameWithType: Queue<T>.TryDequeue
    fullName: System.Collections.Generic.Queue<T>.TryDequeue
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.Queue`1.TryDequeue(`0@)
    name: TryDequeue
    nameWithType: Queue(Of T).TryDequeue
    fullName: System.Collections.Generic.Queue(Of T).TryDequeue
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Queue`1.Peek
  commentId: M:System.Collections.Generic.Queue`1.Peek
  isExternal: true
  name: Peek()
  nameWithType: Queue<T>.Peek()
  fullName: System.Collections.Generic.Queue<T>.Peek()
  nameWithType.vb: Queue(Of T).Peek()
  fullName.vb: System.Collections.Generic.Queue(Of T).Peek()
  spec.csharp:
  - uid: System.Collections.Generic.Queue`1.Peek
    name: Peek
    nameWithType: Queue<T>.Peek
    fullName: System.Collections.Generic.Queue<T>.Peek
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.Queue`1.Peek
    name: Peek
    nameWithType: Queue(Of T).Peek
    fullName: System.Collections.Generic.Queue(Of T).Peek
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Queue`1.TryPeek(`0@)
  commentId: M:System.Collections.Generic.Queue`1.TryPeek(`0@)
  isExternal: true
  name: TryPeek(T)
  nameWithType: Queue<T>.TryPeek(T)
  fullName: System.Collections.Generic.Queue<T>.TryPeek(T)
  nameWithType.vb: Queue(Of T).TryPeek(T)
  fullName.vb: System.Collections.Generic.Queue(Of T).TryPeek(T)
  spec.csharp:
  - uid: System.Collections.Generic.Queue`1.TryPeek(`0@)
    name: TryPeek
    nameWithType: Queue<T>.TryPeek
    fullName: System.Collections.Generic.Queue<T>.TryPeek
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.Queue`1.TryPeek(`0@)
    name: TryPeek
    nameWithType: Queue(Of T).TryPeek
    fullName: System.Collections.Generic.Queue(Of T).TryPeek
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Queue`1.Contains(`0)
  commentId: M:System.Collections.Generic.Queue`1.Contains(`0)
  isExternal: true
  name: Contains(T)
  nameWithType: Queue<T>.Contains(T)
  fullName: System.Collections.Generic.Queue<T>.Contains(T)
  nameWithType.vb: Queue(Of T).Contains(T)
  fullName.vb: System.Collections.Generic.Queue(Of T).Contains(T)
  spec.csharp:
  - uid: System.Collections.Generic.Queue`1.Contains(`0)
    name: Contains
    nameWithType: Queue<T>.Contains
    fullName: System.Collections.Generic.Queue<T>.Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.Queue`1.Contains(`0)
    name: Contains
    nameWithType: Queue(Of T).Contains
    fullName: System.Collections.Generic.Queue(Of T).Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Queue`1.ToArray
  commentId: M:System.Collections.Generic.Queue`1.ToArray
  isExternal: true
  name: ToArray()
  nameWithType: Queue<T>.ToArray()
  fullName: System.Collections.Generic.Queue<T>.ToArray()
  nameWithType.vb: Queue(Of T).ToArray()
  fullName.vb: System.Collections.Generic.Queue(Of T).ToArray()
  spec.csharp:
  - uid: System.Collections.Generic.Queue`1.ToArray
    name: ToArray
    nameWithType: Queue<T>.ToArray
    fullName: System.Collections.Generic.Queue<T>.ToArray
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.Queue`1.ToArray
    name: ToArray
    nameWithType: Queue(Of T).ToArray
    fullName: System.Collections.Generic.Queue(Of T).ToArray
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Queue`1.TrimExcess
  commentId: M:System.Collections.Generic.Queue`1.TrimExcess
  isExternal: true
  name: TrimExcess()
  nameWithType: Queue<T>.TrimExcess()
  fullName: System.Collections.Generic.Queue<T>.TrimExcess()
  nameWithType.vb: Queue(Of T).TrimExcess()
  fullName.vb: System.Collections.Generic.Queue(Of T).TrimExcess()
  spec.csharp:
  - uid: System.Collections.Generic.Queue`1.TrimExcess
    name: TrimExcess
    nameWithType: Queue<T>.TrimExcess
    fullName: System.Collections.Generic.Queue<T>.TrimExcess
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.Queue`1.TrimExcess
    name: TrimExcess
    nameWithType: Queue(Of T).TrimExcess
    fullName: System.Collections.Generic.Queue(Of T).TrimExcess
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Queue`1.Count
  commentId: P:System.Collections.Generic.Queue`1.Count
  isExternal: true
  name: Count
  nameWithType: Queue<T>.Count
  fullName: System.Collections.Generic.Queue<T>.Count
  nameWithType.vb: Queue(Of T).Count
  fullName.vb: System.Collections.Generic.Queue(Of T).Count
- uid: System.Collections.Generic.Queue`1.System#Collections#ICollection#IsSynchronized
  commentId: P:System.Collections.Generic.Queue`1.System#Collections#ICollection#IsSynchronized
  isExternal: true
  name: ICollection.IsSynchronized
  nameWithType: Queue<T>.ICollection.IsSynchronized
  fullName: System.Collections.Generic.Queue<T>.System.Collections.ICollection.IsSynchronized
  nameWithType.vb: Queue(Of T).System.Collections.ICollection.IsSynchronized
  fullName.vb: System.Collections.Generic.Queue(Of T).System.Collections.ICollection.IsSynchronized
  name.vb: System.Collections.ICollection.IsSynchronized
- uid: System.Collections.Generic.Queue`1.System#Collections#ICollection#SyncRoot
  commentId: P:System.Collections.Generic.Queue`1.System#Collections#ICollection#SyncRoot
  isExternal: true
  name: ICollection.SyncRoot
  nameWithType: Queue<T>.ICollection.SyncRoot
  fullName: System.Collections.Generic.Queue<T>.System.Collections.ICollection.SyncRoot
  nameWithType.vb: Queue(Of T).System.Collections.ICollection.SyncRoot
  fullName.vb: System.Collections.Generic.Queue(Of T).System.Collections.ICollection.SyncRoot
  name.vb: System.Collections.ICollection.SyncRoot
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Winpeak.Client.Models.LimitedQueue`1.#ctor*
  commentId: Overload:Winpeak.Client.Models.LimitedQueue`1.#ctor
  name: LimitedQueue
  nameWithType: LimitedQueue<T>.LimitedQueue
  fullName: Winpeak.Client.Models.LimitedQueue<T>.LimitedQueue
  nameWithType.vb: LimitedQueue(Of T).LimitedQueue
  fullName.vb: Winpeak.Client.Models.LimitedQueue(Of T).LimitedQueue
- uid: Winpeak.Client.Models.LimitedQueue`1.Enqueue*
  commentId: Overload:Winpeak.Client.Models.LimitedQueue`1.Enqueue
  name: Enqueue
  nameWithType: LimitedQueue<T>.Enqueue
  fullName: Winpeak.Client.Models.LimitedQueue<T>.Enqueue
  nameWithType.vb: LimitedQueue(Of T).Enqueue
  fullName.vb: Winpeak.Client.Models.LimitedQueue(Of T).Enqueue
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  name: T
  nameWithType: T
  fullName: T
