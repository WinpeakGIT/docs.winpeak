### YamlMime:ManagedReference
items:
- uid: Org.BouncyCastle.Utilities.Collections.CollectionUtilities
  commentId: T:Org.BouncyCastle.Utilities.Collections.CollectionUtilities
  id: CollectionUtilities
  parent: Org.BouncyCastle.Utilities.Collections
  children:
  - Org.BouncyCastle.Utilities.Collections.CollectionUtilities.AddRange(System.Collections.IList,System.Collections.IEnumerable)
  - Org.BouncyCastle.Utilities.Collections.CollectionUtilities.CheckElementsAreOfType(System.Collections.IEnumerable,System.Type)
  - Org.BouncyCastle.Utilities.Collections.CollectionUtilities.ReadOnly(Org.BouncyCastle.Utilities.Collections.ISet)
  - Org.BouncyCastle.Utilities.Collections.CollectionUtilities.ReadOnly(System.Collections.IDictionary)
  - Org.BouncyCastle.Utilities.Collections.CollectionUtilities.ReadOnly(System.Collections.IList)
  - Org.BouncyCastle.Utilities.Collections.CollectionUtilities.ToString(System.Collections.IEnumerable)
  langs:
  - csharp
  - vb
  name: CollectionUtilities
  nameWithType: CollectionUtilities
  fullName: Org.BouncyCastle.Utilities.Collections.CollectionUtilities
  type: Class
  source:
    id: CollectionUtilities
    path: ''
    startLine: 90372
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Utilities.Collections
  syntax:
    content: public abstract class CollectionUtilities
    content.vb: Public MustInherit Class CollectionUtilities
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ToString
  - System.Object.ReferenceEquals(System.Object,System.Object)
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: Org.BouncyCastle.Utilities.Collections.CollectionUtilities.AddRange(System.Collections.IList,System.Collections.IEnumerable)
  commentId: M:Org.BouncyCastle.Utilities.Collections.CollectionUtilities.AddRange(System.Collections.IList,System.Collections.IEnumerable)
  id: AddRange(System.Collections.IList,System.Collections.IEnumerable)
  parent: Org.BouncyCastle.Utilities.Collections.CollectionUtilities
  langs:
  - csharp
  - vb
  name: AddRange(IList, IEnumerable)
  nameWithType: CollectionUtilities.AddRange(IList, IEnumerable)
  fullName: Org.BouncyCastle.Utilities.Collections.CollectionUtilities.AddRange(System.Collections.IList, System.Collections.IEnumerable)
  type: Method
  source:
    id: AddRange
    path: ''
    startLine: 90374
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Utilities.Collections
  syntax:
    content: public static void AddRange(IList to, IEnumerable range)
    parameters:
    - id: to
      type: System.Collections.IList
    - id: range
      type: System.Collections.IEnumerable
    content.vb: Public Shared Sub AddRange(to As IList, range As IEnumerable)
  overload: Org.BouncyCastle.Utilities.Collections.CollectionUtilities.AddRange*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Org.BouncyCastle.Utilities.Collections.CollectionUtilities.CheckElementsAreOfType(System.Collections.IEnumerable,System.Type)
  commentId: M:Org.BouncyCastle.Utilities.Collections.CollectionUtilities.CheckElementsAreOfType(System.Collections.IEnumerable,System.Type)
  id: CheckElementsAreOfType(System.Collections.IEnumerable,System.Type)
  parent: Org.BouncyCastle.Utilities.Collections.CollectionUtilities
  langs:
  - csharp
  - vb
  name: CheckElementsAreOfType(IEnumerable, Type)
  nameWithType: CollectionUtilities.CheckElementsAreOfType(IEnumerable, Type)
  fullName: Org.BouncyCastle.Utilities.Collections.CollectionUtilities.CheckElementsAreOfType(System.Collections.IEnumerable, System.Type)
  type: Method
  source:
    id: CheckElementsAreOfType
    path: ''
    startLine: 90382
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Utilities.Collections
  syntax:
    content: public static bool CheckElementsAreOfType(IEnumerable e, Type t)
    parameters:
    - id: e
      type: System.Collections.IEnumerable
    - id: t
      type: System.Type
    return:
      type: System.Boolean
    content.vb: Public Shared Function CheckElementsAreOfType(e As IEnumerable, t As Type) As Boolean
  overload: Org.BouncyCastle.Utilities.Collections.CollectionUtilities.CheckElementsAreOfType*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Org.BouncyCastle.Utilities.Collections.CollectionUtilities.ReadOnly(System.Collections.IDictionary)
  commentId: M:Org.BouncyCastle.Utilities.Collections.CollectionUtilities.ReadOnly(System.Collections.IDictionary)
  id: ReadOnly(System.Collections.IDictionary)
  parent: Org.BouncyCastle.Utilities.Collections.CollectionUtilities
  langs:
  - csharp
  - vb
  name: ReadOnly(IDictionary)
  nameWithType: CollectionUtilities.ReadOnly(IDictionary)
  fullName: Org.BouncyCastle.Utilities.Collections.CollectionUtilities.ReadOnly(System.Collections.IDictionary)
  type: Method
  source:
    id: ReadOnly
    path: ''
    startLine: 90392
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Utilities.Collections
  syntax:
    content: public static IDictionary ReadOnly(IDictionary d)
    parameters:
    - id: d
      type: System.Collections.IDictionary
    return:
      type: System.Collections.IDictionary
    content.vb: Public Shared Function ReadOnly(d As IDictionary) As IDictionary
  overload: Org.BouncyCastle.Utilities.Collections.CollectionUtilities.ReadOnly*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Org.BouncyCastle.Utilities.Collections.CollectionUtilities.ReadOnly(System.Collections.IList)
  commentId: M:Org.BouncyCastle.Utilities.Collections.CollectionUtilities.ReadOnly(System.Collections.IList)
  id: ReadOnly(System.Collections.IList)
  parent: Org.BouncyCastle.Utilities.Collections.CollectionUtilities
  langs:
  - csharp
  - vb
  name: ReadOnly(IList)
  nameWithType: CollectionUtilities.ReadOnly(IList)
  fullName: Org.BouncyCastle.Utilities.Collections.CollectionUtilities.ReadOnly(System.Collections.IList)
  type: Method
  source:
    id: ReadOnly
    path: ''
    startLine: 90397
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Utilities.Collections
  syntax:
    content: public static IList ReadOnly(IList l)
    parameters:
    - id: l
      type: System.Collections.IList
    return:
      type: System.Collections.IList
    content.vb: Public Shared Function ReadOnly(l As IList) As IList
  overload: Org.BouncyCastle.Utilities.Collections.CollectionUtilities.ReadOnly*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Org.BouncyCastle.Utilities.Collections.CollectionUtilities.ReadOnly(Org.BouncyCastle.Utilities.Collections.ISet)
  commentId: M:Org.BouncyCastle.Utilities.Collections.CollectionUtilities.ReadOnly(Org.BouncyCastle.Utilities.Collections.ISet)
  id: ReadOnly(Org.BouncyCastle.Utilities.Collections.ISet)
  parent: Org.BouncyCastle.Utilities.Collections.CollectionUtilities
  langs:
  - csharp
  - vb
  name: ReadOnly(ISet)
  nameWithType: CollectionUtilities.ReadOnly(ISet)
  fullName: Org.BouncyCastle.Utilities.Collections.CollectionUtilities.ReadOnly(Org.BouncyCastle.Utilities.Collections.ISet)
  type: Method
  source:
    id: ReadOnly
    path: ''
    startLine: 90402
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Utilities.Collections
  syntax:
    content: public static ISet ReadOnly(ISet s)
    parameters:
    - id: s
      type: Org.BouncyCastle.Utilities.Collections.ISet
    return:
      type: Org.BouncyCastle.Utilities.Collections.ISet
    content.vb: Public Shared Function ReadOnly(s As ISet) As ISet
  overload: Org.BouncyCastle.Utilities.Collections.CollectionUtilities.ReadOnly*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Org.BouncyCastle.Utilities.Collections.CollectionUtilities.ToString(System.Collections.IEnumerable)
  commentId: M:Org.BouncyCastle.Utilities.Collections.CollectionUtilities.ToString(System.Collections.IEnumerable)
  id: ToString(System.Collections.IEnumerable)
  parent: Org.BouncyCastle.Utilities.Collections.CollectionUtilities
  langs:
  - csharp
  - vb
  name: ToString(IEnumerable)
  nameWithType: CollectionUtilities.ToString(IEnumerable)
  fullName: Org.BouncyCastle.Utilities.Collections.CollectionUtilities.ToString(System.Collections.IEnumerable)
  type: Method
  source:
    id: ToString
    path: ''
    startLine: 90407
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Utilities.Collections
  syntax:
    content: public static string ToString(IEnumerable c)
    parameters:
    - id: c
      type: System.Collections.IEnumerable
    return:
      type: System.String
    content.vb: Public Shared Function ToString(c As IEnumerable) As String
  overload: Org.BouncyCastle.Utilities.Collections.CollectionUtilities.ToString*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Org.BouncyCastle.Utilities.Collections
  commentId: N:Org.BouncyCastle.Utilities.Collections
  name: Org.BouncyCastle.Utilities.Collections
  nameWithType: Org.BouncyCastle.Utilities.Collections
  fullName: Org.BouncyCastle.Utilities.Collections
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Org.BouncyCastle.Utilities.Collections.CollectionUtilities.AddRange*
  commentId: Overload:Org.BouncyCastle.Utilities.Collections.CollectionUtilities.AddRange
  name: AddRange
  nameWithType: CollectionUtilities.AddRange
  fullName: Org.BouncyCastle.Utilities.Collections.CollectionUtilities.AddRange
- uid: System.Collections.IList
  commentId: T:System.Collections.IList
  parent: System.Collections
  isExternal: true
  name: IList
  nameWithType: IList
  fullName: System.Collections.IList
- uid: System.Collections.IEnumerable
  commentId: T:System.Collections.IEnumerable
  parent: System.Collections
  isExternal: true
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: System.Collections
  commentId: N:System.Collections
  isExternal: true
  name: System.Collections
  nameWithType: System.Collections
  fullName: System.Collections
- uid: Org.BouncyCastle.Utilities.Collections.CollectionUtilities.CheckElementsAreOfType*
  commentId: Overload:Org.BouncyCastle.Utilities.Collections.CollectionUtilities.CheckElementsAreOfType
  name: CheckElementsAreOfType
  nameWithType: CollectionUtilities.CheckElementsAreOfType
  fullName: Org.BouncyCastle.Utilities.Collections.CollectionUtilities.CheckElementsAreOfType
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Org.BouncyCastle.Utilities.Collections.CollectionUtilities.ReadOnly*
  commentId: Overload:Org.BouncyCastle.Utilities.Collections.CollectionUtilities.ReadOnly
  name: ReadOnly
  nameWithType: CollectionUtilities.ReadOnly
  fullName: Org.BouncyCastle.Utilities.Collections.CollectionUtilities.ReadOnly
- uid: System.Collections.IDictionary
  commentId: T:System.Collections.IDictionary
  parent: System.Collections
  isExternal: true
  name: IDictionary
  nameWithType: IDictionary
  fullName: System.Collections.IDictionary
- uid: Org.BouncyCastle.Utilities.Collections.ISet
  commentId: T:Org.BouncyCastle.Utilities.Collections.ISet
  parent: Org.BouncyCastle.Utilities.Collections
  name: ISet
  nameWithType: ISet
  fullName: Org.BouncyCastle.Utilities.Collections.ISet
- uid: Org.BouncyCastle.Utilities.Collections.CollectionUtilities.ToString*
  commentId: Overload:Org.BouncyCastle.Utilities.Collections.CollectionUtilities.ToString
  name: ToString
  nameWithType: CollectionUtilities.ToString
  fullName: Org.BouncyCastle.Utilities.Collections.CollectionUtilities.ToString
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
