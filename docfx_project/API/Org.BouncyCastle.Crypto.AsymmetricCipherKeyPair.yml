### YamlMime:ManagedReference
items:
- uid: Org.BouncyCastle.Crypto.AsymmetricCipherKeyPair
  commentId: T:Org.BouncyCastle.Crypto.AsymmetricCipherKeyPair
  id: AsymmetricCipherKeyPair
  parent: Org.BouncyCastle.Crypto
  children:
  - Org.BouncyCastle.Crypto.AsymmetricCipherKeyPair.#ctor(Org.BouncyCastle.Crypto.AsymmetricKeyParameter,Org.BouncyCastle.Crypto.AsymmetricKeyParameter)
  - Org.BouncyCastle.Crypto.AsymmetricCipherKeyPair.Private
  - Org.BouncyCastle.Crypto.AsymmetricCipherKeyPair.Public
  langs:
  - csharp
  - vb
  name: AsymmetricCipherKeyPair
  nameWithType: AsymmetricCipherKeyPair
  fullName: Org.BouncyCastle.Crypto.AsymmetricCipherKeyPair
  type: Class
  source:
    id: AsymmetricCipherKeyPair
    path: ''
    startLine: 101472
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto
  example: []
  syntax:
    content: public class AsymmetricCipherKeyPair
    content.vb: Public Class AsymmetricCipherKeyPair
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ToString
  - System.Object.ReferenceEquals(System.Object,System.Object)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Org.BouncyCastle.Crypto.AsymmetricCipherKeyPair.#ctor(Org.BouncyCastle.Crypto.AsymmetricKeyParameter,Org.BouncyCastle.Crypto.AsymmetricKeyParameter)
  commentId: M:Org.BouncyCastle.Crypto.AsymmetricCipherKeyPair.#ctor(Org.BouncyCastle.Crypto.AsymmetricKeyParameter,Org.BouncyCastle.Crypto.AsymmetricKeyParameter)
  id: '#ctor(Org.BouncyCastle.Crypto.AsymmetricKeyParameter,Org.BouncyCastle.Crypto.AsymmetricKeyParameter)'
  parent: Org.BouncyCastle.Crypto.AsymmetricCipherKeyPair
  langs:
  - csharp
  - vb
  name: AsymmetricCipherKeyPair(AsymmetricKeyParameter, AsymmetricKeyParameter)
  nameWithType: AsymmetricCipherKeyPair.AsymmetricCipherKeyPair(AsymmetricKeyParameter, AsymmetricKeyParameter)
  fullName: Org.BouncyCastle.Crypto.AsymmetricCipherKeyPair.AsymmetricCipherKeyPair(Org.BouncyCastle.Crypto.AsymmetricKeyParameter, Org.BouncyCastle.Crypto.AsymmetricKeyParameter)
  type: Constructor
  source:
    id: .ctor
    path: ''
    startLine: 101483
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto
  example: []
  syntax:
    content: public AsymmetricCipherKeyPair(AsymmetricKeyParameter publicParameter, AsymmetricKeyParameter privateParameter)
    parameters:
    - id: publicParameter
      type: Org.BouncyCastle.Crypto.AsymmetricKeyParameter
    - id: privateParameter
      type: Org.BouncyCastle.Crypto.AsymmetricKeyParameter
    content.vb: Public Sub New(publicParameter As AsymmetricKeyParameter, privateParameter As AsymmetricKeyParameter)
  overload: Org.BouncyCastle.Crypto.AsymmetricCipherKeyPair.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Org.BouncyCastle.Crypto.AsymmetricCipherKeyPair.Public
  commentId: P:Org.BouncyCastle.Crypto.AsymmetricCipherKeyPair.Public
  id: Public
  parent: Org.BouncyCastle.Crypto.AsymmetricCipherKeyPair
  langs:
  - csharp
  - vb
  name: Public
  nameWithType: AsymmetricCipherKeyPair.Public
  fullName: Org.BouncyCastle.Crypto.AsymmetricCipherKeyPair.Public
  type: Property
  source:
    id: Public
    path: ''
    startLine: 101501
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto
  example: []
  syntax:
    content: public AsymmetricKeyParameter Public { get; }
    parameters: []
    return:
      type: Org.BouncyCastle.Crypto.AsymmetricKeyParameter
    content.vb: Public ReadOnly Property Public As AsymmetricKeyParameter
  overload: Org.BouncyCastle.Crypto.AsymmetricCipherKeyPair.Public*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Org.BouncyCastle.Crypto.AsymmetricCipherKeyPair.Private
  commentId: P:Org.BouncyCastle.Crypto.AsymmetricCipherKeyPair.Private
  id: Private
  parent: Org.BouncyCastle.Crypto.AsymmetricCipherKeyPair
  langs:
  - csharp
  - vb
  name: Private
  nameWithType: AsymmetricCipherKeyPair.Private
  fullName: Org.BouncyCastle.Crypto.AsymmetricCipherKeyPair.Private
  type: Property
  source:
    id: Private
    path: ''
    startLine: 101511
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto
  example: []
  syntax:
    content: public AsymmetricKeyParameter Private { get; }
    parameters: []
    return:
      type: Org.BouncyCastle.Crypto.AsymmetricKeyParameter
    content.vb: Public ReadOnly Property Private As AsymmetricKeyParameter
  overload: Org.BouncyCastle.Crypto.AsymmetricCipherKeyPair.Private*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: Org.BouncyCastle.Crypto
  commentId: N:Org.BouncyCastle.Crypto
  name: Org.BouncyCastle.Crypto
  nameWithType: Org.BouncyCastle.Crypto
  fullName: Org.BouncyCastle.Crypto
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Org.BouncyCastle.Crypto.AsymmetricCipherKeyPair.#ctor*
  commentId: Overload:Org.BouncyCastle.Crypto.AsymmetricCipherKeyPair.#ctor
  name: AsymmetricCipherKeyPair
  nameWithType: AsymmetricCipherKeyPair.AsymmetricCipherKeyPair
  fullName: Org.BouncyCastle.Crypto.AsymmetricCipherKeyPair.AsymmetricCipherKeyPair
- uid: Org.BouncyCastle.Crypto.AsymmetricKeyParameter
  commentId: T:Org.BouncyCastle.Crypto.AsymmetricKeyParameter
  parent: Org.BouncyCastle.Crypto
  name: AsymmetricKeyParameter
  nameWithType: AsymmetricKeyParameter
  fullName: Org.BouncyCastle.Crypto.AsymmetricKeyParameter
- uid: Org.BouncyCastle.Crypto.AsymmetricCipherKeyPair.Public*
  commentId: Overload:Org.BouncyCastle.Crypto.AsymmetricCipherKeyPair.Public
  name: Public
  nameWithType: AsymmetricCipherKeyPair.Public
  fullName: Org.BouncyCastle.Crypto.AsymmetricCipherKeyPair.Public
- uid: Org.BouncyCastle.Crypto.AsymmetricCipherKeyPair.Private*
  commentId: Overload:Org.BouncyCastle.Crypto.AsymmetricCipherKeyPair.Private
  name: Private
  nameWithType: AsymmetricCipherKeyPair.Private
  fullName: Org.BouncyCastle.Crypto.AsymmetricCipherKeyPair.Private
