### YamlMime:ManagedReference
items:
- uid: Org.BouncyCastle.Math.EC.ECCurve
  commentId: T:Org.BouncyCastle.Math.EC.ECCurve
  id: ECCurve
  parent: Org.BouncyCastle.Math.EC
  children:
  - Org.BouncyCastle.Math.EC.ECCurve.#ctor(IFiniteField)
  - Org.BouncyCastle.Math.EC.ECCurve.A
  - Org.BouncyCastle.Math.EC.ECCurve.B
  - Org.BouncyCastle.Math.EC.ECCurve.CheckPoint(Org.BouncyCastle.Math.EC.ECPoint)
  - Org.BouncyCastle.Math.EC.ECCurve.CheckPoints(Org.BouncyCastle.Math.EC.ECPoint[])
  - Org.BouncyCastle.Math.EC.ECCurve.CheckPoints(Org.BouncyCastle.Math.EC.ECPoint[],System.Int32,System.Int32)
  - Org.BouncyCastle.Math.EC.ECCurve.CloneCurve
  - Org.BouncyCastle.Math.EC.ECCurve.Cofactor
  - Org.BouncyCastle.Math.EC.ECCurve.Configure
  - Org.BouncyCastle.Math.EC.ECCurve.COORD_AFFINE
  - Org.BouncyCastle.Math.EC.ECCurve.COORD_HOMOGENEOUS
  - Org.BouncyCastle.Math.EC.ECCurve.COORD_JACOBIAN
  - Org.BouncyCastle.Math.EC.ECCurve.COORD_JACOBIAN_CHUDNOVSKY
  - Org.BouncyCastle.Math.EC.ECCurve.COORD_JACOBIAN_MODIFIED
  - Org.BouncyCastle.Math.EC.ECCurve.COORD_LAMBDA_AFFINE
  - Org.BouncyCastle.Math.EC.ECCurve.COORD_LAMBDA_PROJECTIVE
  - Org.BouncyCastle.Math.EC.ECCurve.COORD_SKEWED
  - Org.BouncyCastle.Math.EC.ECCurve.CoordinateSystem
  - Org.BouncyCastle.Math.EC.ECCurve.CreateDefaultMultiplier
  - Org.BouncyCastle.Math.EC.ECCurve.CreatePoint(Org.BouncyCastle.Math.BigInteger,Org.BouncyCastle.Math.BigInteger)
  - Org.BouncyCastle.Math.EC.ECCurve.CreatePoint(Org.BouncyCastle.Math.BigInteger,Org.BouncyCastle.Math.BigInteger,System.Boolean)
  - Org.BouncyCastle.Math.EC.ECCurve.CreateRawPoint(Org.BouncyCastle.Math.EC.ECFieldElement,Org.BouncyCastle.Math.EC.ECFieldElement,Org.BouncyCastle.Math.EC.ECFieldElement[],System.Boolean)
  - Org.BouncyCastle.Math.EC.ECCurve.CreateRawPoint(Org.BouncyCastle.Math.EC.ECFieldElement,Org.BouncyCastle.Math.EC.ECFieldElement,System.Boolean)
  - Org.BouncyCastle.Math.EC.ECCurve.DecodePoint(System.Byte[])
  - Org.BouncyCastle.Math.EC.ECCurve.DecompressPoint(System.Int32,Org.BouncyCastle.Math.BigInteger)
  - Org.BouncyCastle.Math.EC.ECCurve.Equals(Org.BouncyCastle.Math.EC.ECCurve)
  - Org.BouncyCastle.Math.EC.ECCurve.Equals(System.Object)
  - Org.BouncyCastle.Math.EC.ECCurve.Field
  - Org.BouncyCastle.Math.EC.ECCurve.FieldSize
  - Org.BouncyCastle.Math.EC.ECCurve.FromBigInteger(Org.BouncyCastle.Math.BigInteger)
  - Org.BouncyCastle.Math.EC.ECCurve.GetAllCoordinateSystems
  - Org.BouncyCastle.Math.EC.ECCurve.GetEndomorphism
  - Org.BouncyCastle.Math.EC.ECCurve.GetHashCode
  - Org.BouncyCastle.Math.EC.ECCurve.GetMultiplier
  - Org.BouncyCastle.Math.EC.ECCurve.GetPreCompInfo(Org.BouncyCastle.Math.EC.ECPoint,System.String)
  - Org.BouncyCastle.Math.EC.ECCurve.ImportPoint(Org.BouncyCastle.Math.EC.ECPoint)
  - Org.BouncyCastle.Math.EC.ECCurve.Infinity
  - Org.BouncyCastle.Math.EC.ECCurve.IsValidFieldElement(Org.BouncyCastle.Math.BigInteger)
  - Org.BouncyCastle.Math.EC.ECCurve.m_a
  - Org.BouncyCastle.Math.EC.ECCurve.m_b
  - Org.BouncyCastle.Math.EC.ECCurve.m_cofactor
  - Org.BouncyCastle.Math.EC.ECCurve.m_coord
  - Org.BouncyCastle.Math.EC.ECCurve.m_endomorphism
  - Org.BouncyCastle.Math.EC.ECCurve.m_field
  - Org.BouncyCastle.Math.EC.ECCurve.m_multiplier
  - Org.BouncyCastle.Math.EC.ECCurve.m_order
  - Org.BouncyCastle.Math.EC.ECCurve.NormalizeAll(Org.BouncyCastle.Math.EC.ECPoint[])
  - Org.BouncyCastle.Math.EC.ECCurve.NormalizeAll(Org.BouncyCastle.Math.EC.ECPoint[],System.Int32,System.Int32,Org.BouncyCastle.Math.EC.ECFieldElement)
  - Org.BouncyCastle.Math.EC.ECCurve.Order
  - Org.BouncyCastle.Math.EC.ECCurve.SetPreCompInfo(Org.BouncyCastle.Math.EC.ECPoint,System.String,PreCompInfo)
  - Org.BouncyCastle.Math.EC.ECCurve.SupportsCoordinateSystem(System.Int32)
  - Org.BouncyCastle.Math.EC.ECCurve.ValidatePoint(Org.BouncyCastle.Math.BigInteger,Org.BouncyCastle.Math.BigInteger)
  - Org.BouncyCastle.Math.EC.ECCurve.ValidatePoint(Org.BouncyCastle.Math.BigInteger,Org.BouncyCastle.Math.BigInteger,System.Boolean)
  langs:
  - csharp
  - vb
  name: ECCurve
  nameWithType: ECCurve
  fullName: Org.BouncyCastle.Math.EC.ECCurve
  type: Class
  source:
    id: ECCurve
    path: ''
    startLine: 57284
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Math.EC
  remarks: Base class for an elliptic curve.
  example: []
  syntax:
    content: public abstract class ECCurve
    content.vb: Public MustInherit Class ECCurve
  inheritance:
  - System.Object
  derivedClasses:
  - Org.BouncyCastle.Math.EC.AbstractF2mCurve
  - Org.BouncyCastle.Math.EC.AbstractFpCurve
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ToString
  - System.Object.ReferenceEquals(System.Object,System.Object)
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: Org.BouncyCastle.Math.EC.ECCurve.COORD_AFFINE
  commentId: F:Org.BouncyCastle.Math.EC.ECCurve.COORD_AFFINE
  id: COORD_AFFINE
  parent: Org.BouncyCastle.Math.EC.ECCurve
  langs:
  - csharp
  - vb
  name: COORD_AFFINE
  nameWithType: ECCurve.COORD_AFFINE
  fullName: Org.BouncyCastle.Math.EC.ECCurve.COORD_AFFINE
  type: Field
  source:
    id: COORD_AFFINE
    path: ''
    startLine: 57286
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Math.EC
  syntax:
    content: public const int COORD_AFFINE = 0
    return:
      type: System.Int32
    content.vb: Public Const COORD_AFFINE As Integer = 0
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Org.BouncyCastle.Math.EC.ECCurve.COORD_HOMOGENEOUS
  commentId: F:Org.BouncyCastle.Math.EC.ECCurve.COORD_HOMOGENEOUS
  id: COORD_HOMOGENEOUS
  parent: Org.BouncyCastle.Math.EC.ECCurve
  langs:
  - csharp
  - vb
  name: COORD_HOMOGENEOUS
  nameWithType: ECCurve.COORD_HOMOGENEOUS
  fullName: Org.BouncyCastle.Math.EC.ECCurve.COORD_HOMOGENEOUS
  type: Field
  source:
    id: COORD_HOMOGENEOUS
    path: ''
    startLine: 57287
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Math.EC
  syntax:
    content: public const int COORD_HOMOGENEOUS = 1
    return:
      type: System.Int32
    content.vb: Public Const COORD_HOMOGENEOUS As Integer = 1
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Org.BouncyCastle.Math.EC.ECCurve.COORD_JACOBIAN
  commentId: F:Org.BouncyCastle.Math.EC.ECCurve.COORD_JACOBIAN
  id: COORD_JACOBIAN
  parent: Org.BouncyCastle.Math.EC.ECCurve
  langs:
  - csharp
  - vb
  name: COORD_JACOBIAN
  nameWithType: ECCurve.COORD_JACOBIAN
  fullName: Org.BouncyCastle.Math.EC.ECCurve.COORD_JACOBIAN
  type: Field
  source:
    id: COORD_JACOBIAN
    path: ''
    startLine: 57288
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Math.EC
  syntax:
    content: public const int COORD_JACOBIAN = 2
    return:
      type: System.Int32
    content.vb: Public Const COORD_JACOBIAN As Integer = 2
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Org.BouncyCastle.Math.EC.ECCurve.COORD_JACOBIAN_CHUDNOVSKY
  commentId: F:Org.BouncyCastle.Math.EC.ECCurve.COORD_JACOBIAN_CHUDNOVSKY
  id: COORD_JACOBIAN_CHUDNOVSKY
  parent: Org.BouncyCastle.Math.EC.ECCurve
  langs:
  - csharp
  - vb
  name: COORD_JACOBIAN_CHUDNOVSKY
  nameWithType: ECCurve.COORD_JACOBIAN_CHUDNOVSKY
  fullName: Org.BouncyCastle.Math.EC.ECCurve.COORD_JACOBIAN_CHUDNOVSKY
  type: Field
  source:
    id: COORD_JACOBIAN_CHUDNOVSKY
    path: ''
    startLine: 57289
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Math.EC
  syntax:
    content: public const int COORD_JACOBIAN_CHUDNOVSKY = 3
    return:
      type: System.Int32
    content.vb: Public Const COORD_JACOBIAN_CHUDNOVSKY As Integer = 3
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Org.BouncyCastle.Math.EC.ECCurve.COORD_JACOBIAN_MODIFIED
  commentId: F:Org.BouncyCastle.Math.EC.ECCurve.COORD_JACOBIAN_MODIFIED
  id: COORD_JACOBIAN_MODIFIED
  parent: Org.BouncyCastle.Math.EC.ECCurve
  langs:
  - csharp
  - vb
  name: COORD_JACOBIAN_MODIFIED
  nameWithType: ECCurve.COORD_JACOBIAN_MODIFIED
  fullName: Org.BouncyCastle.Math.EC.ECCurve.COORD_JACOBIAN_MODIFIED
  type: Field
  source:
    id: COORD_JACOBIAN_MODIFIED
    path: ''
    startLine: 57290
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Math.EC
  syntax:
    content: public const int COORD_JACOBIAN_MODIFIED = 4
    return:
      type: System.Int32
    content.vb: Public Const COORD_JACOBIAN_MODIFIED As Integer = 4
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Org.BouncyCastle.Math.EC.ECCurve.COORD_LAMBDA_AFFINE
  commentId: F:Org.BouncyCastle.Math.EC.ECCurve.COORD_LAMBDA_AFFINE
  id: COORD_LAMBDA_AFFINE
  parent: Org.BouncyCastle.Math.EC.ECCurve
  langs:
  - csharp
  - vb
  name: COORD_LAMBDA_AFFINE
  nameWithType: ECCurve.COORD_LAMBDA_AFFINE
  fullName: Org.BouncyCastle.Math.EC.ECCurve.COORD_LAMBDA_AFFINE
  type: Field
  source:
    id: COORD_LAMBDA_AFFINE
    path: ''
    startLine: 57291
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Math.EC
  syntax:
    content: public const int COORD_LAMBDA_AFFINE = 5
    return:
      type: System.Int32
    content.vb: Public Const COORD_LAMBDA_AFFINE As Integer = 5
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Org.BouncyCastle.Math.EC.ECCurve.COORD_LAMBDA_PROJECTIVE
  commentId: F:Org.BouncyCastle.Math.EC.ECCurve.COORD_LAMBDA_PROJECTIVE
  id: COORD_LAMBDA_PROJECTIVE
  parent: Org.BouncyCastle.Math.EC.ECCurve
  langs:
  - csharp
  - vb
  name: COORD_LAMBDA_PROJECTIVE
  nameWithType: ECCurve.COORD_LAMBDA_PROJECTIVE
  fullName: Org.BouncyCastle.Math.EC.ECCurve.COORD_LAMBDA_PROJECTIVE
  type: Field
  source:
    id: COORD_LAMBDA_PROJECTIVE
    path: ''
    startLine: 57292
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Math.EC
  syntax:
    content: public const int COORD_LAMBDA_PROJECTIVE = 6
    return:
      type: System.Int32
    content.vb: Public Const COORD_LAMBDA_PROJECTIVE As Integer = 6
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Org.BouncyCastle.Math.EC.ECCurve.COORD_SKEWED
  commentId: F:Org.BouncyCastle.Math.EC.ECCurve.COORD_SKEWED
  id: COORD_SKEWED
  parent: Org.BouncyCastle.Math.EC.ECCurve
  langs:
  - csharp
  - vb
  name: COORD_SKEWED
  nameWithType: ECCurve.COORD_SKEWED
  fullName: Org.BouncyCastle.Math.EC.ECCurve.COORD_SKEWED
  type: Field
  source:
    id: COORD_SKEWED
    path: ''
    startLine: 57293
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Math.EC
  syntax:
    content: public const int COORD_SKEWED = 7
    return:
      type: System.Int32
    content.vb: Public Const COORD_SKEWED As Integer = 7
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Org.BouncyCastle.Math.EC.ECCurve.GetAllCoordinateSystems
  commentId: M:Org.BouncyCastle.Math.EC.ECCurve.GetAllCoordinateSystems
  id: GetAllCoordinateSystems
  parent: Org.BouncyCastle.Math.EC.ECCurve
  langs:
  - csharp
  - vb
  name: GetAllCoordinateSystems()
  nameWithType: ECCurve.GetAllCoordinateSystems()
  fullName: Org.BouncyCastle.Math.EC.ECCurve.GetAllCoordinateSystems()
  type: Method
  source:
    id: GetAllCoordinateSystems
    path: ''
    startLine: 57295
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Math.EC
  syntax:
    content: public static int[] GetAllCoordinateSystems()
    return:
      type: System.Int32[]
    content.vb: Public Shared Function GetAllCoordinateSystems As Integer()
  overload: Org.BouncyCastle.Math.EC.ECCurve.GetAllCoordinateSystems*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Org.BouncyCastle.Math.EC.ECCurve.m_field
  commentId: F:Org.BouncyCastle.Math.EC.ECCurve.m_field
  id: m_field
  parent: Org.BouncyCastle.Math.EC.ECCurve
  langs:
  - csharp
  - vb
  name: m_field
  nameWithType: ECCurve.m_field
  fullName: Org.BouncyCastle.Math.EC.ECCurve.m_field
  type: Field
  source:
    id: m_field
    path: ''
    startLine: 57355
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Math.EC
  syntax:
    content: protected readonly IFiniteField m_field
    return:
      type: IFiniteField
    content.vb: Protected ReadOnly m_field As IFiniteField
  modifiers.csharp:
  - protected
  - readonly
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: Org.BouncyCastle.Math.EC.ECCurve.m_a
  commentId: F:Org.BouncyCastle.Math.EC.ECCurve.m_a
  id: m_a
  parent: Org.BouncyCastle.Math.EC.ECCurve
  langs:
  - csharp
  - vb
  name: m_a
  nameWithType: ECCurve.m_a
  fullName: Org.BouncyCastle.Math.EC.ECCurve.m_a
  type: Field
  source:
    id: m_a
    path: ''
    startLine: 57356
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Math.EC
  syntax:
    content: protected ECFieldElement m_a
    return:
      type: Org.BouncyCastle.Math.EC.ECFieldElement
    content.vb: Protected m_a As ECFieldElement
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Org.BouncyCastle.Math.EC.ECCurve.m_b
  commentId: F:Org.BouncyCastle.Math.EC.ECCurve.m_b
  id: m_b
  parent: Org.BouncyCastle.Math.EC.ECCurve
  langs:
  - csharp
  - vb
  name: m_b
  nameWithType: ECCurve.m_b
  fullName: Org.BouncyCastle.Math.EC.ECCurve.m_b
  type: Field
  source:
    id: m_b
    path: ''
    startLine: 57356
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Math.EC
  syntax:
    content: protected ECFieldElement m_b
    return:
      type: Org.BouncyCastle.Math.EC.ECFieldElement
    content.vb: Protected m_b As ECFieldElement
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Org.BouncyCastle.Math.EC.ECCurve.m_order
  commentId: F:Org.BouncyCastle.Math.EC.ECCurve.m_order
  id: m_order
  parent: Org.BouncyCastle.Math.EC.ECCurve
  langs:
  - csharp
  - vb
  name: m_order
  nameWithType: ECCurve.m_order
  fullName: Org.BouncyCastle.Math.EC.ECCurve.m_order
  type: Field
  source:
    id: m_order
    path: ''
    startLine: 57357
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Math.EC
  syntax:
    content: protected BigInteger m_order
    return:
      type: Org.BouncyCastle.Math.BigInteger
    content.vb: Protected m_order As BigInteger
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Org.BouncyCastle.Math.EC.ECCurve.m_cofactor
  commentId: F:Org.BouncyCastle.Math.EC.ECCurve.m_cofactor
  id: m_cofactor
  parent: Org.BouncyCastle.Math.EC.ECCurve
  langs:
  - csharp
  - vb
  name: m_cofactor
  nameWithType: ECCurve.m_cofactor
  fullName: Org.BouncyCastle.Math.EC.ECCurve.m_cofactor
  type: Field
  source:
    id: m_cofactor
    path: ''
    startLine: 57357
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Math.EC
  syntax:
    content: protected BigInteger m_cofactor
    return:
      type: Org.BouncyCastle.Math.BigInteger
    content.vb: Protected m_cofactor As BigInteger
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Org.BouncyCastle.Math.EC.ECCurve.m_coord
  commentId: F:Org.BouncyCastle.Math.EC.ECCurve.m_coord
  id: m_coord
  parent: Org.BouncyCastle.Math.EC.ECCurve
  langs:
  - csharp
  - vb
  name: m_coord
  nameWithType: ECCurve.m_coord
  fullName: Org.BouncyCastle.Math.EC.ECCurve.m_coord
  type: Field
  source:
    id: m_coord
    path: ''
    startLine: 57359
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Math.EC
  syntax:
    content: protected int m_coord
    return:
      type: System.Int32
    content.vb: Protected m_coord As Integer
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Org.BouncyCastle.Math.EC.ECCurve.m_endomorphism
  commentId: F:Org.BouncyCastle.Math.EC.ECCurve.m_endomorphism
  id: m_endomorphism
  parent: Org.BouncyCastle.Math.EC.ECCurve
  langs:
  - csharp
  - vb
  name: m_endomorphism
  nameWithType: ECCurve.m_endomorphism
  fullName: Org.BouncyCastle.Math.EC.ECCurve.m_endomorphism
  type: Field
  source:
    id: m_endomorphism
    path: ''
    startLine: 57360
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Math.EC
  syntax:
    content: protected ECEndomorphism m_endomorphism
    return:
      type: ECEndomorphism
    content.vb: Protected m_endomorphism As ECEndomorphism
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Org.BouncyCastle.Math.EC.ECCurve.m_multiplier
  commentId: F:Org.BouncyCastle.Math.EC.ECCurve.m_multiplier
  id: m_multiplier
  parent: Org.BouncyCastle.Math.EC.ECCurve
  langs:
  - csharp
  - vb
  name: m_multiplier
  nameWithType: ECCurve.m_multiplier
  fullName: Org.BouncyCastle.Math.EC.ECCurve.m_multiplier
  type: Field
  source:
    id: m_multiplier
    path: ''
    startLine: 57361
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Math.EC
  syntax:
    content: protected ECMultiplier m_multiplier
    return:
      type: ECMultiplier
    content.vb: Protected m_multiplier As ECMultiplier
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Org.BouncyCastle.Math.EC.ECCurve.#ctor(IFiniteField)
  commentId: M:Org.BouncyCastle.Math.EC.ECCurve.#ctor(IFiniteField)
  id: '#ctor(IFiniteField)'
  parent: Org.BouncyCastle.Math.EC.ECCurve
  langs:
  - csharp
  - vb
  name: ECCurve(IFiniteField)
  nameWithType: ECCurve.ECCurve(IFiniteField)
  fullName: Org.BouncyCastle.Math.EC.ECCurve.ECCurve(IFiniteField)
  type: Constructor
  source:
    id: .ctor
    path: ''
    startLine: 57363
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Math.EC
  syntax:
    content: protected ECCurve(IFiniteField field)
    parameters:
    - id: field
      type: IFiniteField
    content.vb: Protected Sub New(field As IFiniteField)
  overload: Org.BouncyCastle.Math.EC.ECCurve.#ctor*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Org.BouncyCastle.Math.EC.ECCurve.FieldSize
  commentId: P:Org.BouncyCastle.Math.EC.ECCurve.FieldSize
  id: FieldSize
  parent: Org.BouncyCastle.Math.EC.ECCurve
  langs:
  - csharp
  - vb
  name: FieldSize
  nameWithType: ECCurve.FieldSize
  fullName: Org.BouncyCastle.Math.EC.ECCurve.FieldSize
  type: Property
  source:
    id: FieldSize
    path: ''
    startLine: 57368
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Math.EC
  syntax:
    content: public abstract int FieldSize { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public MustOverride ReadOnly Property FieldSize As Integer
  overload: Org.BouncyCastle.Math.EC.ECCurve.FieldSize*
  modifiers.csharp:
  - public
  - abstract
  - get
  modifiers.vb:
  - Public
  - MustOverride
  - ReadOnly
- uid: Org.BouncyCastle.Math.EC.ECCurve.FromBigInteger(Org.BouncyCastle.Math.BigInteger)
  commentId: M:Org.BouncyCastle.Math.EC.ECCurve.FromBigInteger(Org.BouncyCastle.Math.BigInteger)
  id: FromBigInteger(Org.BouncyCastle.Math.BigInteger)
  parent: Org.BouncyCastle.Math.EC.ECCurve
  langs:
  - csharp
  - vb
  name: FromBigInteger(BigInteger)
  nameWithType: ECCurve.FromBigInteger(BigInteger)
  fullName: Org.BouncyCastle.Math.EC.ECCurve.FromBigInteger(Org.BouncyCastle.Math.BigInteger)
  type: Method
  source:
    id: FromBigInteger
    path: ''
    startLine: 57369
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Math.EC
  syntax:
    content: public abstract ECFieldElement FromBigInteger(BigInteger x)
    parameters:
    - id: x
      type: Org.BouncyCastle.Math.BigInteger
    return:
      type: Org.BouncyCastle.Math.EC.ECFieldElement
    content.vb: Public MustOverride Function FromBigInteger(x As BigInteger) As ECFieldElement
  overload: Org.BouncyCastle.Math.EC.ECCurve.FromBigInteger*
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
- uid: Org.BouncyCastle.Math.EC.ECCurve.IsValidFieldElement(Org.BouncyCastle.Math.BigInteger)
  commentId: M:Org.BouncyCastle.Math.EC.ECCurve.IsValidFieldElement(Org.BouncyCastle.Math.BigInteger)
  id: IsValidFieldElement(Org.BouncyCastle.Math.BigInteger)
  parent: Org.BouncyCastle.Math.EC.ECCurve
  langs:
  - csharp
  - vb
  name: IsValidFieldElement(BigInteger)
  nameWithType: ECCurve.IsValidFieldElement(BigInteger)
  fullName: Org.BouncyCastle.Math.EC.ECCurve.IsValidFieldElement(Org.BouncyCastle.Math.BigInteger)
  type: Method
  source:
    id: IsValidFieldElement
    path: ''
    startLine: 57370
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Math.EC
  syntax:
    content: public abstract bool IsValidFieldElement(BigInteger x)
    parameters:
    - id: x
      type: Org.BouncyCastle.Math.BigInteger
    return:
      type: System.Boolean
    content.vb: Public MustOverride Function IsValidFieldElement(x As BigInteger) As Boolean
  overload: Org.BouncyCastle.Math.EC.ECCurve.IsValidFieldElement*
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
- uid: Org.BouncyCastle.Math.EC.ECCurve.Configure
  commentId: M:Org.BouncyCastle.Math.EC.ECCurve.Configure
  id: Configure
  parent: Org.BouncyCastle.Math.EC.ECCurve
  langs:
  - csharp
  - vb
  name: Configure()
  nameWithType: ECCurve.Configure()
  fullName: Org.BouncyCastle.Math.EC.ECCurve.Configure()
  type: Method
  source:
    id: Configure
    path: ''
    startLine: 57372
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Math.EC
  syntax:
    content: public virtual ECCurve.Config Configure()
    return:
      type: Org.BouncyCastle.Math.EC.ECCurve.Config
    content.vb: Public Overridable Function Configure As ECCurve.Config
  overload: Org.BouncyCastle.Math.EC.ECCurve.Configure*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Org.BouncyCastle.Math.EC.ECCurve.ValidatePoint(Org.BouncyCastle.Math.BigInteger,Org.BouncyCastle.Math.BigInteger)
  commentId: M:Org.BouncyCastle.Math.EC.ECCurve.ValidatePoint(Org.BouncyCastle.Math.BigInteger,Org.BouncyCastle.Math.BigInteger)
  id: ValidatePoint(Org.BouncyCastle.Math.BigInteger,Org.BouncyCastle.Math.BigInteger)
  parent: Org.BouncyCastle.Math.EC.ECCurve
  langs:
  - csharp
  - vb
  name: ValidatePoint(BigInteger, BigInteger)
  nameWithType: ECCurve.ValidatePoint(BigInteger, BigInteger)
  fullName: Org.BouncyCastle.Math.EC.ECCurve.ValidatePoint(Org.BouncyCastle.Math.BigInteger, Org.BouncyCastle.Math.BigInteger)
  type: Method
  source:
    id: ValidatePoint
    path: ''
    startLine: 57377
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Math.EC
  syntax:
    content: public virtual ECPoint ValidatePoint(BigInteger x, BigInteger y)
    parameters:
    - id: x
      type: Org.BouncyCastle.Math.BigInteger
    - id: y
      type: Org.BouncyCastle.Math.BigInteger
    return:
      type: Org.BouncyCastle.Math.EC.ECPoint
    content.vb: Public Overridable Function ValidatePoint(x As BigInteger, y As BigInteger) As ECPoint
  overload: Org.BouncyCastle.Math.EC.ECCurve.ValidatePoint*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Org.BouncyCastle.Math.EC.ECCurve.ValidatePoint(Org.BouncyCastle.Math.BigInteger,Org.BouncyCastle.Math.BigInteger,System.Boolean)
  commentId: M:Org.BouncyCastle.Math.EC.ECCurve.ValidatePoint(Org.BouncyCastle.Math.BigInteger,Org.BouncyCastle.Math.BigInteger,System.Boolean)
  id: ValidatePoint(Org.BouncyCastle.Math.BigInteger,Org.BouncyCastle.Math.BigInteger,System.Boolean)
  parent: Org.BouncyCastle.Math.EC.ECCurve
  langs:
  - csharp
  - vb
  name: ValidatePoint(BigInteger, BigInteger, Boolean)
  nameWithType: ECCurve.ValidatePoint(BigInteger, BigInteger, Boolean)
  fullName: Org.BouncyCastle.Math.EC.ECCurve.ValidatePoint(Org.BouncyCastle.Math.BigInteger, Org.BouncyCastle.Math.BigInteger, System.Boolean)
  type: Method
  source:
    id: ValidatePoint
    path: ''
    startLine: 57387
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Math.EC
  syntax:
    content: public virtual ECPoint ValidatePoint(BigInteger x, BigInteger y, bool withCompression)
    parameters:
    - id: x
      type: Org.BouncyCastle.Math.BigInteger
    - id: y
      type: Org.BouncyCastle.Math.BigInteger
    - id: withCompression
      type: System.Boolean
    return:
      type: Org.BouncyCastle.Math.EC.ECPoint
    content.vb: Public Overridable Function ValidatePoint(x As BigInteger, y As BigInteger, withCompression As Boolean) As ECPoint
  overload: Org.BouncyCastle.Math.EC.ECCurve.ValidatePoint*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Org.BouncyCastle.Math.EC.ECCurve.CreatePoint(Org.BouncyCastle.Math.BigInteger,Org.BouncyCastle.Math.BigInteger)
  commentId: M:Org.BouncyCastle.Math.EC.ECCurve.CreatePoint(Org.BouncyCastle.Math.BigInteger,Org.BouncyCastle.Math.BigInteger)
  id: CreatePoint(Org.BouncyCastle.Math.BigInteger,Org.BouncyCastle.Math.BigInteger)
  parent: Org.BouncyCastle.Math.EC.ECCurve
  langs:
  - csharp
  - vb
  name: CreatePoint(BigInteger, BigInteger)
  nameWithType: ECCurve.CreatePoint(BigInteger, BigInteger)
  fullName: Org.BouncyCastle.Math.EC.ECCurve.CreatePoint(Org.BouncyCastle.Math.BigInteger, Org.BouncyCastle.Math.BigInteger)
  type: Method
  source:
    id: CreatePoint
    path: ''
    startLine: 57397
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Math.EC
  syntax:
    content: public virtual ECPoint CreatePoint(BigInteger x, BigInteger y)
    parameters:
    - id: x
      type: Org.BouncyCastle.Math.BigInteger
    - id: y
      type: Org.BouncyCastle.Math.BigInteger
    return:
      type: Org.BouncyCastle.Math.EC.ECPoint
    content.vb: Public Overridable Function CreatePoint(x As BigInteger, y As BigInteger) As ECPoint
  overload: Org.BouncyCastle.Math.EC.ECCurve.CreatePoint*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Org.BouncyCastle.Math.EC.ECCurve.CreatePoint(Org.BouncyCastle.Math.BigInteger,Org.BouncyCastle.Math.BigInteger,System.Boolean)
  commentId: M:Org.BouncyCastle.Math.EC.ECCurve.CreatePoint(Org.BouncyCastle.Math.BigInteger,Org.BouncyCastle.Math.BigInteger,System.Boolean)
  id: CreatePoint(Org.BouncyCastle.Math.BigInteger,Org.BouncyCastle.Math.BigInteger,System.Boolean)
  parent: Org.BouncyCastle.Math.EC.ECCurve
  langs:
  - csharp
  - vb
  name: CreatePoint(BigInteger, BigInteger, Boolean)
  nameWithType: ECCurve.CreatePoint(BigInteger, BigInteger, Boolean)
  fullName: Org.BouncyCastle.Math.EC.ECCurve.CreatePoint(Org.BouncyCastle.Math.BigInteger, Org.BouncyCastle.Math.BigInteger, System.Boolean)
  type: Method
  source:
    id: CreatePoint
    path: ''
    startLine: 57402
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Math.EC
  syntax:
    content: public virtual ECPoint CreatePoint(BigInteger x, BigInteger y, bool withCompression)
    parameters:
    - id: x
      type: Org.BouncyCastle.Math.BigInteger
    - id: y
      type: Org.BouncyCastle.Math.BigInteger
    - id: withCompression
      type: System.Boolean
    return:
      type: Org.BouncyCastle.Math.EC.ECPoint
    content.vb: Public Overridable Function CreatePoint(x As BigInteger, y As BigInteger, withCompression As Boolean) As ECPoint
  overload: Org.BouncyCastle.Math.EC.ECCurve.CreatePoint*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Org.BouncyCastle.Math.EC.ECCurve.CloneCurve
  commentId: M:Org.BouncyCastle.Math.EC.ECCurve.CloneCurve
  id: CloneCurve
  parent: Org.BouncyCastle.Math.EC.ECCurve
  langs:
  - csharp
  - vb
  name: CloneCurve()
  nameWithType: ECCurve.CloneCurve()
  fullName: Org.BouncyCastle.Math.EC.ECCurve.CloneCurve()
  type: Method
  source:
    id: CloneCurve
    path: ''
    startLine: 57407
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Math.EC
  syntax:
    content: protected abstract ECCurve CloneCurve()
    return:
      type: Org.BouncyCastle.Math.EC.ECCurve
    content.vb: Protected MustOverride Function CloneCurve As ECCurve
  overload: Org.BouncyCastle.Math.EC.ECCurve.CloneCurve*
  modifiers.csharp:
  - protected
  - abstract
  modifiers.vb:
  - Protected
  - MustOverride
- uid: Org.BouncyCastle.Math.EC.ECCurve.CreateRawPoint(Org.BouncyCastle.Math.EC.ECFieldElement,Org.BouncyCastle.Math.EC.ECFieldElement,System.Boolean)
  commentId: M:Org.BouncyCastle.Math.EC.ECCurve.CreateRawPoint(Org.BouncyCastle.Math.EC.ECFieldElement,Org.BouncyCastle.Math.EC.ECFieldElement,System.Boolean)
  id: CreateRawPoint(Org.BouncyCastle.Math.EC.ECFieldElement,Org.BouncyCastle.Math.EC.ECFieldElement,System.Boolean)
  parent: Org.BouncyCastle.Math.EC.ECCurve
  langs:
  - csharp
  - vb
  name: CreateRawPoint(ECFieldElement, ECFieldElement, Boolean)
  nameWithType: ECCurve.CreateRawPoint(ECFieldElement, ECFieldElement, Boolean)
  fullName: Org.BouncyCastle.Math.EC.ECCurve.CreateRawPoint(Org.BouncyCastle.Math.EC.ECFieldElement, Org.BouncyCastle.Math.EC.ECFieldElement, System.Boolean)
  type: Method
  source:
    id: CreateRawPoint
    path: ''
    startLine: 57409
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Math.EC
  syntax:
    content: protected abstract ECPoint CreateRawPoint(ECFieldElement x, ECFieldElement y, bool withCompression)
    parameters:
    - id: x
      type: Org.BouncyCastle.Math.EC.ECFieldElement
    - id: y
      type: Org.BouncyCastle.Math.EC.ECFieldElement
    - id: withCompression
      type: System.Boolean
    return:
      type: Org.BouncyCastle.Math.EC.ECPoint
    content.vb: Protected MustOverride Function CreateRawPoint(x As ECFieldElement, y As ECFieldElement, withCompression As Boolean) As ECPoint
  overload: Org.BouncyCastle.Math.EC.ECCurve.CreateRawPoint*
  modifiers.csharp:
  - protected
  - abstract
  modifiers.vb:
  - Protected
  - MustOverride
- uid: Org.BouncyCastle.Math.EC.ECCurve.CreateRawPoint(Org.BouncyCastle.Math.EC.ECFieldElement,Org.BouncyCastle.Math.EC.ECFieldElement,Org.BouncyCastle.Math.EC.ECFieldElement[],System.Boolean)
  commentId: M:Org.BouncyCastle.Math.EC.ECCurve.CreateRawPoint(Org.BouncyCastle.Math.EC.ECFieldElement,Org.BouncyCastle.Math.EC.ECFieldElement,Org.BouncyCastle.Math.EC.ECFieldElement[],System.Boolean)
  id: CreateRawPoint(Org.BouncyCastle.Math.EC.ECFieldElement,Org.BouncyCastle.Math.EC.ECFieldElement,Org.BouncyCastle.Math.EC.ECFieldElement[],System.Boolean)
  parent: Org.BouncyCastle.Math.EC.ECCurve
  langs:
  - csharp
  - vb
  name: CreateRawPoint(ECFieldElement, ECFieldElement, ECFieldElement[], Boolean)
  nameWithType: ECCurve.CreateRawPoint(ECFieldElement, ECFieldElement, ECFieldElement[], Boolean)
  fullName: Org.BouncyCastle.Math.EC.ECCurve.CreateRawPoint(Org.BouncyCastle.Math.EC.ECFieldElement, Org.BouncyCastle.Math.EC.ECFieldElement, Org.BouncyCastle.Math.EC.ECFieldElement[], System.Boolean)
  type: Method
  source:
    id: CreateRawPoint
    path: ''
    startLine: 57411
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Math.EC
  syntax:
    content: protected abstract ECPoint CreateRawPoint(ECFieldElement x, ECFieldElement y, ECFieldElement[] zs, bool withCompression)
    parameters:
    - id: x
      type: Org.BouncyCastle.Math.EC.ECFieldElement
    - id: y
      type: Org.BouncyCastle.Math.EC.ECFieldElement
    - id: zs
      type: Org.BouncyCastle.Math.EC.ECFieldElement[]
    - id: withCompression
      type: System.Boolean
    return:
      type: Org.BouncyCastle.Math.EC.ECPoint
    content.vb: Protected MustOverride Function CreateRawPoint(x As ECFieldElement, y As ECFieldElement, zs As ECFieldElement(), withCompression As Boolean) As ECPoint
  overload: Org.BouncyCastle.Math.EC.ECCurve.CreateRawPoint*
  nameWithType.vb: ECCurve.CreateRawPoint(ECFieldElement, ECFieldElement, ECFieldElement(), Boolean)
  modifiers.csharp:
  - protected
  - abstract
  modifiers.vb:
  - Protected
  - MustOverride
  fullName.vb: Org.BouncyCastle.Math.EC.ECCurve.CreateRawPoint(Org.BouncyCastle.Math.EC.ECFieldElement, Org.BouncyCastle.Math.EC.ECFieldElement, Org.BouncyCastle.Math.EC.ECFieldElement(), System.Boolean)
  name.vb: CreateRawPoint(ECFieldElement, ECFieldElement, ECFieldElement(), Boolean)
- uid: Org.BouncyCastle.Math.EC.ECCurve.CreateDefaultMultiplier
  commentId: M:Org.BouncyCastle.Math.EC.ECCurve.CreateDefaultMultiplier
  id: CreateDefaultMultiplier
  parent: Org.BouncyCastle.Math.EC.ECCurve
  langs:
  - csharp
  - vb
  name: CreateDefaultMultiplier()
  nameWithType: ECCurve.CreateDefaultMultiplier()
  fullName: Org.BouncyCastle.Math.EC.ECCurve.CreateDefaultMultiplier()
  type: Method
  source:
    id: CreateDefaultMultiplier
    path: ''
    startLine: 57413
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Math.EC
  syntax:
    content: protected virtual ECMultiplier CreateDefaultMultiplier()
    return:
      type: ECMultiplier
    content.vb: Protected Overridable Function CreateDefaultMultiplier As ECMultiplier
  overload: Org.BouncyCastle.Math.EC.ECCurve.CreateDefaultMultiplier*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: Org.BouncyCastle.Math.EC.ECCurve.SupportsCoordinateSystem(System.Int32)
  commentId: M:Org.BouncyCastle.Math.EC.ECCurve.SupportsCoordinateSystem(System.Int32)
  id: SupportsCoordinateSystem(System.Int32)
  parent: Org.BouncyCastle.Math.EC.ECCurve
  langs:
  - csharp
  - vb
  name: SupportsCoordinateSystem(Int32)
  nameWithType: ECCurve.SupportsCoordinateSystem(Int32)
  fullName: Org.BouncyCastle.Math.EC.ECCurve.SupportsCoordinateSystem(System.Int32)
  type: Method
  source:
    id: SupportsCoordinateSystem
    path: ''
    startLine: 57424
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Math.EC
  syntax:
    content: public virtual bool SupportsCoordinateSystem(int coord)
    parameters:
    - id: coord
      type: System.Int32
    return:
      type: System.Boolean
    content.vb: Public Overridable Function SupportsCoordinateSystem(coord As Integer) As Boolean
  overload: Org.BouncyCastle.Math.EC.ECCurve.SupportsCoordinateSystem*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Org.BouncyCastle.Math.EC.ECCurve.GetPreCompInfo(Org.BouncyCastle.Math.EC.ECPoint,System.String)
  commentId: M:Org.BouncyCastle.Math.EC.ECCurve.GetPreCompInfo(Org.BouncyCastle.Math.EC.ECPoint,System.String)
  id: GetPreCompInfo(Org.BouncyCastle.Math.EC.ECPoint,System.String)
  parent: Org.BouncyCastle.Math.EC.ECCurve
  langs:
  - csharp
  - vb
  name: GetPreCompInfo(ECPoint, String)
  nameWithType: ECCurve.GetPreCompInfo(ECPoint, String)
  fullName: Org.BouncyCastle.Math.EC.ECCurve.GetPreCompInfo(Org.BouncyCastle.Math.EC.ECPoint, System.String)
  type: Method
  source:
    id: GetPreCompInfo
    path: ''
    startLine: 57429
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Math.EC
  syntax:
    content: public virtual PreCompInfo GetPreCompInfo(ECPoint point, string name)
    parameters:
    - id: point
      type: Org.BouncyCastle.Math.EC.ECPoint
    - id: name
      type: System.String
    return:
      type: PreCompInfo
    content.vb: Public Overridable Function GetPreCompInfo(point As ECPoint, name As String) As PreCompInfo
  overload: Org.BouncyCastle.Math.EC.ECCurve.GetPreCompInfo*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Org.BouncyCastle.Math.EC.ECCurve.SetPreCompInfo(Org.BouncyCastle.Math.EC.ECPoint,System.String,PreCompInfo)
  commentId: M:Org.BouncyCastle.Math.EC.ECCurve.SetPreCompInfo(Org.BouncyCastle.Math.EC.ECPoint,System.String,PreCompInfo)
  id: SetPreCompInfo(Org.BouncyCastle.Math.EC.ECPoint,System.String,PreCompInfo)
  parent: Org.BouncyCastle.Math.EC.ECCurve
  langs:
  - csharp
  - vb
  name: SetPreCompInfo(ECPoint, String, PreCompInfo)
  nameWithType: ECCurve.SetPreCompInfo(ECPoint, String, PreCompInfo)
  fullName: Org.BouncyCastle.Math.EC.ECCurve.SetPreCompInfo(Org.BouncyCastle.Math.EC.ECPoint, System.String, PreCompInfo)
  type: Method
  source:
    id: SetPreCompInfo
    path: ''
    startLine: 57451
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Math.EC
  example: []
  syntax:
    content: public virtual void SetPreCompInfo(ECPoint point, string name, PreCompInfo preCompInfo)
    parameters:
    - id: point
      type: Org.BouncyCastle.Math.EC.ECPoint
    - id: name
      type: System.String
    - id: preCompInfo
      type: PreCompInfo
    content.vb: Public Overridable Sub SetPreCompInfo(point As ECPoint, name As String, preCompInfo As PreCompInfo)
  overload: Org.BouncyCastle.Math.EC.ECCurve.SetPreCompInfo*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Org.BouncyCastle.Math.EC.ECCurve.ImportPoint(Org.BouncyCastle.Math.EC.ECPoint)
  commentId: M:Org.BouncyCastle.Math.EC.ECCurve.ImportPoint(Org.BouncyCastle.Math.EC.ECPoint)
  id: ImportPoint(Org.BouncyCastle.Math.EC.ECPoint)
  parent: Org.BouncyCastle.Math.EC.ECCurve
  langs:
  - csharp
  - vb
  name: ImportPoint(ECPoint)
  nameWithType: ECCurve.ImportPoint(ECPoint)
  fullName: Org.BouncyCastle.Math.EC.ECCurve.ImportPoint(Org.BouncyCastle.Math.EC.ECPoint)
  type: Method
  source:
    id: ImportPoint
    path: ''
    startLine: 57465
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Math.EC
  syntax:
    content: public virtual ECPoint ImportPoint(ECPoint p)
    parameters:
    - id: p
      type: Org.BouncyCastle.Math.EC.ECPoint
    return:
      type: Org.BouncyCastle.Math.EC.ECPoint
    content.vb: Public Overridable Function ImportPoint(p As ECPoint) As ECPoint
  overload: Org.BouncyCastle.Math.EC.ECCurve.ImportPoint*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Org.BouncyCastle.Math.EC.ECCurve.NormalizeAll(Org.BouncyCastle.Math.EC.ECPoint[])
  commentId: M:Org.BouncyCastle.Math.EC.ECCurve.NormalizeAll(Org.BouncyCastle.Math.EC.ECPoint[])
  id: NormalizeAll(Org.BouncyCastle.Math.EC.ECPoint[])
  parent: Org.BouncyCastle.Math.EC.ECCurve
  langs:
  - csharp
  - vb
  name: NormalizeAll(ECPoint[])
  nameWithType: ECCurve.NormalizeAll(ECPoint[])
  fullName: Org.BouncyCastle.Math.EC.ECCurve.NormalizeAll(Org.BouncyCastle.Math.EC.ECPoint[])
  type: Method
  source:
    id: NormalizeAll
    path: ''
    startLine: 57492
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Math.EC
  example: []
  syntax:
    content: public virtual void NormalizeAll(ECPoint[] points)
    parameters:
    - id: points
      type: Org.BouncyCastle.Math.EC.ECPoint[]
    content.vb: Public Overridable Sub NormalizeAll(points As ECPoint())
  overload: Org.BouncyCastle.Math.EC.ECCurve.NormalizeAll*
  nameWithType.vb: ECCurve.NormalizeAll(ECPoint())
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Org.BouncyCastle.Math.EC.ECCurve.NormalizeAll(Org.BouncyCastle.Math.EC.ECPoint())
  name.vb: NormalizeAll(ECPoint())
- uid: Org.BouncyCastle.Math.EC.ECCurve.NormalizeAll(Org.BouncyCastle.Math.EC.ECPoint[],System.Int32,System.Int32,Org.BouncyCastle.Math.EC.ECFieldElement)
  commentId: M:Org.BouncyCastle.Math.EC.ECCurve.NormalizeAll(Org.BouncyCastle.Math.EC.ECPoint[],System.Int32,System.Int32,Org.BouncyCastle.Math.EC.ECFieldElement)
  id: NormalizeAll(Org.BouncyCastle.Math.EC.ECPoint[],System.Int32,System.Int32,Org.BouncyCastle.Math.EC.ECFieldElement)
  parent: Org.BouncyCastle.Math.EC.ECCurve
  langs:
  - csharp
  - vb
  name: NormalizeAll(ECPoint[], Int32, Int32, ECFieldElement)
  nameWithType: ECCurve.NormalizeAll(ECPoint[], Int32, Int32, ECFieldElement)
  fullName: Org.BouncyCastle.Math.EC.ECCurve.NormalizeAll(Org.BouncyCastle.Math.EC.ECPoint[], System.Int32, System.Int32, Org.BouncyCastle.Math.EC.ECFieldElement)
  type: Method
  source:
    id: NormalizeAll
    path: ''
    startLine: 57515
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Math.EC
  example: []
  syntax:
    content: public virtual void NormalizeAll(ECPoint[] points, int off, int len, ECFieldElement iso)
    parameters:
    - id: points
      type: Org.BouncyCastle.Math.EC.ECPoint[]
    - id: off
      type: System.Int32
    - id: len
      type: System.Int32
    - id: iso
      type: Org.BouncyCastle.Math.EC.ECFieldElement
    content.vb: Public Overridable Sub NormalizeAll(points As ECPoint(), off As Integer, len As Integer, iso As ECFieldElement)
  overload: Org.BouncyCastle.Math.EC.ECCurve.NormalizeAll*
  nameWithType.vb: ECCurve.NormalizeAll(ECPoint(), Int32, Int32, ECFieldElement)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Org.BouncyCastle.Math.EC.ECCurve.NormalizeAll(Org.BouncyCastle.Math.EC.ECPoint(), System.Int32, System.Int32, Org.BouncyCastle.Math.EC.ECFieldElement)
  name.vb: NormalizeAll(ECPoint(), Int32, Int32, ECFieldElement)
- uid: Org.BouncyCastle.Math.EC.ECCurve.Infinity
  commentId: P:Org.BouncyCastle.Math.EC.ECCurve.Infinity
  id: Infinity
  parent: Org.BouncyCastle.Math.EC.ECCurve
  langs:
  - csharp
  - vb
  name: Infinity
  nameWithType: ECCurve.Infinity
  fullName: Org.BouncyCastle.Math.EC.ECCurve.Infinity
  type: Property
  source:
    id: Infinity
    path: ''
    startLine: 57561
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Math.EC
  syntax:
    content: public abstract ECPoint Infinity { get; }
    parameters: []
    return:
      type: Org.BouncyCastle.Math.EC.ECPoint
    content.vb: Public MustOverride ReadOnly Property Infinity As ECPoint
  overload: Org.BouncyCastle.Math.EC.ECCurve.Infinity*
  modifiers.csharp:
  - public
  - abstract
  - get
  modifiers.vb:
  - Public
  - MustOverride
  - ReadOnly
- uid: Org.BouncyCastle.Math.EC.ECCurve.Field
  commentId: P:Org.BouncyCastle.Math.EC.ECCurve.Field
  id: Field
  parent: Org.BouncyCastle.Math.EC.ECCurve
  langs:
  - csharp
  - vb
  name: Field
  nameWithType: ECCurve.Field
  fullName: Org.BouncyCastle.Math.EC.ECCurve.Field
  type: Property
  source:
    id: Field
    path: ''
    startLine: 57563
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Math.EC
  syntax:
    content: public virtual IFiniteField Field { get; }
    parameters: []
    return:
      type: IFiniteField
    content.vb: Public Overridable ReadOnly Property Field As IFiniteField
  overload: Org.BouncyCastle.Math.EC.ECCurve.Field*
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: Org.BouncyCastle.Math.EC.ECCurve.A
  commentId: P:Org.BouncyCastle.Math.EC.ECCurve.A
  id: A
  parent: Org.BouncyCastle.Math.EC.ECCurve
  langs:
  - csharp
  - vb
  name: A
  nameWithType: ECCurve.A
  fullName: Org.BouncyCastle.Math.EC.ECCurve.A
  type: Property
  source:
    id: A
    path: ''
    startLine: 57568
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Math.EC
  syntax:
    content: public virtual ECFieldElement A { get; }
    parameters: []
    return:
      type: Org.BouncyCastle.Math.EC.ECFieldElement
    content.vb: Public Overridable ReadOnly Property A As ECFieldElement
  overload: Org.BouncyCastle.Math.EC.ECCurve.A*
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: Org.BouncyCastle.Math.EC.ECCurve.B
  commentId: P:Org.BouncyCastle.Math.EC.ECCurve.B
  id: B
  parent: Org.BouncyCastle.Math.EC.ECCurve
  langs:
  - csharp
  - vb
  name: B
  nameWithType: ECCurve.B
  fullName: Org.BouncyCastle.Math.EC.ECCurve.B
  type: Property
  source:
    id: B
    path: ''
    startLine: 57573
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Math.EC
  syntax:
    content: public virtual ECFieldElement B { get; }
    parameters: []
    return:
      type: Org.BouncyCastle.Math.EC.ECFieldElement
    content.vb: Public Overridable ReadOnly Property B As ECFieldElement
  overload: Org.BouncyCastle.Math.EC.ECCurve.B*
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: Org.BouncyCastle.Math.EC.ECCurve.Order
  commentId: P:Org.BouncyCastle.Math.EC.ECCurve.Order
  id: Order
  parent: Org.BouncyCastle.Math.EC.ECCurve
  langs:
  - csharp
  - vb
  name: Order
  nameWithType: ECCurve.Order
  fullName: Org.BouncyCastle.Math.EC.ECCurve.Order
  type: Property
  source:
    id: Order
    path: ''
    startLine: 57578
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Math.EC
  syntax:
    content: public virtual BigInteger Order { get; }
    parameters: []
    return:
      type: Org.BouncyCastle.Math.BigInteger
    content.vb: Public Overridable ReadOnly Property Order As BigInteger
  overload: Org.BouncyCastle.Math.EC.ECCurve.Order*
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: Org.BouncyCastle.Math.EC.ECCurve.Cofactor
  commentId: P:Org.BouncyCastle.Math.EC.ECCurve.Cofactor
  id: Cofactor
  parent: Org.BouncyCastle.Math.EC.ECCurve
  langs:
  - csharp
  - vb
  name: Cofactor
  nameWithType: ECCurve.Cofactor
  fullName: Org.BouncyCastle.Math.EC.ECCurve.Cofactor
  type: Property
  source:
    id: Cofactor
    path: ''
    startLine: 57583
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Math.EC
  syntax:
    content: public virtual BigInteger Cofactor { get; }
    parameters: []
    return:
      type: Org.BouncyCastle.Math.BigInteger
    content.vb: Public Overridable ReadOnly Property Cofactor As BigInteger
  overload: Org.BouncyCastle.Math.EC.ECCurve.Cofactor*
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: Org.BouncyCastle.Math.EC.ECCurve.CoordinateSystem
  commentId: P:Org.BouncyCastle.Math.EC.ECCurve.CoordinateSystem
  id: CoordinateSystem
  parent: Org.BouncyCastle.Math.EC.ECCurve
  langs:
  - csharp
  - vb
  name: CoordinateSystem
  nameWithType: ECCurve.CoordinateSystem
  fullName: Org.BouncyCastle.Math.EC.ECCurve.CoordinateSystem
  type: Property
  source:
    id: CoordinateSystem
    path: ''
    startLine: 57588
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Math.EC
  syntax:
    content: public virtual int CoordinateSystem { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Overridable ReadOnly Property CoordinateSystem As Integer
  overload: Org.BouncyCastle.Math.EC.ECCurve.CoordinateSystem*
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: Org.BouncyCastle.Math.EC.ECCurve.CheckPoint(Org.BouncyCastle.Math.EC.ECPoint)
  commentId: M:Org.BouncyCastle.Math.EC.ECCurve.CheckPoint(Org.BouncyCastle.Math.EC.ECPoint)
  id: CheckPoint(Org.BouncyCastle.Math.EC.ECPoint)
  parent: Org.BouncyCastle.Math.EC.ECCurve
  langs:
  - csharp
  - vb
  name: CheckPoint(ECPoint)
  nameWithType: ECCurve.CheckPoint(ECPoint)
  fullName: Org.BouncyCastle.Math.EC.ECCurve.CheckPoint(Org.BouncyCastle.Math.EC.ECPoint)
  type: Method
  source:
    id: CheckPoint
    path: ''
    startLine: 57593
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Math.EC
  syntax:
    content: protected virtual void CheckPoint(ECPoint point)
    parameters:
    - id: point
      type: Org.BouncyCastle.Math.EC.ECPoint
    content.vb: Protected Overridable Sub CheckPoint(point As ECPoint)
  overload: Org.BouncyCastle.Math.EC.ECCurve.CheckPoint*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: Org.BouncyCastle.Math.EC.ECCurve.CheckPoints(Org.BouncyCastle.Math.EC.ECPoint[])
  commentId: M:Org.BouncyCastle.Math.EC.ECCurve.CheckPoints(Org.BouncyCastle.Math.EC.ECPoint[])
  id: CheckPoints(Org.BouncyCastle.Math.EC.ECPoint[])
  parent: Org.BouncyCastle.Math.EC.ECCurve
  langs:
  - csharp
  - vb
  name: CheckPoints(ECPoint[])
  nameWithType: ECCurve.CheckPoints(ECPoint[])
  fullName: Org.BouncyCastle.Math.EC.ECCurve.CheckPoints(Org.BouncyCastle.Math.EC.ECPoint[])
  type: Method
  source:
    id: CheckPoints
    path: ''
    startLine: 57599
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Math.EC
  syntax:
    content: protected virtual void CheckPoints(ECPoint[] points)
    parameters:
    - id: points
      type: Org.BouncyCastle.Math.EC.ECPoint[]
    content.vb: Protected Overridable Sub CheckPoints(points As ECPoint())
  overload: Org.BouncyCastle.Math.EC.ECCurve.CheckPoints*
  nameWithType.vb: ECCurve.CheckPoints(ECPoint())
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
  fullName.vb: Org.BouncyCastle.Math.EC.ECCurve.CheckPoints(Org.BouncyCastle.Math.EC.ECPoint())
  name.vb: CheckPoints(ECPoint())
- uid: Org.BouncyCastle.Math.EC.ECCurve.CheckPoints(Org.BouncyCastle.Math.EC.ECPoint[],System.Int32,System.Int32)
  commentId: M:Org.BouncyCastle.Math.EC.ECCurve.CheckPoints(Org.BouncyCastle.Math.EC.ECPoint[],System.Int32,System.Int32)
  id: CheckPoints(Org.BouncyCastle.Math.EC.ECPoint[],System.Int32,System.Int32)
  parent: Org.BouncyCastle.Math.EC.ECCurve
  langs:
  - csharp
  - vb
  name: CheckPoints(ECPoint[], Int32, Int32)
  nameWithType: ECCurve.CheckPoints(ECPoint[], Int32, Int32)
  fullName: Org.BouncyCastle.Math.EC.ECCurve.CheckPoints(Org.BouncyCastle.Math.EC.ECPoint[], System.Int32, System.Int32)
  type: Method
  source:
    id: CheckPoints
    path: ''
    startLine: 57604
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Math.EC
  syntax:
    content: protected virtual void CheckPoints(ECPoint[] points, int off, int len)
    parameters:
    - id: points
      type: Org.BouncyCastle.Math.EC.ECPoint[]
    - id: off
      type: System.Int32
    - id: len
      type: System.Int32
    content.vb: Protected Overridable Sub CheckPoints(points As ECPoint(), off As Integer, len As Integer)
  overload: Org.BouncyCastle.Math.EC.ECCurve.CheckPoints*
  nameWithType.vb: ECCurve.CheckPoints(ECPoint(), Int32, Int32)
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
  fullName.vb: Org.BouncyCastle.Math.EC.ECCurve.CheckPoints(Org.BouncyCastle.Math.EC.ECPoint(), System.Int32, System.Int32)
  name.vb: CheckPoints(ECPoint(), Int32, Int32)
- uid: Org.BouncyCastle.Math.EC.ECCurve.Equals(Org.BouncyCastle.Math.EC.ECCurve)
  commentId: M:Org.BouncyCastle.Math.EC.ECCurve.Equals(Org.BouncyCastle.Math.EC.ECCurve)
  id: Equals(Org.BouncyCastle.Math.EC.ECCurve)
  parent: Org.BouncyCastle.Math.EC.ECCurve
  langs:
  - csharp
  - vb
  name: Equals(ECCurve)
  nameWithType: ECCurve.Equals(ECCurve)
  fullName: Org.BouncyCastle.Math.EC.ECCurve.Equals(Org.BouncyCastle.Math.EC.ECCurve)
  type: Method
  source:
    id: Equals
    path: ''
    startLine: 57619
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Math.EC
  syntax:
    content: public virtual bool Equals(ECCurve other)
    parameters:
    - id: other
      type: Org.BouncyCastle.Math.EC.ECCurve
    return:
      type: System.Boolean
    content.vb: Public Overridable Function Equals(other As ECCurve) As Boolean
  overload: Org.BouncyCastle.Math.EC.ECCurve.Equals*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Org.BouncyCastle.Math.EC.ECCurve.Equals(System.Object)
  commentId: M:Org.BouncyCastle.Math.EC.ECCurve.Equals(System.Object)
  id: Equals(System.Object)
  parent: Org.BouncyCastle.Math.EC.ECCurve
  langs:
  - csharp
  - vb
  name: Equals(Object)
  nameWithType: ECCurve.Equals(Object)
  fullName: Org.BouncyCastle.Math.EC.ECCurve.Equals(System.Object)
  type: Method
  source:
    id: Equals
    path: ''
    startLine: 57630
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Math.EC
  syntax:
    content: public override bool Equals(object obj)
    parameters:
    - id: obj
      type: System.Object
    return:
      type: System.Boolean
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
  overridden: System.Object.Equals(System.Object)
  overload: Org.BouncyCastle.Math.EC.ECCurve.Equals*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Org.BouncyCastle.Math.EC.ECCurve.GetHashCode
  commentId: M:Org.BouncyCastle.Math.EC.ECCurve.GetHashCode
  id: GetHashCode
  parent: Org.BouncyCastle.Math.EC.ECCurve
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: ECCurve.GetHashCode()
  fullName: Org.BouncyCastle.Math.EC.ECCurve.GetHashCode()
  type: Method
  source:
    id: GetHashCode
    path: ''
    startLine: 57635
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Math.EC
  syntax:
    content: public override int GetHashCode()
    return:
      type: System.Int32
    content.vb: Public Overrides Function GetHashCode As Integer
  overridden: System.Object.GetHashCode
  overload: Org.BouncyCastle.Math.EC.ECCurve.GetHashCode*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Org.BouncyCastle.Math.EC.ECCurve.DecompressPoint(System.Int32,Org.BouncyCastle.Math.BigInteger)
  commentId: M:Org.BouncyCastle.Math.EC.ECCurve.DecompressPoint(System.Int32,Org.BouncyCastle.Math.BigInteger)
  id: DecompressPoint(System.Int32,Org.BouncyCastle.Math.BigInteger)
  parent: Org.BouncyCastle.Math.EC.ECCurve
  langs:
  - csharp
  - vb
  name: DecompressPoint(Int32, BigInteger)
  nameWithType: ECCurve.DecompressPoint(Int32, BigInteger)
  fullName: Org.BouncyCastle.Math.EC.ECCurve.DecompressPoint(System.Int32, Org.BouncyCastle.Math.BigInteger)
  type: Method
  source:
    id: DecompressPoint
    path: ''
    startLine: 57642
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Math.EC
  syntax:
    content: protected abstract ECPoint DecompressPoint(int yTilde, BigInteger X1)
    parameters:
    - id: yTilde
      type: System.Int32
    - id: X1
      type: Org.BouncyCastle.Math.BigInteger
    return:
      type: Org.BouncyCastle.Math.EC.ECPoint
    content.vb: Protected MustOverride Function DecompressPoint(yTilde As Integer, X1 As BigInteger) As ECPoint
  overload: Org.BouncyCastle.Math.EC.ECCurve.DecompressPoint*
  modifiers.csharp:
  - protected
  - abstract
  modifiers.vb:
  - Protected
  - MustOverride
- uid: Org.BouncyCastle.Math.EC.ECCurve.GetEndomorphism
  commentId: M:Org.BouncyCastle.Math.EC.ECCurve.GetEndomorphism
  id: GetEndomorphism
  parent: Org.BouncyCastle.Math.EC.ECCurve
  langs:
  - csharp
  - vb
  name: GetEndomorphism()
  nameWithType: ECCurve.GetEndomorphism()
  fullName: Org.BouncyCastle.Math.EC.ECCurve.GetEndomorphism()
  type: Method
  source:
    id: GetEndomorphism
    path: ''
    startLine: 57644
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Math.EC
  syntax:
    content: public virtual ECEndomorphism GetEndomorphism()
    return:
      type: ECEndomorphism
    content.vb: Public Overridable Function GetEndomorphism As ECEndomorphism
  overload: Org.BouncyCastle.Math.EC.ECCurve.GetEndomorphism*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Org.BouncyCastle.Math.EC.ECCurve.GetMultiplier
  commentId: M:Org.BouncyCastle.Math.EC.ECCurve.GetMultiplier
  id: GetMultiplier
  parent: Org.BouncyCastle.Math.EC.ECCurve
  langs:
  - csharp
  - vb
  name: GetMultiplier()
  nameWithType: ECCurve.GetMultiplier()
  fullName: Org.BouncyCastle.Math.EC.ECCurve.GetMultiplier()
  type: Method
  source:
    id: GetMultiplier
    path: ''
    startLine: 57652
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Math.EC
  example: []
  syntax:
    content: public virtual ECMultiplier GetMultiplier()
    return:
      type: ECMultiplier
    content.vb: Public Overridable Function GetMultiplier As ECMultiplier
  overload: Org.BouncyCastle.Math.EC.ECCurve.GetMultiplier*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Org.BouncyCastle.Math.EC.ECCurve.DecodePoint(System.Byte[])
  commentId: M:Org.BouncyCastle.Math.EC.ECCurve.DecodePoint(System.Byte[])
  id: DecodePoint(System.Byte[])
  parent: Org.BouncyCastle.Math.EC.ECCurve
  langs:
  - csharp
  - vb
  name: DecodePoint(Byte[])
  nameWithType: ECCurve.DecodePoint(Byte[])
  fullName: Org.BouncyCastle.Math.EC.ECCurve.DecodePoint(System.Byte[])
  type: Method
  source:
    id: DecodePoint
    path: ''
    startLine: 57670
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Math.EC
  example: []
  syntax:
    content: public virtual ECPoint DecodePoint(byte[] encoded)
    parameters:
    - id: encoded
      type: System.Byte[]
    return:
      type: Org.BouncyCastle.Math.EC.ECPoint
    content.vb: Public Overridable Function DecodePoint(encoded As Byte()) As ECPoint
  overload: Org.BouncyCastle.Math.EC.ECCurve.DecodePoint*
  nameWithType.vb: ECCurve.DecodePoint(Byte())
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Org.BouncyCastle.Math.EC.ECCurve.DecodePoint(System.Byte())
  name.vb: DecodePoint(Byte())
references:
- uid: Org.BouncyCastle.Math.EC
  commentId: N:Org.BouncyCastle.Math.EC
  name: Org.BouncyCastle.Math.EC
  nameWithType: Org.BouncyCastle.Math.EC
  fullName: Org.BouncyCastle.Math.EC
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Org.BouncyCastle.Math.EC.ECCurve.GetAllCoordinateSystems*
  commentId: Overload:Org.BouncyCastle.Math.EC.ECCurve.GetAllCoordinateSystems
  name: GetAllCoordinateSystems
  nameWithType: ECCurve.GetAllCoordinateSystems
  fullName: Org.BouncyCastle.Math.EC.ECCurve.GetAllCoordinateSystems
- uid: System.Int32[]
  isExternal: true
  name: Int32[]
  nameWithType: Int32[]
  fullName: System.Int32[]
  nameWithType.vb: Int32()
  fullName.vb: System.Int32()
  name.vb: Int32()
  spec.csharp:
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: IFiniteField
  isExternal: true
  name: IFiniteField
  nameWithType: IFiniteField
  fullName: IFiniteField
- uid: Org.BouncyCastle.Math.EC.ECFieldElement
  commentId: T:Org.BouncyCastle.Math.EC.ECFieldElement
  parent: Org.BouncyCastle.Math.EC
  name: ECFieldElement
  nameWithType: ECFieldElement
  fullName: Org.BouncyCastle.Math.EC.ECFieldElement
- uid: Org.BouncyCastle.Math.BigInteger
  commentId: T:Org.BouncyCastle.Math.BigInteger
  parent: Org.BouncyCastle.Math
  name: BigInteger
  nameWithType: BigInteger
  fullName: Org.BouncyCastle.Math.BigInteger
- uid: Org.BouncyCastle.Math
  commentId: N:Org.BouncyCastle.Math
  name: Org.BouncyCastle.Math
  nameWithType: Org.BouncyCastle.Math
  fullName: Org.BouncyCastle.Math
- uid: ECEndomorphism
  isExternal: true
  name: ECEndomorphism
  nameWithType: ECEndomorphism
  fullName: ECEndomorphism
- uid: ECMultiplier
  isExternal: true
  name: ECMultiplier
  nameWithType: ECMultiplier
  fullName: ECMultiplier
- uid: Org.BouncyCastle.Math.EC.ECCurve.#ctor*
  commentId: Overload:Org.BouncyCastle.Math.EC.ECCurve.#ctor
  name: ECCurve
  nameWithType: ECCurve.ECCurve
  fullName: Org.BouncyCastle.Math.EC.ECCurve.ECCurve
- uid: Org.BouncyCastle.Math.EC.ECCurve.FieldSize*
  commentId: Overload:Org.BouncyCastle.Math.EC.ECCurve.FieldSize
  name: FieldSize
  nameWithType: ECCurve.FieldSize
  fullName: Org.BouncyCastle.Math.EC.ECCurve.FieldSize
- uid: Org.BouncyCastle.Math.EC.ECCurve.FromBigInteger*
  commentId: Overload:Org.BouncyCastle.Math.EC.ECCurve.FromBigInteger
  name: FromBigInteger
  nameWithType: ECCurve.FromBigInteger
  fullName: Org.BouncyCastle.Math.EC.ECCurve.FromBigInteger
- uid: Org.BouncyCastle.Math.EC.ECCurve.IsValidFieldElement*
  commentId: Overload:Org.BouncyCastle.Math.EC.ECCurve.IsValidFieldElement
  name: IsValidFieldElement
  nameWithType: ECCurve.IsValidFieldElement
  fullName: Org.BouncyCastle.Math.EC.ECCurve.IsValidFieldElement
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Org.BouncyCastle.Math.EC.ECCurve.Configure*
  commentId: Overload:Org.BouncyCastle.Math.EC.ECCurve.Configure
  name: Configure
  nameWithType: ECCurve.Configure
  fullName: Org.BouncyCastle.Math.EC.ECCurve.Configure
- uid: Org.BouncyCastle.Math.EC.ECCurve.Config
  commentId: T:Org.BouncyCastle.Math.EC.ECCurve.Config
  parent: Org.BouncyCastle.Math.EC
  name: ECCurve.Config
  nameWithType: ECCurve.Config
  fullName: Org.BouncyCastle.Math.EC.ECCurve.Config
- uid: Org.BouncyCastle.Math.EC.ECCurve.ValidatePoint*
  commentId: Overload:Org.BouncyCastle.Math.EC.ECCurve.ValidatePoint
  name: ValidatePoint
  nameWithType: ECCurve.ValidatePoint
  fullName: Org.BouncyCastle.Math.EC.ECCurve.ValidatePoint
- uid: Org.BouncyCastle.Math.EC.ECPoint
  commentId: T:Org.BouncyCastle.Math.EC.ECPoint
  parent: Org.BouncyCastle.Math.EC
  name: ECPoint
  nameWithType: ECPoint
  fullName: Org.BouncyCastle.Math.EC.ECPoint
- uid: Org.BouncyCastle.Math.EC.ECCurve.CreatePoint*
  commentId: Overload:Org.BouncyCastle.Math.EC.ECCurve.CreatePoint
  name: CreatePoint
  nameWithType: ECCurve.CreatePoint
  fullName: Org.BouncyCastle.Math.EC.ECCurve.CreatePoint
- uid: Org.BouncyCastle.Math.EC.ECCurve.CloneCurve*
  commentId: Overload:Org.BouncyCastle.Math.EC.ECCurve.CloneCurve
  name: CloneCurve
  nameWithType: ECCurve.CloneCurve
  fullName: Org.BouncyCastle.Math.EC.ECCurve.CloneCurve
- uid: Org.BouncyCastle.Math.EC.ECCurve
  commentId: T:Org.BouncyCastle.Math.EC.ECCurve
  parent: Org.BouncyCastle.Math.EC
  name: ECCurve
  nameWithType: ECCurve
  fullName: Org.BouncyCastle.Math.EC.ECCurve
- uid: Org.BouncyCastle.Math.EC.ECCurve.CreateRawPoint*
  commentId: Overload:Org.BouncyCastle.Math.EC.ECCurve.CreateRawPoint
  name: CreateRawPoint
  nameWithType: ECCurve.CreateRawPoint
  fullName: Org.BouncyCastle.Math.EC.ECCurve.CreateRawPoint
- uid: Org.BouncyCastle.Math.EC.ECFieldElement[]
  isExternal: true
  name: ECFieldElement[]
  nameWithType: ECFieldElement[]
  fullName: Org.BouncyCastle.Math.EC.ECFieldElement[]
  nameWithType.vb: ECFieldElement()
  fullName.vb: Org.BouncyCastle.Math.EC.ECFieldElement()
  name.vb: ECFieldElement()
  spec.csharp:
  - uid: Org.BouncyCastle.Math.EC.ECFieldElement
    name: ECFieldElement
    nameWithType: ECFieldElement
    fullName: Org.BouncyCastle.Math.EC.ECFieldElement
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: Org.BouncyCastle.Math.EC.ECFieldElement
    name: ECFieldElement
    nameWithType: ECFieldElement
    fullName: Org.BouncyCastle.Math.EC.ECFieldElement
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Org.BouncyCastle.Math.EC.ECCurve.CreateDefaultMultiplier*
  commentId: Overload:Org.BouncyCastle.Math.EC.ECCurve.CreateDefaultMultiplier
  name: CreateDefaultMultiplier
  nameWithType: ECCurve.CreateDefaultMultiplier
  fullName: Org.BouncyCastle.Math.EC.ECCurve.CreateDefaultMultiplier
- uid: Org.BouncyCastle.Math.EC.ECCurve.SupportsCoordinateSystem*
  commentId: Overload:Org.BouncyCastle.Math.EC.ECCurve.SupportsCoordinateSystem
  name: SupportsCoordinateSystem
  nameWithType: ECCurve.SupportsCoordinateSystem
  fullName: Org.BouncyCastle.Math.EC.ECCurve.SupportsCoordinateSystem
- uid: Org.BouncyCastle.Math.EC.ECCurve.GetPreCompInfo*
  commentId: Overload:Org.BouncyCastle.Math.EC.ECCurve.GetPreCompInfo
  name: GetPreCompInfo
  nameWithType: ECCurve.GetPreCompInfo
  fullName: Org.BouncyCastle.Math.EC.ECCurve.GetPreCompInfo
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: PreCompInfo
  isExternal: true
  name: PreCompInfo
  nameWithType: PreCompInfo
  fullName: PreCompInfo
- uid: Org.BouncyCastle.Math.EC.ECCurve.SetPreCompInfo*
  commentId: Overload:Org.BouncyCastle.Math.EC.ECCurve.SetPreCompInfo
  name: SetPreCompInfo
  nameWithType: ECCurve.SetPreCompInfo
  fullName: Org.BouncyCastle.Math.EC.ECCurve.SetPreCompInfo
- uid: Org.BouncyCastle.Math.EC.ECCurve.ImportPoint*
  commentId: Overload:Org.BouncyCastle.Math.EC.ECCurve.ImportPoint
  name: ImportPoint
  nameWithType: ECCurve.ImportPoint
  fullName: Org.BouncyCastle.Math.EC.ECCurve.ImportPoint
- uid: Org.BouncyCastle.Math.EC.ECCurve.NormalizeAll*
  commentId: Overload:Org.BouncyCastle.Math.EC.ECCurve.NormalizeAll
  name: NormalizeAll
  nameWithType: ECCurve.NormalizeAll
  fullName: Org.BouncyCastle.Math.EC.ECCurve.NormalizeAll
- uid: Org.BouncyCastle.Math.EC.ECPoint[]
  isExternal: true
  name: ECPoint[]
  nameWithType: ECPoint[]
  fullName: Org.BouncyCastle.Math.EC.ECPoint[]
  nameWithType.vb: ECPoint()
  fullName.vb: Org.BouncyCastle.Math.EC.ECPoint()
  name.vb: ECPoint()
  spec.csharp:
  - uid: Org.BouncyCastle.Math.EC.ECPoint
    name: ECPoint
    nameWithType: ECPoint
    fullName: Org.BouncyCastle.Math.EC.ECPoint
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: Org.BouncyCastle.Math.EC.ECPoint
    name: ECPoint
    nameWithType: ECPoint
    fullName: Org.BouncyCastle.Math.EC.ECPoint
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Org.BouncyCastle.Math.EC.ECCurve.Infinity*
  commentId: Overload:Org.BouncyCastle.Math.EC.ECCurve.Infinity
  name: Infinity
  nameWithType: ECCurve.Infinity
  fullName: Org.BouncyCastle.Math.EC.ECCurve.Infinity
- uid: Org.BouncyCastle.Math.EC.ECCurve.Field*
  commentId: Overload:Org.BouncyCastle.Math.EC.ECCurve.Field
  name: Field
  nameWithType: ECCurve.Field
  fullName: Org.BouncyCastle.Math.EC.ECCurve.Field
- uid: Org.BouncyCastle.Math.EC.ECCurve.A*
  commentId: Overload:Org.BouncyCastle.Math.EC.ECCurve.A
  name: A
  nameWithType: ECCurve.A
  fullName: Org.BouncyCastle.Math.EC.ECCurve.A
- uid: Org.BouncyCastle.Math.EC.ECCurve.B*
  commentId: Overload:Org.BouncyCastle.Math.EC.ECCurve.B
  name: B
  nameWithType: ECCurve.B
  fullName: Org.BouncyCastle.Math.EC.ECCurve.B
- uid: Org.BouncyCastle.Math.EC.ECCurve.Order*
  commentId: Overload:Org.BouncyCastle.Math.EC.ECCurve.Order
  name: Order
  nameWithType: ECCurve.Order
  fullName: Org.BouncyCastle.Math.EC.ECCurve.Order
- uid: Org.BouncyCastle.Math.EC.ECCurve.Cofactor*
  commentId: Overload:Org.BouncyCastle.Math.EC.ECCurve.Cofactor
  name: Cofactor
  nameWithType: ECCurve.Cofactor
  fullName: Org.BouncyCastle.Math.EC.ECCurve.Cofactor
- uid: Org.BouncyCastle.Math.EC.ECCurve.CoordinateSystem*
  commentId: Overload:Org.BouncyCastle.Math.EC.ECCurve.CoordinateSystem
  name: CoordinateSystem
  nameWithType: ECCurve.CoordinateSystem
  fullName: Org.BouncyCastle.Math.EC.ECCurve.CoordinateSystem
- uid: Org.BouncyCastle.Math.EC.ECCurve.CheckPoint*
  commentId: Overload:Org.BouncyCastle.Math.EC.ECCurve.CheckPoint
  name: CheckPoint
  nameWithType: ECCurve.CheckPoint
  fullName: Org.BouncyCastle.Math.EC.ECCurve.CheckPoint
- uid: Org.BouncyCastle.Math.EC.ECCurve.CheckPoints*
  commentId: Overload:Org.BouncyCastle.Math.EC.ECCurve.CheckPoints
  name: CheckPoints
  nameWithType: ECCurve.CheckPoints
  fullName: Org.BouncyCastle.Math.EC.ECCurve.CheckPoints
- uid: Org.BouncyCastle.Math.EC.ECCurve.Equals*
  commentId: Overload:Org.BouncyCastle.Math.EC.ECCurve.Equals
  name: Equals
  nameWithType: ECCurve.Equals
  fullName: Org.BouncyCastle.Math.EC.ECCurve.Equals
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Org.BouncyCastle.Math.EC.ECCurve.GetHashCode*
  commentId: Overload:Org.BouncyCastle.Math.EC.ECCurve.GetHashCode
  name: GetHashCode
  nameWithType: ECCurve.GetHashCode
  fullName: Org.BouncyCastle.Math.EC.ECCurve.GetHashCode
- uid: Org.BouncyCastle.Math.EC.ECCurve.DecompressPoint*
  commentId: Overload:Org.BouncyCastle.Math.EC.ECCurve.DecompressPoint
  name: DecompressPoint
  nameWithType: ECCurve.DecompressPoint
  fullName: Org.BouncyCastle.Math.EC.ECCurve.DecompressPoint
- uid: Org.BouncyCastle.Math.EC.ECCurve.GetEndomorphism*
  commentId: Overload:Org.BouncyCastle.Math.EC.ECCurve.GetEndomorphism
  name: GetEndomorphism
  nameWithType: ECCurve.GetEndomorphism
  fullName: Org.BouncyCastle.Math.EC.ECCurve.GetEndomorphism
- uid: Org.BouncyCastle.Math.EC.ECCurve.GetMultiplier*
  commentId: Overload:Org.BouncyCastle.Math.EC.ECCurve.GetMultiplier
  name: GetMultiplier
  nameWithType: ECCurve.GetMultiplier
  fullName: Org.BouncyCastle.Math.EC.ECCurve.GetMultiplier
- uid: Org.BouncyCastle.Math.EC.ECCurve.DecodePoint*
  commentId: Overload:Org.BouncyCastle.Math.EC.ECCurve.DecodePoint
  name: DecodePoint
  nameWithType: ECCurve.DecodePoint
  fullName: Org.BouncyCastle.Math.EC.ECCurve.DecodePoint
- uid: System.Byte[]
  isExternal: true
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullName.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
