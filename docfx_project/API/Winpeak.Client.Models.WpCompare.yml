### YamlMime:ManagedReference
items:
- uid: Winpeak.Client.Models.WpCompare
  commentId: T:Winpeak.Client.Models.WpCompare
  id: WpCompare
  parent: Winpeak.Client.Models
  children:
  - Winpeak.Client.Models.WpCompare.Compare(Winpeak.Client.Models.Waypoint,Winpeak.Client.Models.Waypoint)
  langs:
  - csharp
  - vb
  name: WpCompare
  nameWithType: WpCompare
  fullName: Winpeak.Client.Models.WpCompare
  type: Class
  source:
    id: WpCompare
    path: ''
    startLine: 1946
  assemblies:
  - cs.temp.dll
  namespace: Winpeak.Client.Models
  syntax:
    content: 'public class WpCompare : IComparer<Waypoint>'
    content.vb: >-
      Public Class WpCompare
          Implements IComparer(Of Waypoint)
  inheritance:
  - System.Object
  implements:
  - System.Collections.Generic.IComparer{Winpeak.Client.Models.Waypoint}
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ToString
  - System.Object.ReferenceEquals(System.Object,System.Object)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Winpeak.Client.Models.WpCompare.Compare(Winpeak.Client.Models.Waypoint,Winpeak.Client.Models.Waypoint)
  commentId: M:Winpeak.Client.Models.WpCompare.Compare(Winpeak.Client.Models.Waypoint,Winpeak.Client.Models.Waypoint)
  id: Compare(Winpeak.Client.Models.Waypoint,Winpeak.Client.Models.Waypoint)
  parent: Winpeak.Client.Models.WpCompare
  langs:
  - csharp
  - vb
  name: Compare(Waypoint, Waypoint)
  nameWithType: WpCompare.Compare(Waypoint, Waypoint)
  fullName: Winpeak.Client.Models.WpCompare.Compare(Winpeak.Client.Models.Waypoint, Winpeak.Client.Models.Waypoint)
  type: Method
  source:
    id: Compare
    path: ''
    startLine: 1948
  assemblies:
  - cs.temp.dll
  namespace: Winpeak.Client.Models
  syntax:
    content: public int Compare(Waypoint x, Waypoint y)
    parameters:
    - id: x
      type: Winpeak.Client.Models.Waypoint
    - id: y
      type: Winpeak.Client.Models.Waypoint
    return:
      type: System.Int32
    content.vb: Public Function Compare(x As Waypoint, y As Waypoint) As Integer
  overload: Winpeak.Client.Models.WpCompare.Compare*
  implements:
  - System.Collections.Generic.IComparer{Winpeak.Client.Models.Waypoint}.Compare(Winpeak.Client.Models.Waypoint,Winpeak.Client.Models.Waypoint)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Winpeak.Client.Models
  commentId: N:Winpeak.Client.Models
  name: Winpeak.Client.Models
  nameWithType: Winpeak.Client.Models
  fullName: Winpeak.Client.Models
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Collections.Generic.IComparer{Winpeak.Client.Models.Waypoint}
  commentId: T:System.Collections.Generic.IComparer{Winpeak.Client.Models.Waypoint}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IComparer`1
  name: IComparer<Waypoint>
  nameWithType: IComparer<Waypoint>
  fullName: System.Collections.Generic.IComparer<Winpeak.Client.Models.Waypoint>
  nameWithType.vb: IComparer(Of Waypoint)
  fullName.vb: System.Collections.Generic.IComparer(Of Winpeak.Client.Models.Waypoint)
  name.vb: IComparer(Of Waypoint)
  spec.csharp:
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    nameWithType: IComparer
    fullName: System.Collections.Generic.IComparer
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Winpeak.Client.Models.Waypoint
    name: Waypoint
    nameWithType: Waypoint
    fullName: Winpeak.Client.Models.Waypoint
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    nameWithType: IComparer
    fullName: System.Collections.Generic.IComparer
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Winpeak.Client.Models.Waypoint
    name: Waypoint
    nameWithType: Waypoint
    fullName: Winpeak.Client.Models.Waypoint
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Collections.Generic.IComparer`1
  commentId: T:System.Collections.Generic.IComparer`1
  isExternal: true
  name: IComparer<T>
  nameWithType: IComparer<T>
  fullName: System.Collections.Generic.IComparer<T>
  nameWithType.vb: IComparer(Of T)
  fullName.vb: System.Collections.Generic.IComparer(Of T)
  name.vb: IComparer(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    nameWithType: IComparer
    fullName: System.Collections.Generic.IComparer
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    nameWithType: IComparer
    fullName: System.Collections.Generic.IComparer
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Winpeak.Client.Models.WpCompare.Compare*
  commentId: Overload:Winpeak.Client.Models.WpCompare.Compare
  name: Compare
  nameWithType: WpCompare.Compare
  fullName: Winpeak.Client.Models.WpCompare.Compare
- uid: System.Collections.Generic.IComparer{Winpeak.Client.Models.Waypoint}.Compare(Winpeak.Client.Models.Waypoint,Winpeak.Client.Models.Waypoint)
  commentId: M:System.Collections.Generic.IComparer{Winpeak.Client.Models.Waypoint}.Compare(Winpeak.Client.Models.Waypoint,Winpeak.Client.Models.Waypoint)
  parent: System.Collections.Generic.IComparer{Winpeak.Client.Models.Waypoint}
  definition: System.Collections.Generic.IComparer`1.Compare(`0,`0)
  name: Compare(Waypoint, Waypoint)
  nameWithType: IComparer<Waypoint>.Compare(Waypoint, Waypoint)
  fullName: System.Collections.Generic.IComparer<Winpeak.Client.Models.Waypoint>.Compare(Winpeak.Client.Models.Waypoint, Winpeak.Client.Models.Waypoint)
  nameWithType.vb: IComparer(Of Waypoint).Compare(Waypoint, Waypoint)
  fullName.vb: System.Collections.Generic.IComparer(Of Winpeak.Client.Models.Waypoint).Compare(Winpeak.Client.Models.Waypoint, Winpeak.Client.Models.Waypoint)
  spec.csharp:
  - uid: System.Collections.Generic.IComparer`1.Compare(`0,`0)
    name: Compare
    nameWithType: IComparer<Waypoint>.Compare
    fullName: System.Collections.Generic.IComparer<Winpeak.Client.Models.Waypoint>.Compare
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Winpeak.Client.Models.Waypoint
    name: Waypoint
    nameWithType: Waypoint
    fullName: Winpeak.Client.Models.Waypoint
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Winpeak.Client.Models.Waypoint
    name: Waypoint
    nameWithType: Waypoint
    fullName: Winpeak.Client.Models.Waypoint
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IComparer`1.Compare(`0,`0)
    name: Compare
    nameWithType: IComparer(Of Waypoint).Compare
    fullName: System.Collections.Generic.IComparer(Of Winpeak.Client.Models.Waypoint).Compare
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Winpeak.Client.Models.Waypoint
    name: Waypoint
    nameWithType: Waypoint
    fullName: Winpeak.Client.Models.Waypoint
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Winpeak.Client.Models.Waypoint
    name: Waypoint
    nameWithType: Waypoint
    fullName: Winpeak.Client.Models.Waypoint
  - name: )
    nameWithType: )
    fullName: )
- uid: Winpeak.Client.Models.Waypoint
  commentId: T:Winpeak.Client.Models.Waypoint
  parent: Winpeak.Client.Models
  name: Waypoint
  nameWithType: Waypoint
  fullName: Winpeak.Client.Models.Waypoint
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Collections.Generic.IComparer`1.Compare(`0,`0)
  commentId: M:System.Collections.Generic.IComparer`1.Compare(`0,`0)
  isExternal: true
  name: Compare(T, T)
  nameWithType: IComparer<T>.Compare(T, T)
  fullName: System.Collections.Generic.IComparer<T>.Compare(T, T)
  nameWithType.vb: IComparer(Of T).Compare(T, T)
  fullName.vb: System.Collections.Generic.IComparer(Of T).Compare(T, T)
  spec.csharp:
  - uid: System.Collections.Generic.IComparer`1.Compare(`0,`0)
    name: Compare
    nameWithType: IComparer<T>.Compare
    fullName: System.Collections.Generic.IComparer<T>.Compare
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IComparer`1.Compare(`0,`0)
    name: Compare
    nameWithType: IComparer(Of T).Compare
    fullName: System.Collections.Generic.IComparer(Of T).Compare
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
