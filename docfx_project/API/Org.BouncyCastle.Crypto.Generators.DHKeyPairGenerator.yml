### YamlMime:ManagedReference
items:
- uid: Org.BouncyCastle.Crypto.Generators.DHKeyPairGenerator
  commentId: T:Org.BouncyCastle.Crypto.Generators.DHKeyPairGenerator
  id: DHKeyPairGenerator
  parent: Org.BouncyCastle.Crypto.Generators
  children:
  - Org.BouncyCastle.Crypto.Generators.DHKeyPairGenerator.GenerateKeyPair
  - Org.BouncyCastle.Crypto.Generators.DHKeyPairGenerator.Init(Org.BouncyCastle.Crypto.KeyGenerationParameters)
  langs:
  - csharp
  - vb
  name: DHKeyPairGenerator
  nameWithType: DHKeyPairGenerator
  fullName: Org.BouncyCastle.Crypto.Generators.DHKeyPairGenerator
  type: Class
  source:
    id: DHKeyPairGenerator
    path: ''
    startLine: 102075
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Generators
  example: []
  syntax:
    content: 'public class DHKeyPairGenerator : IAsymmetricCipherKeyPairGenerator'
    content.vb: >-
      Public Class DHKeyPairGenerator
          Implements IAsymmetricCipherKeyPairGenerator
  inheritance:
  - System.Object
  implements:
  - Org.BouncyCastle.Crypto.IAsymmetricCipherKeyPairGenerator
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ToString
  - System.Object.ReferenceEquals(System.Object,System.Object)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Org.BouncyCastle.Crypto.Generators.DHKeyPairGenerator.Init(Org.BouncyCastle.Crypto.KeyGenerationParameters)
  commentId: M:Org.BouncyCastle.Crypto.Generators.DHKeyPairGenerator.Init(Org.BouncyCastle.Crypto.KeyGenerationParameters)
  id: Init(Org.BouncyCastle.Crypto.KeyGenerationParameters)
  parent: Org.BouncyCastle.Crypto.Generators.DHKeyPairGenerator
  langs:
  - csharp
  - vb
  name: Init(KeyGenerationParameters)
  nameWithType: DHKeyPairGenerator.Init(KeyGenerationParameters)
  fullName: Org.BouncyCastle.Crypto.Generators.DHKeyPairGenerator.Init(Org.BouncyCastle.Crypto.KeyGenerationParameters)
  type: Method
  source:
    id: Init
    path: ''
    startLine: 102080
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Generators
  syntax:
    content: public virtual void Init(KeyGenerationParameters parameters)
    parameters:
    - id: parameters
      type: Org.BouncyCastle.Crypto.KeyGenerationParameters
    content.vb: Public Overridable Sub Init(parameters As KeyGenerationParameters)
  overload: Org.BouncyCastle.Crypto.Generators.DHKeyPairGenerator.Init*
  implements:
  - Org.BouncyCastle.Crypto.IAsymmetricCipherKeyPairGenerator.Init(Org.BouncyCastle.Crypto.KeyGenerationParameters)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Org.BouncyCastle.Crypto.Generators.DHKeyPairGenerator.GenerateKeyPair
  commentId: M:Org.BouncyCastle.Crypto.Generators.DHKeyPairGenerator.GenerateKeyPair
  id: GenerateKeyPair
  parent: Org.BouncyCastle.Crypto.Generators.DHKeyPairGenerator
  langs:
  - csharp
  - vb
  name: GenerateKeyPair()
  nameWithType: DHKeyPairGenerator.GenerateKeyPair()
  fullName: Org.BouncyCastle.Crypto.Generators.DHKeyPairGenerator.GenerateKeyPair()
  type: Method
  source:
    id: GenerateKeyPair
    path: ''
    startLine: 102086
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Generators
  syntax:
    content: public virtual AsymmetricCipherKeyPair GenerateKeyPair()
    return:
      type: Org.BouncyCastle.Crypto.AsymmetricCipherKeyPair
    content.vb: Public Overridable Function GenerateKeyPair As AsymmetricCipherKeyPair
  overload: Org.BouncyCastle.Crypto.Generators.DHKeyPairGenerator.GenerateKeyPair*
  implements:
  - Org.BouncyCastle.Crypto.IAsymmetricCipherKeyPairGenerator.GenerateKeyPair
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
references:
- uid: Org.BouncyCastle.Crypto.Generators
  commentId: N:Org.BouncyCastle.Crypto.Generators
  name: Org.BouncyCastle.Crypto.Generators
  nameWithType: Org.BouncyCastle.Crypto.Generators
  fullName: Org.BouncyCastle.Crypto.Generators
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Org.BouncyCastle.Crypto.IAsymmetricCipherKeyPairGenerator
  commentId: T:Org.BouncyCastle.Crypto.IAsymmetricCipherKeyPairGenerator
  parent: Org.BouncyCastle.Crypto
  name: IAsymmetricCipherKeyPairGenerator
  nameWithType: IAsymmetricCipherKeyPairGenerator
  fullName: Org.BouncyCastle.Crypto.IAsymmetricCipherKeyPairGenerator
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Org.BouncyCastle.Crypto
  commentId: N:Org.BouncyCastle.Crypto
  name: Org.BouncyCastle.Crypto
  nameWithType: Org.BouncyCastle.Crypto
  fullName: Org.BouncyCastle.Crypto
- uid: Org.BouncyCastle.Crypto.Generators.DHKeyPairGenerator.Init*
  commentId: Overload:Org.BouncyCastle.Crypto.Generators.DHKeyPairGenerator.Init
  name: Init
  nameWithType: DHKeyPairGenerator.Init
  fullName: Org.BouncyCastle.Crypto.Generators.DHKeyPairGenerator.Init
- uid: Org.BouncyCastle.Crypto.IAsymmetricCipherKeyPairGenerator.Init(Org.BouncyCastle.Crypto.KeyGenerationParameters)
  commentId: M:Org.BouncyCastle.Crypto.IAsymmetricCipherKeyPairGenerator.Init(Org.BouncyCastle.Crypto.KeyGenerationParameters)
  parent: Org.BouncyCastle.Crypto.IAsymmetricCipherKeyPairGenerator
  name: Init(KeyGenerationParameters)
  nameWithType: IAsymmetricCipherKeyPairGenerator.Init(KeyGenerationParameters)
  fullName: Org.BouncyCastle.Crypto.IAsymmetricCipherKeyPairGenerator.Init(Org.BouncyCastle.Crypto.KeyGenerationParameters)
  spec.csharp:
  - uid: Org.BouncyCastle.Crypto.IAsymmetricCipherKeyPairGenerator.Init(Org.BouncyCastle.Crypto.KeyGenerationParameters)
    name: Init
    nameWithType: IAsymmetricCipherKeyPairGenerator.Init
    fullName: Org.BouncyCastle.Crypto.IAsymmetricCipherKeyPairGenerator.Init
  - name: (
    nameWithType: (
    fullName: (
  - uid: Org.BouncyCastle.Crypto.KeyGenerationParameters
    name: KeyGenerationParameters
    nameWithType: KeyGenerationParameters
    fullName: Org.BouncyCastle.Crypto.KeyGenerationParameters
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Org.BouncyCastle.Crypto.IAsymmetricCipherKeyPairGenerator.Init(Org.BouncyCastle.Crypto.KeyGenerationParameters)
    name: Init
    nameWithType: IAsymmetricCipherKeyPairGenerator.Init
    fullName: Org.BouncyCastle.Crypto.IAsymmetricCipherKeyPairGenerator.Init
  - name: (
    nameWithType: (
    fullName: (
  - uid: Org.BouncyCastle.Crypto.KeyGenerationParameters
    name: KeyGenerationParameters
    nameWithType: KeyGenerationParameters
    fullName: Org.BouncyCastle.Crypto.KeyGenerationParameters
  - name: )
    nameWithType: )
    fullName: )
- uid: Org.BouncyCastle.Crypto.KeyGenerationParameters
  commentId: T:Org.BouncyCastle.Crypto.KeyGenerationParameters
  parent: Org.BouncyCastle.Crypto
  name: KeyGenerationParameters
  nameWithType: KeyGenerationParameters
  fullName: Org.BouncyCastle.Crypto.KeyGenerationParameters
- uid: Org.BouncyCastle.Crypto.Generators.DHKeyPairGenerator.GenerateKeyPair*
  commentId: Overload:Org.BouncyCastle.Crypto.Generators.DHKeyPairGenerator.GenerateKeyPair
  name: GenerateKeyPair
  nameWithType: DHKeyPairGenerator.GenerateKeyPair
  fullName: Org.BouncyCastle.Crypto.Generators.DHKeyPairGenerator.GenerateKeyPair
- uid: Org.BouncyCastle.Crypto.IAsymmetricCipherKeyPairGenerator.GenerateKeyPair
  commentId: M:Org.BouncyCastle.Crypto.IAsymmetricCipherKeyPairGenerator.GenerateKeyPair
  parent: Org.BouncyCastle.Crypto.IAsymmetricCipherKeyPairGenerator
  name: GenerateKeyPair()
  nameWithType: IAsymmetricCipherKeyPairGenerator.GenerateKeyPair()
  fullName: Org.BouncyCastle.Crypto.IAsymmetricCipherKeyPairGenerator.GenerateKeyPair()
  spec.csharp:
  - uid: Org.BouncyCastle.Crypto.IAsymmetricCipherKeyPairGenerator.GenerateKeyPair
    name: GenerateKeyPair
    nameWithType: IAsymmetricCipherKeyPairGenerator.GenerateKeyPair
    fullName: Org.BouncyCastle.Crypto.IAsymmetricCipherKeyPairGenerator.GenerateKeyPair
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Org.BouncyCastle.Crypto.IAsymmetricCipherKeyPairGenerator.GenerateKeyPair
    name: GenerateKeyPair
    nameWithType: IAsymmetricCipherKeyPairGenerator.GenerateKeyPair
    fullName: Org.BouncyCastle.Crypto.IAsymmetricCipherKeyPairGenerator.GenerateKeyPair
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Org.BouncyCastle.Crypto.AsymmetricCipherKeyPair
  commentId: T:Org.BouncyCastle.Crypto.AsymmetricCipherKeyPair
  parent: Org.BouncyCastle.Crypto
  name: AsymmetricCipherKeyPair
  nameWithType: AsymmetricCipherKeyPair
  fullName: Org.BouncyCastle.Crypto.AsymmetricCipherKeyPair
