### YamlMime:ManagedReference
items:
- uid: Org.BouncyCastle.Crypto.Modes.OcbBlockCipher
  commentId: T:Org.BouncyCastle.Crypto.Modes.OcbBlockCipher
  id: OcbBlockCipher
  parent: Org.BouncyCastle.Crypto.Modes
  children:
  - Org.BouncyCastle.Crypto.Modes.OcbBlockCipher.#ctor(Org.BouncyCastle.Crypto.IBlockCipher,Org.BouncyCastle.Crypto.IBlockCipher)
  - Org.BouncyCastle.Crypto.Modes.OcbBlockCipher.AlgorithmName
  - Org.BouncyCastle.Crypto.Modes.OcbBlockCipher.Clear(System.Byte[])
  - Org.BouncyCastle.Crypto.Modes.OcbBlockCipher.DoFinal(System.Byte[],System.Int32)
  - Org.BouncyCastle.Crypto.Modes.OcbBlockCipher.GetBlockSize
  - Org.BouncyCastle.Crypto.Modes.OcbBlockCipher.GetLSub(System.Int32)
  - Org.BouncyCastle.Crypto.Modes.OcbBlockCipher.GetMac
  - Org.BouncyCastle.Crypto.Modes.OcbBlockCipher.GetOutputSize(System.Int32)
  - Org.BouncyCastle.Crypto.Modes.OcbBlockCipher.GetUnderlyingCipher
  - Org.BouncyCastle.Crypto.Modes.OcbBlockCipher.GetUpdateOutputSize(System.Int32)
  - Org.BouncyCastle.Crypto.Modes.OcbBlockCipher.Init(System.Boolean,Org.BouncyCastle.Crypto.ICipherParameters)
  - Org.BouncyCastle.Crypto.Modes.OcbBlockCipher.OCB_double(System.Byte[])
  - Org.BouncyCastle.Crypto.Modes.OcbBlockCipher.OCB_extend(System.Byte[],System.Int32)
  - Org.BouncyCastle.Crypto.Modes.OcbBlockCipher.OCB_ntz(System.Int64)
  - Org.BouncyCastle.Crypto.Modes.OcbBlockCipher.ProcessAadByte(System.Byte)
  - Org.BouncyCastle.Crypto.Modes.OcbBlockCipher.ProcessAadBytes(System.Byte[],System.Int32,System.Int32)
  - Org.BouncyCastle.Crypto.Modes.OcbBlockCipher.ProcessByte(System.Byte,System.Byte[],System.Int32)
  - Org.BouncyCastle.Crypto.Modes.OcbBlockCipher.ProcessBytes(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)
  - Org.BouncyCastle.Crypto.Modes.OcbBlockCipher.ProcessHashBlock
  - Org.BouncyCastle.Crypto.Modes.OcbBlockCipher.ProcessMainBlock(System.Byte[],System.Int32)
  - Org.BouncyCastle.Crypto.Modes.OcbBlockCipher.ProcessNonce(System.Byte[])
  - Org.BouncyCastle.Crypto.Modes.OcbBlockCipher.Reset
  - Org.BouncyCastle.Crypto.Modes.OcbBlockCipher.Reset(System.Boolean)
  - Org.BouncyCastle.Crypto.Modes.OcbBlockCipher.ShiftLeft(System.Byte[],System.Byte[])
  - Org.BouncyCastle.Crypto.Modes.OcbBlockCipher.UpdateHASH(System.Byte[])
  - Org.BouncyCastle.Crypto.Modes.OcbBlockCipher.Xor(System.Byte[],System.Byte[])
  langs:
  - csharp
  - vb
  name: OcbBlockCipher
  nameWithType: OcbBlockCipher
  fullName: Org.BouncyCastle.Crypto.Modes.OcbBlockCipher
  type: Class
  source:
    id: OcbBlockCipher
    path: ''
    startLine: 98094
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Modes
  example: []
  syntax:
    content: 'public class OcbBlockCipher : IAeadBlockCipher'
    content.vb: >-
      Public Class OcbBlockCipher
          Implements IAeadBlockCipher
  inheritance:
  - System.Object
  implements:
  - Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ToString
  - System.Object.ReferenceEquals(System.Object,System.Object)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Org.BouncyCastle.Crypto.Modes.OcbBlockCipher.#ctor(Org.BouncyCastle.Crypto.IBlockCipher,Org.BouncyCastle.Crypto.IBlockCipher)
  commentId: M:Org.BouncyCastle.Crypto.Modes.OcbBlockCipher.#ctor(Org.BouncyCastle.Crypto.IBlockCipher,Org.BouncyCastle.Crypto.IBlockCipher)
  id: '#ctor(Org.BouncyCastle.Crypto.IBlockCipher,Org.BouncyCastle.Crypto.IBlockCipher)'
  parent: Org.BouncyCastle.Crypto.Modes.OcbBlockCipher
  langs:
  - csharp
  - vb
  name: OcbBlockCipher(IBlockCipher, IBlockCipher)
  nameWithType: OcbBlockCipher.OcbBlockCipher(IBlockCipher, IBlockCipher)
  fullName: Org.BouncyCastle.Crypto.Modes.OcbBlockCipher.OcbBlockCipher(Org.BouncyCastle.Crypto.IBlockCipher, Org.BouncyCastle.Crypto.IBlockCipher)
  type: Constructor
  source:
    id: .ctor
    path: ''
    startLine: 98137
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Modes
  syntax:
    content: public OcbBlockCipher(IBlockCipher hashCipher, IBlockCipher mainCipher)
    parameters:
    - id: hashCipher
      type: Org.BouncyCastle.Crypto.IBlockCipher
    - id: mainCipher
      type: Org.BouncyCastle.Crypto.IBlockCipher
    content.vb: Public Sub New(hashCipher As IBlockCipher, mainCipher As IBlockCipher)
  overload: Org.BouncyCastle.Crypto.Modes.OcbBlockCipher.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Org.BouncyCastle.Crypto.Modes.OcbBlockCipher.GetUnderlyingCipher
  commentId: M:Org.BouncyCastle.Crypto.Modes.OcbBlockCipher.GetUnderlyingCipher
  id: GetUnderlyingCipher
  parent: Org.BouncyCastle.Crypto.Modes.OcbBlockCipher
  langs:
  - csharp
  - vb
  name: GetUnderlyingCipher()
  nameWithType: OcbBlockCipher.GetUnderlyingCipher()
  fullName: Org.BouncyCastle.Crypto.Modes.OcbBlockCipher.GetUnderlyingCipher()
  type: Method
  source:
    id: GetUnderlyingCipher
    path: ''
    startLine: 98155
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Modes
  syntax:
    content: public virtual IBlockCipher GetUnderlyingCipher()
    return:
      type: Org.BouncyCastle.Crypto.IBlockCipher
    content.vb: Public Overridable Function GetUnderlyingCipher As IBlockCipher
  overload: Org.BouncyCastle.Crypto.Modes.OcbBlockCipher.GetUnderlyingCipher*
  implements:
  - Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher.GetUnderlyingCipher
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Org.BouncyCastle.Crypto.Modes.OcbBlockCipher.AlgorithmName
  commentId: P:Org.BouncyCastle.Crypto.Modes.OcbBlockCipher.AlgorithmName
  id: AlgorithmName
  parent: Org.BouncyCastle.Crypto.Modes.OcbBlockCipher
  langs:
  - csharp
  - vb
  name: AlgorithmName
  nameWithType: OcbBlockCipher.AlgorithmName
  fullName: Org.BouncyCastle.Crypto.Modes.OcbBlockCipher.AlgorithmName
  type: Property
  source:
    id: AlgorithmName
    path: ''
    startLine: 98160
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Modes
  syntax:
    content: public virtual string AlgorithmName { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Overridable ReadOnly Property AlgorithmName As String
  overload: Org.BouncyCastle.Crypto.Modes.OcbBlockCipher.AlgorithmName*
  implements:
  - Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher.AlgorithmName
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: Org.BouncyCastle.Crypto.Modes.OcbBlockCipher.Init(System.Boolean,Org.BouncyCastle.Crypto.ICipherParameters)
  commentId: M:Org.BouncyCastle.Crypto.Modes.OcbBlockCipher.Init(System.Boolean,Org.BouncyCastle.Crypto.ICipherParameters)
  id: Init(System.Boolean,Org.BouncyCastle.Crypto.ICipherParameters)
  parent: Org.BouncyCastle.Crypto.Modes.OcbBlockCipher
  langs:
  - csharp
  - vb
  name: Init(Boolean, ICipherParameters)
  nameWithType: OcbBlockCipher.Init(Boolean, ICipherParameters)
  fullName: Org.BouncyCastle.Crypto.Modes.OcbBlockCipher.Init(System.Boolean, Org.BouncyCastle.Crypto.ICipherParameters)
  type: Method
  source:
    id: Init
    path: ''
    startLine: 98165
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Modes
  syntax:
    content: public virtual void Init(bool forEncryption, ICipherParameters parameters)
    parameters:
    - id: forEncryption
      type: System.Boolean
    - id: parameters
      type: Org.BouncyCastle.Crypto.ICipherParameters
    content.vb: Public Overridable Sub Init(forEncryption As Boolean, parameters As ICipherParameters)
  overload: Org.BouncyCastle.Crypto.Modes.OcbBlockCipher.Init*
  implements:
  - Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher.Init(System.Boolean,Org.BouncyCastle.Crypto.ICipherParameters)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Org.BouncyCastle.Crypto.Modes.OcbBlockCipher.ProcessNonce(System.Byte[])
  commentId: M:Org.BouncyCastle.Crypto.Modes.OcbBlockCipher.ProcessNonce(System.Byte[])
  id: ProcessNonce(System.Byte[])
  parent: Org.BouncyCastle.Crypto.Modes.OcbBlockCipher
  langs:
  - csharp
  - vb
  name: ProcessNonce(Byte[])
  nameWithType: OcbBlockCipher.ProcessNonce(Byte[])
  fullName: Org.BouncyCastle.Crypto.Modes.OcbBlockCipher.ProcessNonce(System.Byte[])
  type: Method
  source:
    id: ProcessNonce
    path: ''
    startLine: 98277
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Modes
  syntax:
    content: protected virtual int ProcessNonce(byte[] N)
    parameters:
    - id: N
      type: System.Byte[]
    return:
      type: System.Int32
    content.vb: Protected Overridable Function ProcessNonce(N As Byte()) As Integer
  overload: Org.BouncyCastle.Crypto.Modes.OcbBlockCipher.ProcessNonce*
  nameWithType.vb: OcbBlockCipher.ProcessNonce(Byte())
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
  fullName.vb: Org.BouncyCastle.Crypto.Modes.OcbBlockCipher.ProcessNonce(System.Byte())
  name.vb: ProcessNonce(Byte())
- uid: Org.BouncyCastle.Crypto.Modes.OcbBlockCipher.GetBlockSize
  commentId: M:Org.BouncyCastle.Crypto.Modes.OcbBlockCipher.GetBlockSize
  id: GetBlockSize
  parent: Org.BouncyCastle.Crypto.Modes.OcbBlockCipher
  langs:
  - csharp
  - vb
  name: GetBlockSize()
  nameWithType: OcbBlockCipher.GetBlockSize()
  fullName: Org.BouncyCastle.Crypto.Modes.OcbBlockCipher.GetBlockSize()
  type: Method
  source:
    id: GetBlockSize
    path: ''
    startLine: 98305
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Modes
  syntax:
    content: public virtual int GetBlockSize()
    return:
      type: System.Int32
    content.vb: Public Overridable Function GetBlockSize As Integer
  overload: Org.BouncyCastle.Crypto.Modes.OcbBlockCipher.GetBlockSize*
  implements:
  - Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher.GetBlockSize
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Org.BouncyCastle.Crypto.Modes.OcbBlockCipher.GetMac
  commentId: M:Org.BouncyCastle.Crypto.Modes.OcbBlockCipher.GetMac
  id: GetMac
  parent: Org.BouncyCastle.Crypto.Modes.OcbBlockCipher
  langs:
  - csharp
  - vb
  name: GetMac()
  nameWithType: OcbBlockCipher.GetMac()
  fullName: Org.BouncyCastle.Crypto.Modes.OcbBlockCipher.GetMac()
  type: Method
  source:
    id: GetMac
    path: ''
    startLine: 98310
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Modes
  syntax:
    content: public virtual byte[] GetMac()
    return:
      type: System.Byte[]
    content.vb: Public Overridable Function GetMac As Byte()
  overload: Org.BouncyCastle.Crypto.Modes.OcbBlockCipher.GetMac*
  implements:
  - Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher.GetMac
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Org.BouncyCastle.Crypto.Modes.OcbBlockCipher.GetOutputSize(System.Int32)
  commentId: M:Org.BouncyCastle.Crypto.Modes.OcbBlockCipher.GetOutputSize(System.Int32)
  id: GetOutputSize(System.Int32)
  parent: Org.BouncyCastle.Crypto.Modes.OcbBlockCipher
  langs:
  - csharp
  - vb
  name: GetOutputSize(Int32)
  nameWithType: OcbBlockCipher.GetOutputSize(Int32)
  fullName: Org.BouncyCastle.Crypto.Modes.OcbBlockCipher.GetOutputSize(System.Int32)
  type: Method
  source:
    id: GetOutputSize
    path: ''
    startLine: 98315
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Modes
  syntax:
    content: public virtual int GetOutputSize(int len)
    parameters:
    - id: len
      type: System.Int32
    return:
      type: System.Int32
    content.vb: Public Overridable Function GetOutputSize(len As Integer) As Integer
  overload: Org.BouncyCastle.Crypto.Modes.OcbBlockCipher.GetOutputSize*
  implements:
  - Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher.GetOutputSize(System.Int32)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Org.BouncyCastle.Crypto.Modes.OcbBlockCipher.GetUpdateOutputSize(System.Int32)
  commentId: M:Org.BouncyCastle.Crypto.Modes.OcbBlockCipher.GetUpdateOutputSize(System.Int32)
  id: GetUpdateOutputSize(System.Int32)
  parent: Org.BouncyCastle.Crypto.Modes.OcbBlockCipher
  langs:
  - csharp
  - vb
  name: GetUpdateOutputSize(Int32)
  nameWithType: OcbBlockCipher.GetUpdateOutputSize(Int32)
  fullName: Org.BouncyCastle.Crypto.Modes.OcbBlockCipher.GetUpdateOutputSize(System.Int32)
  type: Method
  source:
    id: GetUpdateOutputSize
    path: ''
    startLine: 98325
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Modes
  syntax:
    content: public virtual int GetUpdateOutputSize(int len)
    parameters:
    - id: len
      type: System.Int32
    return:
      type: System.Int32
    content.vb: Public Overridable Function GetUpdateOutputSize(len As Integer) As Integer
  overload: Org.BouncyCastle.Crypto.Modes.OcbBlockCipher.GetUpdateOutputSize*
  implements:
  - Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher.GetUpdateOutputSize(System.Int32)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Org.BouncyCastle.Crypto.Modes.OcbBlockCipher.ProcessAadByte(System.Byte)
  commentId: M:Org.BouncyCastle.Crypto.Modes.OcbBlockCipher.ProcessAadByte(System.Byte)
  id: ProcessAadByte(System.Byte)
  parent: Org.BouncyCastle.Crypto.Modes.OcbBlockCipher
  langs:
  - csharp
  - vb
  name: ProcessAadByte(Byte)
  nameWithType: OcbBlockCipher.ProcessAadByte(Byte)
  fullName: Org.BouncyCastle.Crypto.Modes.OcbBlockCipher.ProcessAadByte(System.Byte)
  type: Method
  source:
    id: ProcessAadByte
    path: ''
    startLine: 98339
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Modes
  syntax:
    content: public virtual void ProcessAadByte(byte input)
    parameters:
    - id: input
      type: System.Byte
    content.vb: Public Overridable Sub ProcessAadByte(input As Byte)
  overload: Org.BouncyCastle.Crypto.Modes.OcbBlockCipher.ProcessAadByte*
  implements:
  - Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher.ProcessAadByte(System.Byte)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Org.BouncyCastle.Crypto.Modes.OcbBlockCipher.ProcessAadBytes(System.Byte[],System.Int32,System.Int32)
  commentId: M:Org.BouncyCastle.Crypto.Modes.OcbBlockCipher.ProcessAadBytes(System.Byte[],System.Int32,System.Int32)
  id: ProcessAadBytes(System.Byte[],System.Int32,System.Int32)
  parent: Org.BouncyCastle.Crypto.Modes.OcbBlockCipher
  langs:
  - csharp
  - vb
  name: ProcessAadBytes(Byte[], Int32, Int32)
  nameWithType: OcbBlockCipher.ProcessAadBytes(Byte[], Int32, Int32)
  fullName: Org.BouncyCastle.Crypto.Modes.OcbBlockCipher.ProcessAadBytes(System.Byte[], System.Int32, System.Int32)
  type: Method
  source:
    id: ProcessAadBytes
    path: ''
    startLine: 98348
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Modes
  syntax:
    content: public virtual void ProcessAadBytes(byte[] input, int off, int len)
    parameters:
    - id: input
      type: System.Byte[]
    - id: off
      type: System.Int32
    - id: len
      type: System.Int32
    content.vb: Public Overridable Sub ProcessAadBytes(input As Byte(), off As Integer, len As Integer)
  overload: Org.BouncyCastle.Crypto.Modes.OcbBlockCipher.ProcessAadBytes*
  implements:
  - Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher.ProcessAadBytes(System.Byte[],System.Int32,System.Int32)
  nameWithType.vb: OcbBlockCipher.ProcessAadBytes(Byte(), Int32, Int32)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Org.BouncyCastle.Crypto.Modes.OcbBlockCipher.ProcessAadBytes(System.Byte(), System.Int32, System.Int32)
  name.vb: ProcessAadBytes(Byte(), Int32, Int32)
- uid: Org.BouncyCastle.Crypto.Modes.OcbBlockCipher.ProcessByte(System.Byte,System.Byte[],System.Int32)
  commentId: M:Org.BouncyCastle.Crypto.Modes.OcbBlockCipher.ProcessByte(System.Byte,System.Byte[],System.Int32)
  id: ProcessByte(System.Byte,System.Byte[],System.Int32)
  parent: Org.BouncyCastle.Crypto.Modes.OcbBlockCipher
  langs:
  - csharp
  - vb
  name: ProcessByte(Byte, Byte[], Int32)
  nameWithType: OcbBlockCipher.ProcessByte(Byte, Byte[], Int32)
  fullName: Org.BouncyCastle.Crypto.Modes.OcbBlockCipher.ProcessByte(System.Byte, System.Byte[], System.Int32)
  type: Method
  source:
    id: ProcessByte
    path: ''
    startLine: 98360
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Modes
  syntax:
    content: public virtual int ProcessByte(byte input, byte[] output, int outOff)
    parameters:
    - id: input
      type: System.Byte
    - id: output
      type: System.Byte[]
    - id: outOff
      type: System.Int32
    return:
      type: System.Int32
    content.vb: Public Overridable Function ProcessByte(input As Byte, output As Byte(), outOff As Integer) As Integer
  overload: Org.BouncyCastle.Crypto.Modes.OcbBlockCipher.ProcessByte*
  implements:
  - Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher.ProcessByte(System.Byte,System.Byte[],System.Int32)
  nameWithType.vb: OcbBlockCipher.ProcessByte(Byte, Byte(), Int32)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Org.BouncyCastle.Crypto.Modes.OcbBlockCipher.ProcessByte(System.Byte, System.Byte(), System.Int32)
  name.vb: ProcessByte(Byte, Byte(), Int32)
- uid: Org.BouncyCastle.Crypto.Modes.OcbBlockCipher.ProcessBytes(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)
  commentId: M:Org.BouncyCastle.Crypto.Modes.OcbBlockCipher.ProcessBytes(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)
  id: ProcessBytes(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)
  parent: Org.BouncyCastle.Crypto.Modes.OcbBlockCipher
  langs:
  - csharp
  - vb
  name: ProcessBytes(Byte[], Int32, Int32, Byte[], Int32)
  nameWithType: OcbBlockCipher.ProcessBytes(Byte[], Int32, Int32, Byte[], Int32)
  fullName: Org.BouncyCastle.Crypto.Modes.OcbBlockCipher.ProcessBytes(System.Byte[], System.Int32, System.Int32, System.Byte[], System.Int32)
  type: Method
  source:
    id: ProcessBytes
    path: ''
    startLine: 98371
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Modes
  syntax:
    content: public virtual int ProcessBytes(byte[] input, int inOff, int len, byte[] output, int outOff)
    parameters:
    - id: input
      type: System.Byte[]
    - id: inOff
      type: System.Int32
    - id: len
      type: System.Int32
    - id: output
      type: System.Byte[]
    - id: outOff
      type: System.Int32
    return:
      type: System.Int32
    content.vb: Public Overridable Function ProcessBytes(input As Byte(), inOff As Integer, len As Integer, output As Byte(), outOff As Integer) As Integer
  overload: Org.BouncyCastle.Crypto.Modes.OcbBlockCipher.ProcessBytes*
  implements:
  - Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher.ProcessBytes(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)
  nameWithType.vb: OcbBlockCipher.ProcessBytes(Byte(), Int32, Int32, Byte(), Int32)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Org.BouncyCastle.Crypto.Modes.OcbBlockCipher.ProcessBytes(System.Byte(), System.Int32, System.Int32, System.Byte(), System.Int32)
  name.vb: ProcessBytes(Byte(), Int32, Int32, Byte(), Int32)
- uid: Org.BouncyCastle.Crypto.Modes.OcbBlockCipher.DoFinal(System.Byte[],System.Int32)
  commentId: M:Org.BouncyCastle.Crypto.Modes.OcbBlockCipher.DoFinal(System.Byte[],System.Int32)
  id: DoFinal(System.Byte[],System.Int32)
  parent: Org.BouncyCastle.Crypto.Modes.OcbBlockCipher
  langs:
  - csharp
  - vb
  name: DoFinal(Byte[], Int32)
  nameWithType: OcbBlockCipher.DoFinal(Byte[], Int32)
  fullName: Org.BouncyCastle.Crypto.Modes.OcbBlockCipher.DoFinal(System.Byte[], System.Int32)
  type: Method
  source:
    id: DoFinal
    path: ''
    startLine: 98388
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Modes
  syntax:
    content: public virtual int DoFinal(byte[] output, int outOff)
    parameters:
    - id: output
      type: System.Byte[]
    - id: outOff
      type: System.Int32
    return:
      type: System.Int32
    content.vb: Public Overridable Function DoFinal(output As Byte(), outOff As Integer) As Integer
  overload: Org.BouncyCastle.Crypto.Modes.OcbBlockCipher.DoFinal*
  implements:
  - Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher.DoFinal(System.Byte[],System.Int32)
  nameWithType.vb: OcbBlockCipher.DoFinal(Byte(), Int32)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Org.BouncyCastle.Crypto.Modes.OcbBlockCipher.DoFinal(System.Byte(), System.Int32)
  name.vb: DoFinal(Byte(), Int32)
- uid: Org.BouncyCastle.Crypto.Modes.OcbBlockCipher.Reset
  commentId: M:Org.BouncyCastle.Crypto.Modes.OcbBlockCipher.Reset
  id: Reset
  parent: Org.BouncyCastle.Crypto.Modes.OcbBlockCipher
  langs:
  - csharp
  - vb
  name: Reset()
  nameWithType: OcbBlockCipher.Reset()
  fullName: Org.BouncyCastle.Crypto.Modes.OcbBlockCipher.Reset()
  type: Method
  source:
    id: Reset
    path: ''
    startLine: 98476
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Modes
  syntax:
    content: public virtual void Reset()
    content.vb: Public Overridable Sub Reset
  overload: Org.BouncyCastle.Crypto.Modes.OcbBlockCipher.Reset*
  implements:
  - Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher.Reset
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Org.BouncyCastle.Crypto.Modes.OcbBlockCipher.Clear(System.Byte[])
  commentId: M:Org.BouncyCastle.Crypto.Modes.OcbBlockCipher.Clear(System.Byte[])
  id: Clear(System.Byte[])
  parent: Org.BouncyCastle.Crypto.Modes.OcbBlockCipher
  langs:
  - csharp
  - vb
  name: Clear(Byte[])
  nameWithType: OcbBlockCipher.Clear(Byte[])
  fullName: Org.BouncyCastle.Crypto.Modes.OcbBlockCipher.Clear(System.Byte[])
  type: Method
  source:
    id: Clear
    path: ''
    startLine: 98481
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Modes
  syntax:
    content: protected virtual void Clear(byte[] bs)
    parameters:
    - id: bs
      type: System.Byte[]
    content.vb: Protected Overridable Sub Clear(bs As Byte())
  overload: Org.BouncyCastle.Crypto.Modes.OcbBlockCipher.Clear*
  nameWithType.vb: OcbBlockCipher.Clear(Byte())
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
  fullName.vb: Org.BouncyCastle.Crypto.Modes.OcbBlockCipher.Clear(System.Byte())
  name.vb: Clear(Byte())
- uid: Org.BouncyCastle.Crypto.Modes.OcbBlockCipher.GetLSub(System.Int32)
  commentId: M:Org.BouncyCastle.Crypto.Modes.OcbBlockCipher.GetLSub(System.Int32)
  id: GetLSub(System.Int32)
  parent: Org.BouncyCastle.Crypto.Modes.OcbBlockCipher
  langs:
  - csharp
  - vb
  name: GetLSub(Int32)
  nameWithType: OcbBlockCipher.GetLSub(Int32)
  fullName: Org.BouncyCastle.Crypto.Modes.OcbBlockCipher.GetLSub(System.Int32)
  type: Method
  source:
    id: GetLSub
    path: ''
    startLine: 98489
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Modes
  syntax:
    content: protected virtual byte[] GetLSub(int n)
    parameters:
    - id: n
      type: System.Int32
    return:
      type: System.Byte[]
    content.vb: Protected Overridable Function GetLSub(n As Integer) As Byte()
  overload: Org.BouncyCastle.Crypto.Modes.OcbBlockCipher.GetLSub*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: Org.BouncyCastle.Crypto.Modes.OcbBlockCipher.ProcessHashBlock
  commentId: M:Org.BouncyCastle.Crypto.Modes.OcbBlockCipher.ProcessHashBlock
  id: ProcessHashBlock
  parent: Org.BouncyCastle.Crypto.Modes.OcbBlockCipher
  langs:
  - csharp
  - vb
  name: ProcessHashBlock()
  nameWithType: OcbBlockCipher.ProcessHashBlock()
  fullName: Org.BouncyCastle.Crypto.Modes.OcbBlockCipher.ProcessHashBlock()
  type: Method
  source:
    id: ProcessHashBlock
    path: ''
    startLine: 98498
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Modes
  syntax:
    content: protected virtual void ProcessHashBlock()
    content.vb: Protected Overridable Sub ProcessHashBlock
  overload: Org.BouncyCastle.Crypto.Modes.OcbBlockCipher.ProcessHashBlock*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: Org.BouncyCastle.Crypto.Modes.OcbBlockCipher.ProcessMainBlock(System.Byte[],System.Int32)
  commentId: M:Org.BouncyCastle.Crypto.Modes.OcbBlockCipher.ProcessMainBlock(System.Byte[],System.Int32)
  id: ProcessMainBlock(System.Byte[],System.Int32)
  parent: Org.BouncyCastle.Crypto.Modes.OcbBlockCipher
  langs:
  - csharp
  - vb
  name: ProcessMainBlock(Byte[], Int32)
  nameWithType: OcbBlockCipher.ProcessMainBlock(Byte[], Int32)
  fullName: Org.BouncyCastle.Crypto.Modes.OcbBlockCipher.ProcessMainBlock(System.Byte[], System.Int32)
  type: Method
  source:
    id: ProcessMainBlock
    path: ''
    startLine: 98507
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Modes
  syntax:
    content: protected virtual void ProcessMainBlock(byte[] output, int outOff)
    parameters:
    - id: output
      type: System.Byte[]
    - id: outOff
      type: System.Int32
    content.vb: Protected Overridable Sub ProcessMainBlock(output As Byte(), outOff As Integer)
  overload: Org.BouncyCastle.Crypto.Modes.OcbBlockCipher.ProcessMainBlock*
  nameWithType.vb: OcbBlockCipher.ProcessMainBlock(Byte(), Int32)
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
  fullName.vb: Org.BouncyCastle.Crypto.Modes.OcbBlockCipher.ProcessMainBlock(System.Byte(), System.Int32)
  name.vb: ProcessMainBlock(Byte(), Int32)
- uid: Org.BouncyCastle.Crypto.Modes.OcbBlockCipher.Reset(System.Boolean)
  commentId: M:Org.BouncyCastle.Crypto.Modes.OcbBlockCipher.Reset(System.Boolean)
  id: Reset(System.Boolean)
  parent: Org.BouncyCastle.Crypto.Modes.OcbBlockCipher
  langs:
  - csharp
  - vb
  name: Reset(Boolean)
  nameWithType: OcbBlockCipher.Reset(Boolean)
  fullName: Org.BouncyCastle.Crypto.Modes.OcbBlockCipher.Reset(System.Boolean)
  type: Method
  source:
    id: Reset
    path: ''
    startLine: 98537
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Modes
  syntax:
    content: protected virtual void Reset(bool clearMac)
    parameters:
    - id: clearMac
      type: System.Boolean
    content.vb: Protected Overridable Sub Reset(clearMac As Boolean)
  overload: Org.BouncyCastle.Crypto.Modes.OcbBlockCipher.Reset*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: Org.BouncyCastle.Crypto.Modes.OcbBlockCipher.UpdateHASH(System.Byte[])
  commentId: M:Org.BouncyCastle.Crypto.Modes.OcbBlockCipher.UpdateHASH(System.Byte[])
  id: UpdateHASH(System.Byte[])
  parent: Org.BouncyCastle.Crypto.Modes.OcbBlockCipher
  langs:
  - csharp
  - vb
  name: UpdateHASH(Byte[])
  nameWithType: OcbBlockCipher.UpdateHASH(Byte[])
  fullName: Org.BouncyCastle.Crypto.Modes.OcbBlockCipher.UpdateHASH(System.Byte[])
  type: Method
  source:
    id: UpdateHASH
    path: ''
    startLine: 98567
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Modes
  syntax:
    content: protected virtual void UpdateHASH(byte[] LSub)
    parameters:
    - id: LSub
      type: System.Byte[]
    content.vb: Protected Overridable Sub UpdateHASH(LSub As Byte())
  overload: Org.BouncyCastle.Crypto.Modes.OcbBlockCipher.UpdateHASH*
  nameWithType.vb: OcbBlockCipher.UpdateHASH(Byte())
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
  fullName.vb: Org.BouncyCastle.Crypto.Modes.OcbBlockCipher.UpdateHASH(System.Byte())
  name.vb: UpdateHASH(Byte())
- uid: Org.BouncyCastle.Crypto.Modes.OcbBlockCipher.OCB_double(System.Byte[])
  commentId: M:Org.BouncyCastle.Crypto.Modes.OcbBlockCipher.OCB_double(System.Byte[])
  id: OCB_double(System.Byte[])
  parent: Org.BouncyCastle.Crypto.Modes.OcbBlockCipher
  langs:
  - csharp
  - vb
  name: OCB_double(Byte[])
  nameWithType: OcbBlockCipher.OCB_double(Byte[])
  fullName: Org.BouncyCastle.Crypto.Modes.OcbBlockCipher.OCB_double(System.Byte[])
  type: Method
  source:
    id: OCB_double
    path: ''
    startLine: 98575
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Modes
  syntax:
    content: protected static byte[] OCB_double(byte[] block)
    parameters:
    - id: block
      type: System.Byte[]
    return:
      type: System.Byte[]
    content.vb: Protected Shared Function OCB_double(block As Byte()) As Byte()
  overload: Org.BouncyCastle.Crypto.Modes.OcbBlockCipher.OCB_double*
  nameWithType.vb: OcbBlockCipher.OCB_double(Byte())
  modifiers.csharp:
  - protected
  - static
  modifiers.vb:
  - Protected
  - Shared
  fullName.vb: Org.BouncyCastle.Crypto.Modes.OcbBlockCipher.OCB_double(System.Byte())
  name.vb: OCB_double(Byte())
- uid: Org.BouncyCastle.Crypto.Modes.OcbBlockCipher.OCB_extend(System.Byte[],System.Int32)
  commentId: M:Org.BouncyCastle.Crypto.Modes.OcbBlockCipher.OCB_extend(System.Byte[],System.Int32)
  id: OCB_extend(System.Byte[],System.Int32)
  parent: Org.BouncyCastle.Crypto.Modes.OcbBlockCipher
  langs:
  - csharp
  - vb
  name: OCB_extend(Byte[], Int32)
  nameWithType: OcbBlockCipher.OCB_extend(Byte[], Int32)
  fullName: Org.BouncyCastle.Crypto.Modes.OcbBlockCipher.OCB_extend(System.Byte[], System.Int32)
  type: Method
  source:
    id: OCB_extend
    path: ''
    startLine: 98588
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Modes
  syntax:
    content: protected static void OCB_extend(byte[] block, int pos)
    parameters:
    - id: block
      type: System.Byte[]
    - id: pos
      type: System.Int32
    content.vb: Protected Shared Sub OCB_extend(block As Byte(), pos As Integer)
  overload: Org.BouncyCastle.Crypto.Modes.OcbBlockCipher.OCB_extend*
  nameWithType.vb: OcbBlockCipher.OCB_extend(Byte(), Int32)
  modifiers.csharp:
  - protected
  - static
  modifiers.vb:
  - Protected
  - Shared
  fullName.vb: Org.BouncyCastle.Crypto.Modes.OcbBlockCipher.OCB_extend(System.Byte(), System.Int32)
  name.vb: OCB_extend(Byte(), Int32)
- uid: Org.BouncyCastle.Crypto.Modes.OcbBlockCipher.OCB_ntz(System.Int64)
  commentId: M:Org.BouncyCastle.Crypto.Modes.OcbBlockCipher.OCB_ntz(System.Int64)
  id: OCB_ntz(System.Int64)
  parent: Org.BouncyCastle.Crypto.Modes.OcbBlockCipher
  langs:
  - csharp
  - vb
  name: OCB_ntz(Int64)
  nameWithType: OcbBlockCipher.OCB_ntz(Int64)
  fullName: Org.BouncyCastle.Crypto.Modes.OcbBlockCipher.OCB_ntz(System.Int64)
  type: Method
  source:
    id: OCB_ntz
    path: ''
    startLine: 98597
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Modes
  syntax:
    content: protected static int OCB_ntz(long x)
    parameters:
    - id: x
      type: System.Int64
    return:
      type: System.Int32
    content.vb: Protected Shared Function OCB_ntz(x As Long) As Integer
  overload: Org.BouncyCastle.Crypto.Modes.OcbBlockCipher.OCB_ntz*
  modifiers.csharp:
  - protected
  - static
  modifiers.vb:
  - Protected
  - Shared
- uid: Org.BouncyCastle.Crypto.Modes.OcbBlockCipher.ShiftLeft(System.Byte[],System.Byte[])
  commentId: M:Org.BouncyCastle.Crypto.Modes.OcbBlockCipher.ShiftLeft(System.Byte[],System.Byte[])
  id: ShiftLeft(System.Byte[],System.Byte[])
  parent: Org.BouncyCastle.Crypto.Modes.OcbBlockCipher
  langs:
  - csharp
  - vb
  name: ShiftLeft(Byte[], Byte[])
  nameWithType: OcbBlockCipher.ShiftLeft(Byte[], Byte[])
  fullName: Org.BouncyCastle.Crypto.Modes.OcbBlockCipher.ShiftLeft(System.Byte[], System.Byte[])
  type: Method
  source:
    id: ShiftLeft
    path: ''
    startLine: 98614
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Modes
  syntax:
    content: protected static int ShiftLeft(byte[] block, byte[] output)
    parameters:
    - id: block
      type: System.Byte[]
    - id: output
      type: System.Byte[]
    return:
      type: System.Int32
    content.vb: Protected Shared Function ShiftLeft(block As Byte(), output As Byte()) As Integer
  overload: Org.BouncyCastle.Crypto.Modes.OcbBlockCipher.ShiftLeft*
  nameWithType.vb: OcbBlockCipher.ShiftLeft(Byte(), Byte())
  modifiers.csharp:
  - protected
  - static
  modifiers.vb:
  - Protected
  - Shared
  fullName.vb: Org.BouncyCastle.Crypto.Modes.OcbBlockCipher.ShiftLeft(System.Byte(), System.Byte())
  name.vb: ShiftLeft(Byte(), Byte())
- uid: Org.BouncyCastle.Crypto.Modes.OcbBlockCipher.Xor(System.Byte[],System.Byte[])
  commentId: M:Org.BouncyCastle.Crypto.Modes.OcbBlockCipher.Xor(System.Byte[],System.Byte[])
  id: Xor(System.Byte[],System.Byte[])
  parent: Org.BouncyCastle.Crypto.Modes.OcbBlockCipher
  langs:
  - csharp
  - vb
  name: Xor(Byte[], Byte[])
  nameWithType: OcbBlockCipher.Xor(Byte[], Byte[])
  fullName: Org.BouncyCastle.Crypto.Modes.OcbBlockCipher.Xor(System.Byte[], System.Byte[])
  type: Method
  source:
    id: Xor
    path: ''
    startLine: 98627
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Modes
  syntax:
    content: protected static void Xor(byte[] block, byte[] val)
    parameters:
    - id: block
      type: System.Byte[]
    - id: val
      type: System.Byte[]
    content.vb: Protected Shared Sub Xor(block As Byte(), val As Byte())
  overload: Org.BouncyCastle.Crypto.Modes.OcbBlockCipher.Xor*
  nameWithType.vb: OcbBlockCipher.Xor(Byte(), Byte())
  modifiers.csharp:
  - protected
  - static
  modifiers.vb:
  - Protected
  - Shared
  fullName.vb: Org.BouncyCastle.Crypto.Modes.OcbBlockCipher.Xor(System.Byte(), System.Byte())
  name.vb: Xor(Byte(), Byte())
references:
- uid: Org.BouncyCastle.Crypto.Modes
  commentId: N:Org.BouncyCastle.Crypto.Modes
  name: Org.BouncyCastle.Crypto.Modes
  nameWithType: Org.BouncyCastle.Crypto.Modes
  fullName: Org.BouncyCastle.Crypto.Modes
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher
  commentId: T:Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher
  parent: Org.BouncyCastle.Crypto.Modes
  name: IAeadBlockCipher
  nameWithType: IAeadBlockCipher
  fullName: Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Org.BouncyCastle.Crypto.Modes.OcbBlockCipher.#ctor*
  commentId: Overload:Org.BouncyCastle.Crypto.Modes.OcbBlockCipher.#ctor
  name: OcbBlockCipher
  nameWithType: OcbBlockCipher.OcbBlockCipher
  fullName: Org.BouncyCastle.Crypto.Modes.OcbBlockCipher.OcbBlockCipher
- uid: Org.BouncyCastle.Crypto.IBlockCipher
  commentId: T:Org.BouncyCastle.Crypto.IBlockCipher
  parent: Org.BouncyCastle.Crypto
  name: IBlockCipher
  nameWithType: IBlockCipher
  fullName: Org.BouncyCastle.Crypto.IBlockCipher
- uid: Org.BouncyCastle.Crypto
  commentId: N:Org.BouncyCastle.Crypto
  name: Org.BouncyCastle.Crypto
  nameWithType: Org.BouncyCastle.Crypto
  fullName: Org.BouncyCastle.Crypto
- uid: Org.BouncyCastle.Crypto.Modes.OcbBlockCipher.GetUnderlyingCipher*
  commentId: Overload:Org.BouncyCastle.Crypto.Modes.OcbBlockCipher.GetUnderlyingCipher
  name: GetUnderlyingCipher
  nameWithType: OcbBlockCipher.GetUnderlyingCipher
  fullName: Org.BouncyCastle.Crypto.Modes.OcbBlockCipher.GetUnderlyingCipher
- uid: Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher.GetUnderlyingCipher
  commentId: M:Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher.GetUnderlyingCipher
  parent: Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher
  name: GetUnderlyingCipher()
  nameWithType: IAeadBlockCipher.GetUnderlyingCipher()
  fullName: Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher.GetUnderlyingCipher()
  spec.csharp:
  - uid: Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher.GetUnderlyingCipher
    name: GetUnderlyingCipher
    nameWithType: IAeadBlockCipher.GetUnderlyingCipher
    fullName: Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher.GetUnderlyingCipher
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher.GetUnderlyingCipher
    name: GetUnderlyingCipher
    nameWithType: IAeadBlockCipher.GetUnderlyingCipher
    fullName: Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher.GetUnderlyingCipher
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Org.BouncyCastle.Crypto.Modes.OcbBlockCipher.AlgorithmName*
  commentId: Overload:Org.BouncyCastle.Crypto.Modes.OcbBlockCipher.AlgorithmName
  name: AlgorithmName
  nameWithType: OcbBlockCipher.AlgorithmName
  fullName: Org.BouncyCastle.Crypto.Modes.OcbBlockCipher.AlgorithmName
- uid: Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher.AlgorithmName
  commentId: P:Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher.AlgorithmName
  parent: Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher
  name: AlgorithmName
  nameWithType: IAeadBlockCipher.AlgorithmName
  fullName: Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher.AlgorithmName
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Org.BouncyCastle.Crypto.Modes.OcbBlockCipher.Init*
  commentId: Overload:Org.BouncyCastle.Crypto.Modes.OcbBlockCipher.Init
  name: Init
  nameWithType: OcbBlockCipher.Init
  fullName: Org.BouncyCastle.Crypto.Modes.OcbBlockCipher.Init
- uid: Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher.Init(System.Boolean,Org.BouncyCastle.Crypto.ICipherParameters)
  commentId: M:Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher.Init(System.Boolean,Org.BouncyCastle.Crypto.ICipherParameters)
  parent: Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher
  isExternal: true
  name: Init(Boolean, ICipherParameters)
  nameWithType: IAeadBlockCipher.Init(Boolean, ICipherParameters)
  fullName: Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher.Init(System.Boolean, Org.BouncyCastle.Crypto.ICipherParameters)
  spec.csharp:
  - uid: Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher.Init(System.Boolean,Org.BouncyCastle.Crypto.ICipherParameters)
    name: Init
    nameWithType: IAeadBlockCipher.Init
    fullName: Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher.Init
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Org.BouncyCastle.Crypto.ICipherParameters
    name: ICipherParameters
    nameWithType: ICipherParameters
    fullName: Org.BouncyCastle.Crypto.ICipherParameters
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher.Init(System.Boolean,Org.BouncyCastle.Crypto.ICipherParameters)
    name: Init
    nameWithType: IAeadBlockCipher.Init
    fullName: Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher.Init
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Org.BouncyCastle.Crypto.ICipherParameters
    name: ICipherParameters
    nameWithType: ICipherParameters
    fullName: Org.BouncyCastle.Crypto.ICipherParameters
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Org.BouncyCastle.Crypto.ICipherParameters
  commentId: T:Org.BouncyCastle.Crypto.ICipherParameters
  parent: Org.BouncyCastle.Crypto
  name: ICipherParameters
  nameWithType: ICipherParameters
  fullName: Org.BouncyCastle.Crypto.ICipherParameters
- uid: Org.BouncyCastle.Crypto.Modes.OcbBlockCipher.ProcessNonce*
  commentId: Overload:Org.BouncyCastle.Crypto.Modes.OcbBlockCipher.ProcessNonce
  name: ProcessNonce
  nameWithType: OcbBlockCipher.ProcessNonce
  fullName: Org.BouncyCastle.Crypto.Modes.OcbBlockCipher.ProcessNonce
- uid: System.Byte[]
  isExternal: true
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullName.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Org.BouncyCastle.Crypto.Modes.OcbBlockCipher.GetBlockSize*
  commentId: Overload:Org.BouncyCastle.Crypto.Modes.OcbBlockCipher.GetBlockSize
  name: GetBlockSize
  nameWithType: OcbBlockCipher.GetBlockSize
  fullName: Org.BouncyCastle.Crypto.Modes.OcbBlockCipher.GetBlockSize
- uid: Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher.GetBlockSize
  commentId: M:Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher.GetBlockSize
  parent: Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher
  name: GetBlockSize()
  nameWithType: IAeadBlockCipher.GetBlockSize()
  fullName: Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher.GetBlockSize()
  spec.csharp:
  - uid: Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher.GetBlockSize
    name: GetBlockSize
    nameWithType: IAeadBlockCipher.GetBlockSize
    fullName: Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher.GetBlockSize
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher.GetBlockSize
    name: GetBlockSize
    nameWithType: IAeadBlockCipher.GetBlockSize
    fullName: Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher.GetBlockSize
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Org.BouncyCastle.Crypto.Modes.OcbBlockCipher.GetMac*
  commentId: Overload:Org.BouncyCastle.Crypto.Modes.OcbBlockCipher.GetMac
  name: GetMac
  nameWithType: OcbBlockCipher.GetMac
  fullName: Org.BouncyCastle.Crypto.Modes.OcbBlockCipher.GetMac
- uid: Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher.GetMac
  commentId: M:Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher.GetMac
  parent: Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher
  name: GetMac()
  nameWithType: IAeadBlockCipher.GetMac()
  fullName: Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher.GetMac()
  spec.csharp:
  - uid: Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher.GetMac
    name: GetMac
    nameWithType: IAeadBlockCipher.GetMac
    fullName: Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher.GetMac
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher.GetMac
    name: GetMac
    nameWithType: IAeadBlockCipher.GetMac
    fullName: Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher.GetMac
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Org.BouncyCastle.Crypto.Modes.OcbBlockCipher.GetOutputSize*
  commentId: Overload:Org.BouncyCastle.Crypto.Modes.OcbBlockCipher.GetOutputSize
  name: GetOutputSize
  nameWithType: OcbBlockCipher.GetOutputSize
  fullName: Org.BouncyCastle.Crypto.Modes.OcbBlockCipher.GetOutputSize
- uid: Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher.GetOutputSize(System.Int32)
  commentId: M:Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher.GetOutputSize(System.Int32)
  parent: Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher
  isExternal: true
  name: GetOutputSize(Int32)
  nameWithType: IAeadBlockCipher.GetOutputSize(Int32)
  fullName: Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher.GetOutputSize(System.Int32)
  spec.csharp:
  - uid: Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher.GetOutputSize(System.Int32)
    name: GetOutputSize
    nameWithType: IAeadBlockCipher.GetOutputSize
    fullName: Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher.GetOutputSize
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher.GetOutputSize(System.Int32)
    name: GetOutputSize
    nameWithType: IAeadBlockCipher.GetOutputSize
    fullName: Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher.GetOutputSize
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Org.BouncyCastle.Crypto.Modes.OcbBlockCipher.GetUpdateOutputSize*
  commentId: Overload:Org.BouncyCastle.Crypto.Modes.OcbBlockCipher.GetUpdateOutputSize
  name: GetUpdateOutputSize
  nameWithType: OcbBlockCipher.GetUpdateOutputSize
  fullName: Org.BouncyCastle.Crypto.Modes.OcbBlockCipher.GetUpdateOutputSize
- uid: Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher.GetUpdateOutputSize(System.Int32)
  commentId: M:Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher.GetUpdateOutputSize(System.Int32)
  parent: Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher
  isExternal: true
  name: GetUpdateOutputSize(Int32)
  nameWithType: IAeadBlockCipher.GetUpdateOutputSize(Int32)
  fullName: Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher.GetUpdateOutputSize(System.Int32)
  spec.csharp:
  - uid: Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher.GetUpdateOutputSize(System.Int32)
    name: GetUpdateOutputSize
    nameWithType: IAeadBlockCipher.GetUpdateOutputSize
    fullName: Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher.GetUpdateOutputSize
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher.GetUpdateOutputSize(System.Int32)
    name: GetUpdateOutputSize
    nameWithType: IAeadBlockCipher.GetUpdateOutputSize
    fullName: Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher.GetUpdateOutputSize
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Org.BouncyCastle.Crypto.Modes.OcbBlockCipher.ProcessAadByte*
  commentId: Overload:Org.BouncyCastle.Crypto.Modes.OcbBlockCipher.ProcessAadByte
  name: ProcessAadByte
  nameWithType: OcbBlockCipher.ProcessAadByte
  fullName: Org.BouncyCastle.Crypto.Modes.OcbBlockCipher.ProcessAadByte
- uid: Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher.ProcessAadByte(System.Byte)
  commentId: M:Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher.ProcessAadByte(System.Byte)
  parent: Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher
  isExternal: true
  name: ProcessAadByte(Byte)
  nameWithType: IAeadBlockCipher.ProcessAadByte(Byte)
  fullName: Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher.ProcessAadByte(System.Byte)
  spec.csharp:
  - uid: Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher.ProcessAadByte(System.Byte)
    name: ProcessAadByte
    nameWithType: IAeadBlockCipher.ProcessAadByte
    fullName: Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher.ProcessAadByte
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher.ProcessAadByte(System.Byte)
    name: ProcessAadByte
    nameWithType: IAeadBlockCipher.ProcessAadByte
    fullName: Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher.ProcessAadByte
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Byte
  commentId: T:System.Byte
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte
- uid: Org.BouncyCastle.Crypto.Modes.OcbBlockCipher.ProcessAadBytes*
  commentId: Overload:Org.BouncyCastle.Crypto.Modes.OcbBlockCipher.ProcessAadBytes
  name: ProcessAadBytes
  nameWithType: OcbBlockCipher.ProcessAadBytes
  fullName: Org.BouncyCastle.Crypto.Modes.OcbBlockCipher.ProcessAadBytes
- uid: Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher.ProcessAadBytes(System.Byte[],System.Int32,System.Int32)
  commentId: M:Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher.ProcessAadBytes(System.Byte[],System.Int32,System.Int32)
  parent: Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher
  isExternal: true
  name: ProcessAadBytes(Byte[], Int32, Int32)
  nameWithType: IAeadBlockCipher.ProcessAadBytes(Byte[], Int32, Int32)
  fullName: Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher.ProcessAadBytes(System.Byte[], System.Int32, System.Int32)
  nameWithType.vb: IAeadBlockCipher.ProcessAadBytes(Byte(), Int32, Int32)
  fullName.vb: Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher.ProcessAadBytes(System.Byte(), System.Int32, System.Int32)
  name.vb: ProcessAadBytes(Byte(), Int32, Int32)
  spec.csharp:
  - uid: Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher.ProcessAadBytes(System.Byte[],System.Int32,System.Int32)
    name: ProcessAadBytes
    nameWithType: IAeadBlockCipher.ProcessAadBytes
    fullName: Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher.ProcessAadBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher.ProcessAadBytes(System.Byte[],System.Int32,System.Int32)
    name: ProcessAadBytes
    nameWithType: IAeadBlockCipher.ProcessAadBytes
    fullName: Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher.ProcessAadBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Org.BouncyCastle.Crypto.Modes.OcbBlockCipher.ProcessByte*
  commentId: Overload:Org.BouncyCastle.Crypto.Modes.OcbBlockCipher.ProcessByte
  name: ProcessByte
  nameWithType: OcbBlockCipher.ProcessByte
  fullName: Org.BouncyCastle.Crypto.Modes.OcbBlockCipher.ProcessByte
- uid: Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher.ProcessByte(System.Byte,System.Byte[],System.Int32)
  commentId: M:Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher.ProcessByte(System.Byte,System.Byte[],System.Int32)
  parent: Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher
  isExternal: true
  name: ProcessByte(Byte, Byte[], Int32)
  nameWithType: IAeadBlockCipher.ProcessByte(Byte, Byte[], Int32)
  fullName: Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher.ProcessByte(System.Byte, System.Byte[], System.Int32)
  nameWithType.vb: IAeadBlockCipher.ProcessByte(Byte, Byte(), Int32)
  fullName.vb: Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher.ProcessByte(System.Byte, System.Byte(), System.Int32)
  name.vb: ProcessByte(Byte, Byte(), Int32)
  spec.csharp:
  - uid: Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher.ProcessByte(System.Byte,System.Byte[],System.Int32)
    name: ProcessByte
    nameWithType: IAeadBlockCipher.ProcessByte
    fullName: Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher.ProcessByte
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher.ProcessByte(System.Byte,System.Byte[],System.Int32)
    name: ProcessByte
    nameWithType: IAeadBlockCipher.ProcessByte
    fullName: Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher.ProcessByte
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Org.BouncyCastle.Crypto.Modes.OcbBlockCipher.ProcessBytes*
  commentId: Overload:Org.BouncyCastle.Crypto.Modes.OcbBlockCipher.ProcessBytes
  name: ProcessBytes
  nameWithType: OcbBlockCipher.ProcessBytes
  fullName: Org.BouncyCastle.Crypto.Modes.OcbBlockCipher.ProcessBytes
- uid: Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher.ProcessBytes(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)
  commentId: M:Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher.ProcessBytes(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)
  parent: Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher
  isExternal: true
  name: ProcessBytes(Byte[], Int32, Int32, Byte[], Int32)
  nameWithType: IAeadBlockCipher.ProcessBytes(Byte[], Int32, Int32, Byte[], Int32)
  fullName: Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher.ProcessBytes(System.Byte[], System.Int32, System.Int32, System.Byte[], System.Int32)
  nameWithType.vb: IAeadBlockCipher.ProcessBytes(Byte(), Int32, Int32, Byte(), Int32)
  fullName.vb: Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher.ProcessBytes(System.Byte(), System.Int32, System.Int32, System.Byte(), System.Int32)
  name.vb: ProcessBytes(Byte(), Int32, Int32, Byte(), Int32)
  spec.csharp:
  - uid: Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher.ProcessBytes(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)
    name: ProcessBytes
    nameWithType: IAeadBlockCipher.ProcessBytes
    fullName: Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher.ProcessBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher.ProcessBytes(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)
    name: ProcessBytes
    nameWithType: IAeadBlockCipher.ProcessBytes
    fullName: Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher.ProcessBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Org.BouncyCastle.Crypto.Modes.OcbBlockCipher.DoFinal*
  commentId: Overload:Org.BouncyCastle.Crypto.Modes.OcbBlockCipher.DoFinal
  name: DoFinal
  nameWithType: OcbBlockCipher.DoFinal
  fullName: Org.BouncyCastle.Crypto.Modes.OcbBlockCipher.DoFinal
- uid: Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher.DoFinal(System.Byte[],System.Int32)
  commentId: M:Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher.DoFinal(System.Byte[],System.Int32)
  parent: Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher
  isExternal: true
  name: DoFinal(Byte[], Int32)
  nameWithType: IAeadBlockCipher.DoFinal(Byte[], Int32)
  fullName: Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher.DoFinal(System.Byte[], System.Int32)
  nameWithType.vb: IAeadBlockCipher.DoFinal(Byte(), Int32)
  fullName.vb: Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher.DoFinal(System.Byte(), System.Int32)
  name.vb: DoFinal(Byte(), Int32)
  spec.csharp:
  - uid: Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher.DoFinal(System.Byte[],System.Int32)
    name: DoFinal
    nameWithType: IAeadBlockCipher.DoFinal
    fullName: Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher.DoFinal
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher.DoFinal(System.Byte[],System.Int32)
    name: DoFinal
    nameWithType: IAeadBlockCipher.DoFinal
    fullName: Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher.DoFinal
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Org.BouncyCastle.Crypto.Modes.OcbBlockCipher.Reset*
  commentId: Overload:Org.BouncyCastle.Crypto.Modes.OcbBlockCipher.Reset
  name: Reset
  nameWithType: OcbBlockCipher.Reset
  fullName: Org.BouncyCastle.Crypto.Modes.OcbBlockCipher.Reset
- uid: Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher.Reset
  commentId: M:Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher.Reset
  parent: Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher
  name: Reset()
  nameWithType: IAeadBlockCipher.Reset()
  fullName: Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher.Reset()
  spec.csharp:
  - uid: Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher.Reset
    name: Reset
    nameWithType: IAeadBlockCipher.Reset
    fullName: Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher.Reset
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher.Reset
    name: Reset
    nameWithType: IAeadBlockCipher.Reset
    fullName: Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher.Reset
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Org.BouncyCastle.Crypto.Modes.OcbBlockCipher.Clear*
  commentId: Overload:Org.BouncyCastle.Crypto.Modes.OcbBlockCipher.Clear
  name: Clear
  nameWithType: OcbBlockCipher.Clear
  fullName: Org.BouncyCastle.Crypto.Modes.OcbBlockCipher.Clear
- uid: Org.BouncyCastle.Crypto.Modes.OcbBlockCipher.GetLSub*
  commentId: Overload:Org.BouncyCastle.Crypto.Modes.OcbBlockCipher.GetLSub
  name: GetLSub
  nameWithType: OcbBlockCipher.GetLSub
  fullName: Org.BouncyCastle.Crypto.Modes.OcbBlockCipher.GetLSub
- uid: Org.BouncyCastle.Crypto.Modes.OcbBlockCipher.ProcessHashBlock*
  commentId: Overload:Org.BouncyCastle.Crypto.Modes.OcbBlockCipher.ProcessHashBlock
  name: ProcessHashBlock
  nameWithType: OcbBlockCipher.ProcessHashBlock
  fullName: Org.BouncyCastle.Crypto.Modes.OcbBlockCipher.ProcessHashBlock
- uid: Org.BouncyCastle.Crypto.Modes.OcbBlockCipher.ProcessMainBlock*
  commentId: Overload:Org.BouncyCastle.Crypto.Modes.OcbBlockCipher.ProcessMainBlock
  name: ProcessMainBlock
  nameWithType: OcbBlockCipher.ProcessMainBlock
  fullName: Org.BouncyCastle.Crypto.Modes.OcbBlockCipher.ProcessMainBlock
- uid: Org.BouncyCastle.Crypto.Modes.OcbBlockCipher.UpdateHASH*
  commentId: Overload:Org.BouncyCastle.Crypto.Modes.OcbBlockCipher.UpdateHASH
  name: UpdateHASH
  nameWithType: OcbBlockCipher.UpdateHASH
  fullName: Org.BouncyCastle.Crypto.Modes.OcbBlockCipher.UpdateHASH
- uid: Org.BouncyCastle.Crypto.Modes.OcbBlockCipher.OCB_double*
  commentId: Overload:Org.BouncyCastle.Crypto.Modes.OcbBlockCipher.OCB_double
  name: OCB_double
  nameWithType: OcbBlockCipher.OCB_double
  fullName: Org.BouncyCastle.Crypto.Modes.OcbBlockCipher.OCB_double
- uid: Org.BouncyCastle.Crypto.Modes.OcbBlockCipher.OCB_extend*
  commentId: Overload:Org.BouncyCastle.Crypto.Modes.OcbBlockCipher.OCB_extend
  name: OCB_extend
  nameWithType: OcbBlockCipher.OCB_extend
  fullName: Org.BouncyCastle.Crypto.Modes.OcbBlockCipher.OCB_extend
- uid: Org.BouncyCastle.Crypto.Modes.OcbBlockCipher.OCB_ntz*
  commentId: Overload:Org.BouncyCastle.Crypto.Modes.OcbBlockCipher.OCB_ntz
  name: OCB_ntz
  nameWithType: OcbBlockCipher.OCB_ntz
  fullName: Org.BouncyCastle.Crypto.Modes.OcbBlockCipher.OCB_ntz
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: Org.BouncyCastle.Crypto.Modes.OcbBlockCipher.ShiftLeft*
  commentId: Overload:Org.BouncyCastle.Crypto.Modes.OcbBlockCipher.ShiftLeft
  name: ShiftLeft
  nameWithType: OcbBlockCipher.ShiftLeft
  fullName: Org.BouncyCastle.Crypto.Modes.OcbBlockCipher.ShiftLeft
- uid: Org.BouncyCastle.Crypto.Modes.OcbBlockCipher.Xor*
  commentId: Overload:Org.BouncyCastle.Crypto.Modes.OcbBlockCipher.Xor
  name: Xor
  nameWithType: OcbBlockCipher.Xor
  fullName: Org.BouncyCastle.Crypto.Modes.OcbBlockCipher.Xor
