### YamlMime:ManagedReference
items:
- uid: Org.BouncyCastle.Math.EC.ECPoint
  commentId: T:Org.BouncyCastle.Math.EC.ECPoint
  id: ECPoint
  parent: Org.BouncyCastle.Math.EC
  children:
  - Org.BouncyCastle.Math.EC.ECPoint.#ctor(Org.BouncyCastle.Math.EC.ECCurve,Org.BouncyCastle.Math.EC.ECFieldElement,Org.BouncyCastle.Math.EC.ECFieldElement,System.Boolean)
  - Org.BouncyCastle.Math.EC.ECPoint.Add(Org.BouncyCastle.Math.EC.ECPoint)
  - Org.BouncyCastle.Math.EC.ECPoint.AffineXCoord
  - Org.BouncyCastle.Math.EC.ECPoint.AffineYCoord
  - Org.BouncyCastle.Math.EC.ECPoint.CheckNormalized
  - Org.BouncyCastle.Math.EC.ECPoint.CompressionYTilde
  - Org.BouncyCastle.Math.EC.ECPoint.CreateScaledPoint(Org.BouncyCastle.Math.EC.ECFieldElement,Org.BouncyCastle.Math.EC.ECFieldElement)
  - Org.BouncyCastle.Math.EC.ECPoint.Curve
  - Org.BouncyCastle.Math.EC.ECPoint.CurveCoordinateSystem
  - Org.BouncyCastle.Math.EC.ECPoint.Detach
  - Org.BouncyCastle.Math.EC.ECPoint.EMPTY_ZS
  - Org.BouncyCastle.Math.EC.ECPoint.Equals(Org.BouncyCastle.Math.EC.ECPoint)
  - Org.BouncyCastle.Math.EC.ECPoint.Equals(System.Object)
  - Org.BouncyCastle.Math.EC.ECPoint.GetDetachedPoint
  - Org.BouncyCastle.Math.EC.ECPoint.GetEncoded
  - Org.BouncyCastle.Math.EC.ECPoint.GetEncoded(System.Boolean)
  - Org.BouncyCastle.Math.EC.ECPoint.GetHashCode
  - Org.BouncyCastle.Math.EC.ECPoint.GetInitialZCoords(Org.BouncyCastle.Math.EC.ECCurve)
  - Org.BouncyCastle.Math.EC.ECPoint.GetZCoord(System.Int32)
  - Org.BouncyCastle.Math.EC.ECPoint.GetZCoords
  - Org.BouncyCastle.Math.EC.ECPoint.IsCompressed
  - Org.BouncyCastle.Math.EC.ECPoint.IsInfinity
  - Org.BouncyCastle.Math.EC.ECPoint.IsNormalized
  - Org.BouncyCastle.Math.EC.ECPoint.IsValid
  - Org.BouncyCastle.Math.EC.ECPoint.m_curve
  - Org.BouncyCastle.Math.EC.ECPoint.m_preCompTable
  - Org.BouncyCastle.Math.EC.ECPoint.m_withCompression
  - Org.BouncyCastle.Math.EC.ECPoint.m_x
  - Org.BouncyCastle.Math.EC.ECPoint.m_y
  - Org.BouncyCastle.Math.EC.ECPoint.m_zs
  - Org.BouncyCastle.Math.EC.ECPoint.Multiply(Org.BouncyCastle.Math.BigInteger)
  - Org.BouncyCastle.Math.EC.ECPoint.Negate
  - Org.BouncyCastle.Math.EC.ECPoint.Normalize
  - Org.BouncyCastle.Math.EC.ECPoint.RawXCoord
  - Org.BouncyCastle.Math.EC.ECPoint.RawYCoord
  - Org.BouncyCastle.Math.EC.ECPoint.RawZCoords
  - Org.BouncyCastle.Math.EC.ECPoint.SatisfiesCofactor
  - Org.BouncyCastle.Math.EC.ECPoint.SatisfiesCurveEquation
  - Org.BouncyCastle.Math.EC.ECPoint.ScaleX(Org.BouncyCastle.Math.EC.ECFieldElement)
  - Org.BouncyCastle.Math.EC.ECPoint.ScaleY(Org.BouncyCastle.Math.EC.ECFieldElement)
  - Org.BouncyCastle.Math.EC.ECPoint.Subtract(Org.BouncyCastle.Math.EC.ECPoint)
  - Org.BouncyCastle.Math.EC.ECPoint.ThreeTimes
  - Org.BouncyCastle.Math.EC.ECPoint.TimesPow2(System.Int32)
  - Org.BouncyCastle.Math.EC.ECPoint.ToString
  - Org.BouncyCastle.Math.EC.ECPoint.Twice
  - Org.BouncyCastle.Math.EC.ECPoint.TwicePlus(Org.BouncyCastle.Math.EC.ECPoint)
  - Org.BouncyCastle.Math.EC.ECPoint.X
  - Org.BouncyCastle.Math.EC.ECPoint.XCoord
  - Org.BouncyCastle.Math.EC.ECPoint.Y
  - Org.BouncyCastle.Math.EC.ECPoint.YCoord
  langs:
  - csharp
  - vb
  name: ECPoint
  nameWithType: ECPoint
  fullName: Org.BouncyCastle.Math.EC.ECPoint
  type: Class
  source:
    id: ECPoint
    path: ''
    startLine: 61815
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Math.EC
  example: []
  syntax:
    content: public abstract class ECPoint
    content.vb: Public MustInherit Class ECPoint
  inheritance:
  - System.Object
  derivedClasses:
  - Org.BouncyCastle.Math.EC.ECPointBase
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: Org.BouncyCastle.Math.EC.ECPoint.EMPTY_ZS
  commentId: F:Org.BouncyCastle.Math.EC.ECPoint.EMPTY_ZS
  id: EMPTY_ZS
  parent: Org.BouncyCastle.Math.EC.ECPoint
  langs:
  - csharp
  - vb
  name: EMPTY_ZS
  nameWithType: ECPoint.EMPTY_ZS
  fullName: Org.BouncyCastle.Math.EC.ECPoint.EMPTY_ZS
  type: Field
  source:
    id: EMPTY_ZS
    path: ''
    startLine: 61817
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Math.EC
  syntax:
    content: protected static ECFieldElement[] EMPTY_ZS
    return:
      type: Org.BouncyCastle.Math.EC.ECFieldElement[]
    content.vb: Protected Shared EMPTY_ZS As ECFieldElement()
  modifiers.csharp:
  - protected
  - static
  modifiers.vb:
  - Protected
  - Shared
- uid: Org.BouncyCastle.Math.EC.ECPoint.GetInitialZCoords(Org.BouncyCastle.Math.EC.ECCurve)
  commentId: M:Org.BouncyCastle.Math.EC.ECPoint.GetInitialZCoords(Org.BouncyCastle.Math.EC.ECCurve)
  id: GetInitialZCoords(Org.BouncyCastle.Math.EC.ECCurve)
  parent: Org.BouncyCastle.Math.EC.ECPoint
  langs:
  - csharp
  - vb
  name: GetInitialZCoords(ECCurve)
  nameWithType: ECPoint.GetInitialZCoords(ECCurve)
  fullName: Org.BouncyCastle.Math.EC.ECPoint.GetInitialZCoords(Org.BouncyCastle.Math.EC.ECCurve)
  type: Method
  source:
    id: GetInitialZCoords
    path: ''
    startLine: 61819
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Math.EC
  syntax:
    content: protected static ECFieldElement[] GetInitialZCoords(ECCurve curve)
    parameters:
    - id: curve
      type: Org.BouncyCastle.Math.EC.ECCurve
    return:
      type: Org.BouncyCastle.Math.EC.ECFieldElement[]
    content.vb: Protected Shared Function GetInitialZCoords(curve As ECCurve) As ECFieldElement()
  overload: Org.BouncyCastle.Math.EC.ECPoint.GetInitialZCoords*
  modifiers.csharp:
  - protected
  - static
  modifiers.vb:
  - Protected
  - Shared
- uid: Org.BouncyCastle.Math.EC.ECPoint.m_curve
  commentId: F:Org.BouncyCastle.Math.EC.ECPoint.m_curve
  id: m_curve
  parent: Org.BouncyCastle.Math.EC.ECPoint
  langs:
  - csharp
  - vb
  name: m_curve
  nameWithType: ECPoint.m_curve
  fullName: Org.BouncyCastle.Math.EC.ECPoint.m_curve
  type: Field
  source:
    id: m_curve
    path: ''
    startLine: 61850
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Math.EC
  syntax:
    content: protected readonly ECCurve m_curve
    return:
      type: Org.BouncyCastle.Math.EC.ECCurve
    content.vb: Protected ReadOnly m_curve As ECCurve
  modifiers.csharp:
  - protected
  - readonly
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: Org.BouncyCastle.Math.EC.ECPoint.m_x
  commentId: F:Org.BouncyCastle.Math.EC.ECPoint.m_x
  id: m_x
  parent: Org.BouncyCastle.Math.EC.ECPoint
  langs:
  - csharp
  - vb
  name: m_x
  nameWithType: ECPoint.m_x
  fullName: Org.BouncyCastle.Math.EC.ECPoint.m_x
  type: Field
  source:
    id: m_x
    path: ''
    startLine: 61851
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Math.EC
  syntax:
    content: protected readonly ECFieldElement m_x
    return:
      type: Org.BouncyCastle.Math.EC.ECFieldElement
    content.vb: Protected ReadOnly m_x As ECFieldElement
  modifiers.csharp:
  - protected
  - readonly
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: Org.BouncyCastle.Math.EC.ECPoint.m_y
  commentId: F:Org.BouncyCastle.Math.EC.ECPoint.m_y
  id: m_y
  parent: Org.BouncyCastle.Math.EC.ECPoint
  langs:
  - csharp
  - vb
  name: m_y
  nameWithType: ECPoint.m_y
  fullName: Org.BouncyCastle.Math.EC.ECPoint.m_y
  type: Field
  source:
    id: m_y
    path: ''
    startLine: 61851
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Math.EC
  syntax:
    content: protected readonly ECFieldElement m_y
    return:
      type: Org.BouncyCastle.Math.EC.ECFieldElement
    content.vb: Protected ReadOnly m_y As ECFieldElement
  modifiers.csharp:
  - protected
  - readonly
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: Org.BouncyCastle.Math.EC.ECPoint.m_zs
  commentId: F:Org.BouncyCastle.Math.EC.ECPoint.m_zs
  id: m_zs
  parent: Org.BouncyCastle.Math.EC.ECPoint
  langs:
  - csharp
  - vb
  name: m_zs
  nameWithType: ECPoint.m_zs
  fullName: Org.BouncyCastle.Math.EC.ECPoint.m_zs
  type: Field
  source:
    id: m_zs
    path: ''
    startLine: 61852
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Math.EC
  syntax:
    content: protected readonly ECFieldElement[] m_zs
    return:
      type: Org.BouncyCastle.Math.EC.ECFieldElement[]
    content.vb: Protected ReadOnly m_zs As ECFieldElement()
  modifiers.csharp:
  - protected
  - readonly
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: Org.BouncyCastle.Math.EC.ECPoint.m_withCompression
  commentId: F:Org.BouncyCastle.Math.EC.ECPoint.m_withCompression
  id: m_withCompression
  parent: Org.BouncyCastle.Math.EC.ECPoint
  langs:
  - csharp
  - vb
  name: m_withCompression
  nameWithType: ECPoint.m_withCompression
  fullName: Org.BouncyCastle.Math.EC.ECPoint.m_withCompression
  type: Field
  source:
    id: m_withCompression
    path: ''
    startLine: 61853
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Math.EC
  syntax:
    content: protected readonly bool m_withCompression
    return:
      type: System.Boolean
    content.vb: Protected ReadOnly m_withCompression As Boolean
  modifiers.csharp:
  - protected
  - readonly
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: Org.BouncyCastle.Math.EC.ECPoint.m_preCompTable
  commentId: F:Org.BouncyCastle.Math.EC.ECPoint.m_preCompTable
  id: m_preCompTable
  parent: Org.BouncyCastle.Math.EC.ECPoint
  langs:
  - csharp
  - vb
  name: m_preCompTable
  nameWithType: ECPoint.m_preCompTable
  fullName: Org.BouncyCastle.Math.EC.ECPoint.m_preCompTable
  type: Field
  source:
    id: m_preCompTable
    path: ''
    startLine: 61856
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Math.EC
  syntax:
    content: protected IDictionary m_preCompTable
    return:
      type: System.Collections.IDictionary
    content.vb: Protected m_preCompTable As IDictionary
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Org.BouncyCastle.Math.EC.ECPoint.#ctor(Org.BouncyCastle.Math.EC.ECCurve,Org.BouncyCastle.Math.EC.ECFieldElement,Org.BouncyCastle.Math.EC.ECFieldElement,System.Boolean)
  commentId: M:Org.BouncyCastle.Math.EC.ECPoint.#ctor(Org.BouncyCastle.Math.EC.ECCurve,Org.BouncyCastle.Math.EC.ECFieldElement,Org.BouncyCastle.Math.EC.ECFieldElement,System.Boolean)
  id: '#ctor(Org.BouncyCastle.Math.EC.ECCurve,Org.BouncyCastle.Math.EC.ECFieldElement,Org.BouncyCastle.Math.EC.ECFieldElement,System.Boolean)'
  parent: Org.BouncyCastle.Math.EC.ECPoint
  langs:
  - csharp
  - vb
  name: ECPoint(ECCurve, ECFieldElement, ECFieldElement, Boolean)
  nameWithType: ECPoint.ECPoint(ECCurve, ECFieldElement, ECFieldElement, Boolean)
  fullName: Org.BouncyCastle.Math.EC.ECPoint.ECPoint(Org.BouncyCastle.Math.EC.ECCurve, Org.BouncyCastle.Math.EC.ECFieldElement, Org.BouncyCastle.Math.EC.ECFieldElement, System.Boolean)
  type: Constructor
  source:
    id: .ctor
    path: ''
    startLine: 61858
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Math.EC
  syntax:
    content: protected ECPoint(ECCurve curve, ECFieldElement x, ECFieldElement y, bool withCompression)
    parameters:
    - id: curve
      type: Org.BouncyCastle.Math.EC.ECCurve
    - id: x
      type: Org.BouncyCastle.Math.EC.ECFieldElement
    - id: y
      type: Org.BouncyCastle.Math.EC.ECFieldElement
    - id: withCompression
      type: System.Boolean
    content.vb: Protected Sub New(curve As ECCurve, x As ECFieldElement, y As ECFieldElement, withCompression As Boolean)
  overload: Org.BouncyCastle.Math.EC.ECPoint.#ctor*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Org.BouncyCastle.Math.EC.ECPoint.SatisfiesCofactor
  commentId: M:Org.BouncyCastle.Math.EC.ECPoint.SatisfiesCofactor
  id: SatisfiesCofactor
  parent: Org.BouncyCastle.Math.EC.ECPoint
  langs:
  - csharp
  - vb
  name: SatisfiesCofactor()
  nameWithType: ECPoint.SatisfiesCofactor()
  fullName: Org.BouncyCastle.Math.EC.ECPoint.SatisfiesCofactor()
  type: Method
  source:
    id: SatisfiesCofactor
    path: ''
    startLine: 61872
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Math.EC
  syntax:
    content: protected bool SatisfiesCofactor()
    return:
      type: System.Boolean
    content.vb: Protected Function SatisfiesCofactor As Boolean
  overload: Org.BouncyCastle.Math.EC.ECPoint.SatisfiesCofactor*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Org.BouncyCastle.Math.EC.ECPoint.SatisfiesCurveEquation
  commentId: M:Org.BouncyCastle.Math.EC.ECPoint.SatisfiesCurveEquation
  id: SatisfiesCurveEquation
  parent: Org.BouncyCastle.Math.EC.ECPoint
  langs:
  - csharp
  - vb
  name: SatisfiesCurveEquation()
  nameWithType: ECPoint.SatisfiesCurveEquation()
  fullName: Org.BouncyCastle.Math.EC.ECPoint.SatisfiesCurveEquation()
  type: Method
  source:
    id: SatisfiesCurveEquation
    path: ''
    startLine: 61878
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Math.EC
  syntax:
    content: protected abstract bool SatisfiesCurveEquation()
    return:
      type: System.Boolean
    content.vb: Protected MustOverride Function SatisfiesCurveEquation As Boolean
  overload: Org.BouncyCastle.Math.EC.ECPoint.SatisfiesCurveEquation*
  modifiers.csharp:
  - protected
  - abstract
  modifiers.vb:
  - Protected
  - MustOverride
- uid: Org.BouncyCastle.Math.EC.ECPoint.GetDetachedPoint
  commentId: M:Org.BouncyCastle.Math.EC.ECPoint.GetDetachedPoint
  id: GetDetachedPoint
  parent: Org.BouncyCastle.Math.EC.ECPoint
  langs:
  - csharp
  - vb
  name: GetDetachedPoint()
  nameWithType: ECPoint.GetDetachedPoint()
  fullName: Org.BouncyCastle.Math.EC.ECPoint.GetDetachedPoint()
  type: Method
  source:
    id: GetDetachedPoint
    path: ''
    startLine: 61880
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Math.EC
  syntax:
    content: public ECPoint GetDetachedPoint()
    return:
      type: Org.BouncyCastle.Math.EC.ECPoint
    content.vb: Public Function GetDetachedPoint As ECPoint
  overload: Org.BouncyCastle.Math.EC.ECPoint.GetDetachedPoint*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Org.BouncyCastle.Math.EC.ECPoint.Curve
  commentId: P:Org.BouncyCastle.Math.EC.ECPoint.Curve
  id: Curve
  parent: Org.BouncyCastle.Math.EC.ECPoint
  langs:
  - csharp
  - vb
  name: Curve
  nameWithType: ECPoint.Curve
  fullName: Org.BouncyCastle.Math.EC.ECPoint.Curve
  type: Property
  source:
    id: Curve
    path: ''
    startLine: 61885
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Math.EC
  syntax:
    content: public virtual ECCurve Curve { get; }
    parameters: []
    return:
      type: Org.BouncyCastle.Math.EC.ECCurve
    content.vb: Public Overridable ReadOnly Property Curve As ECCurve
  overload: Org.BouncyCastle.Math.EC.ECPoint.Curve*
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: Org.BouncyCastle.Math.EC.ECPoint.Detach
  commentId: M:Org.BouncyCastle.Math.EC.ECPoint.Detach
  id: Detach
  parent: Org.BouncyCastle.Math.EC.ECPoint
  langs:
  - csharp
  - vb
  name: Detach()
  nameWithType: ECPoint.Detach()
  fullName: Org.BouncyCastle.Math.EC.ECPoint.Detach()
  type: Method
  source:
    id: Detach
    path: ''
    startLine: 61890
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Math.EC
  syntax:
    content: protected abstract ECPoint Detach()
    return:
      type: Org.BouncyCastle.Math.EC.ECPoint
    content.vb: Protected MustOverride Function Detach As ECPoint
  overload: Org.BouncyCastle.Math.EC.ECPoint.Detach*
  modifiers.csharp:
  - protected
  - abstract
  modifiers.vb:
  - Protected
  - MustOverride
- uid: Org.BouncyCastle.Math.EC.ECPoint.CurveCoordinateSystem
  commentId: P:Org.BouncyCastle.Math.EC.ECPoint.CurveCoordinateSystem
  id: CurveCoordinateSystem
  parent: Org.BouncyCastle.Math.EC.ECPoint
  langs:
  - csharp
  - vb
  name: CurveCoordinateSystem
  nameWithType: ECPoint.CurveCoordinateSystem
  fullName: Org.BouncyCastle.Math.EC.ECPoint.CurveCoordinateSystem
  type: Property
  source:
    id: CurveCoordinateSystem
    path: ''
    startLine: 61892
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Math.EC
  syntax:
    content: protected virtual int CurveCoordinateSystem { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Protected Overridable ReadOnly Property CurveCoordinateSystem As Integer
  overload: Org.BouncyCastle.Math.EC.ECPoint.CurveCoordinateSystem*
  modifiers.csharp:
  - protected
  - virtual
  - get
  modifiers.vb:
  - Protected
  - Overridable
  - ReadOnly
- uid: Org.BouncyCastle.Math.EC.ECPoint.X
  commentId: P:Org.BouncyCastle.Math.EC.ECPoint.X
  id: X
  parent: Org.BouncyCastle.Math.EC.ECPoint
  langs:
  - csharp
  - vb
  name: X
  nameWithType: ECPoint.X
  fullName: Org.BouncyCastle.Math.EC.ECPoint.X
  type: Property
  source:
    id: X
    path: ''
    startLine: 61907
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Math.EC
  example: []
  syntax:
    content: >-
      [Obsolete("Use AffineXCoord, or Normalize() and XCoord, instead")]

      public virtual ECFieldElement X { get; }
    parameters: []
    return:
      type: Org.BouncyCastle.Math.EC.ECFieldElement
    content.vb: >-
      <Obsolete("Use AffineXCoord, or Normalize() and XCoord, instead")>

      Public Overridable ReadOnly Property X As ECFieldElement
  overload: Org.BouncyCastle.Math.EC.ECPoint.X*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Use AffineXCoord, or Normalize() and XCoord, instead
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: Org.BouncyCastle.Math.EC.ECPoint.Y
  commentId: P:Org.BouncyCastle.Math.EC.ECPoint.Y
  id: Y
  parent: Org.BouncyCastle.Math.EC.ECPoint
  langs:
  - csharp
  - vb
  name: Y
  nameWithType: ECPoint.Y
  fullName: Org.BouncyCastle.Math.EC.ECPoint.Y
  type: Property
  source:
    id: Y
    path: ''
    startLine: 61919
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Math.EC
  example: []
  syntax:
    content: >-
      [Obsolete("Use AffineYCoord, or Normalize() and YCoord, instead")]

      public virtual ECFieldElement Y { get; }
    parameters: []
    return:
      type: Org.BouncyCastle.Math.EC.ECFieldElement
    content.vb: >-
      <Obsolete("Use AffineYCoord, or Normalize() and YCoord, instead")>

      Public Overridable ReadOnly Property Y As ECFieldElement
  overload: Org.BouncyCastle.Math.EC.ECPoint.Y*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Use AffineYCoord, or Normalize() and YCoord, instead
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: Org.BouncyCastle.Math.EC.ECPoint.AffineXCoord
  commentId: P:Org.BouncyCastle.Math.EC.ECPoint.AffineXCoord
  id: AffineXCoord
  parent: Org.BouncyCastle.Math.EC.ECPoint
  langs:
  - csharp
  - vb
  name: AffineXCoord
  nameWithType: ECPoint.AffineXCoord
  fullName: Org.BouncyCastle.Math.EC.ECPoint.AffineXCoord
  type: Property
  source:
    id: AffineXCoord
    path: ''
    startLine: 61931
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Math.EC
  example: []
  syntax:
    content: public virtual ECFieldElement AffineXCoord { get; }
    parameters: []
    return:
      type: Org.BouncyCastle.Math.EC.ECFieldElement
    content.vb: Public Overridable ReadOnly Property AffineXCoord As ECFieldElement
  overload: Org.BouncyCastle.Math.EC.ECPoint.AffineXCoord*
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: Org.BouncyCastle.Math.EC.ECPoint.AffineYCoord
  commentId: P:Org.BouncyCastle.Math.EC.ECPoint.AffineYCoord
  id: AffineYCoord
  parent: Org.BouncyCastle.Math.EC.ECPoint
  langs:
  - csharp
  - vb
  name: AffineYCoord
  nameWithType: ECPoint.AffineYCoord
  fullName: Org.BouncyCastle.Math.EC.ECPoint.AffineYCoord
  type: Property
  source:
    id: AffineYCoord
    path: ''
    startLine: 61946
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Math.EC
  example: []
  syntax:
    content: public virtual ECFieldElement AffineYCoord { get; }
    parameters: []
    return:
      type: Org.BouncyCastle.Math.EC.ECFieldElement
    content.vb: Public Overridable ReadOnly Property AffineYCoord As ECFieldElement
  overload: Org.BouncyCastle.Math.EC.ECPoint.AffineYCoord*
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: Org.BouncyCastle.Math.EC.ECPoint.XCoord
  commentId: P:Org.BouncyCastle.Math.EC.ECPoint.XCoord
  id: XCoord
  parent: Org.BouncyCastle.Math.EC.ECPoint
  langs:
  - csharp
  - vb
  name: XCoord
  nameWithType: ECPoint.XCoord
  fullName: Org.BouncyCastle.Math.EC.ECPoint.XCoord
  type: Property
  source:
    id: XCoord
    path: ''
    startLine: 61964
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Math.EC
  example: []
  syntax:
    content: public virtual ECFieldElement XCoord { get; }
    parameters: []
    return:
      type: Org.BouncyCastle.Math.EC.ECFieldElement
    content.vb: Public Overridable ReadOnly Property XCoord As ECFieldElement
  overload: Org.BouncyCastle.Math.EC.ECPoint.XCoord*
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: Org.BouncyCastle.Math.EC.ECPoint.YCoord
  commentId: P:Org.BouncyCastle.Math.EC.ECPoint.YCoord
  id: YCoord
  parent: Org.BouncyCastle.Math.EC.ECPoint
  langs:
  - csharp
  - vb
  name: YCoord
  nameWithType: ECPoint.YCoord
  fullName: Org.BouncyCastle.Math.EC.ECPoint.YCoord
  type: Property
  source:
    id: YCoord
    path: ''
    startLine: 61978
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Math.EC
  example: []
  syntax:
    content: public virtual ECFieldElement YCoord { get; }
    parameters: []
    return:
      type: Org.BouncyCastle.Math.EC.ECFieldElement
    content.vb: Public Overridable ReadOnly Property YCoord As ECFieldElement
  overload: Org.BouncyCastle.Math.EC.ECPoint.YCoord*
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: Org.BouncyCastle.Math.EC.ECPoint.GetZCoord(System.Int32)
  commentId: M:Org.BouncyCastle.Math.EC.ECPoint.GetZCoord(System.Int32)
  id: GetZCoord(System.Int32)
  parent: Org.BouncyCastle.Math.EC.ECPoint
  langs:
  - csharp
  - vb
  name: GetZCoord(Int32)
  nameWithType: ECPoint.GetZCoord(Int32)
  fullName: Org.BouncyCastle.Math.EC.ECPoint.GetZCoord(System.Int32)
  type: Method
  source:
    id: GetZCoord
    path: ''
    startLine: 61983
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Math.EC
  syntax:
    content: public virtual ECFieldElement GetZCoord(int index)
    parameters:
    - id: index
      type: System.Int32
    return:
      type: Org.BouncyCastle.Math.EC.ECFieldElement
    content.vb: Public Overridable Function GetZCoord(index As Integer) As ECFieldElement
  overload: Org.BouncyCastle.Math.EC.ECPoint.GetZCoord*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Org.BouncyCastle.Math.EC.ECPoint.GetZCoords
  commentId: M:Org.BouncyCastle.Math.EC.ECPoint.GetZCoords
  id: GetZCoords
  parent: Org.BouncyCastle.Math.EC.ECPoint
  langs:
  - csharp
  - vb
  name: GetZCoords()
  nameWithType: ECPoint.GetZCoords()
  fullName: Org.BouncyCastle.Math.EC.ECPoint.GetZCoords()
  type: Method
  source:
    id: GetZCoords
    path: ''
    startLine: 61988
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Math.EC
  syntax:
    content: public virtual ECFieldElement[] GetZCoords()
    return:
      type: Org.BouncyCastle.Math.EC.ECFieldElement[]
    content.vb: Public Overridable Function GetZCoords As ECFieldElement()
  overload: Org.BouncyCastle.Math.EC.ECPoint.GetZCoords*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Org.BouncyCastle.Math.EC.ECPoint.RawXCoord
  commentId: P:Org.BouncyCastle.Math.EC.ECPoint.RawXCoord
  id: RawXCoord
  parent: Org.BouncyCastle.Math.EC.ECPoint
  langs:
  - csharp
  - vb
  name: RawXCoord
  nameWithType: ECPoint.RawXCoord
  fullName: Org.BouncyCastle.Math.EC.ECPoint.RawXCoord
  type: Property
  source:
    id: RawXCoord
    path: ''
    startLine: 62000
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Math.EC
  syntax:
    content: protected ECFieldElement RawXCoord { get; }
    parameters: []
    return:
      type: Org.BouncyCastle.Math.EC.ECFieldElement
    content.vb: Protected ReadOnly Property RawXCoord As ECFieldElement
  overload: Org.BouncyCastle.Math.EC.ECPoint.RawXCoord*
  modifiers.csharp:
  - protected
  - get
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: Org.BouncyCastle.Math.EC.ECPoint.RawYCoord
  commentId: P:Org.BouncyCastle.Math.EC.ECPoint.RawYCoord
  id: RawYCoord
  parent: Org.BouncyCastle.Math.EC.ECPoint
  langs:
  - csharp
  - vb
  name: RawYCoord
  nameWithType: ECPoint.RawYCoord
  fullName: Org.BouncyCastle.Math.EC.ECPoint.RawYCoord
  type: Property
  source:
    id: RawYCoord
    path: ''
    startLine: 62005
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Math.EC
  syntax:
    content: protected ECFieldElement RawYCoord { get; }
    parameters: []
    return:
      type: Org.BouncyCastle.Math.EC.ECFieldElement
    content.vb: Protected ReadOnly Property RawYCoord As ECFieldElement
  overload: Org.BouncyCastle.Math.EC.ECPoint.RawYCoord*
  modifiers.csharp:
  - protected
  - get
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: Org.BouncyCastle.Math.EC.ECPoint.RawZCoords
  commentId: P:Org.BouncyCastle.Math.EC.ECPoint.RawZCoords
  id: RawZCoords
  parent: Org.BouncyCastle.Math.EC.ECPoint
  langs:
  - csharp
  - vb
  name: RawZCoords
  nameWithType: ECPoint.RawZCoords
  fullName: Org.BouncyCastle.Math.EC.ECPoint.RawZCoords
  type: Property
  source:
    id: RawZCoords
    path: ''
    startLine: 62010
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Math.EC
  syntax:
    content: protected ECFieldElement[] RawZCoords { get; }
    parameters: []
    return:
      type: Org.BouncyCastle.Math.EC.ECFieldElement[]
    content.vb: Protected ReadOnly Property RawZCoords As ECFieldElement()
  overload: Org.BouncyCastle.Math.EC.ECPoint.RawZCoords*
  modifiers.csharp:
  - protected
  - get
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: Org.BouncyCastle.Math.EC.ECPoint.CheckNormalized
  commentId: M:Org.BouncyCastle.Math.EC.ECPoint.CheckNormalized
  id: CheckNormalized
  parent: Org.BouncyCastle.Math.EC.ECPoint
  langs:
  - csharp
  - vb
  name: CheckNormalized()
  nameWithType: ECPoint.CheckNormalized()
  fullName: Org.BouncyCastle.Math.EC.ECPoint.CheckNormalized()
  type: Method
  source:
    id: CheckNormalized
    path: ''
    startLine: 62015
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Math.EC
  syntax:
    content: protected virtual void CheckNormalized()
    content.vb: Protected Overridable Sub CheckNormalized
  overload: Org.BouncyCastle.Math.EC.ECPoint.CheckNormalized*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: Org.BouncyCastle.Math.EC.ECPoint.IsNormalized
  commentId: M:Org.BouncyCastle.Math.EC.ECPoint.IsNormalized
  id: IsNormalized
  parent: Org.BouncyCastle.Math.EC.ECPoint
  langs:
  - csharp
  - vb
  name: IsNormalized()
  nameWithType: ECPoint.IsNormalized()
  fullName: Org.BouncyCastle.Math.EC.ECPoint.IsNormalized()
  type: Method
  source:
    id: IsNormalized
    path: ''
    startLine: 62021
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Math.EC
  syntax:
    content: public virtual bool IsNormalized()
    return:
      type: System.Boolean
    content.vb: Public Overridable Function IsNormalized As Boolean
  overload: Org.BouncyCastle.Math.EC.ECPoint.IsNormalized*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Org.BouncyCastle.Math.EC.ECPoint.Normalize
  commentId: M:Org.BouncyCastle.Math.EC.ECPoint.Normalize
  id: Normalize
  parent: Org.BouncyCastle.Math.EC.ECPoint
  langs:
  - csharp
  - vb
  name: Normalize()
  nameWithType: ECPoint.Normalize()
  fullName: Org.BouncyCastle.Math.EC.ECPoint.Normalize()
  type: Method
  source:
    id: Normalize
    path: ''
    startLine: 62037
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Math.EC
  example: []
  syntax:
    content: public virtual ECPoint Normalize()
    return:
      type: Org.BouncyCastle.Math.EC.ECPoint
    content.vb: Public Overridable Function Normalize As ECPoint
  overload: Org.BouncyCastle.Math.EC.ECPoint.Normalize*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Org.BouncyCastle.Math.EC.ECPoint.CreateScaledPoint(Org.BouncyCastle.Math.EC.ECFieldElement,Org.BouncyCastle.Math.EC.ECFieldElement)
  commentId: M:Org.BouncyCastle.Math.EC.ECPoint.CreateScaledPoint(Org.BouncyCastle.Math.EC.ECFieldElement,Org.BouncyCastle.Math.EC.ECFieldElement)
  id: CreateScaledPoint(Org.BouncyCastle.Math.EC.ECFieldElement,Org.BouncyCastle.Math.EC.ECFieldElement)
  parent: Org.BouncyCastle.Math.EC.ECPoint
  langs:
  - csharp
  - vb
  name: CreateScaledPoint(ECFieldElement, ECFieldElement)
  nameWithType: ECPoint.CreateScaledPoint(ECFieldElement, ECFieldElement)
  fullName: Org.BouncyCastle.Math.EC.ECPoint.CreateScaledPoint(Org.BouncyCastle.Math.EC.ECFieldElement, Org.BouncyCastle.Math.EC.ECFieldElement)
  type: Method
  source:
    id: CreateScaledPoint
    path: ''
    startLine: 62087
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Math.EC
  syntax:
    content: protected virtual ECPoint CreateScaledPoint(ECFieldElement sx, ECFieldElement sy)
    parameters:
    - id: sx
      type: Org.BouncyCastle.Math.EC.ECFieldElement
    - id: sy
      type: Org.BouncyCastle.Math.EC.ECFieldElement
    return:
      type: Org.BouncyCastle.Math.EC.ECPoint
    content.vb: Protected Overridable Function CreateScaledPoint(sx As ECFieldElement, sy As ECFieldElement) As ECPoint
  overload: Org.BouncyCastle.Math.EC.ECPoint.CreateScaledPoint*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: Org.BouncyCastle.Math.EC.ECPoint.IsInfinity
  commentId: P:Org.BouncyCastle.Math.EC.ECPoint.IsInfinity
  id: IsInfinity
  parent: Org.BouncyCastle.Math.EC.ECPoint
  langs:
  - csharp
  - vb
  name: IsInfinity
  nameWithType: ECPoint.IsInfinity
  fullName: Org.BouncyCastle.Math.EC.ECPoint.IsInfinity
  type: Property
  source:
    id: IsInfinity
    path: ''
    startLine: 62092
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Math.EC
  syntax:
    content: public bool IsInfinity { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsInfinity As Boolean
  overload: Org.BouncyCastle.Math.EC.ECPoint.IsInfinity*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Org.BouncyCastle.Math.EC.ECPoint.IsCompressed
  commentId: P:Org.BouncyCastle.Math.EC.ECPoint.IsCompressed
  id: IsCompressed
  parent: Org.BouncyCastle.Math.EC.ECPoint
  langs:
  - csharp
  - vb
  name: IsCompressed
  nameWithType: ECPoint.IsCompressed
  fullName: Org.BouncyCastle.Math.EC.ECPoint.IsCompressed
  type: Property
  source:
    id: IsCompressed
    path: ''
    startLine: 62097
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Math.EC
  syntax:
    content: public bool IsCompressed { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsCompressed As Boolean
  overload: Org.BouncyCastle.Math.EC.ECPoint.IsCompressed*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Org.BouncyCastle.Math.EC.ECPoint.IsValid
  commentId: M:Org.BouncyCastle.Math.EC.ECPoint.IsValid
  id: IsValid
  parent: Org.BouncyCastle.Math.EC.ECPoint
  langs:
  - csharp
  - vb
  name: IsValid()
  nameWithType: ECPoint.IsValid()
  fullName: Org.BouncyCastle.Math.EC.ECPoint.IsValid()
  type: Method
  source:
    id: IsValid
    path: ''
    startLine: 62102
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Math.EC
  syntax:
    content: public bool IsValid()
    return:
      type: System.Boolean
    content.vb: Public Function IsValid As Boolean
  overload: Org.BouncyCastle.Math.EC.ECPoint.IsValid*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Org.BouncyCastle.Math.EC.ECPoint.ScaleX(Org.BouncyCastle.Math.EC.ECFieldElement)
  commentId: M:Org.BouncyCastle.Math.EC.ECPoint.ScaleX(Org.BouncyCastle.Math.EC.ECFieldElement)
  id: ScaleX(Org.BouncyCastle.Math.EC.ECFieldElement)
  parent: Org.BouncyCastle.Math.EC.ECPoint
  langs:
  - csharp
  - vb
  name: ScaleX(ECFieldElement)
  nameWithType: ECPoint.ScaleX(ECFieldElement)
  fullName: Org.BouncyCastle.Math.EC.ECPoint.ScaleX(Org.BouncyCastle.Math.EC.ECFieldElement)
  type: Method
  source:
    id: ScaleX
    path: ''
    startLine: 62122
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Math.EC
  syntax:
    content: public virtual ECPoint ScaleX(ECFieldElement scale)
    parameters:
    - id: scale
      type: Org.BouncyCastle.Math.EC.ECFieldElement
    return:
      type: Org.BouncyCastle.Math.EC.ECPoint
    content.vb: Public Overridable Function ScaleX(scale As ECFieldElement) As ECPoint
  overload: Org.BouncyCastle.Math.EC.ECPoint.ScaleX*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Org.BouncyCastle.Math.EC.ECPoint.ScaleY(Org.BouncyCastle.Math.EC.ECFieldElement)
  commentId: M:Org.BouncyCastle.Math.EC.ECPoint.ScaleY(Org.BouncyCastle.Math.EC.ECFieldElement)
  id: ScaleY(Org.BouncyCastle.Math.EC.ECFieldElement)
  parent: Org.BouncyCastle.Math.EC.ECPoint
  langs:
  - csharp
  - vb
  name: ScaleY(ECFieldElement)
  nameWithType: ECPoint.ScaleY(ECFieldElement)
  fullName: Org.BouncyCastle.Math.EC.ECPoint.ScaleY(Org.BouncyCastle.Math.EC.ECFieldElement)
  type: Method
  source:
    id: ScaleY
    path: ''
    startLine: 62129
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Math.EC
  syntax:
    content: public virtual ECPoint ScaleY(ECFieldElement scale)
    parameters:
    - id: scale
      type: Org.BouncyCastle.Math.EC.ECFieldElement
    return:
      type: Org.BouncyCastle.Math.EC.ECPoint
    content.vb: Public Overridable Function ScaleY(scale As ECFieldElement) As ECPoint
  overload: Org.BouncyCastle.Math.EC.ECPoint.ScaleY*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Org.BouncyCastle.Math.EC.ECPoint.Equals(System.Object)
  commentId: M:Org.BouncyCastle.Math.EC.ECPoint.Equals(System.Object)
  id: Equals(System.Object)
  parent: Org.BouncyCastle.Math.EC.ECPoint
  langs:
  - csharp
  - vb
  name: Equals(Object)
  nameWithType: ECPoint.Equals(Object)
  fullName: Org.BouncyCastle.Math.EC.ECPoint.Equals(System.Object)
  type: Method
  source:
    id: Equals
    path: ''
    startLine: 62136
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Math.EC
  syntax:
    content: public override bool Equals(object obj)
    parameters:
    - id: obj
      type: System.Object
    return:
      type: System.Boolean
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
  overridden: System.Object.Equals(System.Object)
  overload: Org.BouncyCastle.Math.EC.ECPoint.Equals*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Org.BouncyCastle.Math.EC.ECPoint.Equals(Org.BouncyCastle.Math.EC.ECPoint)
  commentId: M:Org.BouncyCastle.Math.EC.ECPoint.Equals(Org.BouncyCastle.Math.EC.ECPoint)
  id: Equals(Org.BouncyCastle.Math.EC.ECPoint)
  parent: Org.BouncyCastle.Math.EC.ECPoint
  langs:
  - csharp
  - vb
  name: Equals(ECPoint)
  nameWithType: ECPoint.Equals(ECPoint)
  fullName: Org.BouncyCastle.Math.EC.ECPoint.Equals(Org.BouncyCastle.Math.EC.ECPoint)
  type: Method
  source:
    id: Equals
    path: ''
    startLine: 62141
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Math.EC
  syntax:
    content: public virtual bool Equals(ECPoint other)
    parameters:
    - id: other
      type: Org.BouncyCastle.Math.EC.ECPoint
    return:
      type: System.Boolean
    content.vb: Public Overridable Function Equals(other As ECPoint) As Boolean
  overload: Org.BouncyCastle.Math.EC.ECPoint.Equals*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Org.BouncyCastle.Math.EC.ECPoint.GetHashCode
  commentId: M:Org.BouncyCastle.Math.EC.ECPoint.GetHashCode
  id: GetHashCode
  parent: Org.BouncyCastle.Math.EC.ECPoint
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: ECPoint.GetHashCode()
  fullName: Org.BouncyCastle.Math.EC.ECPoint.GetHashCode()
  type: Method
  source:
    id: GetHashCode
    path: ''
    startLine: 62190
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Math.EC
  syntax:
    content: public override int GetHashCode()
    return:
      type: System.Int32
    content.vb: Public Overrides Function GetHashCode As Integer
  overridden: System.Object.GetHashCode
  overload: Org.BouncyCastle.Math.EC.ECPoint.GetHashCode*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Org.BouncyCastle.Math.EC.ECPoint.ToString
  commentId: M:Org.BouncyCastle.Math.EC.ECPoint.ToString
  id: ToString
  parent: Org.BouncyCastle.Math.EC.ECPoint
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: ECPoint.ToString()
  fullName: Org.BouncyCastle.Math.EC.ECPoint.ToString()
  type: Method
  source:
    id: ToString
    path: ''
    startLine: 62208
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Math.EC
  syntax:
    content: public override string ToString()
    return:
      type: System.String
    content.vb: Public Overrides Function ToString As String
  overridden: System.Object.ToString
  overload: Org.BouncyCastle.Math.EC.ECPoint.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Org.BouncyCastle.Math.EC.ECPoint.GetEncoded
  commentId: M:Org.BouncyCastle.Math.EC.ECPoint.GetEncoded
  id: GetEncoded
  parent: Org.BouncyCastle.Math.EC.ECPoint
  langs:
  - csharp
  - vb
  name: GetEncoded()
  nameWithType: ECPoint.GetEncoded()
  fullName: Org.BouncyCastle.Math.EC.ECPoint.GetEncoded()
  type: Method
  source:
    id: GetEncoded
    path: ''
    startLine: 62229
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Math.EC
  syntax:
    content: public virtual byte[] GetEncoded()
    return:
      type: System.Byte[]
    content.vb: Public Overridable Function GetEncoded As Byte()
  overload: Org.BouncyCastle.Math.EC.ECPoint.GetEncoded*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Org.BouncyCastle.Math.EC.ECPoint.GetEncoded(System.Boolean)
  commentId: M:Org.BouncyCastle.Math.EC.ECPoint.GetEncoded(System.Boolean)
  id: GetEncoded(System.Boolean)
  parent: Org.BouncyCastle.Math.EC.ECPoint
  langs:
  - csharp
  - vb
  name: GetEncoded(Boolean)
  nameWithType: ECPoint.GetEncoded(Boolean)
  fullName: Org.BouncyCastle.Math.EC.ECPoint.GetEncoded(System.Boolean)
  type: Method
  source:
    id: GetEncoded
    path: ''
    startLine: 62234
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Math.EC
  syntax:
    content: public abstract byte[] GetEncoded(bool compressed)
    parameters:
    - id: compressed
      type: System.Boolean
    return:
      type: System.Byte[]
    content.vb: Public MustOverride Function GetEncoded(compressed As Boolean) As Byte()
  overload: Org.BouncyCastle.Math.EC.ECPoint.GetEncoded*
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
- uid: Org.BouncyCastle.Math.EC.ECPoint.CompressionYTilde
  commentId: P:Org.BouncyCastle.Math.EC.ECPoint.CompressionYTilde
  id: CompressionYTilde
  parent: Org.BouncyCastle.Math.EC.ECPoint
  langs:
  - csharp
  - vb
  name: CompressionYTilde
  nameWithType: ECPoint.CompressionYTilde
  fullName: Org.BouncyCastle.Math.EC.ECPoint.CompressionYTilde
  type: Property
  source:
    id: CompressionYTilde
    path: ''
    startLine: 62236
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Math.EC
  syntax:
    content: protected abstract bool CompressionYTilde { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Protected MustOverride ReadOnly Property CompressionYTilde As Boolean
  overload: Org.BouncyCastle.Math.EC.ECPoint.CompressionYTilde*
  modifiers.csharp:
  - protected
  - abstract
  - get
  modifiers.vb:
  - Protected
  - MustOverride
  - ReadOnly
- uid: Org.BouncyCastle.Math.EC.ECPoint.Add(Org.BouncyCastle.Math.EC.ECPoint)
  commentId: M:Org.BouncyCastle.Math.EC.ECPoint.Add(Org.BouncyCastle.Math.EC.ECPoint)
  id: Add(Org.BouncyCastle.Math.EC.ECPoint)
  parent: Org.BouncyCastle.Math.EC.ECPoint
  langs:
  - csharp
  - vb
  name: Add(ECPoint)
  nameWithType: ECPoint.Add(ECPoint)
  fullName: Org.BouncyCastle.Math.EC.ECPoint.Add(Org.BouncyCastle.Math.EC.ECPoint)
  type: Method
  source:
    id: Add
    path: ''
    startLine: 62238
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Math.EC
  syntax:
    content: public abstract ECPoint Add(ECPoint b)
    parameters:
    - id: b
      type: Org.BouncyCastle.Math.EC.ECPoint
    return:
      type: Org.BouncyCastle.Math.EC.ECPoint
    content.vb: Public MustOverride Function Add(b As ECPoint) As ECPoint
  overload: Org.BouncyCastle.Math.EC.ECPoint.Add*
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
- uid: Org.BouncyCastle.Math.EC.ECPoint.Subtract(Org.BouncyCastle.Math.EC.ECPoint)
  commentId: M:Org.BouncyCastle.Math.EC.ECPoint.Subtract(Org.BouncyCastle.Math.EC.ECPoint)
  id: Subtract(Org.BouncyCastle.Math.EC.ECPoint)
  parent: Org.BouncyCastle.Math.EC.ECPoint
  langs:
  - csharp
  - vb
  name: Subtract(ECPoint)
  nameWithType: ECPoint.Subtract(ECPoint)
  fullName: Org.BouncyCastle.Math.EC.ECPoint.Subtract(Org.BouncyCastle.Math.EC.ECPoint)
  type: Method
  source:
    id: Subtract
    path: ''
    startLine: 62239
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Math.EC
  syntax:
    content: public abstract ECPoint Subtract(ECPoint b)
    parameters:
    - id: b
      type: Org.BouncyCastle.Math.EC.ECPoint
    return:
      type: Org.BouncyCastle.Math.EC.ECPoint
    content.vb: Public MustOverride Function Subtract(b As ECPoint) As ECPoint
  overload: Org.BouncyCastle.Math.EC.ECPoint.Subtract*
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
- uid: Org.BouncyCastle.Math.EC.ECPoint.Negate
  commentId: M:Org.BouncyCastle.Math.EC.ECPoint.Negate
  id: Negate
  parent: Org.BouncyCastle.Math.EC.ECPoint
  langs:
  - csharp
  - vb
  name: Negate()
  nameWithType: ECPoint.Negate()
  fullName: Org.BouncyCastle.Math.EC.ECPoint.Negate()
  type: Method
  source:
    id: Negate
    path: ''
    startLine: 62240
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Math.EC
  syntax:
    content: public abstract ECPoint Negate()
    return:
      type: Org.BouncyCastle.Math.EC.ECPoint
    content.vb: Public MustOverride Function Negate As ECPoint
  overload: Org.BouncyCastle.Math.EC.ECPoint.Negate*
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
- uid: Org.BouncyCastle.Math.EC.ECPoint.TimesPow2(System.Int32)
  commentId: M:Org.BouncyCastle.Math.EC.ECPoint.TimesPow2(System.Int32)
  id: TimesPow2(System.Int32)
  parent: Org.BouncyCastle.Math.EC.ECPoint
  langs:
  - csharp
  - vb
  name: TimesPow2(Int32)
  nameWithType: ECPoint.TimesPow2(Int32)
  fullName: Org.BouncyCastle.Math.EC.ECPoint.TimesPow2(System.Int32)
  type: Method
  source:
    id: TimesPow2
    path: ''
    startLine: 62242
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Math.EC
  syntax:
    content: public virtual ECPoint TimesPow2(int e)
    parameters:
    - id: e
      type: System.Int32
    return:
      type: Org.BouncyCastle.Math.EC.ECPoint
    content.vb: Public Overridable Function TimesPow2(e As Integer) As ECPoint
  overload: Org.BouncyCastle.Math.EC.ECPoint.TimesPow2*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Org.BouncyCastle.Math.EC.ECPoint.Twice
  commentId: M:Org.BouncyCastle.Math.EC.ECPoint.Twice
  id: Twice
  parent: Org.BouncyCastle.Math.EC.ECPoint
  langs:
  - csharp
  - vb
  name: Twice()
  nameWithType: ECPoint.Twice()
  fullName: Org.BouncyCastle.Math.EC.ECPoint.Twice()
  type: Method
  source:
    id: Twice
    path: ''
    startLine: 62255
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Math.EC
  syntax:
    content: public abstract ECPoint Twice()
    return:
      type: Org.BouncyCastle.Math.EC.ECPoint
    content.vb: Public MustOverride Function Twice As ECPoint
  overload: Org.BouncyCastle.Math.EC.ECPoint.Twice*
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
- uid: Org.BouncyCastle.Math.EC.ECPoint.Multiply(Org.BouncyCastle.Math.BigInteger)
  commentId: M:Org.BouncyCastle.Math.EC.ECPoint.Multiply(Org.BouncyCastle.Math.BigInteger)
  id: Multiply(Org.BouncyCastle.Math.BigInteger)
  parent: Org.BouncyCastle.Math.EC.ECPoint
  langs:
  - csharp
  - vb
  name: Multiply(BigInteger)
  nameWithType: ECPoint.Multiply(BigInteger)
  fullName: Org.BouncyCastle.Math.EC.ECPoint.Multiply(Org.BouncyCastle.Math.BigInteger)
  type: Method
  source:
    id: Multiply
    path: ''
    startLine: 62256
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Math.EC
  syntax:
    content: public abstract ECPoint Multiply(BigInteger b)
    parameters:
    - id: b
      type: Org.BouncyCastle.Math.BigInteger
    return:
      type: Org.BouncyCastle.Math.EC.ECPoint
    content.vb: Public MustOverride Function Multiply(b As BigInteger) As ECPoint
  overload: Org.BouncyCastle.Math.EC.ECPoint.Multiply*
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
- uid: Org.BouncyCastle.Math.EC.ECPoint.TwicePlus(Org.BouncyCastle.Math.EC.ECPoint)
  commentId: M:Org.BouncyCastle.Math.EC.ECPoint.TwicePlus(Org.BouncyCastle.Math.EC.ECPoint)
  id: TwicePlus(Org.BouncyCastle.Math.EC.ECPoint)
  parent: Org.BouncyCastle.Math.EC.ECPoint
  langs:
  - csharp
  - vb
  name: TwicePlus(ECPoint)
  nameWithType: ECPoint.TwicePlus(ECPoint)
  fullName: Org.BouncyCastle.Math.EC.ECPoint.TwicePlus(Org.BouncyCastle.Math.EC.ECPoint)
  type: Method
  source:
    id: TwicePlus
    path: ''
    startLine: 62258
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Math.EC
  syntax:
    content: public virtual ECPoint TwicePlus(ECPoint b)
    parameters:
    - id: b
      type: Org.BouncyCastle.Math.EC.ECPoint
    return:
      type: Org.BouncyCastle.Math.EC.ECPoint
    content.vb: Public Overridable Function TwicePlus(b As ECPoint) As ECPoint
  overload: Org.BouncyCastle.Math.EC.ECPoint.TwicePlus*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Org.BouncyCastle.Math.EC.ECPoint.ThreeTimes
  commentId: M:Org.BouncyCastle.Math.EC.ECPoint.ThreeTimes
  id: ThreeTimes
  parent: Org.BouncyCastle.Math.EC.ECPoint
  langs:
  - csharp
  - vb
  name: ThreeTimes()
  nameWithType: ECPoint.ThreeTimes()
  fullName: Org.BouncyCastle.Math.EC.ECPoint.ThreeTimes()
  type: Method
  source:
    id: ThreeTimes
    path: ''
    startLine: 62263
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Math.EC
  syntax:
    content: public virtual ECPoint ThreeTimes()
    return:
      type: Org.BouncyCastle.Math.EC.ECPoint
    content.vb: Public Overridable Function ThreeTimes As ECPoint
  overload: Org.BouncyCastle.Math.EC.ECPoint.ThreeTimes*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
references:
- uid: Org.BouncyCastle.Math.EC
  commentId: N:Org.BouncyCastle.Math.EC
  name: Org.BouncyCastle.Math.EC
  nameWithType: Org.BouncyCastle.Math.EC
  fullName: Org.BouncyCastle.Math.EC
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Org.BouncyCastle.Math.EC.ECFieldElement[]
  isExternal: true
  name: ECFieldElement[]
  nameWithType: ECFieldElement[]
  fullName: Org.BouncyCastle.Math.EC.ECFieldElement[]
  nameWithType.vb: ECFieldElement()
  fullName.vb: Org.BouncyCastle.Math.EC.ECFieldElement()
  name.vb: ECFieldElement()
  spec.csharp:
  - uid: Org.BouncyCastle.Math.EC.ECFieldElement
    name: ECFieldElement
    nameWithType: ECFieldElement
    fullName: Org.BouncyCastle.Math.EC.ECFieldElement
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: Org.BouncyCastle.Math.EC.ECFieldElement
    name: ECFieldElement
    nameWithType: ECFieldElement
    fullName: Org.BouncyCastle.Math.EC.ECFieldElement
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Org.BouncyCastle.Math.EC.ECPoint.GetInitialZCoords*
  commentId: Overload:Org.BouncyCastle.Math.EC.ECPoint.GetInitialZCoords
  name: GetInitialZCoords
  nameWithType: ECPoint.GetInitialZCoords
  fullName: Org.BouncyCastle.Math.EC.ECPoint.GetInitialZCoords
- uid: Org.BouncyCastle.Math.EC.ECCurve
  commentId: T:Org.BouncyCastle.Math.EC.ECCurve
  parent: Org.BouncyCastle.Math.EC
  name: ECCurve
  nameWithType: ECCurve
  fullName: Org.BouncyCastle.Math.EC.ECCurve
- uid: Org.BouncyCastle.Math.EC.ECFieldElement
  commentId: T:Org.BouncyCastle.Math.EC.ECFieldElement
  parent: Org.BouncyCastle.Math.EC
  name: ECFieldElement
  nameWithType: ECFieldElement
  fullName: Org.BouncyCastle.Math.EC.ECFieldElement
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Collections.IDictionary
  commentId: T:System.Collections.IDictionary
  parent: System.Collections
  isExternal: true
  name: IDictionary
  nameWithType: IDictionary
  fullName: System.Collections.IDictionary
- uid: System.Collections
  commentId: N:System.Collections
  isExternal: true
  name: System.Collections
  nameWithType: System.Collections
  fullName: System.Collections
- uid: Org.BouncyCastle.Math.EC.ECPoint.#ctor*
  commentId: Overload:Org.BouncyCastle.Math.EC.ECPoint.#ctor
  name: ECPoint
  nameWithType: ECPoint.ECPoint
  fullName: Org.BouncyCastle.Math.EC.ECPoint.ECPoint
- uid: Org.BouncyCastle.Math.EC.ECPoint.SatisfiesCofactor*
  commentId: Overload:Org.BouncyCastle.Math.EC.ECPoint.SatisfiesCofactor
  name: SatisfiesCofactor
  nameWithType: ECPoint.SatisfiesCofactor
  fullName: Org.BouncyCastle.Math.EC.ECPoint.SatisfiesCofactor
- uid: Org.BouncyCastle.Math.EC.ECPoint.SatisfiesCurveEquation*
  commentId: Overload:Org.BouncyCastle.Math.EC.ECPoint.SatisfiesCurveEquation
  name: SatisfiesCurveEquation
  nameWithType: ECPoint.SatisfiesCurveEquation
  fullName: Org.BouncyCastle.Math.EC.ECPoint.SatisfiesCurveEquation
- uid: Org.BouncyCastle.Math.EC.ECPoint.GetDetachedPoint*
  commentId: Overload:Org.BouncyCastle.Math.EC.ECPoint.GetDetachedPoint
  name: GetDetachedPoint
  nameWithType: ECPoint.GetDetachedPoint
  fullName: Org.BouncyCastle.Math.EC.ECPoint.GetDetachedPoint
- uid: Org.BouncyCastle.Math.EC.ECPoint
  commentId: T:Org.BouncyCastle.Math.EC.ECPoint
  parent: Org.BouncyCastle.Math.EC
  name: ECPoint
  nameWithType: ECPoint
  fullName: Org.BouncyCastle.Math.EC.ECPoint
- uid: Org.BouncyCastle.Math.EC.ECPoint.Curve*
  commentId: Overload:Org.BouncyCastle.Math.EC.ECPoint.Curve
  name: Curve
  nameWithType: ECPoint.Curve
  fullName: Org.BouncyCastle.Math.EC.ECPoint.Curve
- uid: Org.BouncyCastle.Math.EC.ECPoint.Detach*
  commentId: Overload:Org.BouncyCastle.Math.EC.ECPoint.Detach
  name: Detach
  nameWithType: ECPoint.Detach
  fullName: Org.BouncyCastle.Math.EC.ECPoint.Detach
- uid: Org.BouncyCastle.Math.EC.ECPoint.CurveCoordinateSystem*
  commentId: Overload:Org.BouncyCastle.Math.EC.ECPoint.CurveCoordinateSystem
  name: CurveCoordinateSystem
  nameWithType: ECPoint.CurveCoordinateSystem
  fullName: Org.BouncyCastle.Math.EC.ECPoint.CurveCoordinateSystem
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Org.BouncyCastle.Math.EC.ECPoint.X*
  commentId: Overload:Org.BouncyCastle.Math.EC.ECPoint.X
  name: X
  nameWithType: ECPoint.X
  fullName: Org.BouncyCastle.Math.EC.ECPoint.X
- uid: Org.BouncyCastle.Math.EC.ECPoint.Y*
  commentId: Overload:Org.BouncyCastle.Math.EC.ECPoint.Y
  name: Y
  nameWithType: ECPoint.Y
  fullName: Org.BouncyCastle.Math.EC.ECPoint.Y
- uid: Org.BouncyCastle.Math.EC.ECPoint.AffineXCoord*
  commentId: Overload:Org.BouncyCastle.Math.EC.ECPoint.AffineXCoord
  name: AffineXCoord
  nameWithType: ECPoint.AffineXCoord
  fullName: Org.BouncyCastle.Math.EC.ECPoint.AffineXCoord
- uid: Org.BouncyCastle.Math.EC.ECPoint.AffineYCoord*
  commentId: Overload:Org.BouncyCastle.Math.EC.ECPoint.AffineYCoord
  name: AffineYCoord
  nameWithType: ECPoint.AffineYCoord
  fullName: Org.BouncyCastle.Math.EC.ECPoint.AffineYCoord
- uid: Org.BouncyCastle.Math.EC.ECPoint.XCoord*
  commentId: Overload:Org.BouncyCastle.Math.EC.ECPoint.XCoord
  name: XCoord
  nameWithType: ECPoint.XCoord
  fullName: Org.BouncyCastle.Math.EC.ECPoint.XCoord
- uid: Org.BouncyCastle.Math.EC.ECPoint.YCoord*
  commentId: Overload:Org.BouncyCastle.Math.EC.ECPoint.YCoord
  name: YCoord
  nameWithType: ECPoint.YCoord
  fullName: Org.BouncyCastle.Math.EC.ECPoint.YCoord
- uid: Org.BouncyCastle.Math.EC.ECPoint.GetZCoord*
  commentId: Overload:Org.BouncyCastle.Math.EC.ECPoint.GetZCoord
  name: GetZCoord
  nameWithType: ECPoint.GetZCoord
  fullName: Org.BouncyCastle.Math.EC.ECPoint.GetZCoord
- uid: Org.BouncyCastle.Math.EC.ECPoint.GetZCoords*
  commentId: Overload:Org.BouncyCastle.Math.EC.ECPoint.GetZCoords
  name: GetZCoords
  nameWithType: ECPoint.GetZCoords
  fullName: Org.BouncyCastle.Math.EC.ECPoint.GetZCoords
- uid: Org.BouncyCastle.Math.EC.ECPoint.RawXCoord*
  commentId: Overload:Org.BouncyCastle.Math.EC.ECPoint.RawXCoord
  name: RawXCoord
  nameWithType: ECPoint.RawXCoord
  fullName: Org.BouncyCastle.Math.EC.ECPoint.RawXCoord
- uid: Org.BouncyCastle.Math.EC.ECPoint.RawYCoord*
  commentId: Overload:Org.BouncyCastle.Math.EC.ECPoint.RawYCoord
  name: RawYCoord
  nameWithType: ECPoint.RawYCoord
  fullName: Org.BouncyCastle.Math.EC.ECPoint.RawYCoord
- uid: Org.BouncyCastle.Math.EC.ECPoint.RawZCoords*
  commentId: Overload:Org.BouncyCastle.Math.EC.ECPoint.RawZCoords
  name: RawZCoords
  nameWithType: ECPoint.RawZCoords
  fullName: Org.BouncyCastle.Math.EC.ECPoint.RawZCoords
- uid: Org.BouncyCastle.Math.EC.ECPoint.CheckNormalized*
  commentId: Overload:Org.BouncyCastle.Math.EC.ECPoint.CheckNormalized
  name: CheckNormalized
  nameWithType: ECPoint.CheckNormalized
  fullName: Org.BouncyCastle.Math.EC.ECPoint.CheckNormalized
- uid: Org.BouncyCastle.Math.EC.ECPoint.IsNormalized*
  commentId: Overload:Org.BouncyCastle.Math.EC.ECPoint.IsNormalized
  name: IsNormalized
  nameWithType: ECPoint.IsNormalized
  fullName: Org.BouncyCastle.Math.EC.ECPoint.IsNormalized
- uid: Org.BouncyCastle.Math.EC.ECPoint.Normalize*
  commentId: Overload:Org.BouncyCastle.Math.EC.ECPoint.Normalize
  name: Normalize
  nameWithType: ECPoint.Normalize
  fullName: Org.BouncyCastle.Math.EC.ECPoint.Normalize
- uid: Org.BouncyCastle.Math.EC.ECPoint.CreateScaledPoint*
  commentId: Overload:Org.BouncyCastle.Math.EC.ECPoint.CreateScaledPoint
  name: CreateScaledPoint
  nameWithType: ECPoint.CreateScaledPoint
  fullName: Org.BouncyCastle.Math.EC.ECPoint.CreateScaledPoint
- uid: Org.BouncyCastle.Math.EC.ECPoint.IsInfinity*
  commentId: Overload:Org.BouncyCastle.Math.EC.ECPoint.IsInfinity
  name: IsInfinity
  nameWithType: ECPoint.IsInfinity
  fullName: Org.BouncyCastle.Math.EC.ECPoint.IsInfinity
- uid: Org.BouncyCastle.Math.EC.ECPoint.IsCompressed*
  commentId: Overload:Org.BouncyCastle.Math.EC.ECPoint.IsCompressed
  name: IsCompressed
  nameWithType: ECPoint.IsCompressed
  fullName: Org.BouncyCastle.Math.EC.ECPoint.IsCompressed
- uid: Org.BouncyCastle.Math.EC.ECPoint.IsValid*
  commentId: Overload:Org.BouncyCastle.Math.EC.ECPoint.IsValid
  name: IsValid
  nameWithType: ECPoint.IsValid
  fullName: Org.BouncyCastle.Math.EC.ECPoint.IsValid
- uid: Org.BouncyCastle.Math.EC.ECPoint.ScaleX*
  commentId: Overload:Org.BouncyCastle.Math.EC.ECPoint.ScaleX
  name: ScaleX
  nameWithType: ECPoint.ScaleX
  fullName: Org.BouncyCastle.Math.EC.ECPoint.ScaleX
- uid: Org.BouncyCastle.Math.EC.ECPoint.ScaleY*
  commentId: Overload:Org.BouncyCastle.Math.EC.ECPoint.ScaleY
  name: ScaleY
  nameWithType: ECPoint.ScaleY
  fullName: Org.BouncyCastle.Math.EC.ECPoint.ScaleY
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Org.BouncyCastle.Math.EC.ECPoint.Equals*
  commentId: Overload:Org.BouncyCastle.Math.EC.ECPoint.Equals
  name: Equals
  nameWithType: ECPoint.Equals
  fullName: Org.BouncyCastle.Math.EC.ECPoint.Equals
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Org.BouncyCastle.Math.EC.ECPoint.GetHashCode*
  commentId: Overload:Org.BouncyCastle.Math.EC.ECPoint.GetHashCode
  name: GetHashCode
  nameWithType: ECPoint.GetHashCode
  fullName: Org.BouncyCastle.Math.EC.ECPoint.GetHashCode
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Org.BouncyCastle.Math.EC.ECPoint.ToString*
  commentId: Overload:Org.BouncyCastle.Math.EC.ECPoint.ToString
  name: ToString
  nameWithType: ECPoint.ToString
  fullName: Org.BouncyCastle.Math.EC.ECPoint.ToString
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Org.BouncyCastle.Math.EC.ECPoint.GetEncoded*
  commentId: Overload:Org.BouncyCastle.Math.EC.ECPoint.GetEncoded
  name: GetEncoded
  nameWithType: ECPoint.GetEncoded
  fullName: Org.BouncyCastle.Math.EC.ECPoint.GetEncoded
- uid: System.Byte[]
  isExternal: true
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullName.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Org.BouncyCastle.Math.EC.ECPoint.CompressionYTilde*
  commentId: Overload:Org.BouncyCastle.Math.EC.ECPoint.CompressionYTilde
  name: CompressionYTilde
  nameWithType: ECPoint.CompressionYTilde
  fullName: Org.BouncyCastle.Math.EC.ECPoint.CompressionYTilde
- uid: Org.BouncyCastle.Math.EC.ECPoint.Add*
  commentId: Overload:Org.BouncyCastle.Math.EC.ECPoint.Add
  name: Add
  nameWithType: ECPoint.Add
  fullName: Org.BouncyCastle.Math.EC.ECPoint.Add
- uid: Org.BouncyCastle.Math.EC.ECPoint.Subtract*
  commentId: Overload:Org.BouncyCastle.Math.EC.ECPoint.Subtract
  name: Subtract
  nameWithType: ECPoint.Subtract
  fullName: Org.BouncyCastle.Math.EC.ECPoint.Subtract
- uid: Org.BouncyCastle.Math.EC.ECPoint.Negate*
  commentId: Overload:Org.BouncyCastle.Math.EC.ECPoint.Negate
  name: Negate
  nameWithType: ECPoint.Negate
  fullName: Org.BouncyCastle.Math.EC.ECPoint.Negate
- uid: Org.BouncyCastle.Math.EC.ECPoint.TimesPow2*
  commentId: Overload:Org.BouncyCastle.Math.EC.ECPoint.TimesPow2
  name: TimesPow2
  nameWithType: ECPoint.TimesPow2
  fullName: Org.BouncyCastle.Math.EC.ECPoint.TimesPow2
- uid: Org.BouncyCastle.Math.EC.ECPoint.Twice*
  commentId: Overload:Org.BouncyCastle.Math.EC.ECPoint.Twice
  name: Twice
  nameWithType: ECPoint.Twice
  fullName: Org.BouncyCastle.Math.EC.ECPoint.Twice
- uid: Org.BouncyCastle.Math.EC.ECPoint.Multiply*
  commentId: Overload:Org.BouncyCastle.Math.EC.ECPoint.Multiply
  name: Multiply
  nameWithType: ECPoint.Multiply
  fullName: Org.BouncyCastle.Math.EC.ECPoint.Multiply
- uid: Org.BouncyCastle.Math.BigInteger
  commentId: T:Org.BouncyCastle.Math.BigInteger
  parent: Org.BouncyCastle.Math
  name: BigInteger
  nameWithType: BigInteger
  fullName: Org.BouncyCastle.Math.BigInteger
- uid: Org.BouncyCastle.Math
  commentId: N:Org.BouncyCastle.Math
  name: Org.BouncyCastle.Math
  nameWithType: Org.BouncyCastle.Math
  fullName: Org.BouncyCastle.Math
- uid: Org.BouncyCastle.Math.EC.ECPoint.TwicePlus*
  commentId: Overload:Org.BouncyCastle.Math.EC.ECPoint.TwicePlus
  name: TwicePlus
  nameWithType: ECPoint.TwicePlus
  fullName: Org.BouncyCastle.Math.EC.ECPoint.TwicePlus
- uid: Org.BouncyCastle.Math.EC.ECPoint.ThreeTimes*
  commentId: Overload:Org.BouncyCastle.Math.EC.ECPoint.ThreeTimes
  name: ThreeTimes
  nameWithType: ECPoint.ThreeTimes
  fullName: Org.BouncyCastle.Math.EC.ECPoint.ThreeTimes
