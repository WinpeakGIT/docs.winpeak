### YamlMime:ManagedReference
items:
- uid: Org.BouncyCastle.Crypto.Tls.TlsSignerCredentials
  commentId: T:Org.BouncyCastle.Crypto.Tls.TlsSignerCredentials
  id: TlsSignerCredentials
  parent: Org.BouncyCastle.Crypto.Tls
  children:
  - Org.BouncyCastle.Crypto.Tls.TlsSignerCredentials.GenerateCertificateSignature(System.Byte[])
  - Org.BouncyCastle.Crypto.Tls.TlsSignerCredentials.SignatureAndHashAlgorithm
  langs:
  - csharp
  - vb
  name: TlsSignerCredentials
  nameWithType: TlsSignerCredentials
  fullName: Org.BouncyCastle.Crypto.Tls.TlsSignerCredentials
  type: Interface
  source:
    id: TlsSignerCredentials
    path: ''
    startLine: 130339
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Tls
  syntax:
    content: 'public interface TlsSignerCredentials : TlsCredentials'
    content.vb: >-
      Public Interface TlsSignerCredentials
          Inherits TlsCredentials
  inheritedMembers:
  - Org.BouncyCastle.Crypto.Tls.TlsCredentials.Certificate
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Org.BouncyCastle.Crypto.Tls.TlsSignerCredentials.GenerateCertificateSignature(System.Byte[])
  commentId: M:Org.BouncyCastle.Crypto.Tls.TlsSignerCredentials.GenerateCertificateSignature(System.Byte[])
  id: GenerateCertificateSignature(System.Byte[])
  parent: Org.BouncyCastle.Crypto.Tls.TlsSignerCredentials
  langs:
  - csharp
  - vb
  name: GenerateCertificateSignature(Byte[])
  nameWithType: TlsSignerCredentials.GenerateCertificateSignature(Byte[])
  fullName: Org.BouncyCastle.Crypto.Tls.TlsSignerCredentials.GenerateCertificateSignature(System.Byte[])
  type: Method
  source:
    id: GenerateCertificateSignature
    path: ''
    startLine: 130343
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Tls
  example: []
  syntax:
    content: byte[] GenerateCertificateSignature(byte[] hash)
    parameters:
    - id: hash
      type: System.Byte[]
    return:
      type: System.Byte[]
    content.vb: Function GenerateCertificateSignature(hash As Byte()) As Byte()
  overload: Org.BouncyCastle.Crypto.Tls.TlsSignerCredentials.GenerateCertificateSignature*
  nameWithType.vb: TlsSignerCredentials.GenerateCertificateSignature(Byte())
  fullName.vb: Org.BouncyCastle.Crypto.Tls.TlsSignerCredentials.GenerateCertificateSignature(System.Byte())
  name.vb: GenerateCertificateSignature(Byte())
- uid: Org.BouncyCastle.Crypto.Tls.TlsSignerCredentials.SignatureAndHashAlgorithm
  commentId: P:Org.BouncyCastle.Crypto.Tls.TlsSignerCredentials.SignatureAndHashAlgorithm
  id: SignatureAndHashAlgorithm
  parent: Org.BouncyCastle.Crypto.Tls.TlsSignerCredentials
  langs:
  - csharp
  - vb
  name: SignatureAndHashAlgorithm
  nameWithType: TlsSignerCredentials.SignatureAndHashAlgorithm
  fullName: Org.BouncyCastle.Crypto.Tls.TlsSignerCredentials.SignatureAndHashAlgorithm
  type: Property
  source:
    id: SignatureAndHashAlgorithm
    path: ''
    startLine: 130345
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Tls
  syntax:
    content: SignatureAndHashAlgorithm SignatureAndHashAlgorithm { get; }
    parameters: []
    return:
      type: Org.BouncyCastle.Crypto.Tls.SignatureAndHashAlgorithm
    content.vb: ReadOnly Property SignatureAndHashAlgorithm As SignatureAndHashAlgorithm
  overload: Org.BouncyCastle.Crypto.Tls.TlsSignerCredentials.SignatureAndHashAlgorithm*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
references:
- uid: Org.BouncyCastle.Crypto.Tls
  commentId: N:Org.BouncyCastle.Crypto.Tls
  name: Org.BouncyCastle.Crypto.Tls
  nameWithType: Org.BouncyCastle.Crypto.Tls
  fullName: Org.BouncyCastle.Crypto.Tls
- uid: Org.BouncyCastle.Crypto.Tls.TlsCredentials.Certificate
  commentId: P:Org.BouncyCastle.Crypto.Tls.TlsCredentials.Certificate
  parent: Org.BouncyCastle.Crypto.Tls.TlsCredentials
  name: Certificate
  nameWithType: TlsCredentials.Certificate
  fullName: Org.BouncyCastle.Crypto.Tls.TlsCredentials.Certificate
- uid: Org.BouncyCastle.Crypto.Tls.TlsCredentials
  commentId: T:Org.BouncyCastle.Crypto.Tls.TlsCredentials
  parent: Org.BouncyCastle.Crypto.Tls
  name: TlsCredentials
  nameWithType: TlsCredentials
  fullName: Org.BouncyCastle.Crypto.Tls.TlsCredentials
- uid: Org.BouncyCastle.Crypto.Tls.TlsSignerCredentials.GenerateCertificateSignature*
  commentId: Overload:Org.BouncyCastle.Crypto.Tls.TlsSignerCredentials.GenerateCertificateSignature
  name: GenerateCertificateSignature
  nameWithType: TlsSignerCredentials.GenerateCertificateSignature
  fullName: Org.BouncyCastle.Crypto.Tls.TlsSignerCredentials.GenerateCertificateSignature
- uid: System.Byte[]
  isExternal: true
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullName.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Org.BouncyCastle.Crypto.Tls.TlsSignerCredentials.SignatureAndHashAlgorithm*
  commentId: Overload:Org.BouncyCastle.Crypto.Tls.TlsSignerCredentials.SignatureAndHashAlgorithm
  name: SignatureAndHashAlgorithm
  nameWithType: TlsSignerCredentials.SignatureAndHashAlgorithm
  fullName: Org.BouncyCastle.Crypto.Tls.TlsSignerCredentials.SignatureAndHashAlgorithm
- uid: Org.BouncyCastle.Crypto.Tls.SignatureAndHashAlgorithm
  commentId: T:Org.BouncyCastle.Crypto.Tls.SignatureAndHashAlgorithm
  parent: Org.BouncyCastle.Crypto.Tls
  name: SignatureAndHashAlgorithm
  nameWithType: SignatureAndHashAlgorithm
  fullName: Org.BouncyCastle.Crypto.Tls.SignatureAndHashAlgorithm
