### YamlMime:ManagedReference
items:
- uid: Org.BouncyCastle.Crypto.Tls.AbstractTlsClient
  commentId: T:Org.BouncyCastle.Crypto.Tls.AbstractTlsClient
  id: AbstractTlsClient
  parent: Org.BouncyCastle.Crypto.Tls
  children:
  - Org.BouncyCastle.Crypto.Tls.AbstractTlsClient.#ctor
  - Org.BouncyCastle.Crypto.Tls.AbstractTlsClient.#ctor(Org.BouncyCastle.Crypto.Tls.TlsCipherFactory)
  - Org.BouncyCastle.Crypto.Tls.AbstractTlsClient.AllowUnexpectedServerExtension(System.Int32,System.Byte[])
  - Org.BouncyCastle.Crypto.Tls.AbstractTlsClient.CheckForUnexpectedServerExtension(System.Collections.IDictionary,System.Int32)
  - Org.BouncyCastle.Crypto.Tls.AbstractTlsClient.ClientHelloRecordLayerVersion
  - Org.BouncyCastle.Crypto.Tls.AbstractTlsClient.ClientVersion
  - Org.BouncyCastle.Crypto.Tls.AbstractTlsClient.GetAuthentication
  - Org.BouncyCastle.Crypto.Tls.AbstractTlsClient.GetCipher
  - Org.BouncyCastle.Crypto.Tls.AbstractTlsClient.GetCipherSuites
  - Org.BouncyCastle.Crypto.Tls.AbstractTlsClient.GetClientExtensions
  - Org.BouncyCastle.Crypto.Tls.AbstractTlsClient.GetClientSupplementalData
  - Org.BouncyCastle.Crypto.Tls.AbstractTlsClient.GetCompression
  - Org.BouncyCastle.Crypto.Tls.AbstractTlsClient.GetCompressionMethods
  - Org.BouncyCastle.Crypto.Tls.AbstractTlsClient.GetKeyExchange
  - Org.BouncyCastle.Crypto.Tls.AbstractTlsClient.GetSessionToResume
  - Org.BouncyCastle.Crypto.Tls.AbstractTlsClient.HostNames
  - Org.BouncyCastle.Crypto.Tls.AbstractTlsClient.Init(Org.BouncyCastle.Crypto.Tls.TlsClientContext)
  - Org.BouncyCastle.Crypto.Tls.AbstractTlsClient.IsFallback
  - Org.BouncyCastle.Crypto.Tls.AbstractTlsClient.mCipherFactory
  - Org.BouncyCastle.Crypto.Tls.AbstractTlsClient.mClientECPointFormats
  - Org.BouncyCastle.Crypto.Tls.AbstractTlsClient.mContext
  - Org.BouncyCastle.Crypto.Tls.AbstractTlsClient.MinimumVersion
  - Org.BouncyCastle.Crypto.Tls.AbstractTlsClient.mNamedCurves
  - Org.BouncyCastle.Crypto.Tls.AbstractTlsClient.mSelectedCipherSuite
  - Org.BouncyCastle.Crypto.Tls.AbstractTlsClient.mSelectedCompressionMethod
  - Org.BouncyCastle.Crypto.Tls.AbstractTlsClient.mServerECPointFormats
  - Org.BouncyCastle.Crypto.Tls.AbstractTlsClient.mSupportedSignatureAlgorithms
  - Org.BouncyCastle.Crypto.Tls.AbstractTlsClient.NotifyNewSessionTicket(Org.BouncyCastle.Crypto.Tls.NewSessionTicket)
  - Org.BouncyCastle.Crypto.Tls.AbstractTlsClient.NotifySelectedCipherSuite(System.Int32)
  - Org.BouncyCastle.Crypto.Tls.AbstractTlsClient.NotifySelectedCompressionMethod(System.Byte)
  - Org.BouncyCastle.Crypto.Tls.AbstractTlsClient.NotifyServerVersion(Org.BouncyCastle.Crypto.Tls.ProtocolVersion)
  - Org.BouncyCastle.Crypto.Tls.AbstractTlsClient.NotifySessionID(System.Byte[])
  - Org.BouncyCastle.Crypto.Tls.AbstractTlsClient.ProcessServerExtensions(System.Collections.IDictionary)
  - Org.BouncyCastle.Crypto.Tls.AbstractTlsClient.ProcessServerSupplementalData(System.Collections.IList)
  langs:
  - csharp
  - vb
  name: AbstractTlsClient
  nameWithType: AbstractTlsClient
  fullName: Org.BouncyCastle.Crypto.Tls.AbstractTlsClient
  type: Class
  source:
    id: AbstractTlsClient
    path: ''
    startLine: 116257
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Tls
  syntax:
    content: 'public abstract class AbstractTlsClient : AbstractTlsPeer, TlsClient, TlsPeer'
    content.vb: >-
      Public MustInherit Class AbstractTlsClient
          Inherits AbstractTlsPeer
          Implements TlsClient, TlsPeer
  inheritance:
  - System.Object
  - Org.BouncyCastle.Crypto.Tls.AbstractTlsPeer
  derivedClasses:
  - Org.BouncyCastle.Crypto.Tls.DefaultTlsClient
  implements:
  - Org.BouncyCastle.Crypto.Tls.TlsClient
  - Org.BouncyCastle.Crypto.Tls.TlsPeer
  inheritedMembers:
  - Org.BouncyCastle.Crypto.Tls.AbstractTlsPeer.ShouldUseGmtUnixTime
  - Org.BouncyCastle.Crypto.Tls.AbstractTlsPeer.NotifySecureRenegotiation(System.Boolean)
  - Org.BouncyCastle.Crypto.Tls.AbstractTlsPeer.NotifyAlertRaised(System.Byte,System.Byte,System.String,System.Exception)
  - Org.BouncyCastle.Crypto.Tls.AbstractTlsPeer.NotifyAlertReceived(System.Byte,System.Byte)
  - Org.BouncyCastle.Crypto.Tls.AbstractTlsPeer.NotifyHandshakeComplete
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ToString
  - System.Object.ReferenceEquals(System.Object,System.Object)
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: Org.BouncyCastle.Crypto.Tls.AbstractTlsClient.mCipherFactory
  commentId: F:Org.BouncyCastle.Crypto.Tls.AbstractTlsClient.mCipherFactory
  id: mCipherFactory
  parent: Org.BouncyCastle.Crypto.Tls.AbstractTlsClient
  langs:
  - csharp
  - vb
  name: mCipherFactory
  nameWithType: AbstractTlsClient.mCipherFactory
  fullName: Org.BouncyCastle.Crypto.Tls.AbstractTlsClient.mCipherFactory
  type: Field
  source:
    id: mCipherFactory
    path: ''
    startLine: 116260
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Tls
  syntax:
    content: protected TlsCipherFactory mCipherFactory
    return:
      type: Org.BouncyCastle.Crypto.Tls.TlsCipherFactory
    content.vb: Protected mCipherFactory As TlsCipherFactory
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Org.BouncyCastle.Crypto.Tls.AbstractTlsClient.mContext
  commentId: F:Org.BouncyCastle.Crypto.Tls.AbstractTlsClient.mContext
  id: mContext
  parent: Org.BouncyCastle.Crypto.Tls.AbstractTlsClient
  langs:
  - csharp
  - vb
  name: mContext
  nameWithType: AbstractTlsClient.mContext
  fullName: Org.BouncyCastle.Crypto.Tls.AbstractTlsClient.mContext
  type: Field
  source:
    id: mContext
    path: ''
    startLine: 116262
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Tls
  syntax:
    content: protected TlsClientContext mContext
    return:
      type: Org.BouncyCastle.Crypto.Tls.TlsClientContext
    content.vb: Protected mContext As TlsClientContext
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Org.BouncyCastle.Crypto.Tls.AbstractTlsClient.mSupportedSignatureAlgorithms
  commentId: F:Org.BouncyCastle.Crypto.Tls.AbstractTlsClient.mSupportedSignatureAlgorithms
  id: mSupportedSignatureAlgorithms
  parent: Org.BouncyCastle.Crypto.Tls.AbstractTlsClient
  langs:
  - csharp
  - vb
  name: mSupportedSignatureAlgorithms
  nameWithType: AbstractTlsClient.mSupportedSignatureAlgorithms
  fullName: Org.BouncyCastle.Crypto.Tls.AbstractTlsClient.mSupportedSignatureAlgorithms
  type: Field
  source:
    id: mSupportedSignatureAlgorithms
    path: ''
    startLine: 116264
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Tls
  syntax:
    content: protected IList mSupportedSignatureAlgorithms
    return:
      type: System.Collections.IList
    content.vb: Protected mSupportedSignatureAlgorithms As IList
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Org.BouncyCastle.Crypto.Tls.AbstractTlsClient.mNamedCurves
  commentId: F:Org.BouncyCastle.Crypto.Tls.AbstractTlsClient.mNamedCurves
  id: mNamedCurves
  parent: Org.BouncyCastle.Crypto.Tls.AbstractTlsClient
  langs:
  - csharp
  - vb
  name: mNamedCurves
  nameWithType: AbstractTlsClient.mNamedCurves
  fullName: Org.BouncyCastle.Crypto.Tls.AbstractTlsClient.mNamedCurves
  type: Field
  source:
    id: mNamedCurves
    path: ''
    startLine: 116265
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Tls
  syntax:
    content: protected int[] mNamedCurves
    return:
      type: System.Int32[]
    content.vb: Protected mNamedCurves As Integer()
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Org.BouncyCastle.Crypto.Tls.AbstractTlsClient.mClientECPointFormats
  commentId: F:Org.BouncyCastle.Crypto.Tls.AbstractTlsClient.mClientECPointFormats
  id: mClientECPointFormats
  parent: Org.BouncyCastle.Crypto.Tls.AbstractTlsClient
  langs:
  - csharp
  - vb
  name: mClientECPointFormats
  nameWithType: AbstractTlsClient.mClientECPointFormats
  fullName: Org.BouncyCastle.Crypto.Tls.AbstractTlsClient.mClientECPointFormats
  type: Field
  source:
    id: mClientECPointFormats
    path: ''
    startLine: 116266
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Tls
  syntax:
    content: protected byte[] mClientECPointFormats
    return:
      type: System.Byte[]
    content.vb: Protected mClientECPointFormats As Byte()
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Org.BouncyCastle.Crypto.Tls.AbstractTlsClient.mServerECPointFormats
  commentId: F:Org.BouncyCastle.Crypto.Tls.AbstractTlsClient.mServerECPointFormats
  id: mServerECPointFormats
  parent: Org.BouncyCastle.Crypto.Tls.AbstractTlsClient
  langs:
  - csharp
  - vb
  name: mServerECPointFormats
  nameWithType: AbstractTlsClient.mServerECPointFormats
  fullName: Org.BouncyCastle.Crypto.Tls.AbstractTlsClient.mServerECPointFormats
  type: Field
  source:
    id: mServerECPointFormats
    path: ''
    startLine: 116266
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Tls
  syntax:
    content: protected byte[] mServerECPointFormats
    return:
      type: System.Byte[]
    content.vb: Protected mServerECPointFormats As Byte()
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Org.BouncyCastle.Crypto.Tls.AbstractTlsClient.mSelectedCipherSuite
  commentId: F:Org.BouncyCastle.Crypto.Tls.AbstractTlsClient.mSelectedCipherSuite
  id: mSelectedCipherSuite
  parent: Org.BouncyCastle.Crypto.Tls.AbstractTlsClient
  langs:
  - csharp
  - vb
  name: mSelectedCipherSuite
  nameWithType: AbstractTlsClient.mSelectedCipherSuite
  fullName: Org.BouncyCastle.Crypto.Tls.AbstractTlsClient.mSelectedCipherSuite
  type: Field
  source:
    id: mSelectedCipherSuite
    path: ''
    startLine: 116268
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Tls
  syntax:
    content: protected int mSelectedCipherSuite
    return:
      type: System.Int32
    content.vb: Protected mSelectedCipherSuite As Integer
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Org.BouncyCastle.Crypto.Tls.AbstractTlsClient.mSelectedCompressionMethod
  commentId: F:Org.BouncyCastle.Crypto.Tls.AbstractTlsClient.mSelectedCompressionMethod
  id: mSelectedCompressionMethod
  parent: Org.BouncyCastle.Crypto.Tls.AbstractTlsClient
  langs:
  - csharp
  - vb
  name: mSelectedCompressionMethod
  nameWithType: AbstractTlsClient.mSelectedCompressionMethod
  fullName: Org.BouncyCastle.Crypto.Tls.AbstractTlsClient.mSelectedCompressionMethod
  type: Field
  source:
    id: mSelectedCompressionMethod
    path: ''
    startLine: 116269
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Tls
  syntax:
    content: protected short mSelectedCompressionMethod
    return:
      type: System.Int16
    content.vb: Protected mSelectedCompressionMethod As Short
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Org.BouncyCastle.Crypto.Tls.AbstractTlsClient.HostNames
  commentId: P:Org.BouncyCastle.Crypto.Tls.AbstractTlsClient.HostNames
  id: HostNames
  parent: Org.BouncyCastle.Crypto.Tls.AbstractTlsClient
  langs:
  - csharp
  - vb
  name: HostNames
  nameWithType: AbstractTlsClient.HostNames
  fullName: Org.BouncyCastle.Crypto.Tls.AbstractTlsClient.HostNames
  type: Property
  source:
    id: HostNames
    path: ''
    startLine: 116271
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Tls
  syntax:
    content: public List<string> HostNames { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.List{System.String}
    content.vb: Public Property HostNames As List(Of String)
  overload: Org.BouncyCastle.Crypto.Tls.AbstractTlsClient.HostNames*
  implements:
  - Org.BouncyCastle.Crypto.Tls.TlsClient.HostNames
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Org.BouncyCastle.Crypto.Tls.AbstractTlsClient.#ctor
  commentId: M:Org.BouncyCastle.Crypto.Tls.AbstractTlsClient.#ctor
  id: '#ctor'
  parent: Org.BouncyCastle.Crypto.Tls.AbstractTlsClient
  langs:
  - csharp
  - vb
  name: AbstractTlsClient()
  nameWithType: AbstractTlsClient.AbstractTlsClient()
  fullName: Org.BouncyCastle.Crypto.Tls.AbstractTlsClient.AbstractTlsClient()
  type: Constructor
  source:
    id: .ctor
    path: ''
    startLine: 116273
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Tls
  syntax:
    content: public AbstractTlsClient()
    content.vb: Public Sub New
  overload: Org.BouncyCastle.Crypto.Tls.AbstractTlsClient.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Org.BouncyCastle.Crypto.Tls.AbstractTlsClient.#ctor(Org.BouncyCastle.Crypto.Tls.TlsCipherFactory)
  commentId: M:Org.BouncyCastle.Crypto.Tls.AbstractTlsClient.#ctor(Org.BouncyCastle.Crypto.Tls.TlsCipherFactory)
  id: '#ctor(Org.BouncyCastle.Crypto.Tls.TlsCipherFactory)'
  parent: Org.BouncyCastle.Crypto.Tls.AbstractTlsClient
  langs:
  - csharp
  - vb
  name: AbstractTlsClient(TlsCipherFactory)
  nameWithType: AbstractTlsClient.AbstractTlsClient(TlsCipherFactory)
  fullName: Org.BouncyCastle.Crypto.Tls.AbstractTlsClient.AbstractTlsClient(Org.BouncyCastle.Crypto.Tls.TlsCipherFactory)
  type: Constructor
  source:
    id: .ctor
    path: ''
    startLine: 116278
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Tls
  syntax:
    content: public AbstractTlsClient(TlsCipherFactory cipherFactory)
    parameters:
    - id: cipherFactory
      type: Org.BouncyCastle.Crypto.Tls.TlsCipherFactory
    content.vb: Public Sub New(cipherFactory As TlsCipherFactory)
  overload: Org.BouncyCastle.Crypto.Tls.AbstractTlsClient.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Org.BouncyCastle.Crypto.Tls.AbstractTlsClient.AllowUnexpectedServerExtension(System.Int32,System.Byte[])
  commentId: M:Org.BouncyCastle.Crypto.Tls.AbstractTlsClient.AllowUnexpectedServerExtension(System.Int32,System.Byte[])
  id: AllowUnexpectedServerExtension(System.Int32,System.Byte[])
  parent: Org.BouncyCastle.Crypto.Tls.AbstractTlsClient
  langs:
  - csharp
  - vb
  name: AllowUnexpectedServerExtension(Int32, Byte[])
  nameWithType: AbstractTlsClient.AllowUnexpectedServerExtension(Int32, Byte[])
  fullName: Org.BouncyCastle.Crypto.Tls.AbstractTlsClient.AllowUnexpectedServerExtension(System.Int32, System.Byte[])
  type: Method
  source:
    id: AllowUnexpectedServerExtension
    path: ''
    startLine: 116283
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Tls
  syntax:
    content: protected virtual bool AllowUnexpectedServerExtension(int extensionType, byte[] extensionData)
    parameters:
    - id: extensionType
      type: System.Int32
    - id: extensionData
      type: System.Byte[]
    return:
      type: System.Boolean
    content.vb: Protected Overridable Function AllowUnexpectedServerExtension(extensionType As Integer, extensionData As Byte()) As Boolean
  overload: Org.BouncyCastle.Crypto.Tls.AbstractTlsClient.AllowUnexpectedServerExtension*
  nameWithType.vb: AbstractTlsClient.AllowUnexpectedServerExtension(Int32, Byte())
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
  fullName.vb: Org.BouncyCastle.Crypto.Tls.AbstractTlsClient.AllowUnexpectedServerExtension(System.Int32, System.Byte())
  name.vb: AllowUnexpectedServerExtension(Int32, Byte())
- uid: Org.BouncyCastle.Crypto.Tls.AbstractTlsClient.CheckForUnexpectedServerExtension(System.Collections.IDictionary,System.Int32)
  commentId: M:Org.BouncyCastle.Crypto.Tls.AbstractTlsClient.CheckForUnexpectedServerExtension(System.Collections.IDictionary,System.Int32)
  id: CheckForUnexpectedServerExtension(System.Collections.IDictionary,System.Int32)
  parent: Org.BouncyCastle.Crypto.Tls.AbstractTlsClient
  langs:
  - csharp
  - vb
  name: CheckForUnexpectedServerExtension(IDictionary, Int32)
  nameWithType: AbstractTlsClient.CheckForUnexpectedServerExtension(IDictionary, Int32)
  fullName: Org.BouncyCastle.Crypto.Tls.AbstractTlsClient.CheckForUnexpectedServerExtension(System.Collections.IDictionary, System.Int32)
  type: Method
  source:
    id: CheckForUnexpectedServerExtension
    path: ''
    startLine: 116300
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Tls
  syntax:
    content: protected virtual void CheckForUnexpectedServerExtension(IDictionary serverExtensions, int extensionType)
    parameters:
    - id: serverExtensions
      type: System.Collections.IDictionary
    - id: extensionType
      type: System.Int32
    content.vb: Protected Overridable Sub CheckForUnexpectedServerExtension(serverExtensions As IDictionary, extensionType As Integer)
  overload: Org.BouncyCastle.Crypto.Tls.AbstractTlsClient.CheckForUnexpectedServerExtension*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: Org.BouncyCastle.Crypto.Tls.AbstractTlsClient.Init(Org.BouncyCastle.Crypto.Tls.TlsClientContext)
  commentId: M:Org.BouncyCastle.Crypto.Tls.AbstractTlsClient.Init(Org.BouncyCastle.Crypto.Tls.TlsClientContext)
  id: Init(Org.BouncyCastle.Crypto.Tls.TlsClientContext)
  parent: Org.BouncyCastle.Crypto.Tls.AbstractTlsClient
  langs:
  - csharp
  - vb
  name: Init(TlsClientContext)
  nameWithType: AbstractTlsClient.Init(TlsClientContext)
  fullName: Org.BouncyCastle.Crypto.Tls.AbstractTlsClient.Init(Org.BouncyCastle.Crypto.Tls.TlsClientContext)
  type: Method
  source:
    id: Init
    path: ''
    startLine: 116309
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Tls
  syntax:
    content: public virtual void Init(TlsClientContext context)
    parameters:
    - id: context
      type: Org.BouncyCastle.Crypto.Tls.TlsClientContext
    content.vb: Public Overridable Sub Init(context As TlsClientContext)
  overload: Org.BouncyCastle.Crypto.Tls.AbstractTlsClient.Init*
  implements:
  - Org.BouncyCastle.Crypto.Tls.TlsClient.Init(Org.BouncyCastle.Crypto.Tls.TlsClientContext)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Org.BouncyCastle.Crypto.Tls.AbstractTlsClient.GetSessionToResume
  commentId: M:Org.BouncyCastle.Crypto.Tls.AbstractTlsClient.GetSessionToResume
  id: GetSessionToResume
  parent: Org.BouncyCastle.Crypto.Tls.AbstractTlsClient
  langs:
  - csharp
  - vb
  name: GetSessionToResume()
  nameWithType: AbstractTlsClient.GetSessionToResume()
  fullName: Org.BouncyCastle.Crypto.Tls.AbstractTlsClient.GetSessionToResume()
  type: Method
  source:
    id: GetSessionToResume
    path: ''
    startLine: 116314
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Tls
  syntax:
    content: public virtual TlsSession GetSessionToResume()
    return:
      type: Org.BouncyCastle.Crypto.Tls.TlsSession
    content.vb: Public Overridable Function GetSessionToResume As TlsSession
  overload: Org.BouncyCastle.Crypto.Tls.AbstractTlsClient.GetSessionToResume*
  implements:
  - Org.BouncyCastle.Crypto.Tls.TlsClient.GetSessionToResume
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Org.BouncyCastle.Crypto.Tls.AbstractTlsClient.ClientHelloRecordLayerVersion
  commentId: P:Org.BouncyCastle.Crypto.Tls.AbstractTlsClient.ClientHelloRecordLayerVersion
  id: ClientHelloRecordLayerVersion
  parent: Org.BouncyCastle.Crypto.Tls.AbstractTlsClient
  langs:
  - csharp
  - vb
  name: ClientHelloRecordLayerVersion
  nameWithType: AbstractTlsClient.ClientHelloRecordLayerVersion
  fullName: Org.BouncyCastle.Crypto.Tls.AbstractTlsClient.ClientHelloRecordLayerVersion
  type: Property
  source:
    id: ClientHelloRecordLayerVersion
    path: ''
    startLine: 116319
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Tls
  syntax:
    content: public virtual ProtocolVersion ClientHelloRecordLayerVersion { get; }
    parameters: []
    return:
      type: Org.BouncyCastle.Crypto.Tls.ProtocolVersion
    content.vb: Public Overridable ReadOnly Property ClientHelloRecordLayerVersion As ProtocolVersion
  overload: Org.BouncyCastle.Crypto.Tls.AbstractTlsClient.ClientHelloRecordLayerVersion*
  implements:
  - Org.BouncyCastle.Crypto.Tls.TlsClient.ClientHelloRecordLayerVersion
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: Org.BouncyCastle.Crypto.Tls.AbstractTlsClient.ClientVersion
  commentId: P:Org.BouncyCastle.Crypto.Tls.AbstractTlsClient.ClientVersion
  id: ClientVersion
  parent: Org.BouncyCastle.Crypto.Tls.AbstractTlsClient
  langs:
  - csharp
  - vb
  name: ClientVersion
  nameWithType: AbstractTlsClient.ClientVersion
  fullName: Org.BouncyCastle.Crypto.Tls.AbstractTlsClient.ClientVersion
  type: Property
  source:
    id: ClientVersion
    path: ''
    startLine: 116334
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Tls
  syntax:
    content: public virtual ProtocolVersion ClientVersion { get; }
    parameters: []
    return:
      type: Org.BouncyCastle.Crypto.Tls.ProtocolVersion
    content.vb: Public Overridable ReadOnly Property ClientVersion As ProtocolVersion
  overload: Org.BouncyCastle.Crypto.Tls.AbstractTlsClient.ClientVersion*
  implements:
  - Org.BouncyCastle.Crypto.Tls.TlsClient.ClientVersion
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: Org.BouncyCastle.Crypto.Tls.AbstractTlsClient.IsFallback
  commentId: P:Org.BouncyCastle.Crypto.Tls.AbstractTlsClient.IsFallback
  id: IsFallback
  parent: Org.BouncyCastle.Crypto.Tls.AbstractTlsClient
  langs:
  - csharp
  - vb
  name: IsFallback
  nameWithType: AbstractTlsClient.IsFallback
  fullName: Org.BouncyCastle.Crypto.Tls.AbstractTlsClient.IsFallback
  type: Property
  source:
    id: IsFallback
    path: ''
    startLine: 116339
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Tls
  syntax:
    content: public virtual bool IsFallback { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Overridable ReadOnly Property IsFallback As Boolean
  overload: Org.BouncyCastle.Crypto.Tls.AbstractTlsClient.IsFallback*
  implements:
  - Org.BouncyCastle.Crypto.Tls.TlsClient.IsFallback
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: Org.BouncyCastle.Crypto.Tls.AbstractTlsClient.GetClientExtensions
  commentId: M:Org.BouncyCastle.Crypto.Tls.AbstractTlsClient.GetClientExtensions
  id: GetClientExtensions
  parent: Org.BouncyCastle.Crypto.Tls.AbstractTlsClient
  langs:
  - csharp
  - vb
  name: GetClientExtensions()
  nameWithType: AbstractTlsClient.GetClientExtensions()
  fullName: Org.BouncyCastle.Crypto.Tls.AbstractTlsClient.GetClientExtensions()
  type: Method
  source:
    id: GetClientExtensions
    path: ''
    startLine: 116349
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Tls
  syntax:
    content: public virtual IDictionary GetClientExtensions()
    return:
      type: System.Collections.IDictionary
    content.vb: Public Overridable Function GetClientExtensions As IDictionary
  overload: Org.BouncyCastle.Crypto.Tls.AbstractTlsClient.GetClientExtensions*
  implements:
  - Org.BouncyCastle.Crypto.Tls.TlsClient.GetClientExtensions
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Org.BouncyCastle.Crypto.Tls.AbstractTlsClient.MinimumVersion
  commentId: P:Org.BouncyCastle.Crypto.Tls.AbstractTlsClient.MinimumVersion
  id: MinimumVersion
  parent: Org.BouncyCastle.Crypto.Tls.AbstractTlsClient
  langs:
  - csharp
  - vb
  name: MinimumVersion
  nameWithType: AbstractTlsClient.MinimumVersion
  fullName: Org.BouncyCastle.Crypto.Tls.AbstractTlsClient.MinimumVersion
  type: Property
  source:
    id: MinimumVersion
    path: ''
    startLine: 116405
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Tls
  syntax:
    content: public virtual ProtocolVersion MinimumVersion { get; }
    parameters: []
    return:
      type: Org.BouncyCastle.Crypto.Tls.ProtocolVersion
    content.vb: Public Overridable ReadOnly Property MinimumVersion As ProtocolVersion
  overload: Org.BouncyCastle.Crypto.Tls.AbstractTlsClient.MinimumVersion*
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: Org.BouncyCastle.Crypto.Tls.AbstractTlsClient.NotifyServerVersion(Org.BouncyCastle.Crypto.Tls.ProtocolVersion)
  commentId: M:Org.BouncyCastle.Crypto.Tls.AbstractTlsClient.NotifyServerVersion(Org.BouncyCastle.Crypto.Tls.ProtocolVersion)
  id: NotifyServerVersion(Org.BouncyCastle.Crypto.Tls.ProtocolVersion)
  parent: Org.BouncyCastle.Crypto.Tls.AbstractTlsClient
  langs:
  - csharp
  - vb
  name: NotifyServerVersion(ProtocolVersion)
  nameWithType: AbstractTlsClient.NotifyServerVersion(ProtocolVersion)
  fullName: Org.BouncyCastle.Crypto.Tls.AbstractTlsClient.NotifyServerVersion(Org.BouncyCastle.Crypto.Tls.ProtocolVersion)
  type: Method
  source:
    id: NotifyServerVersion
    path: ''
    startLine: 116410
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Tls
  syntax:
    content: public virtual void NotifyServerVersion(ProtocolVersion serverVersion)
    parameters:
    - id: serverVersion
      type: Org.BouncyCastle.Crypto.Tls.ProtocolVersion
    content.vb: Public Overridable Sub NotifyServerVersion(serverVersion As ProtocolVersion)
  overload: Org.BouncyCastle.Crypto.Tls.AbstractTlsClient.NotifyServerVersion*
  implements:
  - Org.BouncyCastle.Crypto.Tls.TlsClient.NotifyServerVersion(Org.BouncyCastle.Crypto.Tls.ProtocolVersion)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Org.BouncyCastle.Crypto.Tls.AbstractTlsClient.GetCipherSuites
  commentId: M:Org.BouncyCastle.Crypto.Tls.AbstractTlsClient.GetCipherSuites
  id: GetCipherSuites
  parent: Org.BouncyCastle.Crypto.Tls.AbstractTlsClient
  langs:
  - csharp
  - vb
  name: GetCipherSuites()
  nameWithType: AbstractTlsClient.GetCipherSuites()
  fullName: Org.BouncyCastle.Crypto.Tls.AbstractTlsClient.GetCipherSuites()
  type: Method
  source:
    id: GetCipherSuites
    path: ''
    startLine: 116416
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Tls
  syntax:
    content: public abstract int[] GetCipherSuites()
    return:
      type: System.Int32[]
    content.vb: Public MustOverride Function GetCipherSuites As Integer()
  overload: Org.BouncyCastle.Crypto.Tls.AbstractTlsClient.GetCipherSuites*
  implements:
  - Org.BouncyCastle.Crypto.Tls.TlsClient.GetCipherSuites
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
- uid: Org.BouncyCastle.Crypto.Tls.AbstractTlsClient.GetCompressionMethods
  commentId: M:Org.BouncyCastle.Crypto.Tls.AbstractTlsClient.GetCompressionMethods
  id: GetCompressionMethods
  parent: Org.BouncyCastle.Crypto.Tls.AbstractTlsClient
  langs:
  - csharp
  - vb
  name: GetCompressionMethods()
  nameWithType: AbstractTlsClient.GetCompressionMethods()
  fullName: Org.BouncyCastle.Crypto.Tls.AbstractTlsClient.GetCompressionMethods()
  type: Method
  source:
    id: GetCompressionMethods
    path: ''
    startLine: 116418
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Tls
  syntax:
    content: public virtual byte[] GetCompressionMethods()
    return:
      type: System.Byte[]
    content.vb: Public Overridable Function GetCompressionMethods As Byte()
  overload: Org.BouncyCastle.Crypto.Tls.AbstractTlsClient.GetCompressionMethods*
  implements:
  - Org.BouncyCastle.Crypto.Tls.TlsClient.GetCompressionMethods
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Org.BouncyCastle.Crypto.Tls.AbstractTlsClient.NotifySessionID(System.Byte[])
  commentId: M:Org.BouncyCastle.Crypto.Tls.AbstractTlsClient.NotifySessionID(System.Byte[])
  id: NotifySessionID(System.Byte[])
  parent: Org.BouncyCastle.Crypto.Tls.AbstractTlsClient
  langs:
  - csharp
  - vb
  name: NotifySessionID(Byte[])
  nameWithType: AbstractTlsClient.NotifySessionID(Byte[])
  fullName: Org.BouncyCastle.Crypto.Tls.AbstractTlsClient.NotifySessionID(System.Byte[])
  type: Method
  source:
    id: NotifySessionID
    path: ''
    startLine: 116423
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Tls
  syntax:
    content: public virtual void NotifySessionID(byte[] sessionID)
    parameters:
    - id: sessionID
      type: System.Byte[]
    content.vb: Public Overridable Sub NotifySessionID(sessionID As Byte())
  overload: Org.BouncyCastle.Crypto.Tls.AbstractTlsClient.NotifySessionID*
  implements:
  - Org.BouncyCastle.Crypto.Tls.TlsClient.NotifySessionID(System.Byte[])
  nameWithType.vb: AbstractTlsClient.NotifySessionID(Byte())
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Org.BouncyCastle.Crypto.Tls.AbstractTlsClient.NotifySessionID(System.Byte())
  name.vb: NotifySessionID(Byte())
- uid: Org.BouncyCastle.Crypto.Tls.AbstractTlsClient.NotifySelectedCipherSuite(System.Int32)
  commentId: M:Org.BouncyCastle.Crypto.Tls.AbstractTlsClient.NotifySelectedCipherSuite(System.Int32)
  id: NotifySelectedCipherSuite(System.Int32)
  parent: Org.BouncyCastle.Crypto.Tls.AbstractTlsClient
  langs:
  - csharp
  - vb
  name: NotifySelectedCipherSuite(Int32)
  nameWithType: AbstractTlsClient.NotifySelectedCipherSuite(Int32)
  fullName: Org.BouncyCastle.Crypto.Tls.AbstractTlsClient.NotifySelectedCipherSuite(System.Int32)
  type: Method
  source:
    id: NotifySelectedCipherSuite
    path: ''
    startLine: 116428
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Tls
  syntax:
    content: public virtual void NotifySelectedCipherSuite(int selectedCipherSuite)
    parameters:
    - id: selectedCipherSuite
      type: System.Int32
    content.vb: Public Overridable Sub NotifySelectedCipherSuite(selectedCipherSuite As Integer)
  overload: Org.BouncyCastle.Crypto.Tls.AbstractTlsClient.NotifySelectedCipherSuite*
  implements:
  - Org.BouncyCastle.Crypto.Tls.TlsClient.NotifySelectedCipherSuite(System.Int32)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Org.BouncyCastle.Crypto.Tls.AbstractTlsClient.NotifySelectedCompressionMethod(System.Byte)
  commentId: M:Org.BouncyCastle.Crypto.Tls.AbstractTlsClient.NotifySelectedCompressionMethod(System.Byte)
  id: NotifySelectedCompressionMethod(System.Byte)
  parent: Org.BouncyCastle.Crypto.Tls.AbstractTlsClient
  langs:
  - csharp
  - vb
  name: NotifySelectedCompressionMethod(Byte)
  nameWithType: AbstractTlsClient.NotifySelectedCompressionMethod(Byte)
  fullName: Org.BouncyCastle.Crypto.Tls.AbstractTlsClient.NotifySelectedCompressionMethod(System.Byte)
  type: Method
  source:
    id: NotifySelectedCompressionMethod
    path: ''
    startLine: 116433
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Tls
  syntax:
    content: public virtual void NotifySelectedCompressionMethod(byte selectedCompressionMethod)
    parameters:
    - id: selectedCompressionMethod
      type: System.Byte
    content.vb: Public Overridable Sub NotifySelectedCompressionMethod(selectedCompressionMethod As Byte)
  overload: Org.BouncyCastle.Crypto.Tls.AbstractTlsClient.NotifySelectedCompressionMethod*
  implements:
  - Org.BouncyCastle.Crypto.Tls.TlsClient.NotifySelectedCompressionMethod(System.Byte)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Org.BouncyCastle.Crypto.Tls.AbstractTlsClient.ProcessServerExtensions(System.Collections.IDictionary)
  commentId: M:Org.BouncyCastle.Crypto.Tls.AbstractTlsClient.ProcessServerExtensions(System.Collections.IDictionary)
  id: ProcessServerExtensions(System.Collections.IDictionary)
  parent: Org.BouncyCastle.Crypto.Tls.AbstractTlsClient
  langs:
  - csharp
  - vb
  name: ProcessServerExtensions(IDictionary)
  nameWithType: AbstractTlsClient.ProcessServerExtensions(IDictionary)
  fullName: Org.BouncyCastle.Crypto.Tls.AbstractTlsClient.ProcessServerExtensions(System.Collections.IDictionary)
  type: Method
  source:
    id: ProcessServerExtensions
    path: ''
    startLine: 116438
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Tls
  syntax:
    content: public virtual void ProcessServerExtensions(IDictionary serverExtensions)
    parameters:
    - id: serverExtensions
      type: System.Collections.IDictionary
    content.vb: Public Overridable Sub ProcessServerExtensions(serverExtensions As IDictionary)
  overload: Org.BouncyCastle.Crypto.Tls.AbstractTlsClient.ProcessServerExtensions*
  implements:
  - Org.BouncyCastle.Crypto.Tls.TlsClient.ProcessServerExtensions(System.Collections.IDictionary)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Org.BouncyCastle.Crypto.Tls.AbstractTlsClient.ProcessServerSupplementalData(System.Collections.IList)
  commentId: M:Org.BouncyCastle.Crypto.Tls.AbstractTlsClient.ProcessServerSupplementalData(System.Collections.IList)
  id: ProcessServerSupplementalData(System.Collections.IList)
  parent: Org.BouncyCastle.Crypto.Tls.AbstractTlsClient
  langs:
  - csharp
  - vb
  name: ProcessServerSupplementalData(IList)
  nameWithType: AbstractTlsClient.ProcessServerSupplementalData(IList)
  fullName: Org.BouncyCastle.Crypto.Tls.AbstractTlsClient.ProcessServerSupplementalData(System.Collections.IList)
  type: Method
  source:
    id: ProcessServerSupplementalData
    path: ''
    startLine: 116469
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Tls
  syntax:
    content: public virtual void ProcessServerSupplementalData(IList serverSupplementalData)
    parameters:
    - id: serverSupplementalData
      type: System.Collections.IList
    content.vb: Public Overridable Sub ProcessServerSupplementalData(serverSupplementalData As IList)
  overload: Org.BouncyCastle.Crypto.Tls.AbstractTlsClient.ProcessServerSupplementalData*
  implements:
  - Org.BouncyCastle.Crypto.Tls.TlsClient.ProcessServerSupplementalData(System.Collections.IList)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Org.BouncyCastle.Crypto.Tls.AbstractTlsClient.GetKeyExchange
  commentId: M:Org.BouncyCastle.Crypto.Tls.AbstractTlsClient.GetKeyExchange
  id: GetKeyExchange
  parent: Org.BouncyCastle.Crypto.Tls.AbstractTlsClient
  langs:
  - csharp
  - vb
  name: GetKeyExchange()
  nameWithType: AbstractTlsClient.GetKeyExchange()
  fullName: Org.BouncyCastle.Crypto.Tls.AbstractTlsClient.GetKeyExchange()
  type: Method
  source:
    id: GetKeyExchange
    path: ''
    startLine: 116475
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Tls
  syntax:
    content: public abstract TlsKeyExchange GetKeyExchange()
    return:
      type: Org.BouncyCastle.Crypto.Tls.TlsKeyExchange
    content.vb: Public MustOverride Function GetKeyExchange As TlsKeyExchange
  overload: Org.BouncyCastle.Crypto.Tls.AbstractTlsClient.GetKeyExchange*
  implements:
  - Org.BouncyCastle.Crypto.Tls.TlsClient.GetKeyExchange
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
- uid: Org.BouncyCastle.Crypto.Tls.AbstractTlsClient.GetAuthentication
  commentId: M:Org.BouncyCastle.Crypto.Tls.AbstractTlsClient.GetAuthentication
  id: GetAuthentication
  parent: Org.BouncyCastle.Crypto.Tls.AbstractTlsClient
  langs:
  - csharp
  - vb
  name: GetAuthentication()
  nameWithType: AbstractTlsClient.GetAuthentication()
  fullName: Org.BouncyCastle.Crypto.Tls.AbstractTlsClient.GetAuthentication()
  type: Method
  source:
    id: GetAuthentication
    path: ''
    startLine: 116477
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Tls
  syntax:
    content: public abstract TlsAuthentication GetAuthentication()
    return:
      type: Org.BouncyCastle.Crypto.Tls.TlsAuthentication
    content.vb: Public MustOverride Function GetAuthentication As TlsAuthentication
  overload: Org.BouncyCastle.Crypto.Tls.AbstractTlsClient.GetAuthentication*
  implements:
  - Org.BouncyCastle.Crypto.Tls.TlsClient.GetAuthentication
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
- uid: Org.BouncyCastle.Crypto.Tls.AbstractTlsClient.GetClientSupplementalData
  commentId: M:Org.BouncyCastle.Crypto.Tls.AbstractTlsClient.GetClientSupplementalData
  id: GetClientSupplementalData
  parent: Org.BouncyCastle.Crypto.Tls.AbstractTlsClient
  langs:
  - csharp
  - vb
  name: GetClientSupplementalData()
  nameWithType: AbstractTlsClient.GetClientSupplementalData()
  fullName: Org.BouncyCastle.Crypto.Tls.AbstractTlsClient.GetClientSupplementalData()
  type: Method
  source:
    id: GetClientSupplementalData
    path: ''
    startLine: 116479
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Tls
  syntax:
    content: public virtual IList GetClientSupplementalData()
    return:
      type: System.Collections.IList
    content.vb: Public Overridable Function GetClientSupplementalData As IList
  overload: Org.BouncyCastle.Crypto.Tls.AbstractTlsClient.GetClientSupplementalData*
  implements:
  - Org.BouncyCastle.Crypto.Tls.TlsClient.GetClientSupplementalData
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Org.BouncyCastle.Crypto.Tls.AbstractTlsClient.GetCompression
  commentId: M:Org.BouncyCastle.Crypto.Tls.AbstractTlsClient.GetCompression
  id: GetCompression
  parent: Org.BouncyCastle.Crypto.Tls.AbstractTlsClient
  langs:
  - csharp
  - vb
  name: GetCompression()
  nameWithType: AbstractTlsClient.GetCompression()
  fullName: Org.BouncyCastle.Crypto.Tls.AbstractTlsClient.GetCompression()
  type: Method
  source:
    id: GetCompression
    path: ''
    startLine: 116484
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Tls
  syntax:
    content: public override TlsCompression GetCompression()
    return:
      type: Org.BouncyCastle.Crypto.Tls.TlsCompression
    content.vb: Public Overrides Function GetCompression As TlsCompression
  overridden: Org.BouncyCastle.Crypto.Tls.AbstractTlsPeer.GetCompression
  overload: Org.BouncyCastle.Crypto.Tls.AbstractTlsClient.GetCompression*
  implements:
  - Org.BouncyCastle.Crypto.Tls.TlsPeer.GetCompression
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Org.BouncyCastle.Crypto.Tls.AbstractTlsClient.GetCipher
  commentId: M:Org.BouncyCastle.Crypto.Tls.AbstractTlsClient.GetCipher
  id: GetCipher
  parent: Org.BouncyCastle.Crypto.Tls.AbstractTlsClient
  langs:
  - csharp
  - vb
  name: GetCipher()
  nameWithType: AbstractTlsClient.GetCipher()
  fullName: Org.BouncyCastle.Crypto.Tls.AbstractTlsClient.GetCipher()
  type: Method
  source:
    id: GetCipher
    path: ''
    startLine: 116504
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Tls
  syntax:
    content: public override TlsCipher GetCipher()
    return:
      type: Org.BouncyCastle.Crypto.Tls.TlsCipher
    content.vb: Public Overrides Function GetCipher As TlsCipher
  overridden: Org.BouncyCastle.Crypto.Tls.AbstractTlsPeer.GetCipher
  overload: Org.BouncyCastle.Crypto.Tls.AbstractTlsClient.GetCipher*
  implements:
  - Org.BouncyCastle.Crypto.Tls.TlsPeer.GetCipher
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Org.BouncyCastle.Crypto.Tls.AbstractTlsClient.NotifyNewSessionTicket(Org.BouncyCastle.Crypto.Tls.NewSessionTicket)
  commentId: M:Org.BouncyCastle.Crypto.Tls.AbstractTlsClient.NotifyNewSessionTicket(Org.BouncyCastle.Crypto.Tls.NewSessionTicket)
  id: NotifyNewSessionTicket(Org.BouncyCastle.Crypto.Tls.NewSessionTicket)
  parent: Org.BouncyCastle.Crypto.Tls.AbstractTlsClient
  langs:
  - csharp
  - vb
  name: NotifyNewSessionTicket(NewSessionTicket)
  nameWithType: AbstractTlsClient.NotifyNewSessionTicket(NewSessionTicket)
  fullName: Org.BouncyCastle.Crypto.Tls.AbstractTlsClient.NotifyNewSessionTicket(Org.BouncyCastle.Crypto.Tls.NewSessionTicket)
  type: Method
  source:
    id: NotifyNewSessionTicket
    path: ''
    startLine: 116512
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Tls
  syntax:
    content: public virtual void NotifyNewSessionTicket(NewSessionTicket newSessionTicket)
    parameters:
    - id: newSessionTicket
      type: Org.BouncyCastle.Crypto.Tls.NewSessionTicket
    content.vb: Public Overridable Sub NotifyNewSessionTicket(newSessionTicket As NewSessionTicket)
  overload: Org.BouncyCastle.Crypto.Tls.AbstractTlsClient.NotifyNewSessionTicket*
  implements:
  - Org.BouncyCastle.Crypto.Tls.TlsClient.NotifyNewSessionTicket(Org.BouncyCastle.Crypto.Tls.NewSessionTicket)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
references:
- uid: Org.BouncyCastle.Crypto.Tls
  commentId: N:Org.BouncyCastle.Crypto.Tls
  name: Org.BouncyCastle.Crypto.Tls
  nameWithType: Org.BouncyCastle.Crypto.Tls
  fullName: Org.BouncyCastle.Crypto.Tls
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Org.BouncyCastle.Crypto.Tls.AbstractTlsPeer
  commentId: T:Org.BouncyCastle.Crypto.Tls.AbstractTlsPeer
  parent: Org.BouncyCastle.Crypto.Tls
  name: AbstractTlsPeer
  nameWithType: AbstractTlsPeer
  fullName: Org.BouncyCastle.Crypto.Tls.AbstractTlsPeer
- uid: Org.BouncyCastle.Crypto.Tls.TlsClient
  commentId: T:Org.BouncyCastle.Crypto.Tls.TlsClient
  parent: Org.BouncyCastle.Crypto.Tls
  name: TlsClient
  nameWithType: TlsClient
  fullName: Org.BouncyCastle.Crypto.Tls.TlsClient
- uid: Org.BouncyCastle.Crypto.Tls.TlsPeer
  commentId: T:Org.BouncyCastle.Crypto.Tls.TlsPeer
  parent: Org.BouncyCastle.Crypto.Tls
  name: TlsPeer
  nameWithType: TlsPeer
  fullName: Org.BouncyCastle.Crypto.Tls.TlsPeer
- uid: Org.BouncyCastle.Crypto.Tls.AbstractTlsPeer.ShouldUseGmtUnixTime
  commentId: M:Org.BouncyCastle.Crypto.Tls.AbstractTlsPeer.ShouldUseGmtUnixTime
  parent: Org.BouncyCastle.Crypto.Tls.AbstractTlsPeer
  name: ShouldUseGmtUnixTime()
  nameWithType: AbstractTlsPeer.ShouldUseGmtUnixTime()
  fullName: Org.BouncyCastle.Crypto.Tls.AbstractTlsPeer.ShouldUseGmtUnixTime()
  spec.csharp:
  - uid: Org.BouncyCastle.Crypto.Tls.AbstractTlsPeer.ShouldUseGmtUnixTime
    name: ShouldUseGmtUnixTime
    nameWithType: AbstractTlsPeer.ShouldUseGmtUnixTime
    fullName: Org.BouncyCastle.Crypto.Tls.AbstractTlsPeer.ShouldUseGmtUnixTime
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Org.BouncyCastle.Crypto.Tls.AbstractTlsPeer.ShouldUseGmtUnixTime
    name: ShouldUseGmtUnixTime
    nameWithType: AbstractTlsPeer.ShouldUseGmtUnixTime
    fullName: Org.BouncyCastle.Crypto.Tls.AbstractTlsPeer.ShouldUseGmtUnixTime
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Org.BouncyCastle.Crypto.Tls.AbstractTlsPeer.NotifySecureRenegotiation(System.Boolean)
  commentId: M:Org.BouncyCastle.Crypto.Tls.AbstractTlsPeer.NotifySecureRenegotiation(System.Boolean)
  parent: Org.BouncyCastle.Crypto.Tls.AbstractTlsPeer
  isExternal: true
  name: NotifySecureRenegotiation(Boolean)
  nameWithType: AbstractTlsPeer.NotifySecureRenegotiation(Boolean)
  fullName: Org.BouncyCastle.Crypto.Tls.AbstractTlsPeer.NotifySecureRenegotiation(System.Boolean)
  spec.csharp:
  - uid: Org.BouncyCastle.Crypto.Tls.AbstractTlsPeer.NotifySecureRenegotiation(System.Boolean)
    name: NotifySecureRenegotiation
    nameWithType: AbstractTlsPeer.NotifySecureRenegotiation
    fullName: Org.BouncyCastle.Crypto.Tls.AbstractTlsPeer.NotifySecureRenegotiation
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Org.BouncyCastle.Crypto.Tls.AbstractTlsPeer.NotifySecureRenegotiation(System.Boolean)
    name: NotifySecureRenegotiation
    nameWithType: AbstractTlsPeer.NotifySecureRenegotiation
    fullName: Org.BouncyCastle.Crypto.Tls.AbstractTlsPeer.NotifySecureRenegotiation
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Org.BouncyCastle.Crypto.Tls.AbstractTlsPeer.NotifyAlertRaised(System.Byte,System.Byte,System.String,System.Exception)
  commentId: M:Org.BouncyCastle.Crypto.Tls.AbstractTlsPeer.NotifyAlertRaised(System.Byte,System.Byte,System.String,System.Exception)
  parent: Org.BouncyCastle.Crypto.Tls.AbstractTlsPeer
  isExternal: true
  name: NotifyAlertRaised(Byte, Byte, String, Exception)
  nameWithType: AbstractTlsPeer.NotifyAlertRaised(Byte, Byte, String, Exception)
  fullName: Org.BouncyCastle.Crypto.Tls.AbstractTlsPeer.NotifyAlertRaised(System.Byte, System.Byte, System.String, System.Exception)
  spec.csharp:
  - uid: Org.BouncyCastle.Crypto.Tls.AbstractTlsPeer.NotifyAlertRaised(System.Byte,System.Byte,System.String,System.Exception)
    name: NotifyAlertRaised
    nameWithType: AbstractTlsPeer.NotifyAlertRaised
    fullName: Org.BouncyCastle.Crypto.Tls.AbstractTlsPeer.NotifyAlertRaised
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Org.BouncyCastle.Crypto.Tls.AbstractTlsPeer.NotifyAlertRaised(System.Byte,System.Byte,System.String,System.Exception)
    name: NotifyAlertRaised
    nameWithType: AbstractTlsPeer.NotifyAlertRaised
    fullName: Org.BouncyCastle.Crypto.Tls.AbstractTlsPeer.NotifyAlertRaised
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Org.BouncyCastle.Crypto.Tls.AbstractTlsPeer.NotifyAlertReceived(System.Byte,System.Byte)
  commentId: M:Org.BouncyCastle.Crypto.Tls.AbstractTlsPeer.NotifyAlertReceived(System.Byte,System.Byte)
  parent: Org.BouncyCastle.Crypto.Tls.AbstractTlsPeer
  isExternal: true
  name: NotifyAlertReceived(Byte, Byte)
  nameWithType: AbstractTlsPeer.NotifyAlertReceived(Byte, Byte)
  fullName: Org.BouncyCastle.Crypto.Tls.AbstractTlsPeer.NotifyAlertReceived(System.Byte, System.Byte)
  spec.csharp:
  - uid: Org.BouncyCastle.Crypto.Tls.AbstractTlsPeer.NotifyAlertReceived(System.Byte,System.Byte)
    name: NotifyAlertReceived
    nameWithType: AbstractTlsPeer.NotifyAlertReceived
    fullName: Org.BouncyCastle.Crypto.Tls.AbstractTlsPeer.NotifyAlertReceived
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Org.BouncyCastle.Crypto.Tls.AbstractTlsPeer.NotifyAlertReceived(System.Byte,System.Byte)
    name: NotifyAlertReceived
    nameWithType: AbstractTlsPeer.NotifyAlertReceived
    fullName: Org.BouncyCastle.Crypto.Tls.AbstractTlsPeer.NotifyAlertReceived
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Org.BouncyCastle.Crypto.Tls.AbstractTlsPeer.NotifyHandshakeComplete
  commentId: M:Org.BouncyCastle.Crypto.Tls.AbstractTlsPeer.NotifyHandshakeComplete
  parent: Org.BouncyCastle.Crypto.Tls.AbstractTlsPeer
  name: NotifyHandshakeComplete()
  nameWithType: AbstractTlsPeer.NotifyHandshakeComplete()
  fullName: Org.BouncyCastle.Crypto.Tls.AbstractTlsPeer.NotifyHandshakeComplete()
  spec.csharp:
  - uid: Org.BouncyCastle.Crypto.Tls.AbstractTlsPeer.NotifyHandshakeComplete
    name: NotifyHandshakeComplete
    nameWithType: AbstractTlsPeer.NotifyHandshakeComplete
    fullName: Org.BouncyCastle.Crypto.Tls.AbstractTlsPeer.NotifyHandshakeComplete
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Org.BouncyCastle.Crypto.Tls.AbstractTlsPeer.NotifyHandshakeComplete
    name: NotifyHandshakeComplete
    nameWithType: AbstractTlsPeer.NotifyHandshakeComplete
    fullName: Org.BouncyCastle.Crypto.Tls.AbstractTlsPeer.NotifyHandshakeComplete
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Org.BouncyCastle.Crypto.Tls.TlsCipherFactory
  commentId: T:Org.BouncyCastle.Crypto.Tls.TlsCipherFactory
  parent: Org.BouncyCastle.Crypto.Tls
  name: TlsCipherFactory
  nameWithType: TlsCipherFactory
  fullName: Org.BouncyCastle.Crypto.Tls.TlsCipherFactory
- uid: Org.BouncyCastle.Crypto.Tls.TlsClientContext
  commentId: T:Org.BouncyCastle.Crypto.Tls.TlsClientContext
  parent: Org.BouncyCastle.Crypto.Tls
  name: TlsClientContext
  nameWithType: TlsClientContext
  fullName: Org.BouncyCastle.Crypto.Tls.TlsClientContext
- uid: System.Collections.IList
  commentId: T:System.Collections.IList
  parent: System.Collections
  isExternal: true
  name: IList
  nameWithType: IList
  fullName: System.Collections.IList
- uid: System.Collections
  commentId: N:System.Collections
  isExternal: true
  name: System.Collections
  nameWithType: System.Collections
  fullName: System.Collections
- uid: System.Int32[]
  isExternal: true
  name: Int32[]
  nameWithType: Int32[]
  fullName: System.Int32[]
  nameWithType.vb: Int32()
  fullName.vb: System.Int32()
  name.vb: Int32()
  spec.csharp:
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Byte[]
  isExternal: true
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullName.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Int16
  commentId: T:System.Int16
  parent: System
  isExternal: true
  name: Int16
  nameWithType: Int16
  fullName: System.Int16
- uid: Org.BouncyCastle.Crypto.Tls.AbstractTlsClient.HostNames*
  commentId: Overload:Org.BouncyCastle.Crypto.Tls.AbstractTlsClient.HostNames
  name: HostNames
  nameWithType: AbstractTlsClient.HostNames
  fullName: Org.BouncyCastle.Crypto.Tls.AbstractTlsClient.HostNames
- uid: Org.BouncyCastle.Crypto.Tls.TlsClient.HostNames
  commentId: P:Org.BouncyCastle.Crypto.Tls.TlsClient.HostNames
  parent: Org.BouncyCastle.Crypto.Tls.TlsClient
  name: HostNames
  nameWithType: TlsClient.HostNames
  fullName: Org.BouncyCastle.Crypto.Tls.TlsClient.HostNames
- uid: System.Collections.Generic.List{System.String}
  commentId: T:System.Collections.Generic.List{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<String>
  nameWithType: List<String>
  fullName: System.Collections.Generic.List<System.String>
  nameWithType.vb: List(Of String)
  fullName.vb: System.Collections.Generic.List(Of System.String)
  name.vb: List(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Org.BouncyCastle.Crypto.Tls.AbstractTlsClient.#ctor*
  commentId: Overload:Org.BouncyCastle.Crypto.Tls.AbstractTlsClient.#ctor
  name: AbstractTlsClient
  nameWithType: AbstractTlsClient.AbstractTlsClient
  fullName: Org.BouncyCastle.Crypto.Tls.AbstractTlsClient.AbstractTlsClient
- uid: Org.BouncyCastle.Crypto.Tls.AbstractTlsClient.AllowUnexpectedServerExtension*
  commentId: Overload:Org.BouncyCastle.Crypto.Tls.AbstractTlsClient.AllowUnexpectedServerExtension
  name: AllowUnexpectedServerExtension
  nameWithType: AbstractTlsClient.AllowUnexpectedServerExtension
  fullName: Org.BouncyCastle.Crypto.Tls.AbstractTlsClient.AllowUnexpectedServerExtension
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Org.BouncyCastle.Crypto.Tls.AbstractTlsClient.CheckForUnexpectedServerExtension*
  commentId: Overload:Org.BouncyCastle.Crypto.Tls.AbstractTlsClient.CheckForUnexpectedServerExtension
  name: CheckForUnexpectedServerExtension
  nameWithType: AbstractTlsClient.CheckForUnexpectedServerExtension
  fullName: Org.BouncyCastle.Crypto.Tls.AbstractTlsClient.CheckForUnexpectedServerExtension
- uid: System.Collections.IDictionary
  commentId: T:System.Collections.IDictionary
  parent: System.Collections
  isExternal: true
  name: IDictionary
  nameWithType: IDictionary
  fullName: System.Collections.IDictionary
- uid: Org.BouncyCastle.Crypto.Tls.AbstractTlsClient.Init*
  commentId: Overload:Org.BouncyCastle.Crypto.Tls.AbstractTlsClient.Init
  name: Init
  nameWithType: AbstractTlsClient.Init
  fullName: Org.BouncyCastle.Crypto.Tls.AbstractTlsClient.Init
- uid: Org.BouncyCastle.Crypto.Tls.TlsClient.Init(Org.BouncyCastle.Crypto.Tls.TlsClientContext)
  commentId: M:Org.BouncyCastle.Crypto.Tls.TlsClient.Init(Org.BouncyCastle.Crypto.Tls.TlsClientContext)
  parent: Org.BouncyCastle.Crypto.Tls.TlsClient
  name: Init(TlsClientContext)
  nameWithType: TlsClient.Init(TlsClientContext)
  fullName: Org.BouncyCastle.Crypto.Tls.TlsClient.Init(Org.BouncyCastle.Crypto.Tls.TlsClientContext)
  spec.csharp:
  - uid: Org.BouncyCastle.Crypto.Tls.TlsClient.Init(Org.BouncyCastle.Crypto.Tls.TlsClientContext)
    name: Init
    nameWithType: TlsClient.Init
    fullName: Org.BouncyCastle.Crypto.Tls.TlsClient.Init
  - name: (
    nameWithType: (
    fullName: (
  - uid: Org.BouncyCastle.Crypto.Tls.TlsClientContext
    name: TlsClientContext
    nameWithType: TlsClientContext
    fullName: Org.BouncyCastle.Crypto.Tls.TlsClientContext
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Org.BouncyCastle.Crypto.Tls.TlsClient.Init(Org.BouncyCastle.Crypto.Tls.TlsClientContext)
    name: Init
    nameWithType: TlsClient.Init
    fullName: Org.BouncyCastle.Crypto.Tls.TlsClient.Init
  - name: (
    nameWithType: (
    fullName: (
  - uid: Org.BouncyCastle.Crypto.Tls.TlsClientContext
    name: TlsClientContext
    nameWithType: TlsClientContext
    fullName: Org.BouncyCastle.Crypto.Tls.TlsClientContext
  - name: )
    nameWithType: )
    fullName: )
- uid: Org.BouncyCastle.Crypto.Tls.AbstractTlsClient.GetSessionToResume*
  commentId: Overload:Org.BouncyCastle.Crypto.Tls.AbstractTlsClient.GetSessionToResume
  name: GetSessionToResume
  nameWithType: AbstractTlsClient.GetSessionToResume
  fullName: Org.BouncyCastle.Crypto.Tls.AbstractTlsClient.GetSessionToResume
- uid: Org.BouncyCastle.Crypto.Tls.TlsClient.GetSessionToResume
  commentId: M:Org.BouncyCastle.Crypto.Tls.TlsClient.GetSessionToResume
  parent: Org.BouncyCastle.Crypto.Tls.TlsClient
  name: GetSessionToResume()
  nameWithType: TlsClient.GetSessionToResume()
  fullName: Org.BouncyCastle.Crypto.Tls.TlsClient.GetSessionToResume()
  spec.csharp:
  - uid: Org.BouncyCastle.Crypto.Tls.TlsClient.GetSessionToResume
    name: GetSessionToResume
    nameWithType: TlsClient.GetSessionToResume
    fullName: Org.BouncyCastle.Crypto.Tls.TlsClient.GetSessionToResume
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Org.BouncyCastle.Crypto.Tls.TlsClient.GetSessionToResume
    name: GetSessionToResume
    nameWithType: TlsClient.GetSessionToResume
    fullName: Org.BouncyCastle.Crypto.Tls.TlsClient.GetSessionToResume
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Org.BouncyCastle.Crypto.Tls.TlsSession
  commentId: T:Org.BouncyCastle.Crypto.Tls.TlsSession
  parent: Org.BouncyCastle.Crypto.Tls
  name: TlsSession
  nameWithType: TlsSession
  fullName: Org.BouncyCastle.Crypto.Tls.TlsSession
- uid: Org.BouncyCastle.Crypto.Tls.AbstractTlsClient.ClientHelloRecordLayerVersion*
  commentId: Overload:Org.BouncyCastle.Crypto.Tls.AbstractTlsClient.ClientHelloRecordLayerVersion
  name: ClientHelloRecordLayerVersion
  nameWithType: AbstractTlsClient.ClientHelloRecordLayerVersion
  fullName: Org.BouncyCastle.Crypto.Tls.AbstractTlsClient.ClientHelloRecordLayerVersion
- uid: Org.BouncyCastle.Crypto.Tls.TlsClient.ClientHelloRecordLayerVersion
  commentId: P:Org.BouncyCastle.Crypto.Tls.TlsClient.ClientHelloRecordLayerVersion
  parent: Org.BouncyCastle.Crypto.Tls.TlsClient
  name: ClientHelloRecordLayerVersion
  nameWithType: TlsClient.ClientHelloRecordLayerVersion
  fullName: Org.BouncyCastle.Crypto.Tls.TlsClient.ClientHelloRecordLayerVersion
- uid: Org.BouncyCastle.Crypto.Tls.ProtocolVersion
  commentId: T:Org.BouncyCastle.Crypto.Tls.ProtocolVersion
  parent: Org.BouncyCastle.Crypto.Tls
  name: ProtocolVersion
  nameWithType: ProtocolVersion
  fullName: Org.BouncyCastle.Crypto.Tls.ProtocolVersion
- uid: Org.BouncyCastle.Crypto.Tls.AbstractTlsClient.ClientVersion*
  commentId: Overload:Org.BouncyCastle.Crypto.Tls.AbstractTlsClient.ClientVersion
  name: ClientVersion
  nameWithType: AbstractTlsClient.ClientVersion
  fullName: Org.BouncyCastle.Crypto.Tls.AbstractTlsClient.ClientVersion
- uid: Org.BouncyCastle.Crypto.Tls.TlsClient.ClientVersion
  commentId: P:Org.BouncyCastle.Crypto.Tls.TlsClient.ClientVersion
  parent: Org.BouncyCastle.Crypto.Tls.TlsClient
  name: ClientVersion
  nameWithType: TlsClient.ClientVersion
  fullName: Org.BouncyCastle.Crypto.Tls.TlsClient.ClientVersion
- uid: Org.BouncyCastle.Crypto.Tls.AbstractTlsClient.IsFallback*
  commentId: Overload:Org.BouncyCastle.Crypto.Tls.AbstractTlsClient.IsFallback
  name: IsFallback
  nameWithType: AbstractTlsClient.IsFallback
  fullName: Org.BouncyCastle.Crypto.Tls.AbstractTlsClient.IsFallback
- uid: Org.BouncyCastle.Crypto.Tls.TlsClient.IsFallback
  commentId: P:Org.BouncyCastle.Crypto.Tls.TlsClient.IsFallback
  parent: Org.BouncyCastle.Crypto.Tls.TlsClient
  name: IsFallback
  nameWithType: TlsClient.IsFallback
  fullName: Org.BouncyCastle.Crypto.Tls.TlsClient.IsFallback
- uid: Org.BouncyCastle.Crypto.Tls.AbstractTlsClient.GetClientExtensions*
  commentId: Overload:Org.BouncyCastle.Crypto.Tls.AbstractTlsClient.GetClientExtensions
  name: GetClientExtensions
  nameWithType: AbstractTlsClient.GetClientExtensions
  fullName: Org.BouncyCastle.Crypto.Tls.AbstractTlsClient.GetClientExtensions
- uid: Org.BouncyCastle.Crypto.Tls.TlsClient.GetClientExtensions
  commentId: M:Org.BouncyCastle.Crypto.Tls.TlsClient.GetClientExtensions
  parent: Org.BouncyCastle.Crypto.Tls.TlsClient
  name: GetClientExtensions()
  nameWithType: TlsClient.GetClientExtensions()
  fullName: Org.BouncyCastle.Crypto.Tls.TlsClient.GetClientExtensions()
  spec.csharp:
  - uid: Org.BouncyCastle.Crypto.Tls.TlsClient.GetClientExtensions
    name: GetClientExtensions
    nameWithType: TlsClient.GetClientExtensions
    fullName: Org.BouncyCastle.Crypto.Tls.TlsClient.GetClientExtensions
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Org.BouncyCastle.Crypto.Tls.TlsClient.GetClientExtensions
    name: GetClientExtensions
    nameWithType: TlsClient.GetClientExtensions
    fullName: Org.BouncyCastle.Crypto.Tls.TlsClient.GetClientExtensions
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Org.BouncyCastle.Crypto.Tls.AbstractTlsClient.MinimumVersion*
  commentId: Overload:Org.BouncyCastle.Crypto.Tls.AbstractTlsClient.MinimumVersion
  name: MinimumVersion
  nameWithType: AbstractTlsClient.MinimumVersion
  fullName: Org.BouncyCastle.Crypto.Tls.AbstractTlsClient.MinimumVersion
- uid: Org.BouncyCastle.Crypto.Tls.AbstractTlsClient.NotifyServerVersion*
  commentId: Overload:Org.BouncyCastle.Crypto.Tls.AbstractTlsClient.NotifyServerVersion
  name: NotifyServerVersion
  nameWithType: AbstractTlsClient.NotifyServerVersion
  fullName: Org.BouncyCastle.Crypto.Tls.AbstractTlsClient.NotifyServerVersion
- uid: Org.BouncyCastle.Crypto.Tls.TlsClient.NotifyServerVersion(Org.BouncyCastle.Crypto.Tls.ProtocolVersion)
  commentId: M:Org.BouncyCastle.Crypto.Tls.TlsClient.NotifyServerVersion(Org.BouncyCastle.Crypto.Tls.ProtocolVersion)
  parent: Org.BouncyCastle.Crypto.Tls.TlsClient
  name: NotifyServerVersion(ProtocolVersion)
  nameWithType: TlsClient.NotifyServerVersion(ProtocolVersion)
  fullName: Org.BouncyCastle.Crypto.Tls.TlsClient.NotifyServerVersion(Org.BouncyCastle.Crypto.Tls.ProtocolVersion)
  spec.csharp:
  - uid: Org.BouncyCastle.Crypto.Tls.TlsClient.NotifyServerVersion(Org.BouncyCastle.Crypto.Tls.ProtocolVersion)
    name: NotifyServerVersion
    nameWithType: TlsClient.NotifyServerVersion
    fullName: Org.BouncyCastle.Crypto.Tls.TlsClient.NotifyServerVersion
  - name: (
    nameWithType: (
    fullName: (
  - uid: Org.BouncyCastle.Crypto.Tls.ProtocolVersion
    name: ProtocolVersion
    nameWithType: ProtocolVersion
    fullName: Org.BouncyCastle.Crypto.Tls.ProtocolVersion
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Org.BouncyCastle.Crypto.Tls.TlsClient.NotifyServerVersion(Org.BouncyCastle.Crypto.Tls.ProtocolVersion)
    name: NotifyServerVersion
    nameWithType: TlsClient.NotifyServerVersion
    fullName: Org.BouncyCastle.Crypto.Tls.TlsClient.NotifyServerVersion
  - name: (
    nameWithType: (
    fullName: (
  - uid: Org.BouncyCastle.Crypto.Tls.ProtocolVersion
    name: ProtocolVersion
    nameWithType: ProtocolVersion
    fullName: Org.BouncyCastle.Crypto.Tls.ProtocolVersion
  - name: )
    nameWithType: )
    fullName: )
- uid: Org.BouncyCastle.Crypto.Tls.AbstractTlsClient.GetCipherSuites*
  commentId: Overload:Org.BouncyCastle.Crypto.Tls.AbstractTlsClient.GetCipherSuites
  name: GetCipherSuites
  nameWithType: AbstractTlsClient.GetCipherSuites
  fullName: Org.BouncyCastle.Crypto.Tls.AbstractTlsClient.GetCipherSuites
- uid: Org.BouncyCastle.Crypto.Tls.TlsClient.GetCipherSuites
  commentId: M:Org.BouncyCastle.Crypto.Tls.TlsClient.GetCipherSuites
  parent: Org.BouncyCastle.Crypto.Tls.TlsClient
  name: GetCipherSuites()
  nameWithType: TlsClient.GetCipherSuites()
  fullName: Org.BouncyCastle.Crypto.Tls.TlsClient.GetCipherSuites()
  spec.csharp:
  - uid: Org.BouncyCastle.Crypto.Tls.TlsClient.GetCipherSuites
    name: GetCipherSuites
    nameWithType: TlsClient.GetCipherSuites
    fullName: Org.BouncyCastle.Crypto.Tls.TlsClient.GetCipherSuites
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Org.BouncyCastle.Crypto.Tls.TlsClient.GetCipherSuites
    name: GetCipherSuites
    nameWithType: TlsClient.GetCipherSuites
    fullName: Org.BouncyCastle.Crypto.Tls.TlsClient.GetCipherSuites
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Org.BouncyCastle.Crypto.Tls.AbstractTlsClient.GetCompressionMethods*
  commentId: Overload:Org.BouncyCastle.Crypto.Tls.AbstractTlsClient.GetCompressionMethods
  name: GetCompressionMethods
  nameWithType: AbstractTlsClient.GetCompressionMethods
  fullName: Org.BouncyCastle.Crypto.Tls.AbstractTlsClient.GetCompressionMethods
- uid: Org.BouncyCastle.Crypto.Tls.TlsClient.GetCompressionMethods
  commentId: M:Org.BouncyCastle.Crypto.Tls.TlsClient.GetCompressionMethods
  parent: Org.BouncyCastle.Crypto.Tls.TlsClient
  name: GetCompressionMethods()
  nameWithType: TlsClient.GetCompressionMethods()
  fullName: Org.BouncyCastle.Crypto.Tls.TlsClient.GetCompressionMethods()
  spec.csharp:
  - uid: Org.BouncyCastle.Crypto.Tls.TlsClient.GetCompressionMethods
    name: GetCompressionMethods
    nameWithType: TlsClient.GetCompressionMethods
    fullName: Org.BouncyCastle.Crypto.Tls.TlsClient.GetCompressionMethods
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Org.BouncyCastle.Crypto.Tls.TlsClient.GetCompressionMethods
    name: GetCompressionMethods
    nameWithType: TlsClient.GetCompressionMethods
    fullName: Org.BouncyCastle.Crypto.Tls.TlsClient.GetCompressionMethods
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Org.BouncyCastle.Crypto.Tls.AbstractTlsClient.NotifySessionID*
  commentId: Overload:Org.BouncyCastle.Crypto.Tls.AbstractTlsClient.NotifySessionID
  name: NotifySessionID
  nameWithType: AbstractTlsClient.NotifySessionID
  fullName: Org.BouncyCastle.Crypto.Tls.AbstractTlsClient.NotifySessionID
- uid: Org.BouncyCastle.Crypto.Tls.TlsClient.NotifySessionID(System.Byte[])
  commentId: M:Org.BouncyCastle.Crypto.Tls.TlsClient.NotifySessionID(System.Byte[])
  parent: Org.BouncyCastle.Crypto.Tls.TlsClient
  isExternal: true
  name: NotifySessionID(Byte[])
  nameWithType: TlsClient.NotifySessionID(Byte[])
  fullName: Org.BouncyCastle.Crypto.Tls.TlsClient.NotifySessionID(System.Byte[])
  nameWithType.vb: TlsClient.NotifySessionID(Byte())
  fullName.vb: Org.BouncyCastle.Crypto.Tls.TlsClient.NotifySessionID(System.Byte())
  name.vb: NotifySessionID(Byte())
  spec.csharp:
  - uid: Org.BouncyCastle.Crypto.Tls.TlsClient.NotifySessionID(System.Byte[])
    name: NotifySessionID
    nameWithType: TlsClient.NotifySessionID
    fullName: Org.BouncyCastle.Crypto.Tls.TlsClient.NotifySessionID
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Org.BouncyCastle.Crypto.Tls.TlsClient.NotifySessionID(System.Byte[])
    name: NotifySessionID
    nameWithType: TlsClient.NotifySessionID
    fullName: Org.BouncyCastle.Crypto.Tls.TlsClient.NotifySessionID
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Org.BouncyCastle.Crypto.Tls.AbstractTlsClient.NotifySelectedCipherSuite*
  commentId: Overload:Org.BouncyCastle.Crypto.Tls.AbstractTlsClient.NotifySelectedCipherSuite
  name: NotifySelectedCipherSuite
  nameWithType: AbstractTlsClient.NotifySelectedCipherSuite
  fullName: Org.BouncyCastle.Crypto.Tls.AbstractTlsClient.NotifySelectedCipherSuite
- uid: Org.BouncyCastle.Crypto.Tls.TlsClient.NotifySelectedCipherSuite(System.Int32)
  commentId: M:Org.BouncyCastle.Crypto.Tls.TlsClient.NotifySelectedCipherSuite(System.Int32)
  parent: Org.BouncyCastle.Crypto.Tls.TlsClient
  isExternal: true
  name: NotifySelectedCipherSuite(Int32)
  nameWithType: TlsClient.NotifySelectedCipherSuite(Int32)
  fullName: Org.BouncyCastle.Crypto.Tls.TlsClient.NotifySelectedCipherSuite(System.Int32)
  spec.csharp:
  - uid: Org.BouncyCastle.Crypto.Tls.TlsClient.NotifySelectedCipherSuite(System.Int32)
    name: NotifySelectedCipherSuite
    nameWithType: TlsClient.NotifySelectedCipherSuite
    fullName: Org.BouncyCastle.Crypto.Tls.TlsClient.NotifySelectedCipherSuite
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Org.BouncyCastle.Crypto.Tls.TlsClient.NotifySelectedCipherSuite(System.Int32)
    name: NotifySelectedCipherSuite
    nameWithType: TlsClient.NotifySelectedCipherSuite
    fullName: Org.BouncyCastle.Crypto.Tls.TlsClient.NotifySelectedCipherSuite
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Org.BouncyCastle.Crypto.Tls.AbstractTlsClient.NotifySelectedCompressionMethod*
  commentId: Overload:Org.BouncyCastle.Crypto.Tls.AbstractTlsClient.NotifySelectedCompressionMethod
  name: NotifySelectedCompressionMethod
  nameWithType: AbstractTlsClient.NotifySelectedCompressionMethod
  fullName: Org.BouncyCastle.Crypto.Tls.AbstractTlsClient.NotifySelectedCompressionMethod
- uid: Org.BouncyCastle.Crypto.Tls.TlsClient.NotifySelectedCompressionMethod(System.Byte)
  commentId: M:Org.BouncyCastle.Crypto.Tls.TlsClient.NotifySelectedCompressionMethod(System.Byte)
  parent: Org.BouncyCastle.Crypto.Tls.TlsClient
  isExternal: true
  name: NotifySelectedCompressionMethod(Byte)
  nameWithType: TlsClient.NotifySelectedCompressionMethod(Byte)
  fullName: Org.BouncyCastle.Crypto.Tls.TlsClient.NotifySelectedCompressionMethod(System.Byte)
  spec.csharp:
  - uid: Org.BouncyCastle.Crypto.Tls.TlsClient.NotifySelectedCompressionMethod(System.Byte)
    name: NotifySelectedCompressionMethod
    nameWithType: TlsClient.NotifySelectedCompressionMethod
    fullName: Org.BouncyCastle.Crypto.Tls.TlsClient.NotifySelectedCompressionMethod
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Org.BouncyCastle.Crypto.Tls.TlsClient.NotifySelectedCompressionMethod(System.Byte)
    name: NotifySelectedCompressionMethod
    nameWithType: TlsClient.NotifySelectedCompressionMethod
    fullName: Org.BouncyCastle.Crypto.Tls.TlsClient.NotifySelectedCompressionMethod
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Byte
  commentId: T:System.Byte
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte
- uid: Org.BouncyCastle.Crypto.Tls.AbstractTlsClient.ProcessServerExtensions*
  commentId: Overload:Org.BouncyCastle.Crypto.Tls.AbstractTlsClient.ProcessServerExtensions
  name: ProcessServerExtensions
  nameWithType: AbstractTlsClient.ProcessServerExtensions
  fullName: Org.BouncyCastle.Crypto.Tls.AbstractTlsClient.ProcessServerExtensions
- uid: Org.BouncyCastle.Crypto.Tls.TlsClient.ProcessServerExtensions(System.Collections.IDictionary)
  commentId: M:Org.BouncyCastle.Crypto.Tls.TlsClient.ProcessServerExtensions(System.Collections.IDictionary)
  parent: Org.BouncyCastle.Crypto.Tls.TlsClient
  isExternal: true
  name: ProcessServerExtensions(IDictionary)
  nameWithType: TlsClient.ProcessServerExtensions(IDictionary)
  fullName: Org.BouncyCastle.Crypto.Tls.TlsClient.ProcessServerExtensions(System.Collections.IDictionary)
  spec.csharp:
  - uid: Org.BouncyCastle.Crypto.Tls.TlsClient.ProcessServerExtensions(System.Collections.IDictionary)
    name: ProcessServerExtensions
    nameWithType: TlsClient.ProcessServerExtensions
    fullName: Org.BouncyCastle.Crypto.Tls.TlsClient.ProcessServerExtensions
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.IDictionary
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.IDictionary
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Org.BouncyCastle.Crypto.Tls.TlsClient.ProcessServerExtensions(System.Collections.IDictionary)
    name: ProcessServerExtensions
    nameWithType: TlsClient.ProcessServerExtensions
    fullName: Org.BouncyCastle.Crypto.Tls.TlsClient.ProcessServerExtensions
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.IDictionary
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.IDictionary
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Org.BouncyCastle.Crypto.Tls.AbstractTlsClient.ProcessServerSupplementalData*
  commentId: Overload:Org.BouncyCastle.Crypto.Tls.AbstractTlsClient.ProcessServerSupplementalData
  name: ProcessServerSupplementalData
  nameWithType: AbstractTlsClient.ProcessServerSupplementalData
  fullName: Org.BouncyCastle.Crypto.Tls.AbstractTlsClient.ProcessServerSupplementalData
- uid: Org.BouncyCastle.Crypto.Tls.TlsClient.ProcessServerSupplementalData(System.Collections.IList)
  commentId: M:Org.BouncyCastle.Crypto.Tls.TlsClient.ProcessServerSupplementalData(System.Collections.IList)
  parent: Org.BouncyCastle.Crypto.Tls.TlsClient
  isExternal: true
  name: ProcessServerSupplementalData(IList)
  nameWithType: TlsClient.ProcessServerSupplementalData(IList)
  fullName: Org.BouncyCastle.Crypto.Tls.TlsClient.ProcessServerSupplementalData(System.Collections.IList)
  spec.csharp:
  - uid: Org.BouncyCastle.Crypto.Tls.TlsClient.ProcessServerSupplementalData(System.Collections.IList)
    name: ProcessServerSupplementalData
    nameWithType: TlsClient.ProcessServerSupplementalData
    fullName: Org.BouncyCastle.Crypto.Tls.TlsClient.ProcessServerSupplementalData
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.IList
    name: IList
    nameWithType: IList
    fullName: System.Collections.IList
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Org.BouncyCastle.Crypto.Tls.TlsClient.ProcessServerSupplementalData(System.Collections.IList)
    name: ProcessServerSupplementalData
    nameWithType: TlsClient.ProcessServerSupplementalData
    fullName: Org.BouncyCastle.Crypto.Tls.TlsClient.ProcessServerSupplementalData
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.IList
    name: IList
    nameWithType: IList
    fullName: System.Collections.IList
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Org.BouncyCastle.Crypto.Tls.AbstractTlsClient.GetKeyExchange*
  commentId: Overload:Org.BouncyCastle.Crypto.Tls.AbstractTlsClient.GetKeyExchange
  name: GetKeyExchange
  nameWithType: AbstractTlsClient.GetKeyExchange
  fullName: Org.BouncyCastle.Crypto.Tls.AbstractTlsClient.GetKeyExchange
- uid: Org.BouncyCastle.Crypto.Tls.TlsClient.GetKeyExchange
  commentId: M:Org.BouncyCastle.Crypto.Tls.TlsClient.GetKeyExchange
  parent: Org.BouncyCastle.Crypto.Tls.TlsClient
  name: GetKeyExchange()
  nameWithType: TlsClient.GetKeyExchange()
  fullName: Org.BouncyCastle.Crypto.Tls.TlsClient.GetKeyExchange()
  spec.csharp:
  - uid: Org.BouncyCastle.Crypto.Tls.TlsClient.GetKeyExchange
    name: GetKeyExchange
    nameWithType: TlsClient.GetKeyExchange
    fullName: Org.BouncyCastle.Crypto.Tls.TlsClient.GetKeyExchange
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Org.BouncyCastle.Crypto.Tls.TlsClient.GetKeyExchange
    name: GetKeyExchange
    nameWithType: TlsClient.GetKeyExchange
    fullName: Org.BouncyCastle.Crypto.Tls.TlsClient.GetKeyExchange
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Org.BouncyCastle.Crypto.Tls.TlsKeyExchange
  commentId: T:Org.BouncyCastle.Crypto.Tls.TlsKeyExchange
  parent: Org.BouncyCastle.Crypto.Tls
  name: TlsKeyExchange
  nameWithType: TlsKeyExchange
  fullName: Org.BouncyCastle.Crypto.Tls.TlsKeyExchange
- uid: Org.BouncyCastle.Crypto.Tls.AbstractTlsClient.GetAuthentication*
  commentId: Overload:Org.BouncyCastle.Crypto.Tls.AbstractTlsClient.GetAuthentication
  name: GetAuthentication
  nameWithType: AbstractTlsClient.GetAuthentication
  fullName: Org.BouncyCastle.Crypto.Tls.AbstractTlsClient.GetAuthentication
- uid: Org.BouncyCastle.Crypto.Tls.TlsClient.GetAuthentication
  commentId: M:Org.BouncyCastle.Crypto.Tls.TlsClient.GetAuthentication
  parent: Org.BouncyCastle.Crypto.Tls.TlsClient
  name: GetAuthentication()
  nameWithType: TlsClient.GetAuthentication()
  fullName: Org.BouncyCastle.Crypto.Tls.TlsClient.GetAuthentication()
  spec.csharp:
  - uid: Org.BouncyCastle.Crypto.Tls.TlsClient.GetAuthentication
    name: GetAuthentication
    nameWithType: TlsClient.GetAuthentication
    fullName: Org.BouncyCastle.Crypto.Tls.TlsClient.GetAuthentication
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Org.BouncyCastle.Crypto.Tls.TlsClient.GetAuthentication
    name: GetAuthentication
    nameWithType: TlsClient.GetAuthentication
    fullName: Org.BouncyCastle.Crypto.Tls.TlsClient.GetAuthentication
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Org.BouncyCastle.Crypto.Tls.TlsAuthentication
  commentId: T:Org.BouncyCastle.Crypto.Tls.TlsAuthentication
  parent: Org.BouncyCastle.Crypto.Tls
  name: TlsAuthentication
  nameWithType: TlsAuthentication
  fullName: Org.BouncyCastle.Crypto.Tls.TlsAuthentication
- uid: Org.BouncyCastle.Crypto.Tls.AbstractTlsClient.GetClientSupplementalData*
  commentId: Overload:Org.BouncyCastle.Crypto.Tls.AbstractTlsClient.GetClientSupplementalData
  name: GetClientSupplementalData
  nameWithType: AbstractTlsClient.GetClientSupplementalData
  fullName: Org.BouncyCastle.Crypto.Tls.AbstractTlsClient.GetClientSupplementalData
- uid: Org.BouncyCastle.Crypto.Tls.TlsClient.GetClientSupplementalData
  commentId: M:Org.BouncyCastle.Crypto.Tls.TlsClient.GetClientSupplementalData
  parent: Org.BouncyCastle.Crypto.Tls.TlsClient
  name: GetClientSupplementalData()
  nameWithType: TlsClient.GetClientSupplementalData()
  fullName: Org.BouncyCastle.Crypto.Tls.TlsClient.GetClientSupplementalData()
  spec.csharp:
  - uid: Org.BouncyCastle.Crypto.Tls.TlsClient.GetClientSupplementalData
    name: GetClientSupplementalData
    nameWithType: TlsClient.GetClientSupplementalData
    fullName: Org.BouncyCastle.Crypto.Tls.TlsClient.GetClientSupplementalData
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Org.BouncyCastle.Crypto.Tls.TlsClient.GetClientSupplementalData
    name: GetClientSupplementalData
    nameWithType: TlsClient.GetClientSupplementalData
    fullName: Org.BouncyCastle.Crypto.Tls.TlsClient.GetClientSupplementalData
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Org.BouncyCastle.Crypto.Tls.AbstractTlsPeer.GetCompression
  commentId: M:Org.BouncyCastle.Crypto.Tls.AbstractTlsPeer.GetCompression
  parent: Org.BouncyCastle.Crypto.Tls.AbstractTlsPeer
  name: GetCompression()
  nameWithType: AbstractTlsPeer.GetCompression()
  fullName: Org.BouncyCastle.Crypto.Tls.AbstractTlsPeer.GetCompression()
  spec.csharp:
  - uid: Org.BouncyCastle.Crypto.Tls.AbstractTlsPeer.GetCompression
    name: GetCompression
    nameWithType: AbstractTlsPeer.GetCompression
    fullName: Org.BouncyCastle.Crypto.Tls.AbstractTlsPeer.GetCompression
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Org.BouncyCastle.Crypto.Tls.AbstractTlsPeer.GetCompression
    name: GetCompression
    nameWithType: AbstractTlsPeer.GetCompression
    fullName: Org.BouncyCastle.Crypto.Tls.AbstractTlsPeer.GetCompression
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Org.BouncyCastle.Crypto.Tls.AbstractTlsClient.GetCompression*
  commentId: Overload:Org.BouncyCastle.Crypto.Tls.AbstractTlsClient.GetCompression
  name: GetCompression
  nameWithType: AbstractTlsClient.GetCompression
  fullName: Org.BouncyCastle.Crypto.Tls.AbstractTlsClient.GetCompression
- uid: Org.BouncyCastle.Crypto.Tls.TlsPeer.GetCompression
  commentId: M:Org.BouncyCastle.Crypto.Tls.TlsPeer.GetCompression
  parent: Org.BouncyCastle.Crypto.Tls.TlsPeer
  name: GetCompression()
  nameWithType: TlsPeer.GetCompression()
  fullName: Org.BouncyCastle.Crypto.Tls.TlsPeer.GetCompression()
  spec.csharp:
  - uid: Org.BouncyCastle.Crypto.Tls.TlsPeer.GetCompression
    name: GetCompression
    nameWithType: TlsPeer.GetCompression
    fullName: Org.BouncyCastle.Crypto.Tls.TlsPeer.GetCompression
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Org.BouncyCastle.Crypto.Tls.TlsPeer.GetCompression
    name: GetCompression
    nameWithType: TlsPeer.GetCompression
    fullName: Org.BouncyCastle.Crypto.Tls.TlsPeer.GetCompression
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Org.BouncyCastle.Crypto.Tls.TlsCompression
  commentId: T:Org.BouncyCastle.Crypto.Tls.TlsCompression
  parent: Org.BouncyCastle.Crypto.Tls
  name: TlsCompression
  nameWithType: TlsCompression
  fullName: Org.BouncyCastle.Crypto.Tls.TlsCompression
- uid: Org.BouncyCastle.Crypto.Tls.AbstractTlsPeer.GetCipher
  commentId: M:Org.BouncyCastle.Crypto.Tls.AbstractTlsPeer.GetCipher
  parent: Org.BouncyCastle.Crypto.Tls.AbstractTlsPeer
  name: GetCipher()
  nameWithType: AbstractTlsPeer.GetCipher()
  fullName: Org.BouncyCastle.Crypto.Tls.AbstractTlsPeer.GetCipher()
  spec.csharp:
  - uid: Org.BouncyCastle.Crypto.Tls.AbstractTlsPeer.GetCipher
    name: GetCipher
    nameWithType: AbstractTlsPeer.GetCipher
    fullName: Org.BouncyCastle.Crypto.Tls.AbstractTlsPeer.GetCipher
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Org.BouncyCastle.Crypto.Tls.AbstractTlsPeer.GetCipher
    name: GetCipher
    nameWithType: AbstractTlsPeer.GetCipher
    fullName: Org.BouncyCastle.Crypto.Tls.AbstractTlsPeer.GetCipher
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Org.BouncyCastle.Crypto.Tls.AbstractTlsClient.GetCipher*
  commentId: Overload:Org.BouncyCastle.Crypto.Tls.AbstractTlsClient.GetCipher
  name: GetCipher
  nameWithType: AbstractTlsClient.GetCipher
  fullName: Org.BouncyCastle.Crypto.Tls.AbstractTlsClient.GetCipher
- uid: Org.BouncyCastle.Crypto.Tls.TlsPeer.GetCipher
  commentId: M:Org.BouncyCastle.Crypto.Tls.TlsPeer.GetCipher
  parent: Org.BouncyCastle.Crypto.Tls.TlsPeer
  name: GetCipher()
  nameWithType: TlsPeer.GetCipher()
  fullName: Org.BouncyCastle.Crypto.Tls.TlsPeer.GetCipher()
  spec.csharp:
  - uid: Org.BouncyCastle.Crypto.Tls.TlsPeer.GetCipher
    name: GetCipher
    nameWithType: TlsPeer.GetCipher
    fullName: Org.BouncyCastle.Crypto.Tls.TlsPeer.GetCipher
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Org.BouncyCastle.Crypto.Tls.TlsPeer.GetCipher
    name: GetCipher
    nameWithType: TlsPeer.GetCipher
    fullName: Org.BouncyCastle.Crypto.Tls.TlsPeer.GetCipher
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Org.BouncyCastle.Crypto.Tls.TlsCipher
  commentId: T:Org.BouncyCastle.Crypto.Tls.TlsCipher
  parent: Org.BouncyCastle.Crypto.Tls
  name: TlsCipher
  nameWithType: TlsCipher
  fullName: Org.BouncyCastle.Crypto.Tls.TlsCipher
- uid: Org.BouncyCastle.Crypto.Tls.AbstractTlsClient.NotifyNewSessionTicket*
  commentId: Overload:Org.BouncyCastle.Crypto.Tls.AbstractTlsClient.NotifyNewSessionTicket
  name: NotifyNewSessionTicket
  nameWithType: AbstractTlsClient.NotifyNewSessionTicket
  fullName: Org.BouncyCastle.Crypto.Tls.AbstractTlsClient.NotifyNewSessionTicket
- uid: Org.BouncyCastle.Crypto.Tls.TlsClient.NotifyNewSessionTicket(Org.BouncyCastle.Crypto.Tls.NewSessionTicket)
  commentId: M:Org.BouncyCastle.Crypto.Tls.TlsClient.NotifyNewSessionTicket(Org.BouncyCastle.Crypto.Tls.NewSessionTicket)
  parent: Org.BouncyCastle.Crypto.Tls.TlsClient
  name: NotifyNewSessionTicket(NewSessionTicket)
  nameWithType: TlsClient.NotifyNewSessionTicket(NewSessionTicket)
  fullName: Org.BouncyCastle.Crypto.Tls.TlsClient.NotifyNewSessionTicket(Org.BouncyCastle.Crypto.Tls.NewSessionTicket)
  spec.csharp:
  - uid: Org.BouncyCastle.Crypto.Tls.TlsClient.NotifyNewSessionTicket(Org.BouncyCastle.Crypto.Tls.NewSessionTicket)
    name: NotifyNewSessionTicket
    nameWithType: TlsClient.NotifyNewSessionTicket
    fullName: Org.BouncyCastle.Crypto.Tls.TlsClient.NotifyNewSessionTicket
  - name: (
    nameWithType: (
    fullName: (
  - uid: Org.BouncyCastle.Crypto.Tls.NewSessionTicket
    name: NewSessionTicket
    nameWithType: NewSessionTicket
    fullName: Org.BouncyCastle.Crypto.Tls.NewSessionTicket
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Org.BouncyCastle.Crypto.Tls.TlsClient.NotifyNewSessionTicket(Org.BouncyCastle.Crypto.Tls.NewSessionTicket)
    name: NotifyNewSessionTicket
    nameWithType: TlsClient.NotifyNewSessionTicket
    fullName: Org.BouncyCastle.Crypto.Tls.TlsClient.NotifyNewSessionTicket
  - name: (
    nameWithType: (
    fullName: (
  - uid: Org.BouncyCastle.Crypto.Tls.NewSessionTicket
    name: NewSessionTicket
    nameWithType: NewSessionTicket
    fullName: Org.BouncyCastle.Crypto.Tls.NewSessionTicket
  - name: )
    nameWithType: )
    fullName: )
- uid: Org.BouncyCastle.Crypto.Tls.NewSessionTicket
  commentId: T:Org.BouncyCastle.Crypto.Tls.NewSessionTicket
  parent: Org.BouncyCastle.Crypto.Tls
  name: NewSessionTicket
  nameWithType: NewSessionTicket
  fullName: Org.BouncyCastle.Crypto.Tls.NewSessionTicket
