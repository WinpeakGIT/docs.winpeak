### YamlMime:ManagedReference
items:
- uid: Org.BouncyCastle.Crypto.Tls.ProtocolVersion
  commentId: T:Org.BouncyCastle.Crypto.Tls.ProtocolVersion
  id: ProtocolVersion
  parent: Org.BouncyCastle.Crypto.Tls
  children:
  - Org.BouncyCastle.Crypto.Tls.ProtocolVersion.DTLSv10
  - Org.BouncyCastle.Crypto.Tls.ProtocolVersion.DTLSv12
  - Org.BouncyCastle.Crypto.Tls.ProtocolVersion.Equals(Org.BouncyCastle.Crypto.Tls.ProtocolVersion)
  - Org.BouncyCastle.Crypto.Tls.ProtocolVersion.Equals(System.Object)
  - Org.BouncyCastle.Crypto.Tls.ProtocolVersion.FullVersion
  - Org.BouncyCastle.Crypto.Tls.ProtocolVersion.Get(System.Int32,System.Int32)
  - Org.BouncyCastle.Crypto.Tls.ProtocolVersion.GetEquivalentTLSVersion
  - Org.BouncyCastle.Crypto.Tls.ProtocolVersion.GetHashCode
  - Org.BouncyCastle.Crypto.Tls.ProtocolVersion.IsDtls
  - Org.BouncyCastle.Crypto.Tls.ProtocolVersion.IsEqualOrEarlierVersionOf(Org.BouncyCastle.Crypto.Tls.ProtocolVersion)
  - Org.BouncyCastle.Crypto.Tls.ProtocolVersion.IsLaterVersionOf(Org.BouncyCastle.Crypto.Tls.ProtocolVersion)
  - Org.BouncyCastle.Crypto.Tls.ProtocolVersion.IsSsl
  - Org.BouncyCastle.Crypto.Tls.ProtocolVersion.IsTls
  - Org.BouncyCastle.Crypto.Tls.ProtocolVersion.MajorVersion
  - Org.BouncyCastle.Crypto.Tls.ProtocolVersion.MinorVersion
  - Org.BouncyCastle.Crypto.Tls.ProtocolVersion.SSLv3
  - Org.BouncyCastle.Crypto.Tls.ProtocolVersion.TLSv10
  - Org.BouncyCastle.Crypto.Tls.ProtocolVersion.TLSv11
  - Org.BouncyCastle.Crypto.Tls.ProtocolVersion.TLSv12
  - Org.BouncyCastle.Crypto.Tls.ProtocolVersion.ToString
  langs:
  - csharp
  - vb
  name: ProtocolVersion
  nameWithType: ProtocolVersion
  fullName: Org.BouncyCastle.Crypto.Tls.ProtocolVersion
  type: Class
  source:
    id: ProtocolVersion
    path: ''
    startLine: 122252
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Tls
  syntax:
    content: public sealed class ProtocolVersion
    content.vb: Public NotInheritable Class ProtocolVersion
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: Org.BouncyCastle.Crypto.Tls.ProtocolVersion.SSLv3
  commentId: F:Org.BouncyCastle.Crypto.Tls.ProtocolVersion.SSLv3
  id: SSLv3
  parent: Org.BouncyCastle.Crypto.Tls.ProtocolVersion
  langs:
  - csharp
  - vb
  name: SSLv3
  nameWithType: ProtocolVersion.SSLv3
  fullName: Org.BouncyCastle.Crypto.Tls.ProtocolVersion.SSLv3
  type: Field
  source:
    id: SSLv3
    path: ''
    startLine: 122254
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Tls
  syntax:
    content: public static readonly ProtocolVersion SSLv3
    return:
      type: Org.BouncyCastle.Crypto.Tls.ProtocolVersion
    content.vb: Public Shared ReadOnly SSLv3 As ProtocolVersion
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Org.BouncyCastle.Crypto.Tls.ProtocolVersion.TLSv10
  commentId: F:Org.BouncyCastle.Crypto.Tls.ProtocolVersion.TLSv10
  id: TLSv10
  parent: Org.BouncyCastle.Crypto.Tls.ProtocolVersion
  langs:
  - csharp
  - vb
  name: TLSv10
  nameWithType: ProtocolVersion.TLSv10
  fullName: Org.BouncyCastle.Crypto.Tls.ProtocolVersion.TLSv10
  type: Field
  source:
    id: TLSv10
    path: ''
    startLine: 122255
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Tls
  syntax:
    content: public static readonly ProtocolVersion TLSv10
    return:
      type: Org.BouncyCastle.Crypto.Tls.ProtocolVersion
    content.vb: Public Shared ReadOnly TLSv10 As ProtocolVersion
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Org.BouncyCastle.Crypto.Tls.ProtocolVersion.TLSv11
  commentId: F:Org.BouncyCastle.Crypto.Tls.ProtocolVersion.TLSv11
  id: TLSv11
  parent: Org.BouncyCastle.Crypto.Tls.ProtocolVersion
  langs:
  - csharp
  - vb
  name: TLSv11
  nameWithType: ProtocolVersion.TLSv11
  fullName: Org.BouncyCastle.Crypto.Tls.ProtocolVersion.TLSv11
  type: Field
  source:
    id: TLSv11
    path: ''
    startLine: 122256
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Tls
  syntax:
    content: public static readonly ProtocolVersion TLSv11
    return:
      type: Org.BouncyCastle.Crypto.Tls.ProtocolVersion
    content.vb: Public Shared ReadOnly TLSv11 As ProtocolVersion
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Org.BouncyCastle.Crypto.Tls.ProtocolVersion.TLSv12
  commentId: F:Org.BouncyCastle.Crypto.Tls.ProtocolVersion.TLSv12
  id: TLSv12
  parent: Org.BouncyCastle.Crypto.Tls.ProtocolVersion
  langs:
  - csharp
  - vb
  name: TLSv12
  nameWithType: ProtocolVersion.TLSv12
  fullName: Org.BouncyCastle.Crypto.Tls.ProtocolVersion.TLSv12
  type: Field
  source:
    id: TLSv12
    path: ''
    startLine: 122257
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Tls
  syntax:
    content: public static readonly ProtocolVersion TLSv12
    return:
      type: Org.BouncyCastle.Crypto.Tls.ProtocolVersion
    content.vb: Public Shared ReadOnly TLSv12 As ProtocolVersion
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Org.BouncyCastle.Crypto.Tls.ProtocolVersion.DTLSv10
  commentId: F:Org.BouncyCastle.Crypto.Tls.ProtocolVersion.DTLSv10
  id: DTLSv10
  parent: Org.BouncyCastle.Crypto.Tls.ProtocolVersion
  langs:
  - csharp
  - vb
  name: DTLSv10
  nameWithType: ProtocolVersion.DTLSv10
  fullName: Org.BouncyCastle.Crypto.Tls.ProtocolVersion.DTLSv10
  type: Field
  source:
    id: DTLSv10
    path: ''
    startLine: 122258
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Tls
  syntax:
    content: public static readonly ProtocolVersion DTLSv10
    return:
      type: Org.BouncyCastle.Crypto.Tls.ProtocolVersion
    content.vb: Public Shared ReadOnly DTLSv10 As ProtocolVersion
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Org.BouncyCastle.Crypto.Tls.ProtocolVersion.DTLSv12
  commentId: F:Org.BouncyCastle.Crypto.Tls.ProtocolVersion.DTLSv12
  id: DTLSv12
  parent: Org.BouncyCastle.Crypto.Tls.ProtocolVersion
  langs:
  - csharp
  - vb
  name: DTLSv12
  nameWithType: ProtocolVersion.DTLSv12
  fullName: Org.BouncyCastle.Crypto.Tls.ProtocolVersion.DTLSv12
  type: Field
  source:
    id: DTLSv12
    path: ''
    startLine: 122259
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Tls
  syntax:
    content: public static readonly ProtocolVersion DTLSv12
    return:
      type: Org.BouncyCastle.Crypto.Tls.ProtocolVersion
    content.vb: Public Shared ReadOnly DTLSv12 As ProtocolVersion
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Org.BouncyCastle.Crypto.Tls.ProtocolVersion.FullVersion
  commentId: P:Org.BouncyCastle.Crypto.Tls.ProtocolVersion.FullVersion
  id: FullVersion
  parent: Org.BouncyCastle.Crypto.Tls.ProtocolVersion
  langs:
  - csharp
  - vb
  name: FullVersion
  nameWithType: ProtocolVersion.FullVersion
  fullName: Org.BouncyCastle.Crypto.Tls.ProtocolVersion.FullVersion
  type: Property
  source:
    id: FullVersion
    path: ''
    startLine: 122270
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Tls
  syntax:
    content: public int FullVersion { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property FullVersion As Integer
  overload: Org.BouncyCastle.Crypto.Tls.ProtocolVersion.FullVersion*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Org.BouncyCastle.Crypto.Tls.ProtocolVersion.MajorVersion
  commentId: P:Org.BouncyCastle.Crypto.Tls.ProtocolVersion.MajorVersion
  id: MajorVersion
  parent: Org.BouncyCastle.Crypto.Tls.ProtocolVersion
  langs:
  - csharp
  - vb
  name: MajorVersion
  nameWithType: ProtocolVersion.MajorVersion
  fullName: Org.BouncyCastle.Crypto.Tls.ProtocolVersion.MajorVersion
  type: Property
  source:
    id: MajorVersion
    path: ''
    startLine: 122275
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Tls
  syntax:
    content: public int MajorVersion { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property MajorVersion As Integer
  overload: Org.BouncyCastle.Crypto.Tls.ProtocolVersion.MajorVersion*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Org.BouncyCastle.Crypto.Tls.ProtocolVersion.MinorVersion
  commentId: P:Org.BouncyCastle.Crypto.Tls.ProtocolVersion.MinorVersion
  id: MinorVersion
  parent: Org.BouncyCastle.Crypto.Tls.ProtocolVersion
  langs:
  - csharp
  - vb
  name: MinorVersion
  nameWithType: ProtocolVersion.MinorVersion
  fullName: Org.BouncyCastle.Crypto.Tls.ProtocolVersion.MinorVersion
  type: Property
  source:
    id: MinorVersion
    path: ''
    startLine: 122280
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Tls
  syntax:
    content: public int MinorVersion { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property MinorVersion As Integer
  overload: Org.BouncyCastle.Crypto.Tls.ProtocolVersion.MinorVersion*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Org.BouncyCastle.Crypto.Tls.ProtocolVersion.IsDtls
  commentId: P:Org.BouncyCastle.Crypto.Tls.ProtocolVersion.IsDtls
  id: IsDtls
  parent: Org.BouncyCastle.Crypto.Tls.ProtocolVersion
  langs:
  - csharp
  - vb
  name: IsDtls
  nameWithType: ProtocolVersion.IsDtls
  fullName: Org.BouncyCastle.Crypto.Tls.ProtocolVersion.IsDtls
  type: Property
  source:
    id: IsDtls
    path: ''
    startLine: 122285
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Tls
  syntax:
    content: public bool IsDtls { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsDtls As Boolean
  overload: Org.BouncyCastle.Crypto.Tls.ProtocolVersion.IsDtls*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Org.BouncyCastle.Crypto.Tls.ProtocolVersion.IsSsl
  commentId: P:Org.BouncyCastle.Crypto.Tls.ProtocolVersion.IsSsl
  id: IsSsl
  parent: Org.BouncyCastle.Crypto.Tls.ProtocolVersion
  langs:
  - csharp
  - vb
  name: IsSsl
  nameWithType: ProtocolVersion.IsSsl
  fullName: Org.BouncyCastle.Crypto.Tls.ProtocolVersion.IsSsl
  type: Property
  source:
    id: IsSsl
    path: ''
    startLine: 122290
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Tls
  syntax:
    content: public bool IsSsl { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsSsl As Boolean
  overload: Org.BouncyCastle.Crypto.Tls.ProtocolVersion.IsSsl*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Org.BouncyCastle.Crypto.Tls.ProtocolVersion.IsTls
  commentId: P:Org.BouncyCastle.Crypto.Tls.ProtocolVersion.IsTls
  id: IsTls
  parent: Org.BouncyCastle.Crypto.Tls.ProtocolVersion
  langs:
  - csharp
  - vb
  name: IsTls
  nameWithType: ProtocolVersion.IsTls
  fullName: Org.BouncyCastle.Crypto.Tls.ProtocolVersion.IsTls
  type: Property
  source:
    id: IsTls
    path: ''
    startLine: 122295
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Tls
  syntax:
    content: public bool IsTls { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsTls As Boolean
  overload: Org.BouncyCastle.Crypto.Tls.ProtocolVersion.IsTls*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Org.BouncyCastle.Crypto.Tls.ProtocolVersion.GetEquivalentTLSVersion
  commentId: M:Org.BouncyCastle.Crypto.Tls.ProtocolVersion.GetEquivalentTLSVersion
  id: GetEquivalentTLSVersion
  parent: Org.BouncyCastle.Crypto.Tls.ProtocolVersion
  langs:
  - csharp
  - vb
  name: GetEquivalentTLSVersion()
  nameWithType: ProtocolVersion.GetEquivalentTLSVersion()
  fullName: Org.BouncyCastle.Crypto.Tls.ProtocolVersion.GetEquivalentTLSVersion()
  type: Method
  source:
    id: GetEquivalentTLSVersion
    path: ''
    startLine: 122300
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Tls
  syntax:
    content: public ProtocolVersion GetEquivalentTLSVersion()
    return:
      type: Org.BouncyCastle.Crypto.Tls.ProtocolVersion
    content.vb: Public Function GetEquivalentTLSVersion As ProtocolVersion
  overload: Org.BouncyCastle.Crypto.Tls.ProtocolVersion.GetEquivalentTLSVersion*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Org.BouncyCastle.Crypto.Tls.ProtocolVersion.IsEqualOrEarlierVersionOf(Org.BouncyCastle.Crypto.Tls.ProtocolVersion)
  commentId: M:Org.BouncyCastle.Crypto.Tls.ProtocolVersion.IsEqualOrEarlierVersionOf(Org.BouncyCastle.Crypto.Tls.ProtocolVersion)
  id: IsEqualOrEarlierVersionOf(Org.BouncyCastle.Crypto.Tls.ProtocolVersion)
  parent: Org.BouncyCastle.Crypto.Tls.ProtocolVersion
  langs:
  - csharp
  - vb
  name: IsEqualOrEarlierVersionOf(ProtocolVersion)
  nameWithType: ProtocolVersion.IsEqualOrEarlierVersionOf(ProtocolVersion)
  fullName: Org.BouncyCastle.Crypto.Tls.ProtocolVersion.IsEqualOrEarlierVersionOf(Org.BouncyCastle.Crypto.Tls.ProtocolVersion)
  type: Method
  source:
    id: IsEqualOrEarlierVersionOf
    path: ''
    startLine: 122313
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Tls
  syntax:
    content: public bool IsEqualOrEarlierVersionOf(ProtocolVersion version)
    parameters:
    - id: version
      type: Org.BouncyCastle.Crypto.Tls.ProtocolVersion
    return:
      type: System.Boolean
    content.vb: Public Function IsEqualOrEarlierVersionOf(version As ProtocolVersion) As Boolean
  overload: Org.BouncyCastle.Crypto.Tls.ProtocolVersion.IsEqualOrEarlierVersionOf*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Org.BouncyCastle.Crypto.Tls.ProtocolVersion.IsLaterVersionOf(Org.BouncyCastle.Crypto.Tls.ProtocolVersion)
  commentId: M:Org.BouncyCastle.Crypto.Tls.ProtocolVersion.IsLaterVersionOf(Org.BouncyCastle.Crypto.Tls.ProtocolVersion)
  id: IsLaterVersionOf(Org.BouncyCastle.Crypto.Tls.ProtocolVersion)
  parent: Org.BouncyCastle.Crypto.Tls.ProtocolVersion
  langs:
  - csharp
  - vb
  name: IsLaterVersionOf(ProtocolVersion)
  nameWithType: ProtocolVersion.IsLaterVersionOf(ProtocolVersion)
  fullName: Org.BouncyCastle.Crypto.Tls.ProtocolVersion.IsLaterVersionOf(Org.BouncyCastle.Crypto.Tls.ProtocolVersion)
  type: Method
  source:
    id: IsLaterVersionOf
    path: ''
    startLine: 122323
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Tls
  syntax:
    content: public bool IsLaterVersionOf(ProtocolVersion version)
    parameters:
    - id: version
      type: Org.BouncyCastle.Crypto.Tls.ProtocolVersion
    return:
      type: System.Boolean
    content.vb: Public Function IsLaterVersionOf(version As ProtocolVersion) As Boolean
  overload: Org.BouncyCastle.Crypto.Tls.ProtocolVersion.IsLaterVersionOf*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Org.BouncyCastle.Crypto.Tls.ProtocolVersion.Equals(System.Object)
  commentId: M:Org.BouncyCastle.Crypto.Tls.ProtocolVersion.Equals(System.Object)
  id: Equals(System.Object)
  parent: Org.BouncyCastle.Crypto.Tls.ProtocolVersion
  langs:
  - csharp
  - vb
  name: Equals(Object)
  nameWithType: ProtocolVersion.Equals(Object)
  fullName: Org.BouncyCastle.Crypto.Tls.ProtocolVersion.Equals(System.Object)
  type: Method
  source:
    id: Equals
    path: ''
    startLine: 122333
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Tls
  syntax:
    content: public override bool Equals(object other)
    parameters:
    - id: other
      type: System.Object
    return:
      type: System.Boolean
    content.vb: Public Overrides Function Equals(other As Object) As Boolean
  overridden: System.Object.Equals(System.Object)
  overload: Org.BouncyCastle.Crypto.Tls.ProtocolVersion.Equals*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Org.BouncyCastle.Crypto.Tls.ProtocolVersion.Equals(Org.BouncyCastle.Crypto.Tls.ProtocolVersion)
  commentId: M:Org.BouncyCastle.Crypto.Tls.ProtocolVersion.Equals(Org.BouncyCastle.Crypto.Tls.ProtocolVersion)
  id: Equals(Org.BouncyCastle.Crypto.Tls.ProtocolVersion)
  parent: Org.BouncyCastle.Crypto.Tls.ProtocolVersion
  langs:
  - csharp
  - vb
  name: Equals(ProtocolVersion)
  nameWithType: ProtocolVersion.Equals(ProtocolVersion)
  fullName: Org.BouncyCastle.Crypto.Tls.ProtocolVersion.Equals(Org.BouncyCastle.Crypto.Tls.ProtocolVersion)
  type: Method
  source:
    id: Equals
    path: ''
    startLine: 122338
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Tls
  syntax:
    content: public bool Equals(ProtocolVersion other)
    parameters:
    - id: other
      type: Org.BouncyCastle.Crypto.Tls.ProtocolVersion
    return:
      type: System.Boolean
    content.vb: Public Function Equals(other As ProtocolVersion) As Boolean
  overload: Org.BouncyCastle.Crypto.Tls.ProtocolVersion.Equals*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Org.BouncyCastle.Crypto.Tls.ProtocolVersion.GetHashCode
  commentId: M:Org.BouncyCastle.Crypto.Tls.ProtocolVersion.GetHashCode
  id: GetHashCode
  parent: Org.BouncyCastle.Crypto.Tls.ProtocolVersion
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: ProtocolVersion.GetHashCode()
  fullName: Org.BouncyCastle.Crypto.Tls.ProtocolVersion.GetHashCode()
  type: Method
  source:
    id: GetHashCode
    path: ''
    startLine: 122343
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Tls
  syntax:
    content: public override int GetHashCode()
    return:
      type: System.Int32
    content.vb: Public Overrides Function GetHashCode As Integer
  overridden: System.Object.GetHashCode
  overload: Org.BouncyCastle.Crypto.Tls.ProtocolVersion.GetHashCode*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Org.BouncyCastle.Crypto.Tls.ProtocolVersion.Get(System.Int32,System.Int32)
  commentId: M:Org.BouncyCastle.Crypto.Tls.ProtocolVersion.Get(System.Int32,System.Int32)
  id: Get(System.Int32,System.Int32)
  parent: Org.BouncyCastle.Crypto.Tls.ProtocolVersion
  langs:
  - csharp
  - vb
  name: Get(Int32, Int32)
  nameWithType: ProtocolVersion.Get(Int32, Int32)
  fullName: Org.BouncyCastle.Crypto.Tls.ProtocolVersion.Get(System.Int32, System.Int32)
  type: Method
  source:
    id: Get
    path: ''
    startLine: 122349
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Tls
  example: []
  syntax:
    content: public static ProtocolVersion Get(int major, int minor)
    parameters:
    - id: major
      type: System.Int32
    - id: minor
      type: System.Int32
    return:
      type: Org.BouncyCastle.Crypto.Tls.ProtocolVersion
    content.vb: Public Shared Function Get(major As Integer, minor As Integer) As ProtocolVersion
  overload: Org.BouncyCastle.Crypto.Tls.ProtocolVersion.Get*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Org.BouncyCastle.Crypto.Tls.ProtocolVersion.ToString
  commentId: M:Org.BouncyCastle.Crypto.Tls.ProtocolVersion.ToString
  id: ToString
  parent: Org.BouncyCastle.Crypto.Tls.ProtocolVersion
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: ProtocolVersion.ToString()
  fullName: Org.BouncyCastle.Crypto.Tls.ProtocolVersion.ToString()
  type: Method
  source:
    id: ToString
    path: ''
    startLine: 122388
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Tls
  syntax:
    content: public override string ToString()
    return:
      type: System.String
    content.vb: Public Overrides Function ToString As String
  overridden: System.Object.ToString
  overload: Org.BouncyCastle.Crypto.Tls.ProtocolVersion.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: Org.BouncyCastle.Crypto.Tls
  commentId: N:Org.BouncyCastle.Crypto.Tls
  name: Org.BouncyCastle.Crypto.Tls
  nameWithType: Org.BouncyCastle.Crypto.Tls
  fullName: Org.BouncyCastle.Crypto.Tls
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Org.BouncyCastle.Crypto.Tls.ProtocolVersion
  commentId: T:Org.BouncyCastle.Crypto.Tls.ProtocolVersion
  parent: Org.BouncyCastle.Crypto.Tls
  name: ProtocolVersion
  nameWithType: ProtocolVersion
  fullName: Org.BouncyCastle.Crypto.Tls.ProtocolVersion
- uid: Org.BouncyCastle.Crypto.Tls.ProtocolVersion.FullVersion*
  commentId: Overload:Org.BouncyCastle.Crypto.Tls.ProtocolVersion.FullVersion
  name: FullVersion
  nameWithType: ProtocolVersion.FullVersion
  fullName: Org.BouncyCastle.Crypto.Tls.ProtocolVersion.FullVersion
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Org.BouncyCastle.Crypto.Tls.ProtocolVersion.MajorVersion*
  commentId: Overload:Org.BouncyCastle.Crypto.Tls.ProtocolVersion.MajorVersion
  name: MajorVersion
  nameWithType: ProtocolVersion.MajorVersion
  fullName: Org.BouncyCastle.Crypto.Tls.ProtocolVersion.MajorVersion
- uid: Org.BouncyCastle.Crypto.Tls.ProtocolVersion.MinorVersion*
  commentId: Overload:Org.BouncyCastle.Crypto.Tls.ProtocolVersion.MinorVersion
  name: MinorVersion
  nameWithType: ProtocolVersion.MinorVersion
  fullName: Org.BouncyCastle.Crypto.Tls.ProtocolVersion.MinorVersion
- uid: Org.BouncyCastle.Crypto.Tls.ProtocolVersion.IsDtls*
  commentId: Overload:Org.BouncyCastle.Crypto.Tls.ProtocolVersion.IsDtls
  name: IsDtls
  nameWithType: ProtocolVersion.IsDtls
  fullName: Org.BouncyCastle.Crypto.Tls.ProtocolVersion.IsDtls
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Org.BouncyCastle.Crypto.Tls.ProtocolVersion.IsSsl*
  commentId: Overload:Org.BouncyCastle.Crypto.Tls.ProtocolVersion.IsSsl
  name: IsSsl
  nameWithType: ProtocolVersion.IsSsl
  fullName: Org.BouncyCastle.Crypto.Tls.ProtocolVersion.IsSsl
- uid: Org.BouncyCastle.Crypto.Tls.ProtocolVersion.IsTls*
  commentId: Overload:Org.BouncyCastle.Crypto.Tls.ProtocolVersion.IsTls
  name: IsTls
  nameWithType: ProtocolVersion.IsTls
  fullName: Org.BouncyCastle.Crypto.Tls.ProtocolVersion.IsTls
- uid: Org.BouncyCastle.Crypto.Tls.ProtocolVersion.GetEquivalentTLSVersion*
  commentId: Overload:Org.BouncyCastle.Crypto.Tls.ProtocolVersion.GetEquivalentTLSVersion
  name: GetEquivalentTLSVersion
  nameWithType: ProtocolVersion.GetEquivalentTLSVersion
  fullName: Org.BouncyCastle.Crypto.Tls.ProtocolVersion.GetEquivalentTLSVersion
- uid: Org.BouncyCastle.Crypto.Tls.ProtocolVersion.IsEqualOrEarlierVersionOf*
  commentId: Overload:Org.BouncyCastle.Crypto.Tls.ProtocolVersion.IsEqualOrEarlierVersionOf
  name: IsEqualOrEarlierVersionOf
  nameWithType: ProtocolVersion.IsEqualOrEarlierVersionOf
  fullName: Org.BouncyCastle.Crypto.Tls.ProtocolVersion.IsEqualOrEarlierVersionOf
- uid: Org.BouncyCastle.Crypto.Tls.ProtocolVersion.IsLaterVersionOf*
  commentId: Overload:Org.BouncyCastle.Crypto.Tls.ProtocolVersion.IsLaterVersionOf
  name: IsLaterVersionOf
  nameWithType: ProtocolVersion.IsLaterVersionOf
  fullName: Org.BouncyCastle.Crypto.Tls.ProtocolVersion.IsLaterVersionOf
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Org.BouncyCastle.Crypto.Tls.ProtocolVersion.Equals*
  commentId: Overload:Org.BouncyCastle.Crypto.Tls.ProtocolVersion.Equals
  name: Equals
  nameWithType: ProtocolVersion.Equals
  fullName: Org.BouncyCastle.Crypto.Tls.ProtocolVersion.Equals
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Org.BouncyCastle.Crypto.Tls.ProtocolVersion.GetHashCode*
  commentId: Overload:Org.BouncyCastle.Crypto.Tls.ProtocolVersion.GetHashCode
  name: GetHashCode
  nameWithType: ProtocolVersion.GetHashCode
  fullName: Org.BouncyCastle.Crypto.Tls.ProtocolVersion.GetHashCode
- uid: Org.BouncyCastle.Crypto.Tls.ProtocolVersion.Get*
  commentId: Overload:Org.BouncyCastle.Crypto.Tls.ProtocolVersion.Get
  name: Get
  nameWithType: ProtocolVersion.Get
  fullName: Org.BouncyCastle.Crypto.Tls.ProtocolVersion.Get
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Org.BouncyCastle.Crypto.Tls.ProtocolVersion.ToString*
  commentId: Overload:Org.BouncyCastle.Crypto.Tls.ProtocolVersion.ToString
  name: ToString
  nameWithType: ProtocolVersion.ToString
  fullName: Org.BouncyCastle.Crypto.Tls.ProtocolVersion.ToString
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
