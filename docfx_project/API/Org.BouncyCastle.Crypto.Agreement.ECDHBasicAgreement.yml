### YamlMime:ManagedReference
items:
- uid: Org.BouncyCastle.Crypto.Agreement.ECDHBasicAgreement
  commentId: T:Org.BouncyCastle.Crypto.Agreement.ECDHBasicAgreement
  id: ECDHBasicAgreement
  parent: Org.BouncyCastle.Crypto.Agreement
  children:
  - Org.BouncyCastle.Crypto.Agreement.ECDHBasicAgreement.CalculateAgreement(Org.BouncyCastle.Crypto.ICipherParameters)
  - Org.BouncyCastle.Crypto.Agreement.ECDHBasicAgreement.GetFieldSize
  - Org.BouncyCastle.Crypto.Agreement.ECDHBasicAgreement.Init(Org.BouncyCastle.Crypto.ICipherParameters)
  - Org.BouncyCastle.Crypto.Agreement.ECDHBasicAgreement.privKey
  langs:
  - csharp
  - vb
  name: ECDHBasicAgreement
  nameWithType: ECDHBasicAgreement
  fullName: Org.BouncyCastle.Crypto.Agreement.ECDHBasicAgreement
  type: Class
  source:
    id: ECDHBasicAgreement
    path: ''
    startLine: 102379
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Agreement
  example: []
  syntax:
    content: 'public class ECDHBasicAgreement : IBasicAgreement'
    content.vb: >-
      Public Class ECDHBasicAgreement
          Implements IBasicAgreement
  inheritance:
  - System.Object
  implements:
  - Org.BouncyCastle.Crypto.IBasicAgreement
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ToString
  - System.Object.ReferenceEquals(System.Object,System.Object)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Org.BouncyCastle.Crypto.Agreement.ECDHBasicAgreement.privKey
  commentId: F:Org.BouncyCastle.Crypto.Agreement.ECDHBasicAgreement.privKey
  id: privKey
  parent: Org.BouncyCastle.Crypto.Agreement.ECDHBasicAgreement
  langs:
  - csharp
  - vb
  name: privKey
  nameWithType: ECDHBasicAgreement.privKey
  fullName: Org.BouncyCastle.Crypto.Agreement.ECDHBasicAgreement.privKey
  type: Field
  source:
    id: privKey
    path: ''
    startLine: 102382
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Agreement
  syntax:
    content: protected ECPrivateKeyParameters privKey
    return:
      type: ECPrivateKeyParameters
    content.vb: Protected privKey As ECPrivateKeyParameters
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Org.BouncyCastle.Crypto.Agreement.ECDHBasicAgreement.Init(Org.BouncyCastle.Crypto.ICipherParameters)
  commentId: M:Org.BouncyCastle.Crypto.Agreement.ECDHBasicAgreement.Init(Org.BouncyCastle.Crypto.ICipherParameters)
  id: Init(Org.BouncyCastle.Crypto.ICipherParameters)
  parent: Org.BouncyCastle.Crypto.Agreement.ECDHBasicAgreement
  langs:
  - csharp
  - vb
  name: Init(ICipherParameters)
  nameWithType: ECDHBasicAgreement.Init(ICipherParameters)
  fullName: Org.BouncyCastle.Crypto.Agreement.ECDHBasicAgreement.Init(Org.BouncyCastle.Crypto.ICipherParameters)
  type: Method
  source:
    id: Init
    path: ''
    startLine: 102384
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Agreement
  syntax:
    content: public virtual void Init(ICipherParameters parameters)
    parameters:
    - id: parameters
      type: Org.BouncyCastle.Crypto.ICipherParameters
    content.vb: Public Overridable Sub Init(parameters As ICipherParameters)
  overload: Org.BouncyCastle.Crypto.Agreement.ECDHBasicAgreement.Init*
  implements:
  - Org.BouncyCastle.Crypto.IBasicAgreement.Init(Org.BouncyCastle.Crypto.ICipherParameters)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Org.BouncyCastle.Crypto.Agreement.ECDHBasicAgreement.GetFieldSize
  commentId: M:Org.BouncyCastle.Crypto.Agreement.ECDHBasicAgreement.GetFieldSize
  id: GetFieldSize
  parent: Org.BouncyCastle.Crypto.Agreement.ECDHBasicAgreement
  langs:
  - csharp
  - vb
  name: GetFieldSize()
  nameWithType: ECDHBasicAgreement.GetFieldSize()
  fullName: Org.BouncyCastle.Crypto.Agreement.ECDHBasicAgreement.GetFieldSize()
  type: Method
  source:
    id: GetFieldSize
    path: ''
    startLine: 102395
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Agreement
  syntax:
    content: public virtual int GetFieldSize()
    return:
      type: System.Int32
    content.vb: Public Overridable Function GetFieldSize As Integer
  overload: Org.BouncyCastle.Crypto.Agreement.ECDHBasicAgreement.GetFieldSize*
  implements:
  - Org.BouncyCastle.Crypto.IBasicAgreement.GetFieldSize
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Org.BouncyCastle.Crypto.Agreement.ECDHBasicAgreement.CalculateAgreement(Org.BouncyCastle.Crypto.ICipherParameters)
  commentId: M:Org.BouncyCastle.Crypto.Agreement.ECDHBasicAgreement.CalculateAgreement(Org.BouncyCastle.Crypto.ICipherParameters)
  id: CalculateAgreement(Org.BouncyCastle.Crypto.ICipherParameters)
  parent: Org.BouncyCastle.Crypto.Agreement.ECDHBasicAgreement
  langs:
  - csharp
  - vb
  name: CalculateAgreement(ICipherParameters)
  nameWithType: ECDHBasicAgreement.CalculateAgreement(ICipherParameters)
  fullName: Org.BouncyCastle.Crypto.Agreement.ECDHBasicAgreement.CalculateAgreement(Org.BouncyCastle.Crypto.ICipherParameters)
  type: Method
  source:
    id: CalculateAgreement
    path: ''
    startLine: 102400
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Agreement
  syntax:
    content: public virtual BigInteger CalculateAgreement(ICipherParameters pubKey)
    parameters:
    - id: pubKey
      type: Org.BouncyCastle.Crypto.ICipherParameters
    return:
      type: BigInteger
    content.vb: Public Overridable Function CalculateAgreement(pubKey As ICipherParameters) As BigInteger
  overload: Org.BouncyCastle.Crypto.Agreement.ECDHBasicAgreement.CalculateAgreement*
  implements:
  - Org.BouncyCastle.Crypto.IBasicAgreement.CalculateAgreement(Org.BouncyCastle.Crypto.ICipherParameters)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
references:
- uid: Org.BouncyCastle.Crypto.Agreement
  commentId: N:Org.BouncyCastle.Crypto.Agreement
  name: Org.BouncyCastle.Crypto.Agreement
  nameWithType: Org.BouncyCastle.Crypto.Agreement
  fullName: Org.BouncyCastle.Crypto.Agreement
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Org.BouncyCastle.Crypto.IBasicAgreement
  commentId: T:Org.BouncyCastle.Crypto.IBasicAgreement
  parent: Org.BouncyCastle.Crypto
  name: IBasicAgreement
  nameWithType: IBasicAgreement
  fullName: Org.BouncyCastle.Crypto.IBasicAgreement
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Org.BouncyCastle.Crypto
  commentId: N:Org.BouncyCastle.Crypto
  name: Org.BouncyCastle.Crypto
  nameWithType: Org.BouncyCastle.Crypto
  fullName: Org.BouncyCastle.Crypto
- uid: ECPrivateKeyParameters
  isExternal: true
  name: ECPrivateKeyParameters
  nameWithType: ECPrivateKeyParameters
  fullName: ECPrivateKeyParameters
- uid: Org.BouncyCastle.Crypto.Agreement.ECDHBasicAgreement.Init*
  commentId: Overload:Org.BouncyCastle.Crypto.Agreement.ECDHBasicAgreement.Init
  name: Init
  nameWithType: ECDHBasicAgreement.Init
  fullName: Org.BouncyCastle.Crypto.Agreement.ECDHBasicAgreement.Init
- uid: Org.BouncyCastle.Crypto.IBasicAgreement.Init(Org.BouncyCastle.Crypto.ICipherParameters)
  commentId: M:Org.BouncyCastle.Crypto.IBasicAgreement.Init(Org.BouncyCastle.Crypto.ICipherParameters)
  parent: Org.BouncyCastle.Crypto.IBasicAgreement
  name: Init(ICipherParameters)
  nameWithType: IBasicAgreement.Init(ICipherParameters)
  fullName: Org.BouncyCastle.Crypto.IBasicAgreement.Init(Org.BouncyCastle.Crypto.ICipherParameters)
  spec.csharp:
  - uid: Org.BouncyCastle.Crypto.IBasicAgreement.Init(Org.BouncyCastle.Crypto.ICipherParameters)
    name: Init
    nameWithType: IBasicAgreement.Init
    fullName: Org.BouncyCastle.Crypto.IBasicAgreement.Init
  - name: (
    nameWithType: (
    fullName: (
  - uid: Org.BouncyCastle.Crypto.ICipherParameters
    name: ICipherParameters
    nameWithType: ICipherParameters
    fullName: Org.BouncyCastle.Crypto.ICipherParameters
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Org.BouncyCastle.Crypto.IBasicAgreement.Init(Org.BouncyCastle.Crypto.ICipherParameters)
    name: Init
    nameWithType: IBasicAgreement.Init
    fullName: Org.BouncyCastle.Crypto.IBasicAgreement.Init
  - name: (
    nameWithType: (
    fullName: (
  - uid: Org.BouncyCastle.Crypto.ICipherParameters
    name: ICipherParameters
    nameWithType: ICipherParameters
    fullName: Org.BouncyCastle.Crypto.ICipherParameters
  - name: )
    nameWithType: )
    fullName: )
- uid: Org.BouncyCastle.Crypto.ICipherParameters
  commentId: T:Org.BouncyCastle.Crypto.ICipherParameters
  parent: Org.BouncyCastle.Crypto
  name: ICipherParameters
  nameWithType: ICipherParameters
  fullName: Org.BouncyCastle.Crypto.ICipherParameters
- uid: Org.BouncyCastle.Crypto.Agreement.ECDHBasicAgreement.GetFieldSize*
  commentId: Overload:Org.BouncyCastle.Crypto.Agreement.ECDHBasicAgreement.GetFieldSize
  name: GetFieldSize
  nameWithType: ECDHBasicAgreement.GetFieldSize
  fullName: Org.BouncyCastle.Crypto.Agreement.ECDHBasicAgreement.GetFieldSize
- uid: Org.BouncyCastle.Crypto.IBasicAgreement.GetFieldSize
  commentId: M:Org.BouncyCastle.Crypto.IBasicAgreement.GetFieldSize
  parent: Org.BouncyCastle.Crypto.IBasicAgreement
  name: GetFieldSize()
  nameWithType: IBasicAgreement.GetFieldSize()
  fullName: Org.BouncyCastle.Crypto.IBasicAgreement.GetFieldSize()
  spec.csharp:
  - uid: Org.BouncyCastle.Crypto.IBasicAgreement.GetFieldSize
    name: GetFieldSize
    nameWithType: IBasicAgreement.GetFieldSize
    fullName: Org.BouncyCastle.Crypto.IBasicAgreement.GetFieldSize
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Org.BouncyCastle.Crypto.IBasicAgreement.GetFieldSize
    name: GetFieldSize
    nameWithType: IBasicAgreement.GetFieldSize
    fullName: Org.BouncyCastle.Crypto.IBasicAgreement.GetFieldSize
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Org.BouncyCastle.Crypto.Agreement.ECDHBasicAgreement.CalculateAgreement*
  commentId: Overload:Org.BouncyCastle.Crypto.Agreement.ECDHBasicAgreement.CalculateAgreement
  name: CalculateAgreement
  nameWithType: ECDHBasicAgreement.CalculateAgreement
  fullName: Org.BouncyCastle.Crypto.Agreement.ECDHBasicAgreement.CalculateAgreement
- uid: Org.BouncyCastle.Crypto.IBasicAgreement.CalculateAgreement(Org.BouncyCastle.Crypto.ICipherParameters)
  commentId: M:Org.BouncyCastle.Crypto.IBasicAgreement.CalculateAgreement(Org.BouncyCastle.Crypto.ICipherParameters)
  parent: Org.BouncyCastle.Crypto.IBasicAgreement
  name: CalculateAgreement(ICipherParameters)
  nameWithType: IBasicAgreement.CalculateAgreement(ICipherParameters)
  fullName: Org.BouncyCastle.Crypto.IBasicAgreement.CalculateAgreement(Org.BouncyCastle.Crypto.ICipherParameters)
  spec.csharp:
  - uid: Org.BouncyCastle.Crypto.IBasicAgreement.CalculateAgreement(Org.BouncyCastle.Crypto.ICipherParameters)
    name: CalculateAgreement
    nameWithType: IBasicAgreement.CalculateAgreement
    fullName: Org.BouncyCastle.Crypto.IBasicAgreement.CalculateAgreement
  - name: (
    nameWithType: (
    fullName: (
  - uid: Org.BouncyCastle.Crypto.ICipherParameters
    name: ICipherParameters
    nameWithType: ICipherParameters
    fullName: Org.BouncyCastle.Crypto.ICipherParameters
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Org.BouncyCastle.Crypto.IBasicAgreement.CalculateAgreement(Org.BouncyCastle.Crypto.ICipherParameters)
    name: CalculateAgreement
    nameWithType: IBasicAgreement.CalculateAgreement
    fullName: Org.BouncyCastle.Crypto.IBasicAgreement.CalculateAgreement
  - name: (
    nameWithType: (
    fullName: (
  - uid: Org.BouncyCastle.Crypto.ICipherParameters
    name: ICipherParameters
    nameWithType: ICipherParameters
    fullName: Org.BouncyCastle.Crypto.ICipherParameters
  - name: )
    nameWithType: )
    fullName: )
- uid: BigInteger
  isExternal: true
  name: BigInteger
  nameWithType: BigInteger
  fullName: BigInteger
