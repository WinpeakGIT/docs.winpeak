### YamlMime:ManagedReference
items:
- uid: Org.BouncyCastle.Crypto.Modes.GcmBlockCipher
  commentId: T:Org.BouncyCastle.Crypto.Modes.GcmBlockCipher
  id: GcmBlockCipher
  parent: Org.BouncyCastle.Crypto.Modes
  children:
  - Org.BouncyCastle.Crypto.Modes.GcmBlockCipher.#ctor(Org.BouncyCastle.Crypto.IBlockCipher)
  - Org.BouncyCastle.Crypto.Modes.GcmBlockCipher.#ctor(Org.BouncyCastle.Crypto.IBlockCipher,IGcmMultiplier)
  - Org.BouncyCastle.Crypto.Modes.GcmBlockCipher.AlgorithmName
  - Org.BouncyCastle.Crypto.Modes.GcmBlockCipher.DoFinal(System.Byte[],System.Int32)
  - Org.BouncyCastle.Crypto.Modes.GcmBlockCipher.GetBlockSize
  - Org.BouncyCastle.Crypto.Modes.GcmBlockCipher.GetMac
  - Org.BouncyCastle.Crypto.Modes.GcmBlockCipher.GetOutputSize(System.Int32)
  - Org.BouncyCastle.Crypto.Modes.GcmBlockCipher.GetUnderlyingCipher
  - Org.BouncyCastle.Crypto.Modes.GcmBlockCipher.GetUpdateOutputSize(System.Int32)
  - Org.BouncyCastle.Crypto.Modes.GcmBlockCipher.Init(System.Boolean,Org.BouncyCastle.Crypto.ICipherParameters)
  - Org.BouncyCastle.Crypto.Modes.GcmBlockCipher.ProcessAadByte(System.Byte)
  - Org.BouncyCastle.Crypto.Modes.GcmBlockCipher.ProcessAadBytes(System.Byte[],System.Int32,System.Int32)
  - Org.BouncyCastle.Crypto.Modes.GcmBlockCipher.ProcessByte(System.Byte,System.Byte[],System.Int32)
  - Org.BouncyCastle.Crypto.Modes.GcmBlockCipher.ProcessBytes(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)
  - Org.BouncyCastle.Crypto.Modes.GcmBlockCipher.Reset
  langs:
  - csharp
  - vb
  name: GcmBlockCipher
  nameWithType: GcmBlockCipher
  fullName: Org.BouncyCastle.Crypto.Modes.GcmBlockCipher
  type: Class
  source:
    id: GcmBlockCipher
    path: ''
    startLine: 105839
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Modes
  summary: "\nImplements the Galois/Counter mode (GCM) detailed in\nNIST Special Publication 800-38D.\n"
  example: []
  syntax:
    content: 'public class GcmBlockCipher : IAeadBlockCipher'
    content.vb: >-
      Public Class GcmBlockCipher
          Implements IAeadBlockCipher
  inheritance:
  - System.Object
  implements:
  - Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ToString
  - System.Object.ReferenceEquals(System.Object,System.Object)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Org.BouncyCastle.Crypto.Modes.GcmBlockCipher.#ctor(Org.BouncyCastle.Crypto.IBlockCipher)
  commentId: M:Org.BouncyCastle.Crypto.Modes.GcmBlockCipher.#ctor(Org.BouncyCastle.Crypto.IBlockCipher)
  id: '#ctor(Org.BouncyCastle.Crypto.IBlockCipher)'
  parent: Org.BouncyCastle.Crypto.Modes.GcmBlockCipher
  langs:
  - csharp
  - vb
  name: GcmBlockCipher(IBlockCipher)
  nameWithType: GcmBlockCipher.GcmBlockCipher(IBlockCipher)
  fullName: Org.BouncyCastle.Crypto.Modes.GcmBlockCipher.GcmBlockCipher(Org.BouncyCastle.Crypto.IBlockCipher)
  type: Constructor
  source:
    id: .ctor
    path: ''
    startLine: 105869
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Modes
  syntax:
    content: public GcmBlockCipher(IBlockCipher c)
    parameters:
    - id: c
      type: Org.BouncyCastle.Crypto.IBlockCipher
    content.vb: Public Sub New(c As IBlockCipher)
  overload: Org.BouncyCastle.Crypto.Modes.GcmBlockCipher.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Org.BouncyCastle.Crypto.Modes.GcmBlockCipher.#ctor(Org.BouncyCastle.Crypto.IBlockCipher,IGcmMultiplier)
  commentId: M:Org.BouncyCastle.Crypto.Modes.GcmBlockCipher.#ctor(Org.BouncyCastle.Crypto.IBlockCipher,IGcmMultiplier)
  id: '#ctor(Org.BouncyCastle.Crypto.IBlockCipher,IGcmMultiplier)'
  parent: Org.BouncyCastle.Crypto.Modes.GcmBlockCipher
  langs:
  - csharp
  - vb
  name: GcmBlockCipher(IBlockCipher, IGcmMultiplier)
  nameWithType: GcmBlockCipher.GcmBlockCipher(IBlockCipher, IGcmMultiplier)
  fullName: Org.BouncyCastle.Crypto.Modes.GcmBlockCipher.GcmBlockCipher(Org.BouncyCastle.Crypto.IBlockCipher, IGcmMultiplier)
  type: Constructor
  source:
    id: .ctor
    path: ''
    startLine: 105875
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Modes
  syntax:
    content: public GcmBlockCipher(IBlockCipher c, IGcmMultiplier m)
    parameters:
    - id: c
      type: Org.BouncyCastle.Crypto.IBlockCipher
    - id: m
      type: IGcmMultiplier
    content.vb: Public Sub New(c As IBlockCipher, m As IGcmMultiplier)
  overload: Org.BouncyCastle.Crypto.Modes.GcmBlockCipher.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Org.BouncyCastle.Crypto.Modes.GcmBlockCipher.AlgorithmName
  commentId: P:Org.BouncyCastle.Crypto.Modes.GcmBlockCipher.AlgorithmName
  id: AlgorithmName
  parent: Org.BouncyCastle.Crypto.Modes.GcmBlockCipher
  langs:
  - csharp
  - vb
  name: AlgorithmName
  nameWithType: GcmBlockCipher.AlgorithmName
  fullName: Org.BouncyCastle.Crypto.Modes.GcmBlockCipher.AlgorithmName
  type: Property
  source:
    id: AlgorithmName
    path: ''
    startLine: 105892
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Modes
  syntax:
    content: public virtual string AlgorithmName { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Overridable ReadOnly Property AlgorithmName As String
  overload: Org.BouncyCastle.Crypto.Modes.GcmBlockCipher.AlgorithmName*
  implements:
  - Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher.AlgorithmName
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: Org.BouncyCastle.Crypto.Modes.GcmBlockCipher.GetUnderlyingCipher
  commentId: M:Org.BouncyCastle.Crypto.Modes.GcmBlockCipher.GetUnderlyingCipher
  id: GetUnderlyingCipher
  parent: Org.BouncyCastle.Crypto.Modes.GcmBlockCipher
  langs:
  - csharp
  - vb
  name: GetUnderlyingCipher()
  nameWithType: GcmBlockCipher.GetUnderlyingCipher()
  fullName: Org.BouncyCastle.Crypto.Modes.GcmBlockCipher.GetUnderlyingCipher()
  type: Method
  source:
    id: GetUnderlyingCipher
    path: ''
    startLine: 105897
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Modes
  syntax:
    content: public IBlockCipher GetUnderlyingCipher()
    return:
      type: Org.BouncyCastle.Crypto.IBlockCipher
    content.vb: Public Function GetUnderlyingCipher As IBlockCipher
  overload: Org.BouncyCastle.Crypto.Modes.GcmBlockCipher.GetUnderlyingCipher*
  implements:
  - Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher.GetUnderlyingCipher
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Org.BouncyCastle.Crypto.Modes.GcmBlockCipher.GetBlockSize
  commentId: M:Org.BouncyCastle.Crypto.Modes.GcmBlockCipher.GetBlockSize
  id: GetBlockSize
  parent: Org.BouncyCastle.Crypto.Modes.GcmBlockCipher
  langs:
  - csharp
  - vb
  name: GetBlockSize()
  nameWithType: GcmBlockCipher.GetBlockSize()
  fullName: Org.BouncyCastle.Crypto.Modes.GcmBlockCipher.GetBlockSize()
  type: Method
  source:
    id: GetBlockSize
    path: ''
    startLine: 105902
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Modes
  syntax:
    content: public virtual int GetBlockSize()
    return:
      type: System.Int32
    content.vb: Public Overridable Function GetBlockSize As Integer
  overload: Org.BouncyCastle.Crypto.Modes.GcmBlockCipher.GetBlockSize*
  implements:
  - Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher.GetBlockSize
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Org.BouncyCastle.Crypto.Modes.GcmBlockCipher.Init(System.Boolean,Org.BouncyCastle.Crypto.ICipherParameters)
  commentId: M:Org.BouncyCastle.Crypto.Modes.GcmBlockCipher.Init(System.Boolean,Org.BouncyCastle.Crypto.ICipherParameters)
  id: Init(System.Boolean,Org.BouncyCastle.Crypto.ICipherParameters)
  parent: Org.BouncyCastle.Crypto.Modes.GcmBlockCipher
  langs:
  - csharp
  - vb
  name: Init(Boolean, ICipherParameters)
  nameWithType: GcmBlockCipher.Init(Boolean, ICipherParameters)
  fullName: Org.BouncyCastle.Crypto.Modes.GcmBlockCipher.Init(System.Boolean, Org.BouncyCastle.Crypto.ICipherParameters)
  type: Method
  source:
    id: Init
    path: ''
    startLine: 105911
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Modes
  remarks: "\nMAC sizes from 32 bits to 128 bits (must be a multiple of 8) are supported. The default is 128 bits.\nSizes less than 96 are not recommended, but are supported for specialized applications.\n"
  example: []
  syntax:
    content: public virtual void Init(bool forEncryption, ICipherParameters parameters)
    parameters:
    - id: forEncryption
      type: System.Boolean
    - id: parameters
      type: Org.BouncyCastle.Crypto.ICipherParameters
    content.vb: Public Overridable Sub Init(forEncryption As Boolean, parameters As ICipherParameters)
  overload: Org.BouncyCastle.Crypto.Modes.GcmBlockCipher.Init*
  implements:
  - Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher.Init(System.Boolean,Org.BouncyCastle.Crypto.ICipherParameters)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Org.BouncyCastle.Crypto.Modes.GcmBlockCipher.GetMac
  commentId: M:Org.BouncyCastle.Crypto.Modes.GcmBlockCipher.GetMac
  id: GetMac
  parent: Org.BouncyCastle.Crypto.Modes.GcmBlockCipher
  langs:
  - csharp
  - vb
  name: GetMac()
  nameWithType: GcmBlockCipher.GetMac()
  fullName: Org.BouncyCastle.Crypto.Modes.GcmBlockCipher.GetMac()
  type: Method
  source:
    id: GetMac
    path: ''
    startLine: 106011
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Modes
  syntax:
    content: public virtual byte[] GetMac()
    return:
      type: System.Byte[]
    content.vb: Public Overridable Function GetMac As Byte()
  overload: Org.BouncyCastle.Crypto.Modes.GcmBlockCipher.GetMac*
  implements:
  - Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher.GetMac
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Org.BouncyCastle.Crypto.Modes.GcmBlockCipher.GetOutputSize(System.Int32)
  commentId: M:Org.BouncyCastle.Crypto.Modes.GcmBlockCipher.GetOutputSize(System.Int32)
  id: GetOutputSize(System.Int32)
  parent: Org.BouncyCastle.Crypto.Modes.GcmBlockCipher
  langs:
  - csharp
  - vb
  name: GetOutputSize(Int32)
  nameWithType: GcmBlockCipher.GetOutputSize(Int32)
  fullName: Org.BouncyCastle.Crypto.Modes.GcmBlockCipher.GetOutputSize(System.Int32)
  type: Method
  source:
    id: GetOutputSize
    path: ''
    startLine: 106016
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Modes
  syntax:
    content: public virtual int GetOutputSize(int len)
    parameters:
    - id: len
      type: System.Int32
    return:
      type: System.Int32
    content.vb: Public Overridable Function GetOutputSize(len As Integer) As Integer
  overload: Org.BouncyCastle.Crypto.Modes.GcmBlockCipher.GetOutputSize*
  implements:
  - Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher.GetOutputSize(System.Int32)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Org.BouncyCastle.Crypto.Modes.GcmBlockCipher.GetUpdateOutputSize(System.Int32)
  commentId: M:Org.BouncyCastle.Crypto.Modes.GcmBlockCipher.GetUpdateOutputSize(System.Int32)
  id: GetUpdateOutputSize(System.Int32)
  parent: Org.BouncyCastle.Crypto.Modes.GcmBlockCipher
  langs:
  - csharp
  - vb
  name: GetUpdateOutputSize(Int32)
  nameWithType: GcmBlockCipher.GetUpdateOutputSize(Int32)
  fullName: Org.BouncyCastle.Crypto.Modes.GcmBlockCipher.GetUpdateOutputSize(System.Int32)
  type: Method
  source:
    id: GetUpdateOutputSize
    path: ''
    startLine: 106029
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Modes
  syntax:
    content: public virtual int GetUpdateOutputSize(int len)
    parameters:
    - id: len
      type: System.Int32
    return:
      type: System.Int32
    content.vb: Public Overridable Function GetUpdateOutputSize(len As Integer) As Integer
  overload: Org.BouncyCastle.Crypto.Modes.GcmBlockCipher.GetUpdateOutputSize*
  implements:
  - Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher.GetUpdateOutputSize(System.Int32)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Org.BouncyCastle.Crypto.Modes.GcmBlockCipher.ProcessAadByte(System.Byte)
  commentId: M:Org.BouncyCastle.Crypto.Modes.GcmBlockCipher.ProcessAadByte(System.Byte)
  id: ProcessAadByte(System.Byte)
  parent: Org.BouncyCastle.Crypto.Modes.GcmBlockCipher
  langs:
  - csharp
  - vb
  name: ProcessAadByte(Byte)
  nameWithType: GcmBlockCipher.ProcessAadByte(Byte)
  fullName: Org.BouncyCastle.Crypto.Modes.GcmBlockCipher.ProcessAadByte(System.Byte)
  type: Method
  source:
    id: ProcessAadByte
    path: ''
    startLine: 106044
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Modes
  syntax:
    content: public virtual void ProcessAadByte(byte input)
    parameters:
    - id: input
      type: System.Byte
    content.vb: Public Overridable Sub ProcessAadByte(input As Byte)
  overload: Org.BouncyCastle.Crypto.Modes.GcmBlockCipher.ProcessAadByte*
  implements:
  - Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher.ProcessAadByte(System.Byte)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Org.BouncyCastle.Crypto.Modes.GcmBlockCipher.ProcessAadBytes(System.Byte[],System.Int32,System.Int32)
  commentId: M:Org.BouncyCastle.Crypto.Modes.GcmBlockCipher.ProcessAadBytes(System.Byte[],System.Int32,System.Int32)
  id: ProcessAadBytes(System.Byte[],System.Int32,System.Int32)
  parent: Org.BouncyCastle.Crypto.Modes.GcmBlockCipher
  langs:
  - csharp
  - vb
  name: ProcessAadBytes(Byte[], Int32, Int32)
  nameWithType: GcmBlockCipher.ProcessAadBytes(Byte[], Int32, Int32)
  fullName: Org.BouncyCastle.Crypto.Modes.GcmBlockCipher.ProcessAadBytes(System.Byte[], System.Int32, System.Int32)
  type: Method
  source:
    id: ProcessAadBytes
    path: ''
    startLine: 106056
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Modes
  syntax:
    content: public virtual void ProcessAadBytes(byte[] inBytes, int inOff, int len)
    parameters:
    - id: inBytes
      type: System.Byte[]
    - id: inOff
      type: System.Int32
    - id: len
      type: System.Int32
    content.vb: Public Overridable Sub ProcessAadBytes(inBytes As Byte(), inOff As Integer, len As Integer)
  overload: Org.BouncyCastle.Crypto.Modes.GcmBlockCipher.ProcessAadBytes*
  implements:
  - Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher.ProcessAadBytes(System.Byte[],System.Int32,System.Int32)
  nameWithType.vb: GcmBlockCipher.ProcessAadBytes(Byte(), Int32, Int32)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Org.BouncyCastle.Crypto.Modes.GcmBlockCipher.ProcessAadBytes(System.Byte(), System.Int32, System.Int32)
  name.vb: ProcessAadBytes(Byte(), Int32, Int32)
- uid: Org.BouncyCastle.Crypto.Modes.GcmBlockCipher.ProcessByte(System.Byte,System.Byte[],System.Int32)
  commentId: M:Org.BouncyCastle.Crypto.Modes.GcmBlockCipher.ProcessByte(System.Byte,System.Byte[],System.Int32)
  id: ProcessByte(System.Byte,System.Byte[],System.Int32)
  parent: Org.BouncyCastle.Crypto.Modes.GcmBlockCipher
  langs:
  - csharp
  - vb
  name: ProcessByte(Byte, Byte[], Int32)
  nameWithType: GcmBlockCipher.ProcessByte(Byte, Byte[], Int32)
  fullName: Org.BouncyCastle.Crypto.Modes.GcmBlockCipher.ProcessByte(System.Byte, System.Byte[], System.Int32)
  type: Method
  source:
    id: ProcessByte
    path: ''
    startLine: 106092
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Modes
  syntax:
    content: public virtual int ProcessByte(byte input, byte[] output, int outOff)
    parameters:
    - id: input
      type: System.Byte
    - id: output
      type: System.Byte[]
    - id: outOff
      type: System.Int32
    return:
      type: System.Int32
    content.vb: Public Overridable Function ProcessByte(input As Byte, output As Byte(), outOff As Integer) As Integer
  overload: Org.BouncyCastle.Crypto.Modes.GcmBlockCipher.ProcessByte*
  implements:
  - Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher.ProcessByte(System.Byte,System.Byte[],System.Int32)
  nameWithType.vb: GcmBlockCipher.ProcessByte(Byte, Byte(), Int32)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Org.BouncyCastle.Crypto.Modes.GcmBlockCipher.ProcessByte(System.Byte, System.Byte(), System.Int32)
  name.vb: ProcessByte(Byte, Byte(), Int32)
- uid: Org.BouncyCastle.Crypto.Modes.GcmBlockCipher.ProcessBytes(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)
  commentId: M:Org.BouncyCastle.Crypto.Modes.GcmBlockCipher.ProcessBytes(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)
  id: ProcessBytes(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)
  parent: Org.BouncyCastle.Crypto.Modes.GcmBlockCipher
  langs:
  - csharp
  - vb
  name: ProcessBytes(Byte[], Int32, Int32, Byte[], Int32)
  nameWithType: GcmBlockCipher.ProcessBytes(Byte[], Int32, Int32, Byte[], Int32)
  fullName: Org.BouncyCastle.Crypto.Modes.GcmBlockCipher.ProcessBytes(System.Byte[], System.Int32, System.Int32, System.Byte[], System.Int32)
  type: Method
  source:
    id: ProcessBytes
    path: ''
    startLine: 106106
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Modes
  syntax:
    content: public virtual int ProcessBytes(byte[] input, int inOff, int len, byte[] output, int outOff)
    parameters:
    - id: input
      type: System.Byte[]
    - id: inOff
      type: System.Int32
    - id: len
      type: System.Int32
    - id: output
      type: System.Byte[]
    - id: outOff
      type: System.Int32
    return:
      type: System.Int32
    content.vb: Public Overridable Function ProcessBytes(input As Byte(), inOff As Integer, len As Integer, output As Byte(), outOff As Integer) As Integer
  overload: Org.BouncyCastle.Crypto.Modes.GcmBlockCipher.ProcessBytes*
  implements:
  - Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher.ProcessBytes(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)
  nameWithType.vb: GcmBlockCipher.ProcessBytes(Byte(), Int32, Int32, Byte(), Int32)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Org.BouncyCastle.Crypto.Modes.GcmBlockCipher.ProcessBytes(System.Byte(), System.Int32, System.Int32, System.Byte(), System.Int32)
  name.vb: ProcessBytes(Byte(), Int32, Int32, Byte(), Int32)
- uid: Org.BouncyCastle.Crypto.Modes.GcmBlockCipher.DoFinal(System.Byte[],System.Int32)
  commentId: M:Org.BouncyCastle.Crypto.Modes.GcmBlockCipher.DoFinal(System.Byte[],System.Int32)
  id: DoFinal(System.Byte[],System.Int32)
  parent: Org.BouncyCastle.Crypto.Modes.GcmBlockCipher
  langs:
  - csharp
  - vb
  name: DoFinal(Byte[], Int32)
  nameWithType: GcmBlockCipher.DoFinal(Byte[], Int32)
  fullName: Org.BouncyCastle.Crypto.Modes.GcmBlockCipher.DoFinal(System.Byte[], System.Int32)
  type: Method
  source:
    id: DoFinal
    path: ''
    startLine: 106150
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Modes
  syntax:
    content: public int DoFinal(byte[] output, int outOff)
    parameters:
    - id: output
      type: System.Byte[]
    - id: outOff
      type: System.Int32
    return:
      type: System.Int32
    content.vb: Public Function DoFinal(output As Byte(), outOff As Integer) As Integer
  overload: Org.BouncyCastle.Crypto.Modes.GcmBlockCipher.DoFinal*
  implements:
  - Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher.DoFinal(System.Byte[],System.Int32)
  nameWithType.vb: GcmBlockCipher.DoFinal(Byte(), Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Org.BouncyCastle.Crypto.Modes.GcmBlockCipher.DoFinal(System.Byte(), System.Int32)
  name.vb: DoFinal(Byte(), Int32)
- uid: Org.BouncyCastle.Crypto.Modes.GcmBlockCipher.Reset
  commentId: M:Org.BouncyCastle.Crypto.Modes.GcmBlockCipher.Reset
  id: Reset
  parent: Org.BouncyCastle.Crypto.Modes.GcmBlockCipher
  langs:
  - csharp
  - vb
  name: Reset()
  nameWithType: GcmBlockCipher.Reset()
  fullName: Org.BouncyCastle.Crypto.Modes.GcmBlockCipher.Reset()
  type: Method
  source:
    id: Reset
    path: ''
    startLine: 106258
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Modes
  syntax:
    content: public virtual void Reset()
    content.vb: Public Overridable Sub Reset
  overload: Org.BouncyCastle.Crypto.Modes.GcmBlockCipher.Reset*
  implements:
  - Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher.Reset
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
references:
- uid: Org.BouncyCastle.Crypto.Modes
  commentId: N:Org.BouncyCastle.Crypto.Modes
  name: Org.BouncyCastle.Crypto.Modes
  nameWithType: Org.BouncyCastle.Crypto.Modes
  fullName: Org.BouncyCastle.Crypto.Modes
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher
  commentId: T:Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher
  parent: Org.BouncyCastle.Crypto.Modes
  name: IAeadBlockCipher
  nameWithType: IAeadBlockCipher
  fullName: Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Org.BouncyCastle.Crypto.Modes.GcmBlockCipher.#ctor*
  commentId: Overload:Org.BouncyCastle.Crypto.Modes.GcmBlockCipher.#ctor
  name: GcmBlockCipher
  nameWithType: GcmBlockCipher.GcmBlockCipher
  fullName: Org.BouncyCastle.Crypto.Modes.GcmBlockCipher.GcmBlockCipher
- uid: Org.BouncyCastle.Crypto.IBlockCipher
  commentId: T:Org.BouncyCastle.Crypto.IBlockCipher
  parent: Org.BouncyCastle.Crypto
  name: IBlockCipher
  nameWithType: IBlockCipher
  fullName: Org.BouncyCastle.Crypto.IBlockCipher
- uid: Org.BouncyCastle.Crypto
  commentId: N:Org.BouncyCastle.Crypto
  name: Org.BouncyCastle.Crypto
  nameWithType: Org.BouncyCastle.Crypto
  fullName: Org.BouncyCastle.Crypto
- uid: IGcmMultiplier
  commentId: '!:IGcmMultiplier'
  isExternal: true
  name: IGcmMultiplier
  nameWithType: IGcmMultiplier
  fullName: IGcmMultiplier
- uid: Org.BouncyCastle.Crypto.Modes.GcmBlockCipher.AlgorithmName*
  commentId: Overload:Org.BouncyCastle.Crypto.Modes.GcmBlockCipher.AlgorithmName
  name: AlgorithmName
  nameWithType: GcmBlockCipher.AlgorithmName
  fullName: Org.BouncyCastle.Crypto.Modes.GcmBlockCipher.AlgorithmName
- uid: Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher.AlgorithmName
  commentId: P:Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher.AlgorithmName
  parent: Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher
  name: AlgorithmName
  nameWithType: IAeadBlockCipher.AlgorithmName
  fullName: Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher.AlgorithmName
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Org.BouncyCastle.Crypto.Modes.GcmBlockCipher.GetUnderlyingCipher*
  commentId: Overload:Org.BouncyCastle.Crypto.Modes.GcmBlockCipher.GetUnderlyingCipher
  name: GetUnderlyingCipher
  nameWithType: GcmBlockCipher.GetUnderlyingCipher
  fullName: Org.BouncyCastle.Crypto.Modes.GcmBlockCipher.GetUnderlyingCipher
- uid: Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher.GetUnderlyingCipher
  commentId: M:Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher.GetUnderlyingCipher
  parent: Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher
  name: GetUnderlyingCipher()
  nameWithType: IAeadBlockCipher.GetUnderlyingCipher()
  fullName: Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher.GetUnderlyingCipher()
  spec.csharp:
  - uid: Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher.GetUnderlyingCipher
    name: GetUnderlyingCipher
    nameWithType: IAeadBlockCipher.GetUnderlyingCipher
    fullName: Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher.GetUnderlyingCipher
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher.GetUnderlyingCipher
    name: GetUnderlyingCipher
    nameWithType: IAeadBlockCipher.GetUnderlyingCipher
    fullName: Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher.GetUnderlyingCipher
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Org.BouncyCastle.Crypto.Modes.GcmBlockCipher.GetBlockSize*
  commentId: Overload:Org.BouncyCastle.Crypto.Modes.GcmBlockCipher.GetBlockSize
  name: GetBlockSize
  nameWithType: GcmBlockCipher.GetBlockSize
  fullName: Org.BouncyCastle.Crypto.Modes.GcmBlockCipher.GetBlockSize
- uid: Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher.GetBlockSize
  commentId: M:Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher.GetBlockSize
  parent: Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher
  name: GetBlockSize()
  nameWithType: IAeadBlockCipher.GetBlockSize()
  fullName: Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher.GetBlockSize()
  spec.csharp:
  - uid: Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher.GetBlockSize
    name: GetBlockSize
    nameWithType: IAeadBlockCipher.GetBlockSize
    fullName: Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher.GetBlockSize
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher.GetBlockSize
    name: GetBlockSize
    nameWithType: IAeadBlockCipher.GetBlockSize
    fullName: Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher.GetBlockSize
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Org.BouncyCastle.Crypto.Modes.GcmBlockCipher.Init*
  commentId: Overload:Org.BouncyCastle.Crypto.Modes.GcmBlockCipher.Init
  name: Init
  nameWithType: GcmBlockCipher.Init
  fullName: Org.BouncyCastle.Crypto.Modes.GcmBlockCipher.Init
- uid: Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher.Init(System.Boolean,Org.BouncyCastle.Crypto.ICipherParameters)
  commentId: M:Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher.Init(System.Boolean,Org.BouncyCastle.Crypto.ICipherParameters)
  parent: Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher
  isExternal: true
  name: Init(Boolean, ICipherParameters)
  nameWithType: IAeadBlockCipher.Init(Boolean, ICipherParameters)
  fullName: Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher.Init(System.Boolean, Org.BouncyCastle.Crypto.ICipherParameters)
  spec.csharp:
  - uid: Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher.Init(System.Boolean,Org.BouncyCastle.Crypto.ICipherParameters)
    name: Init
    nameWithType: IAeadBlockCipher.Init
    fullName: Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher.Init
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Org.BouncyCastle.Crypto.ICipherParameters
    name: ICipherParameters
    nameWithType: ICipherParameters
    fullName: Org.BouncyCastle.Crypto.ICipherParameters
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher.Init(System.Boolean,Org.BouncyCastle.Crypto.ICipherParameters)
    name: Init
    nameWithType: IAeadBlockCipher.Init
    fullName: Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher.Init
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Org.BouncyCastle.Crypto.ICipherParameters
    name: ICipherParameters
    nameWithType: ICipherParameters
    fullName: Org.BouncyCastle.Crypto.ICipherParameters
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Org.BouncyCastle.Crypto.ICipherParameters
  commentId: T:Org.BouncyCastle.Crypto.ICipherParameters
  parent: Org.BouncyCastle.Crypto
  name: ICipherParameters
  nameWithType: ICipherParameters
  fullName: Org.BouncyCastle.Crypto.ICipherParameters
- uid: Org.BouncyCastle.Crypto.Modes.GcmBlockCipher.GetMac*
  commentId: Overload:Org.BouncyCastle.Crypto.Modes.GcmBlockCipher.GetMac
  name: GetMac
  nameWithType: GcmBlockCipher.GetMac
  fullName: Org.BouncyCastle.Crypto.Modes.GcmBlockCipher.GetMac
- uid: Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher.GetMac
  commentId: M:Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher.GetMac
  parent: Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher
  name: GetMac()
  nameWithType: IAeadBlockCipher.GetMac()
  fullName: Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher.GetMac()
  spec.csharp:
  - uid: Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher.GetMac
    name: GetMac
    nameWithType: IAeadBlockCipher.GetMac
    fullName: Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher.GetMac
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher.GetMac
    name: GetMac
    nameWithType: IAeadBlockCipher.GetMac
    fullName: Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher.GetMac
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Byte[]
  isExternal: true
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullName.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Org.BouncyCastle.Crypto.Modes.GcmBlockCipher.GetOutputSize*
  commentId: Overload:Org.BouncyCastle.Crypto.Modes.GcmBlockCipher.GetOutputSize
  name: GetOutputSize
  nameWithType: GcmBlockCipher.GetOutputSize
  fullName: Org.BouncyCastle.Crypto.Modes.GcmBlockCipher.GetOutputSize
- uid: Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher.GetOutputSize(System.Int32)
  commentId: M:Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher.GetOutputSize(System.Int32)
  parent: Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher
  isExternal: true
  name: GetOutputSize(Int32)
  nameWithType: IAeadBlockCipher.GetOutputSize(Int32)
  fullName: Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher.GetOutputSize(System.Int32)
  spec.csharp:
  - uid: Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher.GetOutputSize(System.Int32)
    name: GetOutputSize
    nameWithType: IAeadBlockCipher.GetOutputSize
    fullName: Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher.GetOutputSize
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher.GetOutputSize(System.Int32)
    name: GetOutputSize
    nameWithType: IAeadBlockCipher.GetOutputSize
    fullName: Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher.GetOutputSize
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Org.BouncyCastle.Crypto.Modes.GcmBlockCipher.GetUpdateOutputSize*
  commentId: Overload:Org.BouncyCastle.Crypto.Modes.GcmBlockCipher.GetUpdateOutputSize
  name: GetUpdateOutputSize
  nameWithType: GcmBlockCipher.GetUpdateOutputSize
  fullName: Org.BouncyCastle.Crypto.Modes.GcmBlockCipher.GetUpdateOutputSize
- uid: Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher.GetUpdateOutputSize(System.Int32)
  commentId: M:Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher.GetUpdateOutputSize(System.Int32)
  parent: Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher
  isExternal: true
  name: GetUpdateOutputSize(Int32)
  nameWithType: IAeadBlockCipher.GetUpdateOutputSize(Int32)
  fullName: Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher.GetUpdateOutputSize(System.Int32)
  spec.csharp:
  - uid: Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher.GetUpdateOutputSize(System.Int32)
    name: GetUpdateOutputSize
    nameWithType: IAeadBlockCipher.GetUpdateOutputSize
    fullName: Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher.GetUpdateOutputSize
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher.GetUpdateOutputSize(System.Int32)
    name: GetUpdateOutputSize
    nameWithType: IAeadBlockCipher.GetUpdateOutputSize
    fullName: Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher.GetUpdateOutputSize
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Org.BouncyCastle.Crypto.Modes.GcmBlockCipher.ProcessAadByte*
  commentId: Overload:Org.BouncyCastle.Crypto.Modes.GcmBlockCipher.ProcessAadByte
  name: ProcessAadByte
  nameWithType: GcmBlockCipher.ProcessAadByte
  fullName: Org.BouncyCastle.Crypto.Modes.GcmBlockCipher.ProcessAadByte
- uid: Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher.ProcessAadByte(System.Byte)
  commentId: M:Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher.ProcessAadByte(System.Byte)
  parent: Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher
  isExternal: true
  name: ProcessAadByte(Byte)
  nameWithType: IAeadBlockCipher.ProcessAadByte(Byte)
  fullName: Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher.ProcessAadByte(System.Byte)
  spec.csharp:
  - uid: Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher.ProcessAadByte(System.Byte)
    name: ProcessAadByte
    nameWithType: IAeadBlockCipher.ProcessAadByte
    fullName: Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher.ProcessAadByte
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher.ProcessAadByte(System.Byte)
    name: ProcessAadByte
    nameWithType: IAeadBlockCipher.ProcessAadByte
    fullName: Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher.ProcessAadByte
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Byte
  commentId: T:System.Byte
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte
- uid: Org.BouncyCastle.Crypto.Modes.GcmBlockCipher.ProcessAadBytes*
  commentId: Overload:Org.BouncyCastle.Crypto.Modes.GcmBlockCipher.ProcessAadBytes
  name: ProcessAadBytes
  nameWithType: GcmBlockCipher.ProcessAadBytes
  fullName: Org.BouncyCastle.Crypto.Modes.GcmBlockCipher.ProcessAadBytes
- uid: Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher.ProcessAadBytes(System.Byte[],System.Int32,System.Int32)
  commentId: M:Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher.ProcessAadBytes(System.Byte[],System.Int32,System.Int32)
  parent: Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher
  isExternal: true
  name: ProcessAadBytes(Byte[], Int32, Int32)
  nameWithType: IAeadBlockCipher.ProcessAadBytes(Byte[], Int32, Int32)
  fullName: Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher.ProcessAadBytes(System.Byte[], System.Int32, System.Int32)
  nameWithType.vb: IAeadBlockCipher.ProcessAadBytes(Byte(), Int32, Int32)
  fullName.vb: Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher.ProcessAadBytes(System.Byte(), System.Int32, System.Int32)
  name.vb: ProcessAadBytes(Byte(), Int32, Int32)
  spec.csharp:
  - uid: Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher.ProcessAadBytes(System.Byte[],System.Int32,System.Int32)
    name: ProcessAadBytes
    nameWithType: IAeadBlockCipher.ProcessAadBytes
    fullName: Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher.ProcessAadBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher.ProcessAadBytes(System.Byte[],System.Int32,System.Int32)
    name: ProcessAadBytes
    nameWithType: IAeadBlockCipher.ProcessAadBytes
    fullName: Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher.ProcessAadBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Org.BouncyCastle.Crypto.Modes.GcmBlockCipher.ProcessByte*
  commentId: Overload:Org.BouncyCastle.Crypto.Modes.GcmBlockCipher.ProcessByte
  name: ProcessByte
  nameWithType: GcmBlockCipher.ProcessByte
  fullName: Org.BouncyCastle.Crypto.Modes.GcmBlockCipher.ProcessByte
- uid: Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher.ProcessByte(System.Byte,System.Byte[],System.Int32)
  commentId: M:Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher.ProcessByte(System.Byte,System.Byte[],System.Int32)
  parent: Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher
  isExternal: true
  name: ProcessByte(Byte, Byte[], Int32)
  nameWithType: IAeadBlockCipher.ProcessByte(Byte, Byte[], Int32)
  fullName: Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher.ProcessByte(System.Byte, System.Byte[], System.Int32)
  nameWithType.vb: IAeadBlockCipher.ProcessByte(Byte, Byte(), Int32)
  fullName.vb: Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher.ProcessByte(System.Byte, System.Byte(), System.Int32)
  name.vb: ProcessByte(Byte, Byte(), Int32)
  spec.csharp:
  - uid: Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher.ProcessByte(System.Byte,System.Byte[],System.Int32)
    name: ProcessByte
    nameWithType: IAeadBlockCipher.ProcessByte
    fullName: Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher.ProcessByte
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher.ProcessByte(System.Byte,System.Byte[],System.Int32)
    name: ProcessByte
    nameWithType: IAeadBlockCipher.ProcessByte
    fullName: Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher.ProcessByte
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Org.BouncyCastle.Crypto.Modes.GcmBlockCipher.ProcessBytes*
  commentId: Overload:Org.BouncyCastle.Crypto.Modes.GcmBlockCipher.ProcessBytes
  name: ProcessBytes
  nameWithType: GcmBlockCipher.ProcessBytes
  fullName: Org.BouncyCastle.Crypto.Modes.GcmBlockCipher.ProcessBytes
- uid: Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher.ProcessBytes(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)
  commentId: M:Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher.ProcessBytes(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)
  parent: Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher
  isExternal: true
  name: ProcessBytes(Byte[], Int32, Int32, Byte[], Int32)
  nameWithType: IAeadBlockCipher.ProcessBytes(Byte[], Int32, Int32, Byte[], Int32)
  fullName: Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher.ProcessBytes(System.Byte[], System.Int32, System.Int32, System.Byte[], System.Int32)
  nameWithType.vb: IAeadBlockCipher.ProcessBytes(Byte(), Int32, Int32, Byte(), Int32)
  fullName.vb: Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher.ProcessBytes(System.Byte(), System.Int32, System.Int32, System.Byte(), System.Int32)
  name.vb: ProcessBytes(Byte(), Int32, Int32, Byte(), Int32)
  spec.csharp:
  - uid: Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher.ProcessBytes(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)
    name: ProcessBytes
    nameWithType: IAeadBlockCipher.ProcessBytes
    fullName: Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher.ProcessBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher.ProcessBytes(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)
    name: ProcessBytes
    nameWithType: IAeadBlockCipher.ProcessBytes
    fullName: Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher.ProcessBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Org.BouncyCastle.Crypto.Modes.GcmBlockCipher.DoFinal*
  commentId: Overload:Org.BouncyCastle.Crypto.Modes.GcmBlockCipher.DoFinal
  name: DoFinal
  nameWithType: GcmBlockCipher.DoFinal
  fullName: Org.BouncyCastle.Crypto.Modes.GcmBlockCipher.DoFinal
- uid: Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher.DoFinal(System.Byte[],System.Int32)
  commentId: M:Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher.DoFinal(System.Byte[],System.Int32)
  parent: Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher
  isExternal: true
  name: DoFinal(Byte[], Int32)
  nameWithType: IAeadBlockCipher.DoFinal(Byte[], Int32)
  fullName: Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher.DoFinal(System.Byte[], System.Int32)
  nameWithType.vb: IAeadBlockCipher.DoFinal(Byte(), Int32)
  fullName.vb: Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher.DoFinal(System.Byte(), System.Int32)
  name.vb: DoFinal(Byte(), Int32)
  spec.csharp:
  - uid: Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher.DoFinal(System.Byte[],System.Int32)
    name: DoFinal
    nameWithType: IAeadBlockCipher.DoFinal
    fullName: Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher.DoFinal
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher.DoFinal(System.Byte[],System.Int32)
    name: DoFinal
    nameWithType: IAeadBlockCipher.DoFinal
    fullName: Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher.DoFinal
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Org.BouncyCastle.Crypto.Modes.GcmBlockCipher.Reset*
  commentId: Overload:Org.BouncyCastle.Crypto.Modes.GcmBlockCipher.Reset
  name: Reset
  nameWithType: GcmBlockCipher.Reset
  fullName: Org.BouncyCastle.Crypto.Modes.GcmBlockCipher.Reset
- uid: Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher.Reset
  commentId: M:Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher.Reset
  parent: Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher
  name: Reset()
  nameWithType: IAeadBlockCipher.Reset()
  fullName: Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher.Reset()
  spec.csharp:
  - uid: Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher.Reset
    name: Reset
    nameWithType: IAeadBlockCipher.Reset
    fullName: Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher.Reset
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher.Reset
    name: Reset
    nameWithType: IAeadBlockCipher.Reset
    fullName: Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher.Reset
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
