### YamlMime:ManagedReference
items:
- uid: Org.BouncyCastle.Crypto.IBlockResult
  commentId: T:Org.BouncyCastle.Crypto.IBlockResult
  id: IBlockResult
  parent: Org.BouncyCastle.Crypto
  children:
  - Org.BouncyCastle.Crypto.IBlockResult.Collect
  - Org.BouncyCastle.Crypto.IBlockResult.Collect(System.Byte[],System.Int32)
  langs:
  - csharp
  - vb
  name: IBlockResult
  nameWithType: IBlockResult
  fullName: Org.BouncyCastle.Crypto.IBlockResult
  type: Interface
  source:
    id: IBlockResult
    path: ''
    startLine: 100159
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto
  summary: "\nOperators that reduce their input to a single block return an object\nof this type.\n"
  example: []
  syntax:
    content: public interface IBlockResult
    content.vb: Public Interface IBlockResult
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Org.BouncyCastle.Crypto.IBlockResult.Collect
  commentId: M:Org.BouncyCastle.Crypto.IBlockResult.Collect
  id: Collect
  parent: Org.BouncyCastle.Crypto.IBlockResult
  langs:
  - csharp
  - vb
  name: Collect()
  nameWithType: IBlockResult.Collect()
  fullName: Org.BouncyCastle.Crypto.IBlockResult.Collect()
  type: Method
  source:
    id: Collect
    path: ''
    startLine: 100165
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto
  summary: "\nReturn the final result of the operation.\n"
  example: []
  syntax:
    content: byte[] Collect()
    return:
      type: System.Byte[]
      description: A block of bytes, representing the result of an operation.
    content.vb: Function Collect As Byte()
  overload: Org.BouncyCastle.Crypto.IBlockResult.Collect*
- uid: Org.BouncyCastle.Crypto.IBlockResult.Collect(System.Byte[],System.Int32)
  commentId: M:Org.BouncyCastle.Crypto.IBlockResult.Collect(System.Byte[],System.Int32)
  id: Collect(System.Byte[],System.Int32)
  parent: Org.BouncyCastle.Crypto.IBlockResult
  langs:
  - csharp
  - vb
  name: Collect(Byte[], Int32)
  nameWithType: IBlockResult.Collect(Byte[], Int32)
  fullName: Org.BouncyCastle.Crypto.IBlockResult.Collect(System.Byte[], System.Int32)
  type: Method
  source:
    id: Collect
    path: ''
    startLine: 100173
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto
  summary: "\nStore the final result of the operation by copying it into the destination array.\n"
  example: []
  syntax:
    content: int Collect(byte[] destination, int offset)
    parameters:
    - id: destination
      type: System.Byte[]
      description: The byte array to copy the result into.
    - id: offset
      type: System.Int32
      description: The offset into destination to start copying the result at.
    return:
      type: System.Int32
      description: The number of bytes copied into destination.
    content.vb: Function Collect(destination As Byte(), offset As Integer) As Integer
  overload: Org.BouncyCastle.Crypto.IBlockResult.Collect*
  nameWithType.vb: IBlockResult.Collect(Byte(), Int32)
  fullName.vb: Org.BouncyCastle.Crypto.IBlockResult.Collect(System.Byte(), System.Int32)
  name.vb: Collect(Byte(), Int32)
references:
- uid: Org.BouncyCastle.Crypto
  commentId: N:Org.BouncyCastle.Crypto
  name: Org.BouncyCastle.Crypto
  nameWithType: Org.BouncyCastle.Crypto
  fullName: Org.BouncyCastle.Crypto
- uid: Org.BouncyCastle.Crypto.IBlockResult.Collect*
  commentId: Overload:Org.BouncyCastle.Crypto.IBlockResult.Collect
  name: Collect
  nameWithType: IBlockResult.Collect
  fullName: Org.BouncyCastle.Crypto.IBlockResult.Collect
- uid: System.Byte[]
  isExternal: true
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullName.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
