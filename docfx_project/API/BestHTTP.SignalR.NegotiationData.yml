### YamlMime:ManagedReference
items:
- uid: BestHTTP.SignalR.NegotiationData
  commentId: T:BestHTTP.SignalR.NegotiationData
  id: NegotiationData
  parent: BestHTTP.SignalR
  children:
  - BestHTTP.SignalR.NegotiationData.#ctor(BestHTTP.SignalR.Connection)
  - BestHTTP.SignalR.NegotiationData.Abort
  - BestHTTP.SignalR.NegotiationData.ConnectionId
  - BestHTTP.SignalR.NegotiationData.ConnectionTimeout
  - BestHTTP.SignalR.NegotiationData.ConnectionToken
  - BestHTTP.SignalR.NegotiationData.DisconnectTimeout
  - BestHTTP.SignalR.NegotiationData.KeepAliveTimeout
  - BestHTTP.SignalR.NegotiationData.LongPollDelay
  - BestHTTP.SignalR.NegotiationData.OnError
  - BestHTTP.SignalR.NegotiationData.OnReceived
  - BestHTTP.SignalR.NegotiationData.ProtocolVersion
  - BestHTTP.SignalR.NegotiationData.Start
  - BestHTTP.SignalR.NegotiationData.TransportConnectTimeout
  - BestHTTP.SignalR.NegotiationData.TryWebSockets
  - BestHTTP.SignalR.NegotiationData.Url
  - BestHTTP.SignalR.NegotiationData.WebSocketServerUrl
  langs:
  - csharp
  - vb
  name: NegotiationData
  nameWithType: NegotiationData
  fullName: BestHTTP.SignalR.NegotiationData
  type: Class
  source:
    id: NegotiationData
    path: ''
    startLine: 20397
  assemblies:
  - cs.temp.dll
  namespace: BestHTTP.SignalR
  syntax:
    content: public sealed class NegotiationData
    content.vb: Public NotInheritable Class NegotiationData
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ToString
  - System.Object.ReferenceEquals(System.Object,System.Object)
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: BestHTTP.SignalR.NegotiationData.Url
  commentId: P:BestHTTP.SignalR.NegotiationData.Url
  id: Url
  parent: BestHTTP.SignalR.NegotiationData
  langs:
  - csharp
  - vb
  name: Url
  nameWithType: NegotiationData.Url
  fullName: BestHTTP.SignalR.NegotiationData.Url
  type: Property
  source:
    id: Url
    path: ''
    startLine: 20404
  assemblies:
  - cs.temp.dll
  namespace: BestHTTP.SignalR
  summary: "\nPath to the SignalR endpoint. Currently not used by the client.\n"
  example: []
  syntax:
    content: public string Url { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property Url As String
  overload: BestHTTP.SignalR.NegotiationData.Url*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: BestHTTP.SignalR.NegotiationData.WebSocketServerUrl
  commentId: P:BestHTTP.SignalR.NegotiationData.WebSocketServerUrl
  id: WebSocketServerUrl
  parent: BestHTTP.SignalR.NegotiationData
  langs:
  - csharp
  - vb
  name: WebSocketServerUrl
  nameWithType: NegotiationData.WebSocketServerUrl
  fullName: BestHTTP.SignalR.NegotiationData.WebSocketServerUrl
  type: Property
  source:
    id: WebSocketServerUrl
    path: ''
    startLine: 20409
  assemblies:
  - cs.temp.dll
  namespace: BestHTTP.SignalR
  summary: "\nWebSocket endpoint.\n"
  example: []
  syntax:
    content: public string WebSocketServerUrl { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property WebSocketServerUrl As String
  overload: BestHTTP.SignalR.NegotiationData.WebSocketServerUrl*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: BestHTTP.SignalR.NegotiationData.ConnectionToken
  commentId: P:BestHTTP.SignalR.NegotiationData.ConnectionToken
  id: ConnectionToken
  parent: BestHTTP.SignalR.NegotiationData
  langs:
  - csharp
  - vb
  name: ConnectionToken
  nameWithType: NegotiationData.ConnectionToken
  fullName: BestHTTP.SignalR.NegotiationData.ConnectionToken
  type: Property
  source:
    id: ConnectionToken
    path: ''
    startLine: 20415
  assemblies:
  - cs.temp.dll
  namespace: BestHTTP.SignalR
  summary: "\nConnection token assigned by the server. See this article for more details: http://www.asp.net/signalr/overview/security/introduction-to-security#connectiontoken.\nThis value needs to be sent in each subsequent request as the value of the connectionToken parameter\n"
  example: []
  syntax:
    content: public string ConnectionToken { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property ConnectionToken As String
  overload: BestHTTP.SignalR.NegotiationData.ConnectionToken*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: BestHTTP.SignalR.NegotiationData.ConnectionId
  commentId: P:BestHTTP.SignalR.NegotiationData.ConnectionId
  id: ConnectionId
  parent: BestHTTP.SignalR.NegotiationData
  langs:
  - csharp
  - vb
  name: ConnectionId
  nameWithType: NegotiationData.ConnectionId
  fullName: BestHTTP.SignalR.NegotiationData.ConnectionId
  type: Property
  source:
    id: ConnectionId
    path: ''
    startLine: 20420
  assemblies:
  - cs.temp.dll
  namespace: BestHTTP.SignalR
  summary: "\nThe id of the connection.\n"
  example: []
  syntax:
    content: public string ConnectionId { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property ConnectionId As String
  overload: BestHTTP.SignalR.NegotiationData.ConnectionId*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: BestHTTP.SignalR.NegotiationData.KeepAliveTimeout
  commentId: P:BestHTTP.SignalR.NegotiationData.KeepAliveTimeout
  id: KeepAliveTimeout
  parent: BestHTTP.SignalR.NegotiationData
  langs:
  - csharp
  - vb
  name: KeepAliveTimeout
  nameWithType: NegotiationData.KeepAliveTimeout
  fullName: BestHTTP.SignalR.NegotiationData.KeepAliveTimeout
  type: Property
  source:
    id: KeepAliveTimeout
    path: ''
    startLine: 20426
  assemblies:
  - cs.temp.dll
  namespace: BestHTTP.SignalR
  summary: "\nThe amount of time in seconds the client should wait before attempting to reconnect if it has not received a keep alive message.\nIf the server is configured to not send keep alive messages this value is null.\n"
  example: []
  syntax:
    content: public TimeSpan? KeepAliveTimeout { get; }
    parameters: []
    return:
      type: System.Nullable{System.TimeSpan}
    content.vb: Public ReadOnly Property KeepAliveTimeout As TimeSpan?
  overload: BestHTTP.SignalR.NegotiationData.KeepAliveTimeout*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: BestHTTP.SignalR.NegotiationData.DisconnectTimeout
  commentId: P:BestHTTP.SignalR.NegotiationData.DisconnectTimeout
  id: DisconnectTimeout
  parent: BestHTTP.SignalR.NegotiationData
  langs:
  - csharp
  - vb
  name: DisconnectTimeout
  nameWithType: NegotiationData.DisconnectTimeout
  fullName: BestHTTP.SignalR.NegotiationData.DisconnectTimeout
  type: Property
  source:
    id: DisconnectTimeout
    path: ''
    startLine: 20431
  assemblies:
  - cs.temp.dll
  namespace: BestHTTP.SignalR
  summary: "\nThe amount of time within which the client should try to reconnect if the connection goes away.\n"
  example: []
  syntax:
    content: public TimeSpan DisconnectTimeout { get; }
    parameters: []
    return:
      type: System.TimeSpan
    content.vb: Public ReadOnly Property DisconnectTimeout As TimeSpan
  overload: BestHTTP.SignalR.NegotiationData.DisconnectTimeout*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: BestHTTP.SignalR.NegotiationData.ConnectionTimeout
  commentId: P:BestHTTP.SignalR.NegotiationData.ConnectionTimeout
  id: ConnectionTimeout
  parent: BestHTTP.SignalR.NegotiationData
  langs:
  - csharp
  - vb
  name: ConnectionTimeout
  nameWithType: NegotiationData.ConnectionTimeout
  fullName: BestHTTP.SignalR.NegotiationData.ConnectionTimeout
  type: Property
  source:
    id: ConnectionTimeout
    path: ''
    startLine: 20436
  assemblies:
  - cs.temp.dll
  namespace: BestHTTP.SignalR
  summary: "\nTimeout of poll requests.\n"
  example: []
  syntax:
    content: public TimeSpan ConnectionTimeout { get; }
    parameters: []
    return:
      type: System.TimeSpan
    content.vb: Public ReadOnly Property ConnectionTimeout As TimeSpan
  overload: BestHTTP.SignalR.NegotiationData.ConnectionTimeout*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: BestHTTP.SignalR.NegotiationData.TryWebSockets
  commentId: P:BestHTTP.SignalR.NegotiationData.TryWebSockets
  id: TryWebSockets
  parent: BestHTTP.SignalR.NegotiationData
  langs:
  - csharp
  - vb
  name: TryWebSockets
  nameWithType: NegotiationData.TryWebSockets
  fullName: BestHTTP.SignalR.NegotiationData.TryWebSockets
  type: Property
  source:
    id: TryWebSockets
    path: ''
    startLine: 20441
  assemblies:
  - cs.temp.dll
  namespace: BestHTTP.SignalR
  summary: "\nWhether the server supports websockets.\n"
  example: []
  syntax:
    content: public bool TryWebSockets { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property TryWebSockets As Boolean
  overload: BestHTTP.SignalR.NegotiationData.TryWebSockets*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: BestHTTP.SignalR.NegotiationData.ProtocolVersion
  commentId: P:BestHTTP.SignalR.NegotiationData.ProtocolVersion
  id: ProtocolVersion
  parent: BestHTTP.SignalR.NegotiationData
  langs:
  - csharp
  - vb
  name: ProtocolVersion
  nameWithType: NegotiationData.ProtocolVersion
  fullName: BestHTTP.SignalR.NegotiationData.ProtocolVersion
  type: Property
  source:
    id: ProtocolVersion
    path: ''
    startLine: 20446
  assemblies:
  - cs.temp.dll
  namespace: BestHTTP.SignalR
  summary: "\nThe version of the protocol used for communication.\n"
  example: []
  syntax:
    content: public string ProtocolVersion { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property ProtocolVersion As String
  overload: BestHTTP.SignalR.NegotiationData.ProtocolVersion*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: BestHTTP.SignalR.NegotiationData.TransportConnectTimeout
  commentId: P:BestHTTP.SignalR.NegotiationData.TransportConnectTimeout
  id: TransportConnectTimeout
  parent: BestHTTP.SignalR.NegotiationData
  langs:
  - csharp
  - vb
  name: TransportConnectTimeout
  nameWithType: NegotiationData.TransportConnectTimeout
  fullName: BestHTTP.SignalR.NegotiationData.TransportConnectTimeout
  type: Property
  source:
    id: TransportConnectTimeout
    path: ''
    startLine: 20451
  assemblies:
  - cs.temp.dll
  namespace: BestHTTP.SignalR
  summary: "\nThe maximum amount of time the client should try to connect to the server using a given transport.\n"
  example: []
  syntax:
    content: public TimeSpan TransportConnectTimeout { get; }
    parameters: []
    return:
      type: System.TimeSpan
    content.vb: Public ReadOnly Property TransportConnectTimeout As TimeSpan
  overload: BestHTTP.SignalR.NegotiationData.TransportConnectTimeout*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: BestHTTP.SignalR.NegotiationData.LongPollDelay
  commentId: P:BestHTTP.SignalR.NegotiationData.LongPollDelay
  id: LongPollDelay
  parent: BestHTTP.SignalR.NegotiationData
  langs:
  - csharp
  - vb
  name: LongPollDelay
  nameWithType: NegotiationData.LongPollDelay
  fullName: BestHTTP.SignalR.NegotiationData.LongPollDelay
  type: Property
  source:
    id: LongPollDelay
    path: ''
    startLine: 20456
  assemblies:
  - cs.temp.dll
  namespace: BestHTTP.SignalR
  summary: "\nThe wait time before restablishing a long poll connection after data is sent from the server. The default value is 0.\n"
  example: []
  syntax:
    content: public TimeSpan LongPollDelay { get; }
    parameters: []
    return:
      type: System.TimeSpan
    content.vb: Public ReadOnly Property LongPollDelay As TimeSpan
  overload: BestHTTP.SignalR.NegotiationData.LongPollDelay*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: BestHTTP.SignalR.NegotiationData.OnReceived
  commentId: F:BestHTTP.SignalR.NegotiationData.OnReceived
  id: OnReceived
  parent: BestHTTP.SignalR.NegotiationData
  langs:
  - csharp
  - vb
  name: OnReceived
  nameWithType: NegotiationData.OnReceived
  fullName: BestHTTP.SignalR.NegotiationData.OnReceived
  type: Field
  source:
    id: OnReceived
    path: ''
    startLine: 20465
  assemblies:
  - cs.temp.dll
  namespace: BestHTTP.SignalR
  summary: "\nEvent handler that called when the negotiation data received and parsed successfully.\n"
  example: []
  syntax:
    content: public Action<NegotiationData> OnReceived
    return:
      type: System.Action{BestHTTP.SignalR.NegotiationData}
    content.vb: Public OnReceived As Action(Of NegotiationData)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: BestHTTP.SignalR.NegotiationData.OnError
  commentId: F:BestHTTP.SignalR.NegotiationData.OnError
  id: OnError
  parent: BestHTTP.SignalR.NegotiationData
  langs:
  - csharp
  - vb
  name: OnError
  nameWithType: NegotiationData.OnError
  fullName: BestHTTP.SignalR.NegotiationData.OnError
  type: Field
  source:
    id: OnError
    path: ''
    startLine: 20470
  assemblies:
  - cs.temp.dll
  namespace: BestHTTP.SignalR
  summary: "\nEvent handler that called when an error happens.\n"
  example: []
  syntax:
    content: public Action<NegotiationData, string> OnError
    return:
      type: System.Action{BestHTTP.SignalR.NegotiationData,System.String}
    content.vb: Public OnError As Action(Of NegotiationData, String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: BestHTTP.SignalR.NegotiationData.#ctor(BestHTTP.SignalR.Connection)
  commentId: M:BestHTTP.SignalR.NegotiationData.#ctor(BestHTTP.SignalR.Connection)
  id: '#ctor(BestHTTP.SignalR.Connection)'
  parent: BestHTTP.SignalR.NegotiationData
  langs:
  - csharp
  - vb
  name: NegotiationData(Connection)
  nameWithType: NegotiationData.NegotiationData(Connection)
  fullName: BestHTTP.SignalR.NegotiationData.NegotiationData(BestHTTP.SignalR.Connection)
  type: Constructor
  source:
    id: .ctor
    path: ''
    startLine: 20481
  assemblies:
  - cs.temp.dll
  namespace: BestHTTP.SignalR
  syntax:
    content: public NegotiationData(Connection connection)
    parameters:
    - id: connection
      type: BestHTTP.SignalR.Connection
    content.vb: Public Sub New(connection As Connection)
  overload: BestHTTP.SignalR.NegotiationData.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: BestHTTP.SignalR.NegotiationData.Start
  commentId: M:BestHTTP.SignalR.NegotiationData.Start
  id: Start
  parent: BestHTTP.SignalR.NegotiationData
  langs:
  - csharp
  - vb
  name: Start()
  nameWithType: NegotiationData.Start()
  fullName: BestHTTP.SignalR.NegotiationData.Start()
  type: Method
  source:
    id: Start
    path: ''
    startLine: 20489
  assemblies:
  - cs.temp.dll
  namespace: BestHTTP.SignalR
  summary: "\nStart to get the negotiation data.\n"
  example: []
  syntax:
    content: public void Start()
    content.vb: Public Sub Start
  overload: BestHTTP.SignalR.NegotiationData.Start*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: BestHTTP.SignalR.NegotiationData.Abort
  commentId: M:BestHTTP.SignalR.NegotiationData.Abort
  id: Abort
  parent: BestHTTP.SignalR.NegotiationData
  langs:
  - csharp
  - vb
  name: Abort()
  nameWithType: NegotiationData.Abort()
  fullName: BestHTTP.SignalR.NegotiationData.Abort()
  type: Method
  source:
    id: Abort
    path: ''
    startLine: 20501
  assemblies:
  - cs.temp.dll
  namespace: BestHTTP.SignalR
  summary: "\nAbort the negotiation request.\n"
  example: []
  syntax:
    content: public void Abort()
    content.vb: Public Sub Abort
  overload: BestHTTP.SignalR.NegotiationData.Abort*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: BestHTTP.SignalR
  commentId: N:BestHTTP.SignalR
  name: BestHTTP.SignalR
  nameWithType: BestHTTP.SignalR
  fullName: BestHTTP.SignalR
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: BestHTTP.SignalR.NegotiationData.Url*
  commentId: Overload:BestHTTP.SignalR.NegotiationData.Url
  name: Url
  nameWithType: NegotiationData.Url
  fullName: BestHTTP.SignalR.NegotiationData.Url
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: BestHTTP.SignalR.NegotiationData.WebSocketServerUrl*
  commentId: Overload:BestHTTP.SignalR.NegotiationData.WebSocketServerUrl
  name: WebSocketServerUrl
  nameWithType: NegotiationData.WebSocketServerUrl
  fullName: BestHTTP.SignalR.NegotiationData.WebSocketServerUrl
- uid: BestHTTP.SignalR.NegotiationData.ConnectionToken*
  commentId: Overload:BestHTTP.SignalR.NegotiationData.ConnectionToken
  name: ConnectionToken
  nameWithType: NegotiationData.ConnectionToken
  fullName: BestHTTP.SignalR.NegotiationData.ConnectionToken
- uid: BestHTTP.SignalR.NegotiationData.ConnectionId*
  commentId: Overload:BestHTTP.SignalR.NegotiationData.ConnectionId
  name: ConnectionId
  nameWithType: NegotiationData.ConnectionId
  fullName: BestHTTP.SignalR.NegotiationData.ConnectionId
- uid: BestHTTP.SignalR.NegotiationData.KeepAliveTimeout*
  commentId: Overload:BestHTTP.SignalR.NegotiationData.KeepAliveTimeout
  name: KeepAliveTimeout
  nameWithType: NegotiationData.KeepAliveTimeout
  fullName: BestHTTP.SignalR.NegotiationData.KeepAliveTimeout
- uid: System.Nullable{System.TimeSpan}
  commentId: T:System.Nullable{System.TimeSpan}
  parent: System
  definition: System.Nullable`1
  name: Nullable<TimeSpan>
  nameWithType: Nullable<TimeSpan>
  fullName: System.Nullable<System.TimeSpan>
  nameWithType.vb: Nullable(Of TimeSpan)
  fullName.vb: System.Nullable(Of System.TimeSpan)
  name.vb: Nullable(Of TimeSpan)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: BestHTTP.SignalR.NegotiationData.DisconnectTimeout*
  commentId: Overload:BestHTTP.SignalR.NegotiationData.DisconnectTimeout
  name: DisconnectTimeout
  nameWithType: NegotiationData.DisconnectTimeout
  fullName: BestHTTP.SignalR.NegotiationData.DisconnectTimeout
- uid: System.TimeSpan
  commentId: T:System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: BestHTTP.SignalR.NegotiationData.ConnectionTimeout*
  commentId: Overload:BestHTTP.SignalR.NegotiationData.ConnectionTimeout
  name: ConnectionTimeout
  nameWithType: NegotiationData.ConnectionTimeout
  fullName: BestHTTP.SignalR.NegotiationData.ConnectionTimeout
- uid: BestHTTP.SignalR.NegotiationData.TryWebSockets*
  commentId: Overload:BestHTTP.SignalR.NegotiationData.TryWebSockets
  name: TryWebSockets
  nameWithType: NegotiationData.TryWebSockets
  fullName: BestHTTP.SignalR.NegotiationData.TryWebSockets
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: BestHTTP.SignalR.NegotiationData.ProtocolVersion*
  commentId: Overload:BestHTTP.SignalR.NegotiationData.ProtocolVersion
  name: ProtocolVersion
  nameWithType: NegotiationData.ProtocolVersion
  fullName: BestHTTP.SignalR.NegotiationData.ProtocolVersion
- uid: BestHTTP.SignalR.NegotiationData.TransportConnectTimeout*
  commentId: Overload:BestHTTP.SignalR.NegotiationData.TransportConnectTimeout
  name: TransportConnectTimeout
  nameWithType: NegotiationData.TransportConnectTimeout
  fullName: BestHTTP.SignalR.NegotiationData.TransportConnectTimeout
- uid: BestHTTP.SignalR.NegotiationData.LongPollDelay*
  commentId: Overload:BestHTTP.SignalR.NegotiationData.LongPollDelay
  name: LongPollDelay
  nameWithType: NegotiationData.LongPollDelay
  fullName: BestHTTP.SignalR.NegotiationData.LongPollDelay
- uid: System.Action{BestHTTP.SignalR.NegotiationData}
  commentId: T:System.Action{BestHTTP.SignalR.NegotiationData}
  parent: System
  definition: System.Action`1
  name: Action<NegotiationData>
  nameWithType: Action<NegotiationData>
  fullName: System.Action<BestHTTP.SignalR.NegotiationData>
  nameWithType.vb: Action(Of NegotiationData)
  fullName.vb: System.Action(Of BestHTTP.SignalR.NegotiationData)
  name.vb: Action(Of NegotiationData)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: BestHTTP.SignalR.NegotiationData
    name: NegotiationData
    nameWithType: NegotiationData
    fullName: BestHTTP.SignalR.NegotiationData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: BestHTTP.SignalR.NegotiationData
    name: NegotiationData
    nameWithType: NegotiationData
    fullName: BestHTTP.SignalR.NegotiationData
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Action`1
  commentId: T:System.Action`1
  isExternal: true
  name: Action<T>
  nameWithType: Action<T>
  fullName: System.Action<T>
  nameWithType.vb: Action(Of T)
  fullName.vb: System.Action(Of T)
  name.vb: Action(Of T)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Action{BestHTTP.SignalR.NegotiationData,System.String}
  commentId: T:System.Action{BestHTTP.SignalR.NegotiationData,System.String}
  parent: System
  definition: System.Action`2
  name: Action<NegotiationData, String>
  nameWithType: Action<NegotiationData, String>
  fullName: System.Action<BestHTTP.SignalR.NegotiationData, System.String>
  nameWithType.vb: Action(Of NegotiationData, String)
  fullName.vb: System.Action(Of BestHTTP.SignalR.NegotiationData, System.String)
  name.vb: Action(Of NegotiationData, String)
  spec.csharp:
  - uid: System.Action`2
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: BestHTTP.SignalR.NegotiationData
    name: NegotiationData
    nameWithType: NegotiationData
    fullName: BestHTTP.SignalR.NegotiationData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`2
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: BestHTTP.SignalR.NegotiationData
    name: NegotiationData
    nameWithType: NegotiationData
    fullName: BestHTTP.SignalR.NegotiationData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Action`2
  commentId: T:System.Action`2
  isExternal: true
  name: Action<T1, T2>
  nameWithType: Action<T1, T2>
  fullName: System.Action<T1, T2>
  nameWithType.vb: Action(Of T1, T2)
  fullName.vb: System.Action(Of T1, T2)
  name.vb: Action(Of T1, T2)
  spec.csharp:
  - uid: System.Action`2
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`2
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: )
    nameWithType: )
    fullName: )
- uid: BestHTTP.SignalR.NegotiationData.#ctor*
  commentId: Overload:BestHTTP.SignalR.NegotiationData.#ctor
  name: NegotiationData
  nameWithType: NegotiationData.NegotiationData
  fullName: BestHTTP.SignalR.NegotiationData.NegotiationData
- uid: BestHTTP.SignalR.Connection
  commentId: T:BestHTTP.SignalR.Connection
  parent: BestHTTP.SignalR
  name: Connection
  nameWithType: Connection
  fullName: BestHTTP.SignalR.Connection
- uid: BestHTTP.SignalR.NegotiationData.Start*
  commentId: Overload:BestHTTP.SignalR.NegotiationData.Start
  name: Start
  nameWithType: NegotiationData.Start
  fullName: BestHTTP.SignalR.NegotiationData.Start
- uid: BestHTTP.SignalR.NegotiationData.Abort*
  commentId: Overload:BestHTTP.SignalR.NegotiationData.Abort
  name: Abort
  nameWithType: NegotiationData.Abort
  fullName: BestHTTP.SignalR.NegotiationData.Abort
