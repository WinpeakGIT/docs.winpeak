### YamlMime:ManagedReference
items:
- uid: Org.BouncyCastle.Crypto.ISignerWithRecovery
  commentId: T:Org.BouncyCastle.Crypto.ISignerWithRecovery
  id: ISignerWithRecovery
  parent: Org.BouncyCastle.Crypto
  children:
  - Org.BouncyCastle.Crypto.ISignerWithRecovery.GetRecoveredMessage
  - Org.BouncyCastle.Crypto.ISignerWithRecovery.HasFullMessage
  - Org.BouncyCastle.Crypto.ISignerWithRecovery.UpdateWithRecoveredMessage(System.Byte[])
  langs:
  - csharp
  - vb
  name: ISignerWithRecovery
  nameWithType: ISignerWithRecovery
  fullName: Org.BouncyCastle.Crypto.ISignerWithRecovery
  type: Interface
  source:
    id: ISignerWithRecovery
    path: ''
    startLine: 86514
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto
  example: []
  syntax:
    content: 'public interface ISignerWithRecovery : ISigner'
    content.vb: >-
      Public Interface ISignerWithRecovery
          Inherits ISigner
  inheritedMembers:
  - Org.BouncyCastle.Crypto.ISigner.AlgorithmName
  - Org.BouncyCastle.Crypto.ISigner.Init(System.Boolean,Org.BouncyCastle.Crypto.ICipherParameters)
  - Org.BouncyCastle.Crypto.ISigner.Update(System.Byte)
  - Org.BouncyCastle.Crypto.ISigner.BlockUpdate(System.Byte[],System.Int32,System.Int32)
  - Org.BouncyCastle.Crypto.ISigner.GenerateSignature
  - Org.BouncyCastle.Crypto.ISigner.VerifySignature(System.Byte[])
  - Org.BouncyCastle.Crypto.ISigner.Reset
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Org.BouncyCastle.Crypto.ISignerWithRecovery.HasFullMessage
  commentId: M:Org.BouncyCastle.Crypto.ISignerWithRecovery.HasFullMessage
  id: HasFullMessage
  parent: Org.BouncyCastle.Crypto.ISignerWithRecovery
  langs:
  - csharp
  - vb
  name: HasFullMessage()
  nameWithType: ISignerWithRecovery.HasFullMessage()
  fullName: Org.BouncyCastle.Crypto.ISignerWithRecovery.HasFullMessage()
  type: Method
  source:
    id: HasFullMessage
    path: ''
    startLine: 86523
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto
  example: []
  syntax:
    content: bool HasFullMessage()
    return:
      type: System.Boolean
    content.vb: Function HasFullMessage As Boolean
  overload: Org.BouncyCastle.Crypto.ISignerWithRecovery.HasFullMessage*
- uid: Org.BouncyCastle.Crypto.ISignerWithRecovery.GetRecoveredMessage
  commentId: M:Org.BouncyCastle.Crypto.ISignerWithRecovery.GetRecoveredMessage
  id: GetRecoveredMessage
  parent: Org.BouncyCastle.Crypto.ISignerWithRecovery
  langs:
  - csharp
  - vb
  name: GetRecoveredMessage()
  nameWithType: ISignerWithRecovery.GetRecoveredMessage()
  fullName: Org.BouncyCastle.Crypto.ISignerWithRecovery.GetRecoveredMessage()
  type: Method
  source:
    id: GetRecoveredMessage
    path: ''
    startLine: 86530
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto
  example: []
  syntax:
    content: byte[] GetRecoveredMessage()
    return:
      type: System.Byte[]
    content.vb: Function GetRecoveredMessage As Byte()
  overload: Org.BouncyCastle.Crypto.ISignerWithRecovery.GetRecoveredMessage*
- uid: Org.BouncyCastle.Crypto.ISignerWithRecovery.UpdateWithRecoveredMessage(System.Byte[])
  commentId: M:Org.BouncyCastle.Crypto.ISignerWithRecovery.UpdateWithRecoveredMessage(System.Byte[])
  id: UpdateWithRecoveredMessage(System.Byte[])
  parent: Org.BouncyCastle.Crypto.ISignerWithRecovery
  langs:
  - csharp
  - vb
  name: UpdateWithRecoveredMessage(Byte[])
  nameWithType: ISignerWithRecovery.UpdateWithRecoveredMessage(Byte[])
  fullName: Org.BouncyCastle.Crypto.ISignerWithRecovery.UpdateWithRecoveredMessage(System.Byte[])
  type: Method
  source:
    id: UpdateWithRecoveredMessage
    path: ''
    startLine: 86540
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto
  example: []
  syntax:
    content: void UpdateWithRecoveredMessage(byte[] signature)
    parameters:
    - id: signature
      type: System.Byte[]
    content.vb: Sub UpdateWithRecoveredMessage(signature As Byte())
  overload: Org.BouncyCastle.Crypto.ISignerWithRecovery.UpdateWithRecoveredMessage*
  nameWithType.vb: ISignerWithRecovery.UpdateWithRecoveredMessage(Byte())
  fullName.vb: Org.BouncyCastle.Crypto.ISignerWithRecovery.UpdateWithRecoveredMessage(System.Byte())
  name.vb: UpdateWithRecoveredMessage(Byte())
references:
- uid: Org.BouncyCastle.Crypto
  commentId: N:Org.BouncyCastle.Crypto
  name: Org.BouncyCastle.Crypto
  nameWithType: Org.BouncyCastle.Crypto
  fullName: Org.BouncyCastle.Crypto
- uid: Org.BouncyCastle.Crypto.ISigner.AlgorithmName
  commentId: P:Org.BouncyCastle.Crypto.ISigner.AlgorithmName
  parent: Org.BouncyCastle.Crypto.ISigner
  name: AlgorithmName
  nameWithType: ISigner.AlgorithmName
  fullName: Org.BouncyCastle.Crypto.ISigner.AlgorithmName
- uid: Org.BouncyCastle.Crypto.ISigner.Init(System.Boolean,Org.BouncyCastle.Crypto.ICipherParameters)
  commentId: M:Org.BouncyCastle.Crypto.ISigner.Init(System.Boolean,Org.BouncyCastle.Crypto.ICipherParameters)
  parent: Org.BouncyCastle.Crypto.ISigner
  isExternal: true
  name: Init(Boolean, ICipherParameters)
  nameWithType: ISigner.Init(Boolean, ICipherParameters)
  fullName: Org.BouncyCastle.Crypto.ISigner.Init(System.Boolean, Org.BouncyCastle.Crypto.ICipherParameters)
  spec.csharp:
  - uid: Org.BouncyCastle.Crypto.ISigner.Init(System.Boolean,Org.BouncyCastle.Crypto.ICipherParameters)
    name: Init
    nameWithType: ISigner.Init
    fullName: Org.BouncyCastle.Crypto.ISigner.Init
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Org.BouncyCastle.Crypto.ICipherParameters
    name: ICipherParameters
    nameWithType: ICipherParameters
    fullName: Org.BouncyCastle.Crypto.ICipherParameters
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Org.BouncyCastle.Crypto.ISigner.Init(System.Boolean,Org.BouncyCastle.Crypto.ICipherParameters)
    name: Init
    nameWithType: ISigner.Init
    fullName: Org.BouncyCastle.Crypto.ISigner.Init
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Org.BouncyCastle.Crypto.ICipherParameters
    name: ICipherParameters
    nameWithType: ICipherParameters
    fullName: Org.BouncyCastle.Crypto.ICipherParameters
  - name: )
    nameWithType: )
    fullName: )
- uid: Org.BouncyCastle.Crypto.ISigner.Update(System.Byte)
  commentId: M:Org.BouncyCastle.Crypto.ISigner.Update(System.Byte)
  parent: Org.BouncyCastle.Crypto.ISigner
  isExternal: true
  name: Update(Byte)
  nameWithType: ISigner.Update(Byte)
  fullName: Org.BouncyCastle.Crypto.ISigner.Update(System.Byte)
  spec.csharp:
  - uid: Org.BouncyCastle.Crypto.ISigner.Update(System.Byte)
    name: Update
    nameWithType: ISigner.Update
    fullName: Org.BouncyCastle.Crypto.ISigner.Update
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Org.BouncyCastle.Crypto.ISigner.Update(System.Byte)
    name: Update
    nameWithType: ISigner.Update
    fullName: Org.BouncyCastle.Crypto.ISigner.Update
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Org.BouncyCastle.Crypto.ISigner.BlockUpdate(System.Byte[],System.Int32,System.Int32)
  commentId: M:Org.BouncyCastle.Crypto.ISigner.BlockUpdate(System.Byte[],System.Int32,System.Int32)
  parent: Org.BouncyCastle.Crypto.ISigner
  isExternal: true
  name: BlockUpdate(Byte[], Int32, Int32)
  nameWithType: ISigner.BlockUpdate(Byte[], Int32, Int32)
  fullName: Org.BouncyCastle.Crypto.ISigner.BlockUpdate(System.Byte[], System.Int32, System.Int32)
  nameWithType.vb: ISigner.BlockUpdate(Byte(), Int32, Int32)
  fullName.vb: Org.BouncyCastle.Crypto.ISigner.BlockUpdate(System.Byte(), System.Int32, System.Int32)
  name.vb: BlockUpdate(Byte(), Int32, Int32)
  spec.csharp:
  - uid: Org.BouncyCastle.Crypto.ISigner.BlockUpdate(System.Byte[],System.Int32,System.Int32)
    name: BlockUpdate
    nameWithType: ISigner.BlockUpdate
    fullName: Org.BouncyCastle.Crypto.ISigner.BlockUpdate
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Org.BouncyCastle.Crypto.ISigner.BlockUpdate(System.Byte[],System.Int32,System.Int32)
    name: BlockUpdate
    nameWithType: ISigner.BlockUpdate
    fullName: Org.BouncyCastle.Crypto.ISigner.BlockUpdate
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Org.BouncyCastle.Crypto.ISigner.GenerateSignature
  commentId: M:Org.BouncyCastle.Crypto.ISigner.GenerateSignature
  parent: Org.BouncyCastle.Crypto.ISigner
  name: GenerateSignature()
  nameWithType: ISigner.GenerateSignature()
  fullName: Org.BouncyCastle.Crypto.ISigner.GenerateSignature()
  spec.csharp:
  - uid: Org.BouncyCastle.Crypto.ISigner.GenerateSignature
    name: GenerateSignature
    nameWithType: ISigner.GenerateSignature
    fullName: Org.BouncyCastle.Crypto.ISigner.GenerateSignature
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Org.BouncyCastle.Crypto.ISigner.GenerateSignature
    name: GenerateSignature
    nameWithType: ISigner.GenerateSignature
    fullName: Org.BouncyCastle.Crypto.ISigner.GenerateSignature
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Org.BouncyCastle.Crypto.ISigner.VerifySignature(System.Byte[])
  commentId: M:Org.BouncyCastle.Crypto.ISigner.VerifySignature(System.Byte[])
  parent: Org.BouncyCastle.Crypto.ISigner
  isExternal: true
  name: VerifySignature(Byte[])
  nameWithType: ISigner.VerifySignature(Byte[])
  fullName: Org.BouncyCastle.Crypto.ISigner.VerifySignature(System.Byte[])
  nameWithType.vb: ISigner.VerifySignature(Byte())
  fullName.vb: Org.BouncyCastle.Crypto.ISigner.VerifySignature(System.Byte())
  name.vb: VerifySignature(Byte())
  spec.csharp:
  - uid: Org.BouncyCastle.Crypto.ISigner.VerifySignature(System.Byte[])
    name: VerifySignature
    nameWithType: ISigner.VerifySignature
    fullName: Org.BouncyCastle.Crypto.ISigner.VerifySignature
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Org.BouncyCastle.Crypto.ISigner.VerifySignature(System.Byte[])
    name: VerifySignature
    nameWithType: ISigner.VerifySignature
    fullName: Org.BouncyCastle.Crypto.ISigner.VerifySignature
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Org.BouncyCastle.Crypto.ISigner.Reset
  commentId: M:Org.BouncyCastle.Crypto.ISigner.Reset
  parent: Org.BouncyCastle.Crypto.ISigner
  name: Reset()
  nameWithType: ISigner.Reset()
  fullName: Org.BouncyCastle.Crypto.ISigner.Reset()
  spec.csharp:
  - uid: Org.BouncyCastle.Crypto.ISigner.Reset
    name: Reset
    nameWithType: ISigner.Reset
    fullName: Org.BouncyCastle.Crypto.ISigner.Reset
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Org.BouncyCastle.Crypto.ISigner.Reset
    name: Reset
    nameWithType: ISigner.Reset
    fullName: Org.BouncyCastle.Crypto.ISigner.Reset
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Org.BouncyCastle.Crypto.ISigner
  commentId: T:Org.BouncyCastle.Crypto.ISigner
  parent: Org.BouncyCastle.Crypto
  name: ISigner
  nameWithType: ISigner
  fullName: Org.BouncyCastle.Crypto.ISigner
- uid: Org.BouncyCastle.Crypto.ISignerWithRecovery.HasFullMessage*
  commentId: Overload:Org.BouncyCastle.Crypto.ISignerWithRecovery.HasFullMessage
  name: HasFullMessage
  nameWithType: ISignerWithRecovery.HasFullMessage
  fullName: Org.BouncyCastle.Crypto.ISignerWithRecovery.HasFullMessage
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Org.BouncyCastle.Crypto.ISignerWithRecovery.GetRecoveredMessage*
  commentId: Overload:Org.BouncyCastle.Crypto.ISignerWithRecovery.GetRecoveredMessage
  name: GetRecoveredMessage
  nameWithType: ISignerWithRecovery.GetRecoveredMessage
  fullName: Org.BouncyCastle.Crypto.ISignerWithRecovery.GetRecoveredMessage
- uid: System.Byte[]
  isExternal: true
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullName.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Org.BouncyCastle.Crypto.ISignerWithRecovery.UpdateWithRecoveredMessage*
  commentId: Overload:Org.BouncyCastle.Crypto.ISignerWithRecovery.UpdateWithRecoveredMessage
  name: UpdateWithRecoveredMessage
  nameWithType: ISignerWithRecovery.UpdateWithRecoveredMessage
  fullName: Org.BouncyCastle.Crypto.ISignerWithRecovery.UpdateWithRecoveredMessage
