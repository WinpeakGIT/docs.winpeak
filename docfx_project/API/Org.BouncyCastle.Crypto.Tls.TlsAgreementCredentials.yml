### YamlMime:ManagedReference
items:
- uid: Org.BouncyCastle.Crypto.Tls.TlsAgreementCredentials
  commentId: T:Org.BouncyCastle.Crypto.Tls.TlsAgreementCredentials
  id: TlsAgreementCredentials
  parent: Org.BouncyCastle.Crypto.Tls
  children:
  - Org.BouncyCastle.Crypto.Tls.TlsAgreementCredentials.GenerateAgreement(Org.BouncyCastle.Crypto.AsymmetricKeyParameter)
  langs:
  - csharp
  - vb
  name: TlsAgreementCredentials
  nameWithType: TlsAgreementCredentials
  fullName: Org.BouncyCastle.Crypto.Tls.TlsAgreementCredentials
  type: Interface
  source:
    id: TlsAgreementCredentials
    path: ''
    startLine: 120681
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Tls
  syntax:
    content: 'public interface TlsAgreementCredentials : TlsCredentials'
    content.vb: >-
      Public Interface TlsAgreementCredentials
          Inherits TlsCredentials
  inheritedMembers:
  - Org.BouncyCastle.Crypto.Tls.TlsCredentials.Certificate
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Org.BouncyCastle.Crypto.Tls.TlsAgreementCredentials.GenerateAgreement(Org.BouncyCastle.Crypto.AsymmetricKeyParameter)
  commentId: M:Org.BouncyCastle.Crypto.Tls.TlsAgreementCredentials.GenerateAgreement(Org.BouncyCastle.Crypto.AsymmetricKeyParameter)
  id: GenerateAgreement(Org.BouncyCastle.Crypto.AsymmetricKeyParameter)
  parent: Org.BouncyCastle.Crypto.Tls.TlsAgreementCredentials
  langs:
  - csharp
  - vb
  name: GenerateAgreement(AsymmetricKeyParameter)
  nameWithType: TlsAgreementCredentials.GenerateAgreement(AsymmetricKeyParameter)
  fullName: Org.BouncyCastle.Crypto.Tls.TlsAgreementCredentials.GenerateAgreement(Org.BouncyCastle.Crypto.AsymmetricKeyParameter)
  type: Method
  source:
    id: GenerateAgreement
    path: ''
    startLine: 120685
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Tls
  example: []
  syntax:
    content: byte[] GenerateAgreement(AsymmetricKeyParameter peerPublicKey)
    parameters:
    - id: peerPublicKey
      type: Org.BouncyCastle.Crypto.AsymmetricKeyParameter
    return:
      type: System.Byte[]
    content.vb: Function GenerateAgreement(peerPublicKey As AsymmetricKeyParameter) As Byte()
  overload: Org.BouncyCastle.Crypto.Tls.TlsAgreementCredentials.GenerateAgreement*
references:
- uid: Org.BouncyCastle.Crypto.Tls
  commentId: N:Org.BouncyCastle.Crypto.Tls
  name: Org.BouncyCastle.Crypto.Tls
  nameWithType: Org.BouncyCastle.Crypto.Tls
  fullName: Org.BouncyCastle.Crypto.Tls
- uid: Org.BouncyCastle.Crypto.Tls.TlsCredentials.Certificate
  commentId: P:Org.BouncyCastle.Crypto.Tls.TlsCredentials.Certificate
  parent: Org.BouncyCastle.Crypto.Tls.TlsCredentials
  name: Certificate
  nameWithType: TlsCredentials.Certificate
  fullName: Org.BouncyCastle.Crypto.Tls.TlsCredentials.Certificate
- uid: Org.BouncyCastle.Crypto.Tls.TlsCredentials
  commentId: T:Org.BouncyCastle.Crypto.Tls.TlsCredentials
  parent: Org.BouncyCastle.Crypto.Tls
  name: TlsCredentials
  nameWithType: TlsCredentials
  fullName: Org.BouncyCastle.Crypto.Tls.TlsCredentials
- uid: Org.BouncyCastle.Crypto.Tls.TlsAgreementCredentials.GenerateAgreement*
  commentId: Overload:Org.BouncyCastle.Crypto.Tls.TlsAgreementCredentials.GenerateAgreement
  name: GenerateAgreement
  nameWithType: TlsAgreementCredentials.GenerateAgreement
  fullName: Org.BouncyCastle.Crypto.Tls.TlsAgreementCredentials.GenerateAgreement
- uid: Org.BouncyCastle.Crypto.AsymmetricKeyParameter
  commentId: T:Org.BouncyCastle.Crypto.AsymmetricKeyParameter
  parent: Org.BouncyCastle.Crypto
  name: AsymmetricKeyParameter
  nameWithType: AsymmetricKeyParameter
  fullName: Org.BouncyCastle.Crypto.AsymmetricKeyParameter
- uid: System.Byte[]
  isExternal: true
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullName.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Org.BouncyCastle.Crypto
  commentId: N:Org.BouncyCastle.Crypto
  name: Org.BouncyCastle.Crypto
  nameWithType: Org.BouncyCastle.Crypto
  fullName: Org.BouncyCastle.Crypto
