### YamlMime:ManagedReference
items:
- uid: Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher
  commentId: T:Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher
  id: IAeadBlockCipher
  parent: Org.BouncyCastle.Crypto.Modes
  children:
  - Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher.AlgorithmName
  - Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher.DoFinal(System.Byte[],System.Int32)
  - Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher.GetBlockSize
  - Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher.GetMac
  - Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher.GetOutputSize(System.Int32)
  - Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher.GetUnderlyingCipher
  - Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher.GetUpdateOutputSize(System.Int32)
  - Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher.Init(System.Boolean,Org.BouncyCastle.Crypto.ICipherParameters)
  - Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher.ProcessAadByte(System.Byte)
  - Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher.ProcessAadBytes(System.Byte[],System.Int32,System.Int32)
  - Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher.ProcessByte(System.Byte,System.Byte[],System.Int32)
  - Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher.ProcessBytes(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)
  - Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher.Reset
  langs:
  - csharp
  - vb
  name: IAeadBlockCipher
  nameWithType: IAeadBlockCipher
  fullName: Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher
  type: Interface
  source:
    id: IAeadBlockCipher
    path: ''
    startLine: 127974
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Modes
  summary: "\nA block cipher mode that includes authenticated encryption with a streaming mode\nand optional associated data."
  example: []
  syntax:
    content: public interface IAeadBlockCipher
    content.vb: Public Interface IAeadBlockCipher
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher.AlgorithmName
  commentId: P:Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher.AlgorithmName
  id: AlgorithmName
  parent: Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher
  langs:
  - csharp
  - vb
  name: AlgorithmName
  nameWithType: IAeadBlockCipher.AlgorithmName
  fullName: Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher.AlgorithmName
  type: Property
  source:
    id: AlgorithmName
    path: ''
    startLine: 127977
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Modes
  summary: The name of the algorithm this cipher implements.
  example: []
  syntax:
    content: string AlgorithmName { get; }
    parameters: []
    return:
      type: System.String
    content.vb: ReadOnly Property AlgorithmName As String
  overload: Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher.AlgorithmName*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher.GetUnderlyingCipher
  commentId: M:Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher.GetUnderlyingCipher
  id: GetUnderlyingCipher
  parent: Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher
  langs:
  - csharp
  - vb
  name: GetUnderlyingCipher()
  nameWithType: IAeadBlockCipher.GetUnderlyingCipher()
  fullName: Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher.GetUnderlyingCipher()
  type: Method
  source:
    id: GetUnderlyingCipher
    path: ''
    startLine: 127980
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Modes
  summary: The block cipher underlying this algorithm.
  example: []
  syntax:
    content: IBlockCipher GetUnderlyingCipher()
    return:
      type: Org.BouncyCastle.Crypto.IBlockCipher
    content.vb: Function GetUnderlyingCipher As IBlockCipher
  overload: Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher.GetUnderlyingCipher*
- uid: Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher.Init(System.Boolean,Org.BouncyCastle.Crypto.ICipherParameters)
  commentId: M:Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher.Init(System.Boolean,Org.BouncyCastle.Crypto.ICipherParameters)
  id: Init(System.Boolean,Org.BouncyCastle.Crypto.ICipherParameters)
  parent: Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher
  langs:
  - csharp
  - vb
  name: Init(Boolean, ICipherParameters)
  nameWithType: IAeadBlockCipher.Init(Boolean, ICipherParameters)
  fullName: Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher.Init(System.Boolean, Org.BouncyCastle.Crypto.ICipherParameters)
  type: Method
  source:
    id: Init
    path: ''
    startLine: 127986
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Modes
  summary: Initialise the cipher.
  remarks: Parameter can either be an AeadParameters or a ParametersWithIV object.
  example: []
  syntax:
    content: void Init(bool forEncryption, ICipherParameters parameters)
    parameters:
    - id: forEncryption
      type: System.Boolean
      description: Initialise for encryption if true, for decryption if false.
    - id: parameters
      type: Org.BouncyCastle.Crypto.ICipherParameters
      description: The key or other data required by the cipher.
    content.vb: Sub Init(forEncryption As Boolean, parameters As ICipherParameters)
  overload: Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher.Init*
- uid: Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher.GetBlockSize
  commentId: M:Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher.GetBlockSize
  id: GetBlockSize
  parent: Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher
  langs:
  - csharp
  - vb
  name: GetBlockSize()
  nameWithType: IAeadBlockCipher.GetBlockSize()
  fullName: Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher.GetBlockSize()
  type: Method
  source:
    id: GetBlockSize
    path: ''
    startLine: 127989
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Modes
  example: []
  syntax:
    content: int GetBlockSize()
    return:
      type: System.Int32
      description: The block size for this cipher, in bytes.
    content.vb: Function GetBlockSize As Integer
  overload: Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher.GetBlockSize*
- uid: Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher.ProcessAadByte(System.Byte)
  commentId: M:Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher.ProcessAadByte(System.Byte)
  id: ProcessAadByte(System.Byte)
  parent: Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher
  langs:
  - csharp
  - vb
  name: ProcessAadByte(Byte)
  nameWithType: IAeadBlockCipher.ProcessAadByte(Byte)
  fullName: Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher.ProcessAadByte(System.Byte)
  type: Method
  source:
    id: ProcessAadByte
    path: ''
    startLine: 127994
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Modes
  summary: Add a single byte to the associated data check.
  remarks: If the implementation supports it, this will be an online operation and will not retain the associated data.
  example: []
  syntax:
    content: void ProcessAadByte(byte input)
    parameters:
    - id: input
      type: System.Byte
      description: The byte to be processed.
    content.vb: Sub ProcessAadByte(input As Byte)
  overload: Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher.ProcessAadByte*
- uid: Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher.ProcessAadBytes(System.Byte[],System.Int32,System.Int32)
  commentId: M:Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher.ProcessAadBytes(System.Byte[],System.Int32,System.Int32)
  id: ProcessAadBytes(System.Byte[],System.Int32,System.Int32)
  parent: Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher
  langs:
  - csharp
  - vb
  name: ProcessAadBytes(Byte[], Int32, Int32)
  nameWithType: IAeadBlockCipher.ProcessAadBytes(Byte[], Int32, Int32)
  fullName: Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher.ProcessAadBytes(System.Byte[], System.Int32, System.Int32)
  type: Method
  source:
    id: ProcessAadBytes
    path: ''
    startLine: 128001
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Modes
  summary: Add a sequence of bytes to the associated data check.
  remarks: If the implementation supports it, this will be an online operation and will not retain the associated data.
  example: []
  syntax:
    content: void ProcessAadBytes(byte[] inBytes, int inOff, int len)
    parameters:
    - id: inBytes
      type: System.Byte[]
      description: The input byte array.
    - id: inOff
      type: System.Int32
      description: The offset into the input array where the data to be processed starts.
    - id: len
      type: System.Int32
      description: The number of bytes to be processed.
    content.vb: Sub ProcessAadBytes(inBytes As Byte(), inOff As Integer, len As Integer)
  overload: Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher.ProcessAadBytes*
  nameWithType.vb: IAeadBlockCipher.ProcessAadBytes(Byte(), Int32, Int32)
  fullName.vb: Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher.ProcessAadBytes(System.Byte(), System.Int32, System.Int32)
  name.vb: ProcessAadBytes(Byte(), Int32, Int32)
- uid: Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher.ProcessByte(System.Byte,System.Byte[],System.Int32)
  commentId: M:Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher.ProcessByte(System.Byte,System.Byte[],System.Int32)
  id: ProcessByte(System.Byte,System.Byte[],System.Int32)
  parent: Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher
  langs:
  - csharp
  - vb
  name: ProcessByte(Byte, Byte[], Int32)
  nameWithType: IAeadBlockCipher.ProcessByte(Byte, Byte[], Int32)
  fullName: Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher.ProcessByte(System.Byte, System.Byte[], System.Int32)
  type: Method
  source:
    id: ProcessByte
    path: ''
    startLine: 128012
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Modes
  example: []
  syntax:
    content: int ProcessByte(byte input, byte[] outBytes, int outOff)
    parameters:
    - id: input
      type: System.Byte
    - id: outBytes
      type: System.Byte[]
    - id: outOff
      type: System.Int32
    return:
      type: System.Int32
    content.vb: Function ProcessByte(input As Byte, outBytes As Byte(), outOff As Integer) As Integer
  overload: Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher.ProcessByte*
  nameWithType.vb: IAeadBlockCipher.ProcessByte(Byte, Byte(), Int32)
  fullName.vb: Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher.ProcessByte(System.Byte, System.Byte(), System.Int32)
  name.vb: ProcessByte(Byte, Byte(), Int32)
- uid: Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher.ProcessBytes(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)
  commentId: M:Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher.ProcessBytes(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)
  id: ProcessBytes(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)
  parent: Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher
  langs:
  - csharp
  - vb
  name: ProcessBytes(Byte[], Int32, Int32, Byte[], Int32)
  nameWithType: IAeadBlockCipher.ProcessBytes(Byte[], Int32, Int32, Byte[], Int32)
  fullName: Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher.ProcessBytes(System.Byte[], System.Int32, System.Int32, System.Byte[], System.Int32)
  type: Method
  source:
    id: ProcessBytes
    path: ''
    startLine: 128025
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Modes
  example: []
  syntax:
    content: int ProcessBytes(byte[] inBytes, int inOff, int len, byte[] outBytes, int outOff)
    parameters:
    - id: inBytes
      type: System.Byte[]
    - id: inOff
      type: System.Int32
    - id: len
      type: System.Int32
    - id: outBytes
      type: System.Byte[]
    - id: outOff
      type: System.Int32
    return:
      type: System.Int32
    content.vb: Function ProcessBytes(inBytes As Byte(), inOff As Integer, len As Integer, outBytes As Byte(), outOff As Integer) As Integer
  overload: Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher.ProcessBytes*
  nameWithType.vb: IAeadBlockCipher.ProcessBytes(Byte(), Int32, Int32, Byte(), Int32)
  fullName.vb: Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher.ProcessBytes(System.Byte(), System.Int32, System.Int32, System.Byte(), System.Int32)
  name.vb: ProcessBytes(Byte(), Int32, Int32, Byte(), Int32)
- uid: Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher.DoFinal(System.Byte[],System.Int32)
  commentId: M:Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher.DoFinal(System.Byte[],System.Int32)
  id: DoFinal(System.Byte[],System.Int32)
  parent: Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher
  langs:
  - csharp
  - vb
  name: DoFinal(Byte[], Int32)
  nameWithType: IAeadBlockCipher.DoFinal(Byte[], Int32)
  fullName: Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher.DoFinal(System.Byte[], System.Int32)
  type: Method
  source:
    id: DoFinal
    path: ''
    startLine: 128036
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Modes
  example: []
  syntax:
    content: int DoFinal(byte[] outBytes, int outOff)
    parameters:
    - id: outBytes
      type: System.Byte[]
    - id: outOff
      type: System.Int32
    return:
      type: System.Int32
    content.vb: Function DoFinal(outBytes As Byte(), outOff As Integer) As Integer
  overload: Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher.DoFinal*
  nameWithType.vb: IAeadBlockCipher.DoFinal(Byte(), Int32)
  fullName.vb: Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher.DoFinal(System.Byte(), System.Int32)
  name.vb: DoFinal(Byte(), Int32)
- uid: Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher.GetMac
  commentId: M:Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher.GetMac
  id: GetMac
  parent: Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher
  langs:
  - csharp
  - vb
  name: GetMac()
  nameWithType: IAeadBlockCipher.GetMac()
  fullName: Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher.GetMac()
  type: Method
  source:
    id: GetMac
    path: ''
    startLine: 128043
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Modes
  example: []
  syntax:
    content: byte[] GetMac()
    return:
      type: System.Byte[]
    content.vb: Function GetMac As Byte()
  overload: Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher.GetMac*
- uid: Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher.GetUpdateOutputSize(System.Int32)
  commentId: M:Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher.GetUpdateOutputSize(System.Int32)
  id: GetUpdateOutputSize(System.Int32)
  parent: Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher
  langs:
  - csharp
  - vb
  name: GetUpdateOutputSize(Int32)
  nameWithType: IAeadBlockCipher.GetUpdateOutputSize(Int32)
  fullName: Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher.GetUpdateOutputSize(System.Int32)
  type: Method
  source:
    id: GetUpdateOutputSize
    path: ''
    startLine: 128053
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Modes
  example: []
  syntax:
    content: int GetUpdateOutputSize(int len)
    parameters:
    - id: len
      type: System.Int32
    return:
      type: System.Int32
    content.vb: Function GetUpdateOutputSize(len As Integer) As Integer
  overload: Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher.GetUpdateOutputSize*
- uid: Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher.GetOutputSize(System.Int32)
  commentId: M:Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher.GetOutputSize(System.Int32)
  id: GetOutputSize(System.Int32)
  parent: Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher
  langs:
  - csharp
  - vb
  name: GetOutputSize(Int32)
  nameWithType: IAeadBlockCipher.GetOutputSize(Int32)
  fullName: Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher.GetOutputSize(System.Int32)
  type: Method
  source:
    id: GetOutputSize
    path: ''
    startLine: 128063
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Modes
  example: []
  syntax:
    content: int GetOutputSize(int len)
    parameters:
    - id: len
      type: System.Int32
    return:
      type: System.Int32
    content.vb: Function GetOutputSize(len As Integer) As Integer
  overload: Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher.GetOutputSize*
- uid: Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher.Reset
  commentId: M:Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher.Reset
  id: Reset
  parent: Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher
  langs:
  - csharp
  - vb
  name: Reset()
  nameWithType: IAeadBlockCipher.Reset()
  fullName: Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher.Reset()
  type: Method
  source:
    id: Reset
    path: ''
    startLine: 128068
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Modes
  summary: "\nReset the cipher to the same state as it was after the last init (if there was one).\n"
  example: []
  syntax:
    content: void Reset()
    content.vb: Sub Reset
  overload: Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher.Reset*
references:
- uid: Org.BouncyCastle.Crypto.Modes
  commentId: N:Org.BouncyCastle.Crypto.Modes
  name: Org.BouncyCastle.Crypto.Modes
  nameWithType: Org.BouncyCastle.Crypto.Modes
  fullName: Org.BouncyCastle.Crypto.Modes
- uid: Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher.AlgorithmName*
  commentId: Overload:Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher.AlgorithmName
  name: AlgorithmName
  nameWithType: IAeadBlockCipher.AlgorithmName
  fullName: Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher.AlgorithmName
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher.GetUnderlyingCipher*
  commentId: Overload:Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher.GetUnderlyingCipher
  name: GetUnderlyingCipher
  nameWithType: IAeadBlockCipher.GetUnderlyingCipher
  fullName: Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher.GetUnderlyingCipher
- uid: Org.BouncyCastle.Crypto.IBlockCipher
  commentId: T:Org.BouncyCastle.Crypto.IBlockCipher
  parent: Org.BouncyCastle.Crypto
  name: IBlockCipher
  nameWithType: IBlockCipher
  fullName: Org.BouncyCastle.Crypto.IBlockCipher
- uid: Org.BouncyCastle.Crypto
  commentId: N:Org.BouncyCastle.Crypto
  name: Org.BouncyCastle.Crypto
  nameWithType: Org.BouncyCastle.Crypto
  fullName: Org.BouncyCastle.Crypto
- uid: Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher.Init*
  commentId: Overload:Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher.Init
  name: Init
  nameWithType: IAeadBlockCipher.Init
  fullName: Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher.Init
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Org.BouncyCastle.Crypto.ICipherParameters
  commentId: T:Org.BouncyCastle.Crypto.ICipherParameters
  parent: Org.BouncyCastle.Crypto
  name: ICipherParameters
  nameWithType: ICipherParameters
  fullName: Org.BouncyCastle.Crypto.ICipherParameters
- uid: Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher.GetBlockSize*
  commentId: Overload:Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher.GetBlockSize
  name: GetBlockSize
  nameWithType: IAeadBlockCipher.GetBlockSize
  fullName: Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher.GetBlockSize
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher.ProcessAadByte*
  commentId: Overload:Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher.ProcessAadByte
  name: ProcessAadByte
  nameWithType: IAeadBlockCipher.ProcessAadByte
  fullName: Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher.ProcessAadByte
- uid: System.Byte
  commentId: T:System.Byte
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte
- uid: Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher.ProcessAadBytes*
  commentId: Overload:Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher.ProcessAadBytes
  name: ProcessAadBytes
  nameWithType: IAeadBlockCipher.ProcessAadBytes
  fullName: Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher.ProcessAadBytes
- uid: System.Byte[]
  isExternal: true
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullName.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher.ProcessByte*
  commentId: Overload:Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher.ProcessByte
  name: ProcessByte
  nameWithType: IAeadBlockCipher.ProcessByte
  fullName: Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher.ProcessByte
- uid: Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher.ProcessBytes*
  commentId: Overload:Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher.ProcessBytes
  name: ProcessBytes
  nameWithType: IAeadBlockCipher.ProcessBytes
  fullName: Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher.ProcessBytes
- uid: Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher.DoFinal*
  commentId: Overload:Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher.DoFinal
  name: DoFinal
  nameWithType: IAeadBlockCipher.DoFinal
  fullName: Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher.DoFinal
- uid: Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher.GetMac*
  commentId: Overload:Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher.GetMac
  name: GetMac
  nameWithType: IAeadBlockCipher.GetMac
  fullName: Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher.GetMac
- uid: Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher.GetUpdateOutputSize*
  commentId: Overload:Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher.GetUpdateOutputSize
  name: GetUpdateOutputSize
  nameWithType: IAeadBlockCipher.GetUpdateOutputSize
  fullName: Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher.GetUpdateOutputSize
- uid: Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher.GetOutputSize*
  commentId: Overload:Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher.GetOutputSize
  name: GetOutputSize
  nameWithType: IAeadBlockCipher.GetOutputSize
  fullName: Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher.GetOutputSize
- uid: Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher.Reset*
  commentId: Overload:Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher.Reset
  name: Reset
  nameWithType: IAeadBlockCipher.Reset
  fullName: Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher.Reset
