### YamlMime:ManagedReference
items:
- uid: Org.BouncyCastle.Utilities.Arrays
  commentId: T:Org.BouncyCastle.Utilities.Arrays
  id: Arrays
  parent: Org.BouncyCastle.Utilities
  children:
  - Org.BouncyCastle.Utilities.Arrays.Append(System.Byte[],System.Byte)
  - Org.BouncyCastle.Utilities.Arrays.Append(System.Int16[],System.Int16)
  - Org.BouncyCastle.Utilities.Arrays.Append(System.Int32[],System.Int32)
  - Org.BouncyCastle.Utilities.Arrays.AreEqual(System.Boolean[],System.Boolean[])
  - Org.BouncyCastle.Utilities.Arrays.AreEqual(System.Byte[],System.Byte[])
  - Org.BouncyCastle.Utilities.Arrays.AreEqual(System.Char[],System.Char[])
  - Org.BouncyCastle.Utilities.Arrays.AreEqual(System.Int32[],System.Int32[])
  - Org.BouncyCastle.Utilities.Arrays.AreEqual(System.UInt32[],System.UInt32[])
  - Org.BouncyCastle.Utilities.Arrays.AreSame(System.Byte[],System.Byte[])
  - Org.BouncyCastle.Utilities.Arrays.Clone(System.Byte[])
  - Org.BouncyCastle.Utilities.Arrays.Clone(System.Byte[],System.Byte[])
  - Org.BouncyCastle.Utilities.Arrays.Clone(System.Int32[])
  - Org.BouncyCastle.Utilities.Arrays.Clone(System.Int64[])
  - Org.BouncyCastle.Utilities.Arrays.Clone(System.UInt64[])
  - Org.BouncyCastle.Utilities.Arrays.Clone(System.UInt64[],System.UInt64[])
  - Org.BouncyCastle.Utilities.Arrays.Concatenate(System.Byte[],System.Byte[])
  - Org.BouncyCastle.Utilities.Arrays.Concatenate(System.Int32[],System.Int32[])
  - Org.BouncyCastle.Utilities.Arrays.ConcatenateAll(System.Byte[][])
  - Org.BouncyCastle.Utilities.Arrays.ConstantTimeAreEqual(System.Byte[],System.Byte[])
  - Org.BouncyCastle.Utilities.Arrays.Contains(System.Byte[],System.Byte)
  - Org.BouncyCastle.Utilities.Arrays.Contains(System.Int16[],System.Int16)
  - Org.BouncyCastle.Utilities.Arrays.Contains(System.Int32[],System.Int32)
  - Org.BouncyCastle.Utilities.Arrays.CopyOf(BigInteger[],System.Int32)
  - Org.BouncyCastle.Utilities.Arrays.CopyOf(System.Byte[],System.Int32)
  - Org.BouncyCastle.Utilities.Arrays.CopyOf(System.Char[],System.Int32)
  - Org.BouncyCastle.Utilities.Arrays.CopyOf(System.Int32[],System.Int32)
  - Org.BouncyCastle.Utilities.Arrays.CopyOf(System.Int64[],System.Int32)
  - Org.BouncyCastle.Utilities.Arrays.CopyOfRange(BigInteger[],System.Int32,System.Int32)
  - Org.BouncyCastle.Utilities.Arrays.CopyOfRange(System.Byte[],System.Int32,System.Int32)
  - Org.BouncyCastle.Utilities.Arrays.CopyOfRange(System.Int32[],System.Int32,System.Int32)
  - Org.BouncyCastle.Utilities.Arrays.CopyOfRange(System.Int64[],System.Int32,System.Int32)
  - Org.BouncyCastle.Utilities.Arrays.Fill(System.Byte[],System.Byte)
  - Org.BouncyCastle.Utilities.Arrays.GetHashCode(System.Byte[])
  - Org.BouncyCastle.Utilities.Arrays.GetHashCode(System.Byte[],System.Int32,System.Int32)
  - Org.BouncyCastle.Utilities.Arrays.GetHashCode(System.Int32[])
  - Org.BouncyCastle.Utilities.Arrays.GetHashCode(System.Int32[],System.Int32,System.Int32)
  - Org.BouncyCastle.Utilities.Arrays.GetHashCode(System.UInt32[])
  - Org.BouncyCastle.Utilities.Arrays.GetHashCode(System.UInt32[],System.Int32,System.Int32)
  - Org.BouncyCastle.Utilities.Arrays.GetHashCode(System.UInt64[])
  - Org.BouncyCastle.Utilities.Arrays.GetHashCode(System.UInt64[],System.Int32,System.Int32)
  - Org.BouncyCastle.Utilities.Arrays.Prepend(System.Byte[],System.Byte)
  - Org.BouncyCastle.Utilities.Arrays.Prepend(System.Int16[],System.Int16)
  - Org.BouncyCastle.Utilities.Arrays.Prepend(System.Int32[],System.Int32)
  - Org.BouncyCastle.Utilities.Arrays.Reverse(System.Byte[])
  - Org.BouncyCastle.Utilities.Arrays.Reverse(System.Int32[])
  - Org.BouncyCastle.Utilities.Arrays.ToString(System.Object[])
  langs:
  - csharp
  - vb
  name: Arrays
  nameWithType: Arrays
  fullName: Org.BouncyCastle.Utilities.Arrays
  type: Class
  source:
    id: Arrays
    path: ''
    startLine: 123938
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Utilities
  summary: General array utilities.
  example: []
  syntax:
    content: public abstract class Arrays
    content.vb: Public MustInherit Class Arrays
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ToString
  - System.Object.ReferenceEquals(System.Object,System.Object)
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: Org.BouncyCastle.Utilities.Arrays.AreEqual(System.Boolean[],System.Boolean[])
  commentId: M:Org.BouncyCastle.Utilities.Arrays.AreEqual(System.Boolean[],System.Boolean[])
  id: AreEqual(System.Boolean[],System.Boolean[])
  parent: Org.BouncyCastle.Utilities.Arrays
  langs:
  - csharp
  - vb
  name: AreEqual(Boolean[], Boolean[])
  nameWithType: Arrays.AreEqual(Boolean[], Boolean[])
  fullName: Org.BouncyCastle.Utilities.Arrays.AreEqual(System.Boolean[], System.Boolean[])
  type: Method
  source:
    id: AreEqual
    path: ''
    startLine: 123940
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Utilities
  syntax:
    content: public static bool AreEqual(bool[] a, bool[] b)
    parameters:
    - id: a
      type: System.Boolean[]
    - id: b
      type: System.Boolean[]
    return:
      type: System.Boolean
    content.vb: Public Shared Function AreEqual(a As Boolean(), b As Boolean()) As Boolean
  overload: Org.BouncyCastle.Utilities.Arrays.AreEqual*
  nameWithType.vb: Arrays.AreEqual(Boolean(), Boolean())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Org.BouncyCastle.Utilities.Arrays.AreEqual(System.Boolean(), System.Boolean())
  name.vb: AreEqual(Boolean(), Boolean())
- uid: Org.BouncyCastle.Utilities.Arrays.AreEqual(System.Char[],System.Char[])
  commentId: M:Org.BouncyCastle.Utilities.Arrays.AreEqual(System.Char[],System.Char[])
  id: AreEqual(System.Char[],System.Char[])
  parent: Org.BouncyCastle.Utilities.Arrays
  langs:
  - csharp
  - vb
  name: AreEqual(Char[], Char[])
  nameWithType: Arrays.AreEqual(Char[], Char[])
  fullName: Org.BouncyCastle.Utilities.Arrays.AreEqual(System.Char[], System.Char[])
  type: Method
  source:
    id: AreEqual
    path: ''
    startLine: 123953
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Utilities
  syntax:
    content: public static bool AreEqual(char[] a, char[] b)
    parameters:
    - id: a
      type: System.Char[]
    - id: b
      type: System.Char[]
    return:
      type: System.Boolean
    content.vb: Public Shared Function AreEqual(a As Char(), b As Char()) As Boolean
  overload: Org.BouncyCastle.Utilities.Arrays.AreEqual*
  nameWithType.vb: Arrays.AreEqual(Char(), Char())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Org.BouncyCastle.Utilities.Arrays.AreEqual(System.Char(), System.Char())
  name.vb: AreEqual(Char(), Char())
- uid: Org.BouncyCastle.Utilities.Arrays.AreEqual(System.Byte[],System.Byte[])
  commentId: M:Org.BouncyCastle.Utilities.Arrays.AreEqual(System.Byte[],System.Byte[])
  id: AreEqual(System.Byte[],System.Byte[])
  parent: Org.BouncyCastle.Utilities.Arrays
  langs:
  - csharp
  - vb
  name: AreEqual(Byte[], Byte[])
  nameWithType: Arrays.AreEqual(Byte[], Byte[])
  fullName: Org.BouncyCastle.Utilities.Arrays.AreEqual(System.Byte[], System.Byte[])
  type: Method
  source:
    id: AreEqual
    path: ''
    startLine: 123972
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Utilities
  summary: "\nAre two arrays equal.\n"
  example: []
  syntax:
    content: public static bool AreEqual(byte[] a, byte[] b)
    parameters:
    - id: a
      type: System.Byte[]
      description: Left side.
    - id: b
      type: System.Byte[]
      description: Right side.
    return:
      type: System.Boolean
      description: True if equal.
    content.vb: Public Shared Function AreEqual(a As Byte(), b As Byte()) As Boolean
  overload: Org.BouncyCastle.Utilities.Arrays.AreEqual*
  nameWithType.vb: Arrays.AreEqual(Byte(), Byte())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Org.BouncyCastle.Utilities.Arrays.AreEqual(System.Byte(), System.Byte())
  name.vb: AreEqual(Byte(), Byte())
- uid: Org.BouncyCastle.Utilities.Arrays.AreSame(System.Byte[],System.Byte[])
  commentId: M:Org.BouncyCastle.Utilities.Arrays.AreSame(System.Byte[],System.Byte[])
  id: AreSame(System.Byte[],System.Byte[])
  parent: Org.BouncyCastle.Utilities.Arrays
  langs:
  - csharp
  - vb
  name: AreSame(Byte[], Byte[])
  nameWithType: Arrays.AreSame(Byte[], Byte[])
  fullName: Org.BouncyCastle.Utilities.Arrays.AreSame(System.Byte[], System.Byte[])
  type: Method
  source:
    id: AreSame
    path: ''
    startLine: 123985
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Utilities
  syntax:
    content: >-
      [Obsolete("Use 'AreEqual' method instead")]

      public static bool AreSame(byte[] a, byte[] b)
    parameters:
    - id: a
      type: System.Byte[]
    - id: b
      type: System.Byte[]
    return:
      type: System.Boolean
    content.vb: >-
      <Obsolete("Use 'AreEqual' method instead")>

      Public Shared Function AreSame(a As Byte(), b As Byte()) As Boolean
  overload: Org.BouncyCastle.Utilities.Arrays.AreSame*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Use 'AreEqual' method instead
  nameWithType.vb: Arrays.AreSame(Byte(), Byte())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Org.BouncyCastle.Utilities.Arrays.AreSame(System.Byte(), System.Byte())
  name.vb: AreSame(Byte(), Byte())
- uid: Org.BouncyCastle.Utilities.Arrays.ConstantTimeAreEqual(System.Byte[],System.Byte[])
  commentId: M:Org.BouncyCastle.Utilities.Arrays.ConstantTimeAreEqual(System.Byte[],System.Byte[])
  id: ConstantTimeAreEqual(System.Byte[],System.Byte[])
  parent: Org.BouncyCastle.Utilities.Arrays
  langs:
  - csharp
  - vb
  name: ConstantTimeAreEqual(Byte[], Byte[])
  nameWithType: Arrays.ConstantTimeAreEqual(Byte[], Byte[])
  fullName: Org.BouncyCastle.Utilities.Arrays.ConstantTimeAreEqual(System.Byte[], System.Byte[])
  type: Method
  source:
    id: ConstantTimeAreEqual
    path: ''
    startLine: 124000
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Utilities
  summary: "\nA constant time equals comparison - does not terminate early if\ntest will fail.\n"
  example: []
  syntax:
    content: public static bool ConstantTimeAreEqual(byte[] a, byte[] b)
    parameters:
    - id: a
      type: System.Byte[]
      description: first array
    - id: b
      type: System.Byte[]
      description: second array
    return:
      type: System.Boolean
      description: true if arrays equal, false otherwise.
    content.vb: Public Shared Function ConstantTimeAreEqual(a As Byte(), b As Byte()) As Boolean
  overload: Org.BouncyCastle.Utilities.Arrays.ConstantTimeAreEqual*
  nameWithType.vb: Arrays.ConstantTimeAreEqual(Byte(), Byte())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Org.BouncyCastle.Utilities.Arrays.ConstantTimeAreEqual(System.Byte(), System.Byte())
  name.vb: ConstantTimeAreEqual(Byte(), Byte())
- uid: Org.BouncyCastle.Utilities.Arrays.AreEqual(System.Int32[],System.Int32[])
  commentId: M:Org.BouncyCastle.Utilities.Arrays.AreEqual(System.Int32[],System.Int32[])
  id: AreEqual(System.Int32[],System.Int32[])
  parent: Org.BouncyCastle.Utilities.Arrays
  langs:
  - csharp
  - vb
  name: AreEqual(Int32[], Int32[])
  nameWithType: Arrays.AreEqual(Int32[], Int32[])
  fullName: Org.BouncyCastle.Utilities.Arrays.AreEqual(System.Int32[], System.Int32[])
  type: Method
  source:
    id: AreEqual
    path: ''
    startLine: 124016
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Utilities
  syntax:
    content: public static bool AreEqual(int[] a, int[] b)
    parameters:
    - id: a
      type: System.Int32[]
    - id: b
      type: System.Int32[]
    return:
      type: System.Boolean
    content.vb: Public Shared Function AreEqual(a As Integer(), b As Integer()) As Boolean
  overload: Org.BouncyCastle.Utilities.Arrays.AreEqual*
  nameWithType.vb: Arrays.AreEqual(Int32(), Int32())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Org.BouncyCastle.Utilities.Arrays.AreEqual(System.Int32(), System.Int32())
  name.vb: AreEqual(Int32(), Int32())
- uid: Org.BouncyCastle.Utilities.Arrays.AreEqual(System.UInt32[],System.UInt32[])
  commentId: M:Org.BouncyCastle.Utilities.Arrays.AreEqual(System.UInt32[],System.UInt32[])
  id: AreEqual(System.UInt32[],System.UInt32[])
  parent: Org.BouncyCastle.Utilities.Arrays
  langs:
  - csharp
  - vb
  name: AreEqual(UInt32[], UInt32[])
  nameWithType: Arrays.AreEqual(UInt32[], UInt32[])
  fullName: Org.BouncyCastle.Utilities.Arrays.AreEqual(System.UInt32[], System.UInt32[])
  type: Method
  source:
    id: AreEqual
    path: ''
    startLine: 124029
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Utilities
  syntax:
    content: public static bool AreEqual(uint[] a, uint[] b)
    parameters:
    - id: a
      type: System.UInt32[]
    - id: b
      type: System.UInt32[]
    return:
      type: System.Boolean
    content.vb: Public Shared Function AreEqual(a As UInteger(), b As UInteger()) As Boolean
  overload: Org.BouncyCastle.Utilities.Arrays.AreEqual*
  nameWithType.vb: Arrays.AreEqual(UInt32(), UInt32())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Org.BouncyCastle.Utilities.Arrays.AreEqual(System.UInt32(), System.UInt32())
  name.vb: AreEqual(UInt32(), UInt32())
- uid: Org.BouncyCastle.Utilities.Arrays.ToString(System.Object[])
  commentId: M:Org.BouncyCastle.Utilities.Arrays.ToString(System.Object[])
  id: ToString(System.Object[])
  parent: Org.BouncyCastle.Utilities.Arrays
  langs:
  - csharp
  - vb
  name: ToString(Object[])
  nameWithType: Arrays.ToString(Object[])
  fullName: Org.BouncyCastle.Utilities.Arrays.ToString(System.Object[])
  type: Method
  source:
    id: ToString
    path: ''
    startLine: 124118
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Utilities
  syntax:
    content: public static string ToString(object[] a)
    parameters:
    - id: a
      type: System.Object[]
    return:
      type: System.String
    content.vb: Public Shared Function ToString(a As Object()) As String
  overload: Org.BouncyCastle.Utilities.Arrays.ToString*
  nameWithType.vb: Arrays.ToString(Object())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Org.BouncyCastle.Utilities.Arrays.ToString(System.Object())
  name.vb: ToString(Object())
- uid: Org.BouncyCastle.Utilities.Arrays.GetHashCode(System.Byte[])
  commentId: M:Org.BouncyCastle.Utilities.Arrays.GetHashCode(System.Byte[])
  id: GetHashCode(System.Byte[])
  parent: Org.BouncyCastle.Utilities.Arrays
  langs:
  - csharp
  - vb
  name: GetHashCode(Byte[])
  nameWithType: Arrays.GetHashCode(Byte[])
  fullName: Org.BouncyCastle.Utilities.Arrays.GetHashCode(System.Byte[])
  type: Method
  source:
    id: GetHashCode
    path: ''
    startLine: 124134
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Utilities
  syntax:
    content: public static int GetHashCode(byte[] data)
    parameters:
    - id: data
      type: System.Byte[]
    return:
      type: System.Int32
    content.vb: Public Shared Function GetHashCode(data As Byte()) As Integer
  overload: Org.BouncyCastle.Utilities.Arrays.GetHashCode*
  nameWithType.vb: Arrays.GetHashCode(Byte())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Org.BouncyCastle.Utilities.Arrays.GetHashCode(System.Byte())
  name.vb: GetHashCode(Byte())
- uid: Org.BouncyCastle.Utilities.Arrays.GetHashCode(System.Byte[],System.Int32,System.Int32)
  commentId: M:Org.BouncyCastle.Utilities.Arrays.GetHashCode(System.Byte[],System.Int32,System.Int32)
  id: GetHashCode(System.Byte[],System.Int32,System.Int32)
  parent: Org.BouncyCastle.Utilities.Arrays
  langs:
  - csharp
  - vb
  name: GetHashCode(Byte[], Int32, Int32)
  nameWithType: Arrays.GetHashCode(Byte[], Int32, Int32)
  fullName: Org.BouncyCastle.Utilities.Arrays.GetHashCode(System.Byte[], System.Int32, System.Int32)
  type: Method
  source:
    id: GetHashCode
    path: ''
    startLine: 124153
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Utilities
  syntax:
    content: public static int GetHashCode(byte[] data, int off, int len)
    parameters:
    - id: data
      type: System.Byte[]
    - id: off
      type: System.Int32
    - id: len
      type: System.Int32
    return:
      type: System.Int32
    content.vb: Public Shared Function GetHashCode(data As Byte(), off As Integer, len As Integer) As Integer
  overload: Org.BouncyCastle.Utilities.Arrays.GetHashCode*
  nameWithType.vb: Arrays.GetHashCode(Byte(), Int32, Int32)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Org.BouncyCastle.Utilities.Arrays.GetHashCode(System.Byte(), System.Int32, System.Int32)
  name.vb: GetHashCode(Byte(), Int32, Int32)
- uid: Org.BouncyCastle.Utilities.Arrays.GetHashCode(System.Int32[])
  commentId: M:Org.BouncyCastle.Utilities.Arrays.GetHashCode(System.Int32[])
  id: GetHashCode(System.Int32[])
  parent: Org.BouncyCastle.Utilities.Arrays
  langs:
  - csharp
  - vb
  name: GetHashCode(Int32[])
  nameWithType: Arrays.GetHashCode(Int32[])
  fullName: Org.BouncyCastle.Utilities.Arrays.GetHashCode(System.Int32[])
  type: Method
  source:
    id: GetHashCode
    path: ''
    startLine: 124172
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Utilities
  syntax:
    content: public static int GetHashCode(int[] data)
    parameters:
    - id: data
      type: System.Int32[]
    return:
      type: System.Int32
    content.vb: Public Shared Function GetHashCode(data As Integer()) As Integer
  overload: Org.BouncyCastle.Utilities.Arrays.GetHashCode*
  nameWithType.vb: Arrays.GetHashCode(Int32())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Org.BouncyCastle.Utilities.Arrays.GetHashCode(System.Int32())
  name.vb: GetHashCode(Int32())
- uid: Org.BouncyCastle.Utilities.Arrays.GetHashCode(System.Int32[],System.Int32,System.Int32)
  commentId: M:Org.BouncyCastle.Utilities.Arrays.GetHashCode(System.Int32[],System.Int32,System.Int32)
  id: GetHashCode(System.Int32[],System.Int32,System.Int32)
  parent: Org.BouncyCastle.Utilities.Arrays
  langs:
  - csharp
  - vb
  name: GetHashCode(Int32[], Int32, Int32)
  nameWithType: Arrays.GetHashCode(Int32[], Int32, Int32)
  fullName: Org.BouncyCastle.Utilities.Arrays.GetHashCode(System.Int32[], System.Int32, System.Int32)
  type: Method
  source:
    id: GetHashCode
    path: ''
    startLine: 124189
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Utilities
  syntax:
    content: public static int GetHashCode(int[] data, int off, int len)
    parameters:
    - id: data
      type: System.Int32[]
    - id: off
      type: System.Int32
    - id: len
      type: System.Int32
    return:
      type: System.Int32
    content.vb: Public Shared Function GetHashCode(data As Integer(), off As Integer, len As Integer) As Integer
  overload: Org.BouncyCastle.Utilities.Arrays.GetHashCode*
  nameWithType.vb: Arrays.GetHashCode(Int32(), Int32, Int32)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Org.BouncyCastle.Utilities.Arrays.GetHashCode(System.Int32(), System.Int32, System.Int32)
  name.vb: GetHashCode(Int32(), Int32, Int32)
- uid: Org.BouncyCastle.Utilities.Arrays.GetHashCode(System.UInt32[])
  commentId: M:Org.BouncyCastle.Utilities.Arrays.GetHashCode(System.UInt32[])
  id: GetHashCode(System.UInt32[])
  parent: Org.BouncyCastle.Utilities.Arrays
  langs:
  - csharp
  - vb
  name: GetHashCode(UInt32[])
  nameWithType: Arrays.GetHashCode(UInt32[])
  fullName: Org.BouncyCastle.Utilities.Arrays.GetHashCode(System.UInt32[])
  type: Method
  source:
    id: GetHashCode
    path: ''
    startLine: 124206
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Utilities
  syntax:
    content: public static int GetHashCode(uint[] data)
    parameters:
    - id: data
      type: System.UInt32[]
    return:
      type: System.Int32
    content.vb: Public Shared Function GetHashCode(data As UInteger()) As Integer
  overload: Org.BouncyCastle.Utilities.Arrays.GetHashCode*
  nameWithType.vb: Arrays.GetHashCode(UInt32())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Org.BouncyCastle.Utilities.Arrays.GetHashCode(System.UInt32())
  name.vb: GetHashCode(UInt32())
- uid: Org.BouncyCastle.Utilities.Arrays.GetHashCode(System.UInt32[],System.Int32,System.Int32)
  commentId: M:Org.BouncyCastle.Utilities.Arrays.GetHashCode(System.UInt32[],System.Int32,System.Int32)
  id: GetHashCode(System.UInt32[],System.Int32,System.Int32)
  parent: Org.BouncyCastle.Utilities.Arrays
  langs:
  - csharp
  - vb
  name: GetHashCode(UInt32[], Int32, Int32)
  nameWithType: Arrays.GetHashCode(UInt32[], Int32, Int32)
  fullName: Org.BouncyCastle.Utilities.Arrays.GetHashCode(System.UInt32[], System.Int32, System.Int32)
  type: Method
  source:
    id: GetHashCode
    path: ''
    startLine: 124223
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Utilities
  syntax:
    content: public static int GetHashCode(uint[] data, int off, int len)
    parameters:
    - id: data
      type: System.UInt32[]
    - id: off
      type: System.Int32
    - id: len
      type: System.Int32
    return:
      type: System.Int32
    content.vb: Public Shared Function GetHashCode(data As UInteger(), off As Integer, len As Integer) As Integer
  overload: Org.BouncyCastle.Utilities.Arrays.GetHashCode*
  nameWithType.vb: Arrays.GetHashCode(UInt32(), Int32, Int32)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Org.BouncyCastle.Utilities.Arrays.GetHashCode(System.UInt32(), System.Int32, System.Int32)
  name.vb: GetHashCode(UInt32(), Int32, Int32)
- uid: Org.BouncyCastle.Utilities.Arrays.GetHashCode(System.UInt64[])
  commentId: M:Org.BouncyCastle.Utilities.Arrays.GetHashCode(System.UInt64[])
  id: GetHashCode(System.UInt64[])
  parent: Org.BouncyCastle.Utilities.Arrays
  langs:
  - csharp
  - vb
  name: GetHashCode(UInt64[])
  nameWithType: Arrays.GetHashCode(UInt64[])
  fullName: Org.BouncyCastle.Utilities.Arrays.GetHashCode(System.UInt64[])
  type: Method
  source:
    id: GetHashCode
    path: ''
    startLine: 124240
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Utilities
  syntax:
    content: public static int GetHashCode(ulong[] data)
    parameters:
    - id: data
      type: System.UInt64[]
    return:
      type: System.Int32
    content.vb: Public Shared Function GetHashCode(data As ULong()) As Integer
  overload: Org.BouncyCastle.Utilities.Arrays.GetHashCode*
  nameWithType.vb: Arrays.GetHashCode(UInt64())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Org.BouncyCastle.Utilities.Arrays.GetHashCode(System.UInt64())
  name.vb: GetHashCode(UInt64())
- uid: Org.BouncyCastle.Utilities.Arrays.GetHashCode(System.UInt64[],System.Int32,System.Int32)
  commentId: M:Org.BouncyCastle.Utilities.Arrays.GetHashCode(System.UInt64[],System.Int32,System.Int32)
  id: GetHashCode(System.UInt64[],System.Int32,System.Int32)
  parent: Org.BouncyCastle.Utilities.Arrays
  langs:
  - csharp
  - vb
  name: GetHashCode(UInt64[], Int32, Int32)
  nameWithType: Arrays.GetHashCode(UInt64[], Int32, Int32)
  fullName: Org.BouncyCastle.Utilities.Arrays.GetHashCode(System.UInt64[], System.Int32, System.Int32)
  type: Method
  source:
    id: GetHashCode
    path: ''
    startLine: 124260
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Utilities
  syntax:
    content: public static int GetHashCode(ulong[] data, int off, int len)
    parameters:
    - id: data
      type: System.UInt64[]
    - id: off
      type: System.Int32
    - id: len
      type: System.Int32
    return:
      type: System.Int32
    content.vb: Public Shared Function GetHashCode(data As ULong(), off As Integer, len As Integer) As Integer
  overload: Org.BouncyCastle.Utilities.Arrays.GetHashCode*
  nameWithType.vb: Arrays.GetHashCode(UInt64(), Int32, Int32)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Org.BouncyCastle.Utilities.Arrays.GetHashCode(System.UInt64(), System.Int32, System.Int32)
  name.vb: GetHashCode(UInt64(), Int32, Int32)
- uid: Org.BouncyCastle.Utilities.Arrays.Clone(System.Byte[])
  commentId: M:Org.BouncyCastle.Utilities.Arrays.Clone(System.Byte[])
  id: Clone(System.Byte[])
  parent: Org.BouncyCastle.Utilities.Arrays
  langs:
  - csharp
  - vb
  name: Clone(Byte[])
  nameWithType: Arrays.Clone(Byte[])
  fullName: Org.BouncyCastle.Utilities.Arrays.Clone(System.Byte[])
  type: Method
  source:
    id: Clone
    path: ''
    startLine: 124280
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Utilities
  syntax:
    content: public static byte[] Clone(byte[] data)
    parameters:
    - id: data
      type: System.Byte[]
    return:
      type: System.Byte[]
    content.vb: Public Shared Function Clone(data As Byte()) As Byte()
  overload: Org.BouncyCastle.Utilities.Arrays.Clone*
  nameWithType.vb: Arrays.Clone(Byte())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Org.BouncyCastle.Utilities.Arrays.Clone(System.Byte())
  name.vb: Clone(Byte())
- uid: Org.BouncyCastle.Utilities.Arrays.Clone(System.Byte[],System.Byte[])
  commentId: M:Org.BouncyCastle.Utilities.Arrays.Clone(System.Byte[],System.Byte[])
  id: Clone(System.Byte[],System.Byte[])
  parent: Org.BouncyCastle.Utilities.Arrays
  langs:
  - csharp
  - vb
  name: Clone(Byte[], Byte[])
  nameWithType: Arrays.Clone(Byte[], Byte[])
  fullName: Org.BouncyCastle.Utilities.Arrays.Clone(System.Byte[], System.Byte[])
  type: Method
  source:
    id: Clone
    path: ''
    startLine: 124286
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Utilities
  syntax:
    content: public static byte[] Clone(byte[] data, byte[] existing)
    parameters:
    - id: data
      type: System.Byte[]
    - id: existing
      type: System.Byte[]
    return:
      type: System.Byte[]
    content.vb: Public Shared Function Clone(data As Byte(), existing As Byte()) As Byte()
  overload: Org.BouncyCastle.Utilities.Arrays.Clone*
  nameWithType.vb: Arrays.Clone(Byte(), Byte())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Org.BouncyCastle.Utilities.Arrays.Clone(System.Byte(), System.Byte())
  name.vb: Clone(Byte(), Byte())
- uid: Org.BouncyCastle.Utilities.Arrays.Clone(System.Int32[])
  commentId: M:Org.BouncyCastle.Utilities.Arrays.Clone(System.Int32[])
  id: Clone(System.Int32[])
  parent: Org.BouncyCastle.Utilities.Arrays
  langs:
  - csharp
  - vb
  name: Clone(Int32[])
  nameWithType: Arrays.Clone(Int32[])
  fullName: Org.BouncyCastle.Utilities.Arrays.Clone(System.Int32[])
  type: Method
  source:
    id: Clone
    path: ''
    startLine: 124302
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Utilities
  syntax:
    content: public static int[] Clone(int[] data)
    parameters:
    - id: data
      type: System.Int32[]
    return:
      type: System.Int32[]
    content.vb: Public Shared Function Clone(data As Integer()) As Integer()
  overload: Org.BouncyCastle.Utilities.Arrays.Clone*
  nameWithType.vb: Arrays.Clone(Int32())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Org.BouncyCastle.Utilities.Arrays.Clone(System.Int32())
  name.vb: Clone(Int32())
- uid: Org.BouncyCastle.Utilities.Arrays.Clone(System.Int64[])
  commentId: M:Org.BouncyCastle.Utilities.Arrays.Clone(System.Int64[])
  id: Clone(System.Int64[])
  parent: Org.BouncyCastle.Utilities.Arrays
  langs:
  - csharp
  - vb
  name: Clone(Int64[])
  nameWithType: Arrays.Clone(Int64[])
  fullName: Org.BouncyCastle.Utilities.Arrays.Clone(System.Int64[])
  type: Method
  source:
    id: Clone
    path: ''
    startLine: 124313
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Utilities
  syntax:
    content: public static long[] Clone(long[] data)
    parameters:
    - id: data
      type: System.Int64[]
    return:
      type: System.Int64[]
    content.vb: Public Shared Function Clone(data As Long()) As Long()
  overload: Org.BouncyCastle.Utilities.Arrays.Clone*
  nameWithType.vb: Arrays.Clone(Int64())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Org.BouncyCastle.Utilities.Arrays.Clone(System.Int64())
  name.vb: Clone(Int64())
- uid: Org.BouncyCastle.Utilities.Arrays.Clone(System.UInt64[])
  commentId: M:Org.BouncyCastle.Utilities.Arrays.Clone(System.UInt64[])
  id: Clone(System.UInt64[])
  parent: Org.BouncyCastle.Utilities.Arrays
  langs:
  - csharp
  - vb
  name: Clone(UInt64[])
  nameWithType: Arrays.Clone(UInt64[])
  fullName: Org.BouncyCastle.Utilities.Arrays.Clone(System.UInt64[])
  type: Method
  source:
    id: Clone
    path: ''
    startLine: 124318
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Utilities
  syntax:
    content: public static ulong[] Clone(ulong[] data)
    parameters:
    - id: data
      type: System.UInt64[]
    return:
      type: System.UInt64[]
    content.vb: Public Shared Function Clone(data As ULong()) As ULong()
  overload: Org.BouncyCastle.Utilities.Arrays.Clone*
  nameWithType.vb: Arrays.Clone(UInt64())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Org.BouncyCastle.Utilities.Arrays.Clone(System.UInt64())
  name.vb: Clone(UInt64())
- uid: Org.BouncyCastle.Utilities.Arrays.Clone(System.UInt64[],System.UInt64[])
  commentId: M:Org.BouncyCastle.Utilities.Arrays.Clone(System.UInt64[],System.UInt64[])
  id: Clone(System.UInt64[],System.UInt64[])
  parent: Org.BouncyCastle.Utilities.Arrays
  langs:
  - csharp
  - vb
  name: Clone(UInt64[], UInt64[])
  nameWithType: Arrays.Clone(UInt64[], UInt64[])
  fullName: Org.BouncyCastle.Utilities.Arrays.Clone(System.UInt64[], System.UInt64[])
  type: Method
  source:
    id: Clone
    path: ''
    startLine: 124324
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Utilities
  syntax:
    content: public static ulong[] Clone(ulong[] data, ulong[] existing)
    parameters:
    - id: data
      type: System.UInt64[]
    - id: existing
      type: System.UInt64[]
    return:
      type: System.UInt64[]
    content.vb: Public Shared Function Clone(data As ULong(), existing As ULong()) As ULong()
  overload: Org.BouncyCastle.Utilities.Arrays.Clone*
  nameWithType.vb: Arrays.Clone(UInt64(), UInt64())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Org.BouncyCastle.Utilities.Arrays.Clone(System.UInt64(), System.UInt64())
  name.vb: Clone(UInt64(), UInt64())
- uid: Org.BouncyCastle.Utilities.Arrays.Contains(System.Byte[],System.Byte)
  commentId: M:Org.BouncyCastle.Utilities.Arrays.Contains(System.Byte[],System.Byte)
  id: Contains(System.Byte[],System.Byte)
  parent: Org.BouncyCastle.Utilities.Arrays
  langs:
  - csharp
  - vb
  name: Contains(Byte[], Byte)
  nameWithType: Arrays.Contains(Byte[], Byte)
  fullName: Org.BouncyCastle.Utilities.Arrays.Contains(System.Byte[], System.Byte)
  type: Method
  source:
    id: Contains
    path: ''
    startLine: 124340
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Utilities
  syntax:
    content: public static bool Contains(byte[] a, byte n)
    parameters:
    - id: a
      type: System.Byte[]
    - id: n
      type: System.Byte
    return:
      type: System.Boolean
    content.vb: Public Shared Function Contains(a As Byte(), n As Byte) As Boolean
  overload: Org.BouncyCastle.Utilities.Arrays.Contains*
  nameWithType.vb: Arrays.Contains(Byte(), Byte)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Org.BouncyCastle.Utilities.Arrays.Contains(System.Byte(), System.Byte)
  name.vb: Contains(Byte(), Byte)
- uid: Org.BouncyCastle.Utilities.Arrays.Contains(System.Int16[],System.Int16)
  commentId: M:Org.BouncyCastle.Utilities.Arrays.Contains(System.Int16[],System.Int16)
  id: Contains(System.Int16[],System.Int16)
  parent: Org.BouncyCastle.Utilities.Arrays
  langs:
  - csharp
  - vb
  name: Contains(Int16[], Int16)
  nameWithType: Arrays.Contains(Int16[], Int16)
  fullName: Org.BouncyCastle.Utilities.Arrays.Contains(System.Int16[], System.Int16)
  type: Method
  source:
    id: Contains
    path: ''
    startLine: 124350
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Utilities
  syntax:
    content: public static bool Contains(short[] a, short n)
    parameters:
    - id: a
      type: System.Int16[]
    - id: n
      type: System.Int16
    return:
      type: System.Boolean
    content.vb: Public Shared Function Contains(a As Short(), n As Short) As Boolean
  overload: Org.BouncyCastle.Utilities.Arrays.Contains*
  nameWithType.vb: Arrays.Contains(Int16(), Int16)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Org.BouncyCastle.Utilities.Arrays.Contains(System.Int16(), System.Int16)
  name.vb: Contains(Int16(), Int16)
- uid: Org.BouncyCastle.Utilities.Arrays.Contains(System.Int32[],System.Int32)
  commentId: M:Org.BouncyCastle.Utilities.Arrays.Contains(System.Int32[],System.Int32)
  id: Contains(System.Int32[],System.Int32)
  parent: Org.BouncyCastle.Utilities.Arrays
  langs:
  - csharp
  - vb
  name: Contains(Int32[], Int32)
  nameWithType: Arrays.Contains(Int32[], Int32)
  fullName: Org.BouncyCastle.Utilities.Arrays.Contains(System.Int32[], System.Int32)
  type: Method
  source:
    id: Contains
    path: ''
    startLine: 124360
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Utilities
  syntax:
    content: public static bool Contains(int[] a, int n)
    parameters:
    - id: a
      type: System.Int32[]
    - id: n
      type: System.Int32
    return:
      type: System.Boolean
    content.vb: Public Shared Function Contains(a As Integer(), n As Integer) As Boolean
  overload: Org.BouncyCastle.Utilities.Arrays.Contains*
  nameWithType.vb: Arrays.Contains(Int32(), Int32)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Org.BouncyCastle.Utilities.Arrays.Contains(System.Int32(), System.Int32)
  name.vb: Contains(Int32(), Int32)
- uid: Org.BouncyCastle.Utilities.Arrays.Fill(System.Byte[],System.Byte)
  commentId: M:Org.BouncyCastle.Utilities.Arrays.Fill(System.Byte[],System.Byte)
  id: Fill(System.Byte[],System.Byte)
  parent: Org.BouncyCastle.Utilities.Arrays
  langs:
  - csharp
  - vb
  name: Fill(Byte[], Byte)
  nameWithType: Arrays.Fill(Byte[], Byte)
  fullName: Org.BouncyCastle.Utilities.Arrays.Fill(System.Byte[], System.Byte)
  type: Method
  source:
    id: Fill
    path: ''
    startLine: 124370
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Utilities
  syntax:
    content: public static void Fill(byte[] buf, byte b)
    parameters:
    - id: buf
      type: System.Byte[]
    - id: b
      type: System.Byte
    content.vb: Public Shared Sub Fill(buf As Byte(), b As Byte)
  overload: Org.BouncyCastle.Utilities.Arrays.Fill*
  nameWithType.vb: Arrays.Fill(Byte(), Byte)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Org.BouncyCastle.Utilities.Arrays.Fill(System.Byte(), System.Byte)
  name.vb: Fill(Byte(), Byte)
- uid: Org.BouncyCastle.Utilities.Arrays.CopyOf(System.Byte[],System.Int32)
  commentId: M:Org.BouncyCastle.Utilities.Arrays.CopyOf(System.Byte[],System.Int32)
  id: CopyOf(System.Byte[],System.Int32)
  parent: Org.BouncyCastle.Utilities.Arrays
  langs:
  - csharp
  - vb
  name: CopyOf(Byte[], Int32)
  nameWithType: Arrays.CopyOf(Byte[], Int32)
  fullName: Org.BouncyCastle.Utilities.Arrays.CopyOf(System.Byte[], System.Int32)
  type: Method
  source:
    id: CopyOf
    path: ''
    startLine: 124381
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Utilities
  syntax:
    content: public static byte[] CopyOf(byte[] data, int newLength)
    parameters:
    - id: data
      type: System.Byte[]
    - id: newLength
      type: System.Int32
    return:
      type: System.Byte[]
    content.vb: Public Shared Function CopyOf(data As Byte(), newLength As Integer) As Byte()
  overload: Org.BouncyCastle.Utilities.Arrays.CopyOf*
  nameWithType.vb: Arrays.CopyOf(Byte(), Int32)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Org.BouncyCastle.Utilities.Arrays.CopyOf(System.Byte(), System.Int32)
  name.vb: CopyOf(Byte(), Int32)
- uid: Org.BouncyCastle.Utilities.Arrays.CopyOf(System.Char[],System.Int32)
  commentId: M:Org.BouncyCastle.Utilities.Arrays.CopyOf(System.Char[],System.Int32)
  id: CopyOf(System.Char[],System.Int32)
  parent: Org.BouncyCastle.Utilities.Arrays
  langs:
  - csharp
  - vb
  name: CopyOf(Char[], Int32)
  nameWithType: Arrays.CopyOf(Char[], Int32)
  fullName: Org.BouncyCastle.Utilities.Arrays.CopyOf(System.Char[], System.Int32)
  type: Method
  source:
    id: CopyOf
    path: ''
    startLine: 124388
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Utilities
  syntax:
    content: public static char[] CopyOf(char[] data, int newLength)
    parameters:
    - id: data
      type: System.Char[]
    - id: newLength
      type: System.Int32
    return:
      type: System.Char[]
    content.vb: Public Shared Function CopyOf(data As Char(), newLength As Integer) As Char()
  overload: Org.BouncyCastle.Utilities.Arrays.CopyOf*
  nameWithType.vb: Arrays.CopyOf(Char(), Int32)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Org.BouncyCastle.Utilities.Arrays.CopyOf(System.Char(), System.Int32)
  name.vb: CopyOf(Char(), Int32)
- uid: Org.BouncyCastle.Utilities.Arrays.CopyOf(System.Int32[],System.Int32)
  commentId: M:Org.BouncyCastle.Utilities.Arrays.CopyOf(System.Int32[],System.Int32)
  id: CopyOf(System.Int32[],System.Int32)
  parent: Org.BouncyCastle.Utilities.Arrays
  langs:
  - csharp
  - vb
  name: CopyOf(Int32[], Int32)
  nameWithType: Arrays.CopyOf(Int32[], Int32)
  fullName: Org.BouncyCastle.Utilities.Arrays.CopyOf(System.Int32[], System.Int32)
  type: Method
  source:
    id: CopyOf
    path: ''
    startLine: 124395
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Utilities
  syntax:
    content: public static int[] CopyOf(int[] data, int newLength)
    parameters:
    - id: data
      type: System.Int32[]
    - id: newLength
      type: System.Int32
    return:
      type: System.Int32[]
    content.vb: Public Shared Function CopyOf(data As Integer(), newLength As Integer) As Integer()
  overload: Org.BouncyCastle.Utilities.Arrays.CopyOf*
  nameWithType.vb: Arrays.CopyOf(Int32(), Int32)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Org.BouncyCastle.Utilities.Arrays.CopyOf(System.Int32(), System.Int32)
  name.vb: CopyOf(Int32(), Int32)
- uid: Org.BouncyCastle.Utilities.Arrays.CopyOf(System.Int64[],System.Int32)
  commentId: M:Org.BouncyCastle.Utilities.Arrays.CopyOf(System.Int64[],System.Int32)
  id: CopyOf(System.Int64[],System.Int32)
  parent: Org.BouncyCastle.Utilities.Arrays
  langs:
  - csharp
  - vb
  name: CopyOf(Int64[], Int32)
  nameWithType: Arrays.CopyOf(Int64[], Int32)
  fullName: Org.BouncyCastle.Utilities.Arrays.CopyOf(System.Int64[], System.Int32)
  type: Method
  source:
    id: CopyOf
    path: ''
    startLine: 124402
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Utilities
  syntax:
    content: public static long[] CopyOf(long[] data, int newLength)
    parameters:
    - id: data
      type: System.Int64[]
    - id: newLength
      type: System.Int32
    return:
      type: System.Int64[]
    content.vb: Public Shared Function CopyOf(data As Long(), newLength As Integer) As Long()
  overload: Org.BouncyCastle.Utilities.Arrays.CopyOf*
  nameWithType.vb: Arrays.CopyOf(Int64(), Int32)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Org.BouncyCastle.Utilities.Arrays.CopyOf(System.Int64(), System.Int32)
  name.vb: CopyOf(Int64(), Int32)
- uid: Org.BouncyCastle.Utilities.Arrays.CopyOf(BigInteger[],System.Int32)
  commentId: M:Org.BouncyCastle.Utilities.Arrays.CopyOf(BigInteger[],System.Int32)
  id: CopyOf(BigInteger[],System.Int32)
  parent: Org.BouncyCastle.Utilities.Arrays
  langs:
  - csharp
  - vb
  name: CopyOf(BigInteger[], Int32)
  nameWithType: Arrays.CopyOf(BigInteger[], Int32)
  fullName: Org.BouncyCastle.Utilities.Arrays.CopyOf(BigInteger[], System.Int32)
  type: Method
  source:
    id: CopyOf
    path: ''
    startLine: 124409
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Utilities
  syntax:
    content: public static BigInteger[] CopyOf(BigInteger[] data, int newLength)
    parameters:
    - id: data
      type: BigInteger[]
    - id: newLength
      type: System.Int32
    return:
      type: BigInteger[]
    content.vb: Public Shared Function CopyOf(data As BigInteger(), newLength As Integer) As BigInteger()
  overload: Org.BouncyCastle.Utilities.Arrays.CopyOf*
  nameWithType.vb: Arrays.CopyOf(BigInteger(), Int32)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Org.BouncyCastle.Utilities.Arrays.CopyOf(BigInteger(), System.Int32)
  name.vb: CopyOf(BigInteger(), Int32)
- uid: Org.BouncyCastle.Utilities.Arrays.CopyOfRange(System.Byte[],System.Int32,System.Int32)
  commentId: M:Org.BouncyCastle.Utilities.Arrays.CopyOfRange(System.Byte[],System.Int32,System.Int32)
  id: CopyOfRange(System.Byte[],System.Int32,System.Int32)
  parent: Org.BouncyCastle.Utilities.Arrays
  langs:
  - csharp
  - vb
  name: CopyOfRange(Byte[], Int32, Int32)
  nameWithType: Arrays.CopyOfRange(Byte[], Int32, Int32)
  fullName: Org.BouncyCastle.Utilities.Arrays.CopyOfRange(System.Byte[], System.Int32, System.Int32)
  type: Method
  source:
    id: CopyOfRange
    path: ''
    startLine: 124427
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Utilities
  example: []
  syntax:
    content: public static byte[] CopyOfRange(byte[] data, int from, int to)
    parameters:
    - id: data
      type: System.Byte[]
    - id: from
      type: System.Int32
    - id: to
      type: System.Int32
    return:
      type: System.Byte[]
    content.vb: Public Shared Function CopyOfRange(data As Byte(), from As Integer, to As Integer) As Byte()
  overload: Org.BouncyCastle.Utilities.Arrays.CopyOfRange*
  nameWithType.vb: Arrays.CopyOfRange(Byte(), Int32, Int32)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Org.BouncyCastle.Utilities.Arrays.CopyOfRange(System.Byte(), System.Int32, System.Int32)
  name.vb: CopyOfRange(Byte(), Int32, Int32)
- uid: Org.BouncyCastle.Utilities.Arrays.CopyOfRange(System.Int32[],System.Int32,System.Int32)
  commentId: M:Org.BouncyCastle.Utilities.Arrays.CopyOfRange(System.Int32[],System.Int32,System.Int32)
  id: CopyOfRange(System.Int32[],System.Int32,System.Int32)
  parent: Org.BouncyCastle.Utilities.Arrays
  langs:
  - csharp
  - vb
  name: CopyOfRange(Int32[], Int32, Int32)
  nameWithType: Arrays.CopyOfRange(Int32[], Int32, Int32)
  fullName: Org.BouncyCastle.Utilities.Arrays.CopyOfRange(System.Int32[], System.Int32, System.Int32)
  type: Method
  source:
    id: CopyOfRange
    path: ''
    startLine: 124435
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Utilities
  syntax:
    content: public static int[] CopyOfRange(int[] data, int from, int to)
    parameters:
    - id: data
      type: System.Int32[]
    - id: from
      type: System.Int32
    - id: to
      type: System.Int32
    return:
      type: System.Int32[]
    content.vb: Public Shared Function CopyOfRange(data As Integer(), from As Integer, to As Integer) As Integer()
  overload: Org.BouncyCastle.Utilities.Arrays.CopyOfRange*
  nameWithType.vb: Arrays.CopyOfRange(Int32(), Int32, Int32)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Org.BouncyCastle.Utilities.Arrays.CopyOfRange(System.Int32(), System.Int32, System.Int32)
  name.vb: CopyOfRange(Int32(), Int32, Int32)
- uid: Org.BouncyCastle.Utilities.Arrays.CopyOfRange(System.Int64[],System.Int32,System.Int32)
  commentId: M:Org.BouncyCastle.Utilities.Arrays.CopyOfRange(System.Int64[],System.Int32,System.Int32)
  id: CopyOfRange(System.Int64[],System.Int32,System.Int32)
  parent: Org.BouncyCastle.Utilities.Arrays
  langs:
  - csharp
  - vb
  name: CopyOfRange(Int64[], Int32, Int32)
  nameWithType: Arrays.CopyOfRange(Int64[], Int32, Int32)
  fullName: Org.BouncyCastle.Utilities.Arrays.CopyOfRange(System.Int64[], System.Int32, System.Int32)
  type: Method
  source:
    id: CopyOfRange
    path: ''
    startLine: 124443
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Utilities
  syntax:
    content: public static long[] CopyOfRange(long[] data, int from, int to)
    parameters:
    - id: data
      type: System.Int64[]
    - id: from
      type: System.Int32
    - id: to
      type: System.Int32
    return:
      type: System.Int64[]
    content.vb: Public Shared Function CopyOfRange(data As Long(), from As Integer, to As Integer) As Long()
  overload: Org.BouncyCastle.Utilities.Arrays.CopyOfRange*
  nameWithType.vb: Arrays.CopyOfRange(Int64(), Int32, Int32)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Org.BouncyCastle.Utilities.Arrays.CopyOfRange(System.Int64(), System.Int32, System.Int32)
  name.vb: CopyOfRange(Int64(), Int32, Int32)
- uid: Org.BouncyCastle.Utilities.Arrays.CopyOfRange(BigInteger[],System.Int32,System.Int32)
  commentId: M:Org.BouncyCastle.Utilities.Arrays.CopyOfRange(BigInteger[],System.Int32,System.Int32)
  id: CopyOfRange(BigInteger[],System.Int32,System.Int32)
  parent: Org.BouncyCastle.Utilities.Arrays
  langs:
  - csharp
  - vb
  name: CopyOfRange(BigInteger[], Int32, Int32)
  nameWithType: Arrays.CopyOfRange(BigInteger[], Int32, Int32)
  fullName: Org.BouncyCastle.Utilities.Arrays.CopyOfRange(BigInteger[], System.Int32, System.Int32)
  type: Method
  source:
    id: CopyOfRange
    path: ''
    startLine: 124451
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Utilities
  syntax:
    content: public static BigInteger[] CopyOfRange(BigInteger[] data, int from, int to)
    parameters:
    - id: data
      type: BigInteger[]
    - id: from
      type: System.Int32
    - id: to
      type: System.Int32
    return:
      type: BigInteger[]
    content.vb: Public Shared Function CopyOfRange(data As BigInteger(), from As Integer, to As Integer) As BigInteger()
  overload: Org.BouncyCastle.Utilities.Arrays.CopyOfRange*
  nameWithType.vb: Arrays.CopyOfRange(BigInteger(), Int32, Int32)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Org.BouncyCastle.Utilities.Arrays.CopyOfRange(BigInteger(), System.Int32, System.Int32)
  name.vb: CopyOfRange(BigInteger(), Int32, Int32)
- uid: Org.BouncyCastle.Utilities.Arrays.Append(System.Byte[],System.Byte)
  commentId: M:Org.BouncyCastle.Utilities.Arrays.Append(System.Byte[],System.Byte)
  id: Append(System.Byte[],System.Byte)
  parent: Org.BouncyCastle.Utilities.Arrays
  langs:
  - csharp
  - vb
  name: Append(Byte[], Byte)
  nameWithType: Arrays.Append(Byte[], Byte)
  fullName: Org.BouncyCastle.Utilities.Arrays.Append(System.Byte[], System.Byte)
  type: Method
  source:
    id: Append
    path: ''
    startLine: 124467
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Utilities
  syntax:
    content: public static byte[] Append(byte[] a, byte b)
    parameters:
    - id: a
      type: System.Byte[]
    - id: b
      type: System.Byte
    return:
      type: System.Byte[]
    content.vb: Public Shared Function Append(a As Byte(), b As Byte) As Byte()
  overload: Org.BouncyCastle.Utilities.Arrays.Append*
  nameWithType.vb: Arrays.Append(Byte(), Byte)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Org.BouncyCastle.Utilities.Arrays.Append(System.Byte(), System.Byte)
  name.vb: Append(Byte(), Byte)
- uid: Org.BouncyCastle.Utilities.Arrays.Append(System.Int16[],System.Int16)
  commentId: M:Org.BouncyCastle.Utilities.Arrays.Append(System.Int16[],System.Int16)
  id: Append(System.Int16[],System.Int16)
  parent: Org.BouncyCastle.Utilities.Arrays
  langs:
  - csharp
  - vb
  name: Append(Int16[], Int16)
  nameWithType: Arrays.Append(Int16[], Int16)
  fullName: Org.BouncyCastle.Utilities.Arrays.Append(System.Int16[], System.Int16)
  type: Method
  source:
    id: Append
    path: ''
    startLine: 124479
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Utilities
  syntax:
    content: public static short[] Append(short[] a, short b)
    parameters:
    - id: a
      type: System.Int16[]
    - id: b
      type: System.Int16
    return:
      type: System.Int16[]
    content.vb: Public Shared Function Append(a As Short(), b As Short) As Short()
  overload: Org.BouncyCastle.Utilities.Arrays.Append*
  nameWithType.vb: Arrays.Append(Int16(), Int16)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Org.BouncyCastle.Utilities.Arrays.Append(System.Int16(), System.Int16)
  name.vb: Append(Int16(), Int16)
- uid: Org.BouncyCastle.Utilities.Arrays.Append(System.Int32[],System.Int32)
  commentId: M:Org.BouncyCastle.Utilities.Arrays.Append(System.Int32[],System.Int32)
  id: Append(System.Int32[],System.Int32)
  parent: Org.BouncyCastle.Utilities.Arrays
  langs:
  - csharp
  - vb
  name: Append(Int32[], Int32)
  nameWithType: Arrays.Append(Int32[], Int32)
  fullName: Org.BouncyCastle.Utilities.Arrays.Append(System.Int32[], System.Int32)
  type: Method
  source:
    id: Append
    path: ''
    startLine: 124491
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Utilities
  syntax:
    content: public static int[] Append(int[] a, int b)
    parameters:
    - id: a
      type: System.Int32[]
    - id: b
      type: System.Int32
    return:
      type: System.Int32[]
    content.vb: Public Shared Function Append(a As Integer(), b As Integer) As Integer()
  overload: Org.BouncyCastle.Utilities.Arrays.Append*
  nameWithType.vb: Arrays.Append(Int32(), Int32)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Org.BouncyCastle.Utilities.Arrays.Append(System.Int32(), System.Int32)
  name.vb: Append(Int32(), Int32)
- uid: Org.BouncyCastle.Utilities.Arrays.Concatenate(System.Byte[],System.Byte[])
  commentId: M:Org.BouncyCastle.Utilities.Arrays.Concatenate(System.Byte[],System.Byte[])
  id: Concatenate(System.Byte[],System.Byte[])
  parent: Org.BouncyCastle.Utilities.Arrays
  langs:
  - csharp
  - vb
  name: Concatenate(Byte[], Byte[])
  nameWithType: Arrays.Concatenate(Byte[], Byte[])
  fullName: Org.BouncyCastle.Utilities.Arrays.Concatenate(System.Byte[], System.Byte[])
  type: Method
  source:
    id: Concatenate
    path: ''
    startLine: 124503
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Utilities
  syntax:
    content: public static byte[] Concatenate(byte[] a, byte[] b)
    parameters:
    - id: a
      type: System.Byte[]
    - id: b
      type: System.Byte[]
    return:
      type: System.Byte[]
    content.vb: Public Shared Function Concatenate(a As Byte(), b As Byte()) As Byte()
  overload: Org.BouncyCastle.Utilities.Arrays.Concatenate*
  nameWithType.vb: Arrays.Concatenate(Byte(), Byte())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Org.BouncyCastle.Utilities.Arrays.Concatenate(System.Byte(), System.Byte())
  name.vb: Concatenate(Byte(), Byte())
- uid: Org.BouncyCastle.Utilities.Arrays.ConcatenateAll(System.Byte[][])
  commentId: M:Org.BouncyCastle.Utilities.Arrays.ConcatenateAll(System.Byte[][])
  id: ConcatenateAll(System.Byte[][])
  parent: Org.BouncyCastle.Utilities.Arrays
  langs:
  - csharp
  - vb
  name: ConcatenateAll(Byte[][])
  nameWithType: Arrays.ConcatenateAll(Byte[][])
  fullName: Org.BouncyCastle.Utilities.Arrays.ConcatenateAll(System.Byte[][])
  type: Method
  source:
    id: ConcatenateAll
    path: ''
    startLine: 124516
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Utilities
  syntax:
    content: public static byte[] ConcatenateAll(params byte[][] vs)
    parameters:
    - id: vs
      type: System.Byte[][]
    return:
      type: System.Byte[]
    content.vb: Public Shared Function ConcatenateAll(ParamArray vs As Byte()()) As Byte()
  overload: Org.BouncyCastle.Utilities.Arrays.ConcatenateAll*
  nameWithType.vb: Arrays.ConcatenateAll(Byte()())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Org.BouncyCastle.Utilities.Arrays.ConcatenateAll(System.Byte()())
  name.vb: ConcatenateAll(Byte()())
- uid: Org.BouncyCastle.Utilities.Arrays.Concatenate(System.Int32[],System.Int32[])
  commentId: M:Org.BouncyCastle.Utilities.Arrays.Concatenate(System.Int32[],System.Int32[])
  id: Concatenate(System.Int32[],System.Int32[])
  parent: Org.BouncyCastle.Utilities.Arrays
  langs:
  - csharp
  - vb
  name: Concatenate(Int32[], Int32[])
  nameWithType: Arrays.Concatenate(Int32[], Int32[])
  fullName: Org.BouncyCastle.Utilities.Arrays.Concatenate(System.Int32[], System.Int32[])
  type: Method
  source:
    id: Concatenate
    path: ''
    startLine: 124545
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Utilities
  syntax:
    content: public static int[] Concatenate(int[] a, int[] b)
    parameters:
    - id: a
      type: System.Int32[]
    - id: b
      type: System.Int32[]
    return:
      type: System.Int32[]
    content.vb: Public Shared Function Concatenate(a As Integer(), b As Integer()) As Integer()
  overload: Org.BouncyCastle.Utilities.Arrays.Concatenate*
  nameWithType.vb: Arrays.Concatenate(Int32(), Int32())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Org.BouncyCastle.Utilities.Arrays.Concatenate(System.Int32(), System.Int32())
  name.vb: Concatenate(Int32(), Int32())
- uid: Org.BouncyCastle.Utilities.Arrays.Prepend(System.Byte[],System.Byte)
  commentId: M:Org.BouncyCastle.Utilities.Arrays.Prepend(System.Byte[],System.Byte)
  id: Prepend(System.Byte[],System.Byte)
  parent: Org.BouncyCastle.Utilities.Arrays
  langs:
  - csharp
  - vb
  name: Prepend(Byte[], Byte)
  nameWithType: Arrays.Prepend(Byte[], Byte)
  fullName: Org.BouncyCastle.Utilities.Arrays.Prepend(System.Byte[], System.Byte)
  type: Method
  source:
    id: Prepend
    path: ''
    startLine: 124558
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Utilities
  syntax:
    content: public static byte[] Prepend(byte[] a, byte b)
    parameters:
    - id: a
      type: System.Byte[]
    - id: b
      type: System.Byte
    return:
      type: System.Byte[]
    content.vb: Public Shared Function Prepend(a As Byte(), b As Byte) As Byte()
  overload: Org.BouncyCastle.Utilities.Arrays.Prepend*
  nameWithType.vb: Arrays.Prepend(Byte(), Byte)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Org.BouncyCastle.Utilities.Arrays.Prepend(System.Byte(), System.Byte)
  name.vb: Prepend(Byte(), Byte)
- uid: Org.BouncyCastle.Utilities.Arrays.Prepend(System.Int16[],System.Int16)
  commentId: M:Org.BouncyCastle.Utilities.Arrays.Prepend(System.Int16[],System.Int16)
  id: Prepend(System.Int16[],System.Int16)
  parent: Org.BouncyCastle.Utilities.Arrays
  langs:
  - csharp
  - vb
  name: Prepend(Int16[], Int16)
  nameWithType: Arrays.Prepend(Int16[], Int16)
  fullName: Org.BouncyCastle.Utilities.Arrays.Prepend(System.Int16[], System.Int16)
  type: Method
  source:
    id: Prepend
    path: ''
    startLine: 124570
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Utilities
  syntax:
    content: public static short[] Prepend(short[] a, short b)
    parameters:
    - id: a
      type: System.Int16[]
    - id: b
      type: System.Int16
    return:
      type: System.Int16[]
    content.vb: Public Shared Function Prepend(a As Short(), b As Short) As Short()
  overload: Org.BouncyCastle.Utilities.Arrays.Prepend*
  nameWithType.vb: Arrays.Prepend(Int16(), Int16)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Org.BouncyCastle.Utilities.Arrays.Prepend(System.Int16(), System.Int16)
  name.vb: Prepend(Int16(), Int16)
- uid: Org.BouncyCastle.Utilities.Arrays.Prepend(System.Int32[],System.Int32)
  commentId: M:Org.BouncyCastle.Utilities.Arrays.Prepend(System.Int32[],System.Int32)
  id: Prepend(System.Int32[],System.Int32)
  parent: Org.BouncyCastle.Utilities.Arrays
  langs:
  - csharp
  - vb
  name: Prepend(Int32[], Int32)
  nameWithType: Arrays.Prepend(Int32[], Int32)
  fullName: Org.BouncyCastle.Utilities.Arrays.Prepend(System.Int32[], System.Int32)
  type: Method
  source:
    id: Prepend
    path: ''
    startLine: 124582
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Utilities
  syntax:
    content: public static int[] Prepend(int[] a, int b)
    parameters:
    - id: a
      type: System.Int32[]
    - id: b
      type: System.Int32
    return:
      type: System.Int32[]
    content.vb: Public Shared Function Prepend(a As Integer(), b As Integer) As Integer()
  overload: Org.BouncyCastle.Utilities.Arrays.Prepend*
  nameWithType.vb: Arrays.Prepend(Int32(), Int32)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Org.BouncyCastle.Utilities.Arrays.Prepend(System.Int32(), System.Int32)
  name.vb: Prepend(Int32(), Int32)
- uid: Org.BouncyCastle.Utilities.Arrays.Reverse(System.Byte[])
  commentId: M:Org.BouncyCastle.Utilities.Arrays.Reverse(System.Byte[])
  id: Reverse(System.Byte[])
  parent: Org.BouncyCastle.Utilities.Arrays
  langs:
  - csharp
  - vb
  name: Reverse(Byte[])
  nameWithType: Arrays.Reverse(Byte[])
  fullName: Org.BouncyCastle.Utilities.Arrays.Reverse(System.Byte[])
  type: Method
  source:
    id: Reverse
    path: ''
    startLine: 124594
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Utilities
  syntax:
    content: public static byte[] Reverse(byte[] a)
    parameters:
    - id: a
      type: System.Byte[]
    return:
      type: System.Byte[]
    content.vb: Public Shared Function Reverse(a As Byte()) As Byte()
  overload: Org.BouncyCastle.Utilities.Arrays.Reverse*
  nameWithType.vb: Arrays.Reverse(Byte())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Org.BouncyCastle.Utilities.Arrays.Reverse(System.Byte())
  name.vb: Reverse(Byte())
- uid: Org.BouncyCastle.Utilities.Arrays.Reverse(System.Int32[])
  commentId: M:Org.BouncyCastle.Utilities.Arrays.Reverse(System.Int32[])
  id: Reverse(System.Int32[])
  parent: Org.BouncyCastle.Utilities.Arrays
  langs:
  - csharp
  - vb
  name: Reverse(Int32[])
  nameWithType: Arrays.Reverse(Int32[])
  fullName: Org.BouncyCastle.Utilities.Arrays.Reverse(System.Int32[])
  type: Method
  source:
    id: Reverse
    path: ''
    startLine: 124610
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Utilities
  syntax:
    content: public static int[] Reverse(int[] a)
    parameters:
    - id: a
      type: System.Int32[]
    return:
      type: System.Int32[]
    content.vb: Public Shared Function Reverse(a As Integer()) As Integer()
  overload: Org.BouncyCastle.Utilities.Arrays.Reverse*
  nameWithType.vb: Arrays.Reverse(Int32())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Org.BouncyCastle.Utilities.Arrays.Reverse(System.Int32())
  name.vb: Reverse(Int32())
references:
- uid: Org.BouncyCastle.Utilities
  commentId: N:Org.BouncyCastle.Utilities
  name: Org.BouncyCastle.Utilities
  nameWithType: Org.BouncyCastle.Utilities
  fullName: Org.BouncyCastle.Utilities
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Org.BouncyCastle.Utilities.Arrays.AreEqual*
  commentId: Overload:Org.BouncyCastle.Utilities.Arrays.AreEqual
  name: AreEqual
  nameWithType: Arrays.AreEqual
  fullName: Org.BouncyCastle.Utilities.Arrays.AreEqual
- uid: System.Boolean[]
  isExternal: true
  name: Boolean[]
  nameWithType: Boolean[]
  fullName: System.Boolean[]
  nameWithType.vb: Boolean()
  fullName.vb: System.Boolean()
  name.vb: Boolean()
  spec.csharp:
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Char[]
  isExternal: true
  name: Char[]
  nameWithType: Char[]
  fullName: System.Char[]
  nameWithType.vb: Char()
  fullName.vb: System.Char()
  name.vb: Char()
  spec.csharp:
  - uid: System.Char
    name: Char
    nameWithType: Char
    fullName: System.Char
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Char
    name: Char
    nameWithType: Char
    fullName: System.Char
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Byte[]
  isExternal: true
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullName.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Org.BouncyCastle.Utilities.Arrays.AreSame*
  commentId: Overload:Org.BouncyCastle.Utilities.Arrays.AreSame
  name: AreSame
  nameWithType: Arrays.AreSame
  fullName: Org.BouncyCastle.Utilities.Arrays.AreSame
- uid: Org.BouncyCastle.Utilities.Arrays.ConstantTimeAreEqual*
  commentId: Overload:Org.BouncyCastle.Utilities.Arrays.ConstantTimeAreEqual
  name: ConstantTimeAreEqual
  nameWithType: Arrays.ConstantTimeAreEqual
  fullName: Org.BouncyCastle.Utilities.Arrays.ConstantTimeAreEqual
- uid: System.Int32[]
  isExternal: true
  name: Int32[]
  nameWithType: Int32[]
  fullName: System.Int32[]
  nameWithType.vb: Int32()
  fullName.vb: System.Int32()
  name.vb: Int32()
  spec.csharp:
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.UInt32[]
  isExternal: true
  name: UInt32[]
  nameWithType: UInt32[]
  fullName: System.UInt32[]
  nameWithType.vb: UInt32()
  fullName.vb: System.UInt32()
  name.vb: UInt32()
  spec.csharp:
  - uid: System.UInt32
    name: UInt32
    nameWithType: UInt32
    fullName: System.UInt32
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.UInt32
    name: UInt32
    nameWithType: UInt32
    fullName: System.UInt32
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Org.BouncyCastle.Utilities.Arrays.ToString*
  commentId: Overload:Org.BouncyCastle.Utilities.Arrays.ToString
  name: ToString
  nameWithType: Arrays.ToString
  fullName: Org.BouncyCastle.Utilities.Arrays.ToString
- uid: System.Object[]
  isExternal: true
  name: Object[]
  nameWithType: Object[]
  fullName: System.Object[]
  nameWithType.vb: Object()
  fullName.vb: System.Object()
  name.vb: Object()
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Org.BouncyCastle.Utilities.Arrays.GetHashCode*
  commentId: Overload:Org.BouncyCastle.Utilities.Arrays.GetHashCode
  name: GetHashCode
  nameWithType: Arrays.GetHashCode
  fullName: Org.BouncyCastle.Utilities.Arrays.GetHashCode
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.UInt64[]
  isExternal: true
  name: UInt64[]
  nameWithType: UInt64[]
  fullName: System.UInt64[]
  nameWithType.vb: UInt64()
  fullName.vb: System.UInt64()
  name.vb: UInt64()
  spec.csharp:
  - uid: System.UInt64
    name: UInt64
    nameWithType: UInt64
    fullName: System.UInt64
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.UInt64
    name: UInt64
    nameWithType: UInt64
    fullName: System.UInt64
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Org.BouncyCastle.Utilities.Arrays.Clone*
  commentId: Overload:Org.BouncyCastle.Utilities.Arrays.Clone
  name: Clone
  nameWithType: Arrays.Clone
  fullName: Org.BouncyCastle.Utilities.Arrays.Clone
- uid: System.Int64[]
  isExternal: true
  name: Int64[]
  nameWithType: Int64[]
  fullName: System.Int64[]
  nameWithType.vb: Int64()
  fullName.vb: System.Int64()
  name.vb: Int64()
  spec.csharp:
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Org.BouncyCastle.Utilities.Arrays.Contains*
  commentId: Overload:Org.BouncyCastle.Utilities.Arrays.Contains
  name: Contains
  nameWithType: Arrays.Contains
  fullName: Org.BouncyCastle.Utilities.Arrays.Contains
- uid: System.Byte
  commentId: T:System.Byte
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte
- uid: System.Int16[]
  isExternal: true
  name: Int16[]
  nameWithType: Int16[]
  fullName: System.Int16[]
  nameWithType.vb: Int16()
  fullName.vb: System.Int16()
  name.vb: Int16()
  spec.csharp:
  - uid: System.Int16
    name: Int16
    nameWithType: Int16
    fullName: System.Int16
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Int16
    name: Int16
    nameWithType: Int16
    fullName: System.Int16
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Int16
  commentId: T:System.Int16
  parent: System
  isExternal: true
  name: Int16
  nameWithType: Int16
  fullName: System.Int16
- uid: Org.BouncyCastle.Utilities.Arrays.Fill*
  commentId: Overload:Org.BouncyCastle.Utilities.Arrays.Fill
  name: Fill
  nameWithType: Arrays.Fill
  fullName: Org.BouncyCastle.Utilities.Arrays.Fill
- uid: Org.BouncyCastle.Utilities.Arrays.CopyOf*
  commentId: Overload:Org.BouncyCastle.Utilities.Arrays.CopyOf
  name: CopyOf
  nameWithType: Arrays.CopyOf
  fullName: Org.BouncyCastle.Utilities.Arrays.CopyOf
- uid: BigInteger[]
  isExternal: true
  name: BigInteger[]
  nameWithType: BigInteger[]
  fullName: BigInteger[]
  nameWithType.vb: BigInteger()
  fullName.vb: BigInteger()
  name.vb: BigInteger()
  spec.csharp:
  - uid: BigInteger
    name: BigInteger
    nameWithType: BigInteger
    fullName: BigInteger
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: BigInteger
    name: BigInteger
    nameWithType: BigInteger
    fullName: BigInteger
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Org.BouncyCastle.Utilities.Arrays.CopyOfRange*
  commentId: Overload:Org.BouncyCastle.Utilities.Arrays.CopyOfRange
  name: CopyOfRange
  nameWithType: Arrays.CopyOfRange
  fullName: Org.BouncyCastle.Utilities.Arrays.CopyOfRange
- uid: Org.BouncyCastle.Utilities.Arrays.Append*
  commentId: Overload:Org.BouncyCastle.Utilities.Arrays.Append
  name: Append
  nameWithType: Arrays.Append
  fullName: Org.BouncyCastle.Utilities.Arrays.Append
- uid: Org.BouncyCastle.Utilities.Arrays.Concatenate*
  commentId: Overload:Org.BouncyCastle.Utilities.Arrays.Concatenate
  name: Concatenate
  nameWithType: Arrays.Concatenate
  fullName: Org.BouncyCastle.Utilities.Arrays.Concatenate
- uid: Org.BouncyCastle.Utilities.Arrays.ConcatenateAll*
  commentId: Overload:Org.BouncyCastle.Utilities.Arrays.ConcatenateAll
  name: ConcatenateAll
  nameWithType: Arrays.ConcatenateAll
  fullName: Org.BouncyCastle.Utilities.Arrays.ConcatenateAll
- uid: System.Byte[][]
  isExternal: true
  name: Byte[][]
  nameWithType: Byte[][]
  fullName: System.Byte[][]
  nameWithType.vb: Byte()()
  fullName.vb: System.Byte()()
  name.vb: Byte()()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Org.BouncyCastle.Utilities.Arrays.Prepend*
  commentId: Overload:Org.BouncyCastle.Utilities.Arrays.Prepend
  name: Prepend
  nameWithType: Arrays.Prepend
  fullName: Org.BouncyCastle.Utilities.Arrays.Prepend
- uid: Org.BouncyCastle.Utilities.Arrays.Reverse*
  commentId: Overload:Org.BouncyCastle.Utilities.Arrays.Reverse
  name: Reverse
  nameWithType: Arrays.Reverse
  fullName: Org.BouncyCastle.Utilities.Arrays.Reverse
