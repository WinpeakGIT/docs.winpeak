### YamlMime:ManagedReference
items:
- uid: BestHTTP.Forms.HTTPFormBase
  commentId: T:BestHTTP.Forms.HTTPFormBase
  id: HTTPFormBase
  parent: BestHTTP.Forms
  children:
  - BestHTTP.Forms.HTTPFormBase.AddBinaryData(System.String,System.Byte[])
  - BestHTTP.Forms.HTTPFormBase.AddBinaryData(System.String,System.Byte[],System.String)
  - BestHTTP.Forms.HTTPFormBase.AddBinaryData(System.String,System.Byte[],System.String,System.String)
  - BestHTTP.Forms.HTTPFormBase.AddField(System.String,System.String)
  - BestHTTP.Forms.HTTPFormBase.AddField(System.String,System.String,System.Text.Encoding)
  - BestHTTP.Forms.HTTPFormBase.CopyFrom(BestHTTP.Forms.HTTPFormBase)
  - BestHTTP.Forms.HTTPFormBase.Fields
  - BestHTTP.Forms.HTTPFormBase.GetData
  - BestHTTP.Forms.HTTPFormBase.HasBinary
  - BestHTTP.Forms.HTTPFormBase.HasLongValue
  - BestHTTP.Forms.HTTPFormBase.IsChanged
  - BestHTTP.Forms.HTTPFormBase.IsEmpty
  - BestHTTP.Forms.HTTPFormBase.PrepareRequest(BestHTTP.HTTPRequest)
  langs:
  - csharp
  - vb
  name: HTTPFormBase
  nameWithType: HTTPFormBase
  fullName: BestHTTP.Forms.HTTPFormBase
  type: Class
  source:
    id: HTTPFormBase
    path: ''
    startLine: 10460
  assemblies:
  - cs.temp.dll
  namespace: BestHTTP.Forms
  summary: "\nBase class of a concrete implementation. Don&apos;t use it to create a form, use instead one of the already wrote implementation(HTTPMultiPartForm, HTTPUrlEncodedForm), or create a new one by inheriting from this base class.\n"
  example: []
  syntax:
    content: public class HTTPFormBase
    content.vb: Public Class HTTPFormBase
  inheritance:
  - System.Object
  derivedClasses:
  - BestHTTP.Forms.HTTPMultiPartForm
  - BestHTTP.Forms.HTTPUrlEncodedForm
  - BestHTTP.Forms.UnityForm
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ToString
  - System.Object.ReferenceEquals(System.Object,System.Object)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: BestHTTP.Forms.HTTPFormBase.Fields
  commentId: P:BestHTTP.Forms.HTTPFormBase.Fields
  id: Fields
  parent: BestHTTP.Forms.HTTPFormBase
  langs:
  - csharp
  - vb
  name: Fields
  nameWithType: HTTPFormBase.Fields
  fullName: BestHTTP.Forms.HTTPFormBase.Fields
  type: Property
  source:
    id: Fields
    path: ''
    startLine: 10469
  assemblies:
  - cs.temp.dll
  namespace: BestHTTP.Forms
  summary: "\nA list that holds the form&apos;s fields.\n"
  example: []
  syntax:
    content: public List<HTTPFieldData> Fields { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.List{BestHTTP.Forms.HTTPFieldData}
    content.vb: Public Property Fields As List(Of HTTPFieldData)
  overload: BestHTTP.Forms.HTTPFormBase.Fields*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: BestHTTP.Forms.HTTPFormBase.IsEmpty
  commentId: P:BestHTTP.Forms.HTTPFormBase.IsEmpty
  id: IsEmpty
  parent: BestHTTP.Forms.HTTPFormBase
  langs:
  - csharp
  - vb
  name: IsEmpty
  nameWithType: HTTPFormBase.IsEmpty
  fullName: BestHTTP.Forms.HTTPFormBase.IsEmpty
  type: Property
  source:
    id: IsEmpty
    path: ''
    startLine: 10474
  assemblies:
  - cs.temp.dll
  namespace: BestHTTP.Forms
  summary: "\nReturns true if the Fields has no element.\n"
  example: []
  syntax:
    content: public bool IsEmpty { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsEmpty As Boolean
  overload: BestHTTP.Forms.HTTPFormBase.IsEmpty*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: BestHTTP.Forms.HTTPFormBase.IsChanged
  commentId: P:BestHTTP.Forms.HTTPFormBase.IsChanged
  id: IsChanged
  parent: BestHTTP.Forms.HTTPFormBase
  langs:
  - csharp
  - vb
  name: IsChanged
  nameWithType: HTTPFormBase.IsChanged
  fullName: BestHTTP.Forms.HTTPFormBase.IsChanged
  type: Property
  source:
    id: IsChanged
    path: ''
    startLine: 10479
  assemblies:
  - cs.temp.dll
  namespace: BestHTTP.Forms
  summary: "\nTrue if new fields has been added to our list.\n"
  example: []
  syntax:
    content: public bool IsChanged { get; protected set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property IsChanged As Boolean
  overload: BestHTTP.Forms.HTTPFormBase.IsChanged*
  modifiers.csharp:
  - public
  - get
  - protected set
  modifiers.vb:
  - Public
  - Get
  - Protected Set
- uid: BestHTTP.Forms.HTTPFormBase.HasBinary
  commentId: P:BestHTTP.Forms.HTTPFormBase.HasBinary
  id: HasBinary
  parent: BestHTTP.Forms.HTTPFormBase
  langs:
  - csharp
  - vb
  name: HasBinary
  nameWithType: HTTPFormBase.HasBinary
  fullName: BestHTTP.Forms.HTTPFormBase.HasBinary
  type: Property
  source:
    id: HasBinary
    path: ''
    startLine: 10484
  assemblies:
  - cs.temp.dll
  namespace: BestHTTP.Forms
  summary: "\nTrue if there are at least one form-field with binary data.\n"
  example: []
  syntax:
    content: public bool HasBinary { get; protected set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property HasBinary As Boolean
  overload: BestHTTP.Forms.HTTPFormBase.HasBinary*
  modifiers.csharp:
  - public
  - get
  - protected set
  modifiers.vb:
  - Public
  - Get
  - Protected Set
- uid: BestHTTP.Forms.HTTPFormBase.HasLongValue
  commentId: P:BestHTTP.Forms.HTTPFormBase.HasLongValue
  id: HasLongValue
  parent: BestHTTP.Forms.HTTPFormBase
  langs:
  - csharp
  - vb
  name: HasLongValue
  nameWithType: HTTPFormBase.HasLongValue
  fullName: BestHTTP.Forms.HTTPFormBase.HasLongValue
  type: Property
  source:
    id: HasLongValue
    path: ''
    startLine: 10489
  assemblies:
  - cs.temp.dll
  namespace: BestHTTP.Forms
  summary: "\nTrue if there are at least one form-field with a long textual data.\n"
  example: []
  syntax:
    content: public bool HasLongValue { get; protected set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property HasLongValue As Boolean
  overload: BestHTTP.Forms.HTTPFormBase.HasLongValue*
  modifiers.csharp:
  - public
  - get
  - protected set
  modifiers.vb:
  - Public
  - Get
  - Protected Set
- uid: BestHTTP.Forms.HTTPFormBase.AddBinaryData(System.String,System.Byte[])
  commentId: M:BestHTTP.Forms.HTTPFormBase.AddBinaryData(System.String,System.Byte[])
  id: AddBinaryData(System.String,System.Byte[])
  parent: BestHTTP.Forms.HTTPFormBase
  langs:
  - csharp
  - vb
  name: AddBinaryData(String, Byte[])
  nameWithType: HTTPFormBase.AddBinaryData(String, Byte[])
  fullName: BestHTTP.Forms.HTTPFormBase.AddBinaryData(System.String, System.Byte[])
  type: Method
  source:
    id: AddBinaryData
    path: ''
    startLine: 10495
  assemblies:
  - cs.temp.dll
  namespace: BestHTTP.Forms
  syntax:
    content: public void AddBinaryData(string fieldName, byte[] content)
    parameters:
    - id: fieldName
      type: System.String
    - id: content
      type: System.Byte[]
    content.vb: Public Sub AddBinaryData(fieldName As String, content As Byte())
  overload: BestHTTP.Forms.HTTPFormBase.AddBinaryData*
  nameWithType.vb: HTTPFormBase.AddBinaryData(String, Byte())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: BestHTTP.Forms.HTTPFormBase.AddBinaryData(System.String, System.Byte())
  name.vb: AddBinaryData(String, Byte())
- uid: BestHTTP.Forms.HTTPFormBase.AddBinaryData(System.String,System.Byte[],System.String)
  commentId: M:BestHTTP.Forms.HTTPFormBase.AddBinaryData(System.String,System.Byte[],System.String)
  id: AddBinaryData(System.String,System.Byte[],System.String)
  parent: BestHTTP.Forms.HTTPFormBase
  langs:
  - csharp
  - vb
  name: AddBinaryData(String, Byte[], String)
  nameWithType: HTTPFormBase.AddBinaryData(String, Byte[], String)
  fullName: BestHTTP.Forms.HTTPFormBase.AddBinaryData(System.String, System.Byte[], System.String)
  type: Method
  source:
    id: AddBinaryData
    path: ''
    startLine: 10500
  assemblies:
  - cs.temp.dll
  namespace: BestHTTP.Forms
  syntax:
    content: public void AddBinaryData(string fieldName, byte[] content, string fileName)
    parameters:
    - id: fieldName
      type: System.String
    - id: content
      type: System.Byte[]
    - id: fileName
      type: System.String
    content.vb: Public Sub AddBinaryData(fieldName As String, content As Byte(), fileName As String)
  overload: BestHTTP.Forms.HTTPFormBase.AddBinaryData*
  nameWithType.vb: HTTPFormBase.AddBinaryData(String, Byte(), String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: BestHTTP.Forms.HTTPFormBase.AddBinaryData(System.String, System.Byte(), System.String)
  name.vb: AddBinaryData(String, Byte(), String)
- uid: BestHTTP.Forms.HTTPFormBase.AddBinaryData(System.String,System.Byte[],System.String,System.String)
  commentId: M:BestHTTP.Forms.HTTPFormBase.AddBinaryData(System.String,System.Byte[],System.String,System.String)
  id: AddBinaryData(System.String,System.Byte[],System.String,System.String)
  parent: BestHTTP.Forms.HTTPFormBase
  langs:
  - csharp
  - vb
  name: AddBinaryData(String, Byte[], String, String)
  nameWithType: HTTPFormBase.AddBinaryData(String, Byte[], String, String)
  fullName: BestHTTP.Forms.HTTPFormBase.AddBinaryData(System.String, System.Byte[], System.String, System.String)
  type: Method
  source:
    id: AddBinaryData
    path: ''
    startLine: 10505
  assemblies:
  - cs.temp.dll
  namespace: BestHTTP.Forms
  syntax:
    content: public void AddBinaryData(string fieldName, byte[] content, string fileName, string mimeType)
    parameters:
    - id: fieldName
      type: System.String
    - id: content
      type: System.Byte[]
    - id: fileName
      type: System.String
    - id: mimeType
      type: System.String
    content.vb: Public Sub AddBinaryData(fieldName As String, content As Byte(), fileName As String, mimeType As String)
  overload: BestHTTP.Forms.HTTPFormBase.AddBinaryData*
  nameWithType.vb: HTTPFormBase.AddBinaryData(String, Byte(), String, String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: BestHTTP.Forms.HTTPFormBase.AddBinaryData(System.String, System.Byte(), System.String, System.String)
  name.vb: AddBinaryData(String, Byte(), String, String)
- uid: BestHTTP.Forms.HTTPFormBase.AddField(System.String,System.String)
  commentId: M:BestHTTP.Forms.HTTPFormBase.AddField(System.String,System.String)
  id: AddField(System.String,System.String)
  parent: BestHTTP.Forms.HTTPFormBase
  langs:
  - csharp
  - vb
  name: AddField(String, String)
  nameWithType: HTTPFormBase.AddField(String, String)
  fullName: BestHTTP.Forms.HTTPFormBase.AddField(System.String, System.String)
  type: Method
  source:
    id: AddField
    path: ''
    startLine: 10530
  assemblies:
  - cs.temp.dll
  namespace: BestHTTP.Forms
  syntax:
    content: public void AddField(string fieldName, string value)
    parameters:
    - id: fieldName
      type: System.String
    - id: value
      type: System.String
    content.vb: Public Sub AddField(fieldName As String, value As String)
  overload: BestHTTP.Forms.HTTPFormBase.AddField*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: BestHTTP.Forms.HTTPFormBase.AddField(System.String,System.String,System.Text.Encoding)
  commentId: M:BestHTTP.Forms.HTTPFormBase.AddField(System.String,System.String,System.Text.Encoding)
  id: AddField(System.String,System.String,System.Text.Encoding)
  parent: BestHTTP.Forms.HTTPFormBase
  langs:
  - csharp
  - vb
  name: AddField(String, String, Encoding)
  nameWithType: HTTPFormBase.AddField(String, String, Encoding)
  fullName: BestHTTP.Forms.HTTPFormBase.AddField(System.String, System.String, System.Text.Encoding)
  type: Method
  source:
    id: AddField
    path: ''
    startLine: 10535
  assemblies:
  - cs.temp.dll
  namespace: BestHTTP.Forms
  syntax:
    content: public void AddField(string fieldName, string value, Encoding e)
    parameters:
    - id: fieldName
      type: System.String
    - id: value
      type: System.String
    - id: e
      type: System.Text.Encoding
    content.vb: Public Sub AddField(fieldName As String, value As String, e As Encoding)
  overload: BestHTTP.Forms.HTTPFormBase.AddField*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: BestHTTP.Forms.HTTPFormBase.CopyFrom(BestHTTP.Forms.HTTPFormBase)
  commentId: M:BestHTTP.Forms.HTTPFormBase.CopyFrom(BestHTTP.Forms.HTTPFormBase)
  id: CopyFrom(BestHTTP.Forms.HTTPFormBase)
  parent: BestHTTP.Forms.HTTPFormBase
  langs:
  - csharp
  - vb
  name: CopyFrom(HTTPFormBase)
  nameWithType: HTTPFormBase.CopyFrom(HTTPFormBase)
  fullName: BestHTTP.Forms.HTTPFormBase.CopyFrom(BestHTTP.Forms.HTTPFormBase)
  type: Method
  source:
    id: CopyFrom
    path: ''
    startLine: 10563
  assemblies:
  - cs.temp.dll
  namespace: BestHTTP.Forms
  summary: "\nIt should &apos;clone&apos; all the data from the given HTTPFormBase object.\nCalled after the form-implementation created.\n"
  example: []
  syntax:
    content: public virtual void CopyFrom(HTTPFormBase fields)
    parameters:
    - id: fields
      type: BestHTTP.Forms.HTTPFormBase
    content.vb: Public Overridable Sub CopyFrom(fields As HTTPFormBase)
  overload: BestHTTP.Forms.HTTPFormBase.CopyFrom*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: BestHTTP.Forms.HTTPFormBase.PrepareRequest(BestHTTP.HTTPRequest)
  commentId: M:BestHTTP.Forms.HTTPFormBase.PrepareRequest(BestHTTP.HTTPRequest)
  id: PrepareRequest(BestHTTP.HTTPRequest)
  parent: BestHTTP.Forms.HTTPFormBase
  langs:
  - csharp
  - vb
  name: PrepareRequest(HTTPRequest)
  nameWithType: HTTPFormBase.PrepareRequest(HTTPRequest)
  fullName: BestHTTP.Forms.HTTPFormBase.PrepareRequest(BestHTTP.HTTPRequest)
  type: Method
  source:
    id: PrepareRequest
    path: ''
    startLine: 10575
  assemblies:
  - cs.temp.dll
  namespace: BestHTTP.Forms
  summary: "\nPrepares the request to sending a form. It should set only the headers.\n"
  example: []
  syntax:
    content: public virtual void PrepareRequest(HTTPRequest request)
    parameters:
    - id: request
      type: BestHTTP.HTTPRequest
    content.vb: Public Overridable Sub PrepareRequest(request As HTTPRequest)
  overload: BestHTTP.Forms.HTTPFormBase.PrepareRequest*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: BestHTTP.Forms.HTTPFormBase.GetData
  commentId: M:BestHTTP.Forms.HTTPFormBase.GetData
  id: GetData
  parent: BestHTTP.Forms.HTTPFormBase
  langs:
  - csharp
  - vb
  name: GetData()
  nameWithType: HTTPFormBase.GetData()
  fullName: BestHTTP.Forms.HTTPFormBase.GetData()
  type: Method
  source:
    id: GetData
    path: ''
    startLine: 10583
  assemblies:
  - cs.temp.dll
  namespace: BestHTTP.Forms
  summary: "\nPrepares and returns with the form&apos;s raw data.\n"
  example: []
  syntax:
    content: public virtual byte[] GetData()
    return:
      type: System.Byte[]
    content.vb: Public Overridable Function GetData As Byte()
  overload: BestHTTP.Forms.HTTPFormBase.GetData*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
references:
- uid: BestHTTP.Forms
  commentId: N:BestHTTP.Forms
  name: BestHTTP.Forms
  nameWithType: BestHTTP.Forms
  fullName: BestHTTP.Forms
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: BestHTTP.Forms.HTTPFormBase.Fields*
  commentId: Overload:BestHTTP.Forms.HTTPFormBase.Fields
  name: Fields
  nameWithType: HTTPFormBase.Fields
  fullName: BestHTTP.Forms.HTTPFormBase.Fields
- uid: System.Collections.Generic.List{BestHTTP.Forms.HTTPFieldData}
  commentId: T:System.Collections.Generic.List{BestHTTP.Forms.HTTPFieldData}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<HTTPFieldData>
  nameWithType: List<HTTPFieldData>
  fullName: System.Collections.Generic.List<BestHTTP.Forms.HTTPFieldData>
  nameWithType.vb: List(Of HTTPFieldData)
  fullName.vb: System.Collections.Generic.List(Of BestHTTP.Forms.HTTPFieldData)
  name.vb: List(Of HTTPFieldData)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: BestHTTP.Forms.HTTPFieldData
    name: HTTPFieldData
    nameWithType: HTTPFieldData
    fullName: BestHTTP.Forms.HTTPFieldData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: BestHTTP.Forms.HTTPFieldData
    name: HTTPFieldData
    nameWithType: HTTPFieldData
    fullName: BestHTTP.Forms.HTTPFieldData
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: BestHTTP.Forms.HTTPFormBase.IsEmpty*
  commentId: Overload:BestHTTP.Forms.HTTPFormBase.IsEmpty
  name: IsEmpty
  nameWithType: HTTPFormBase.IsEmpty
  fullName: BestHTTP.Forms.HTTPFormBase.IsEmpty
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: BestHTTP.Forms.HTTPFormBase.IsChanged*
  commentId: Overload:BestHTTP.Forms.HTTPFormBase.IsChanged
  name: IsChanged
  nameWithType: HTTPFormBase.IsChanged
  fullName: BestHTTP.Forms.HTTPFormBase.IsChanged
- uid: BestHTTP.Forms.HTTPFormBase.HasBinary*
  commentId: Overload:BestHTTP.Forms.HTTPFormBase.HasBinary
  name: HasBinary
  nameWithType: HTTPFormBase.HasBinary
  fullName: BestHTTP.Forms.HTTPFormBase.HasBinary
- uid: BestHTTP.Forms.HTTPFormBase.HasLongValue*
  commentId: Overload:BestHTTP.Forms.HTTPFormBase.HasLongValue
  name: HasLongValue
  nameWithType: HTTPFormBase.HasLongValue
  fullName: BestHTTP.Forms.HTTPFormBase.HasLongValue
- uid: BestHTTP.Forms.HTTPFormBase.AddBinaryData*
  commentId: Overload:BestHTTP.Forms.HTTPFormBase.AddBinaryData
  name: AddBinaryData
  nameWithType: HTTPFormBase.AddBinaryData
  fullName: BestHTTP.Forms.HTTPFormBase.AddBinaryData
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Byte[]
  isExternal: true
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullName.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: BestHTTP.Forms.HTTPFormBase.AddField*
  commentId: Overload:BestHTTP.Forms.HTTPFormBase.AddField
  name: AddField
  nameWithType: HTTPFormBase.AddField
  fullName: BestHTTP.Forms.HTTPFormBase.AddField
- uid: System.Text.Encoding
  commentId: T:System.Text.Encoding
  parent: System.Text
  isExternal: true
  name: Encoding
  nameWithType: Encoding
  fullName: System.Text.Encoding
- uid: System.Text
  commentId: N:System.Text
  isExternal: true
  name: System.Text
  nameWithType: System.Text
  fullName: System.Text
- uid: BestHTTP.Forms.HTTPFormBase.CopyFrom*
  commentId: Overload:BestHTTP.Forms.HTTPFormBase.CopyFrom
  name: CopyFrom
  nameWithType: HTTPFormBase.CopyFrom
  fullName: BestHTTP.Forms.HTTPFormBase.CopyFrom
- uid: BestHTTP.Forms.HTTPFormBase
  commentId: T:BestHTTP.Forms.HTTPFormBase
  parent: BestHTTP.Forms
  name: HTTPFormBase
  nameWithType: HTTPFormBase
  fullName: BestHTTP.Forms.HTTPFormBase
- uid: BestHTTP.Forms.HTTPFormBase.PrepareRequest*
  commentId: Overload:BestHTTP.Forms.HTTPFormBase.PrepareRequest
  name: PrepareRequest
  nameWithType: HTTPFormBase.PrepareRequest
  fullName: BestHTTP.Forms.HTTPFormBase.PrepareRequest
- uid: BestHTTP.HTTPRequest
  commentId: T:BestHTTP.HTTPRequest
  parent: BestHTTP
  name: HTTPRequest
  nameWithType: HTTPRequest
  fullName: BestHTTP.HTTPRequest
- uid: BestHTTP
  commentId: N:BestHTTP
  name: BestHTTP
  nameWithType: BestHTTP
  fullName: BestHTTP
- uid: BestHTTP.Forms.HTTPFormBase.GetData*
  commentId: Overload:BestHTTP.Forms.HTTPFormBase.GetData
  name: GetData
  nameWithType: HTTPFormBase.GetData
  fullName: BestHTTP.Forms.HTTPFormBase.GetData
