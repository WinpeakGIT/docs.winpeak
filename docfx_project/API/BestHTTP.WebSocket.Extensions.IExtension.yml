### YamlMime:ManagedReference
items:
- uid: BestHTTP.WebSocket.Extensions.IExtension
  commentId: T:BestHTTP.WebSocket.Extensions.IExtension
  id: IExtension
  parent: BestHTTP.WebSocket.Extensions
  children:
  - BestHTTP.WebSocket.Extensions.IExtension.AddNegotiation(BestHTTP.HTTPRequest)
  - BestHTTP.WebSocket.Extensions.IExtension.Decode(System.Byte,System.Byte[])
  - BestHTTP.WebSocket.Extensions.IExtension.Encode(WebSocketFrame)
  - BestHTTP.WebSocket.Extensions.IExtension.GetFrameHeader(WebSocketFrame,System.Byte)
  - BestHTTP.WebSocket.Extensions.IExtension.ParseNegotiation(BestHTTP.WebSocket.WebSocketResponse)
  langs:
  - csharp
  - vb
  name: IExtension
  nameWithType: IExtension
  fullName: BestHTTP.WebSocket.Extensions.IExtension
  type: Interface
  source:
    id: IExtension
    path: ''
    startLine: 159088
  assemblies:
  - cs.temp.dll
  namespace: BestHTTP.WebSocket.Extensions
  syntax:
    content: public interface IExtension
    content.vb: Public Interface IExtension
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: BestHTTP.WebSocket.Extensions.IExtension.AddNegotiation(BestHTTP.HTTPRequest)
  commentId: M:BestHTTP.WebSocket.Extensions.IExtension.AddNegotiation(BestHTTP.HTTPRequest)
  id: AddNegotiation(BestHTTP.HTTPRequest)
  parent: BestHTTP.WebSocket.Extensions.IExtension
  langs:
  - csharp
  - vb
  name: AddNegotiation(HTTPRequest)
  nameWithType: IExtension.AddNegotiation(HTTPRequest)
  fullName: BestHTTP.WebSocket.Extensions.IExtension.AddNegotiation(BestHTTP.HTTPRequest)
  type: Method
  source:
    id: AddNegotiation
    path: ''
    startLine: 159094
  assemblies:
  - cs.temp.dll
  namespace: BestHTTP.WebSocket.Extensions
  summary: "\nThis is the first pass: here we can add headers to the request to initiate an extension negotiation.\n"
  example: []
  syntax:
    content: void AddNegotiation(HTTPRequest request)
    parameters:
    - id: request
      type: BestHTTP.HTTPRequest
      description: ''
    content.vb: Sub AddNegotiation(request As HTTPRequest)
  overload: BestHTTP.WebSocket.Extensions.IExtension.AddNegotiation*
- uid: BestHTTP.WebSocket.Extensions.IExtension.ParseNegotiation(BestHTTP.WebSocket.WebSocketResponse)
  commentId: M:BestHTTP.WebSocket.Extensions.IExtension.ParseNegotiation(BestHTTP.WebSocket.WebSocketResponse)
  id: ParseNegotiation(BestHTTP.WebSocket.WebSocketResponse)
  parent: BestHTTP.WebSocket.Extensions.IExtension
  langs:
  - csharp
  - vb
  name: ParseNegotiation(WebSocketResponse)
  nameWithType: IExtension.ParseNegotiation(WebSocketResponse)
  fullName: BestHTTP.WebSocket.Extensions.IExtension.ParseNegotiation(BestHTTP.WebSocket.WebSocketResponse)
  type: Method
  source:
    id: ParseNegotiation
    path: ''
    startLine: 159100
  assemblies:
  - cs.temp.dll
  namespace: BestHTTP.WebSocket.Extensions
  summary: "\nIf the websocket upgrade succeded it will call this function to be able to parse the server&apos;s negotiation\nresponse. Inside this function the IsEnabled should be set.\n"
  example: []
  syntax:
    content: bool ParseNegotiation(WebSocketResponse resp)
    parameters:
    - id: resp
      type: BestHTTP.WebSocket.WebSocketResponse
    return:
      type: System.Boolean
    content.vb: Function ParseNegotiation(resp As WebSocketResponse) As Boolean
  overload: BestHTTP.WebSocket.Extensions.IExtension.ParseNegotiation*
- uid: BestHTTP.WebSocket.Extensions.IExtension.GetFrameHeader(WebSocketFrame,System.Byte)
  commentId: M:BestHTTP.WebSocket.Extensions.IExtension.GetFrameHeader(WebSocketFrame,System.Byte)
  id: GetFrameHeader(WebSocketFrame,System.Byte)
  parent: BestHTTP.WebSocket.Extensions.IExtension
  langs:
  - csharp
  - vb
  name: GetFrameHeader(WebSocketFrame, Byte)
  nameWithType: IExtension.GetFrameHeader(WebSocketFrame, Byte)
  fullName: BestHTTP.WebSocket.Extensions.IExtension.GetFrameHeader(WebSocketFrame, System.Byte)
  type: Method
  source:
    id: GetFrameHeader
    path: ''
    startLine: 159106
  assemblies:
  - cs.temp.dll
  namespace: BestHTTP.WebSocket.Extensions
  summary: "\nThis function should return a new header flag based on the inFlag parameter. The extension should set only the\nRsv1-3 bits in the header.\n"
  example: []
  syntax:
    content: byte GetFrameHeader(WebSocketFrame writer, byte inFlag)
    parameters:
    - id: writer
      type: WebSocketFrame
    - id: inFlag
      type: System.Byte
    return:
      type: System.Byte
    content.vb: Function GetFrameHeader(writer As WebSocketFrame, inFlag As Byte) As Byte
  overload: BestHTTP.WebSocket.Extensions.IExtension.GetFrameHeader*
- uid: BestHTTP.WebSocket.Extensions.IExtension.Encode(WebSocketFrame)
  commentId: M:BestHTTP.WebSocket.Extensions.IExtension.Encode(WebSocketFrame)
  id: Encode(WebSocketFrame)
  parent: BestHTTP.WebSocket.Extensions.IExtension
  langs:
  - csharp
  - vb
  name: Encode(WebSocketFrame)
  nameWithType: IExtension.Encode(WebSocketFrame)
  fullName: BestHTTP.WebSocket.Extensions.IExtension.Encode(WebSocketFrame)
  type: Method
  source:
    id: Encode
    path: ''
    startLine: 159113
  assemblies:
  - cs.temp.dll
  namespace: BestHTTP.WebSocket.Extensions
  summary: "\nThis function will be called to be able to transform the data that will be sent to the server.\n"
  example: []
  syntax:
    content: byte[] Encode(WebSocketFrame writer)
    parameters:
    - id: writer
      type: WebSocketFrame
      description: ''
    return:
      type: System.Byte[]
      description: ''
    content.vb: Function Encode(writer As WebSocketFrame) As Byte()
  overload: BestHTTP.WebSocket.Extensions.IExtension.Encode*
- uid: BestHTTP.WebSocket.Extensions.IExtension.Decode(System.Byte,System.Byte[])
  commentId: M:BestHTTP.WebSocket.Extensions.IExtension.Decode(System.Byte,System.Byte[])
  id: Decode(System.Byte,System.Byte[])
  parent: BestHTTP.WebSocket.Extensions.IExtension
  langs:
  - csharp
  - vb
  name: Decode(Byte, Byte[])
  nameWithType: IExtension.Decode(Byte, Byte[])
  fullName: BestHTTP.WebSocket.Extensions.IExtension.Decode(System.Byte, System.Byte[])
  type: Method
  source:
    id: Decode
    path: ''
    startLine: 159118
  assemblies:
  - cs.temp.dll
  namespace: BestHTTP.WebSocket.Extensions
  summary: "\nThis function can be used the decode the server-sent data.\n"
  example: []
  syntax:
    content: byte[] Decode(byte header, byte[] data)
    parameters:
    - id: header
      type: System.Byte
    - id: data
      type: System.Byte[]
    return:
      type: System.Byte[]
    content.vb: Function Decode(header As Byte, data As Byte()) As Byte()
  overload: BestHTTP.WebSocket.Extensions.IExtension.Decode*
  nameWithType.vb: IExtension.Decode(Byte, Byte())
  fullName.vb: BestHTTP.WebSocket.Extensions.IExtension.Decode(System.Byte, System.Byte())
  name.vb: Decode(Byte, Byte())
references:
- uid: BestHTTP.WebSocket.Extensions
  commentId: N:BestHTTP.WebSocket.Extensions
  name: BestHTTP.WebSocket.Extensions
  nameWithType: BestHTTP.WebSocket.Extensions
  fullName: BestHTTP.WebSocket.Extensions
- uid: BestHTTP.WebSocket.Extensions.IExtension.AddNegotiation*
  commentId: Overload:BestHTTP.WebSocket.Extensions.IExtension.AddNegotiation
  name: AddNegotiation
  nameWithType: IExtension.AddNegotiation
  fullName: BestHTTP.WebSocket.Extensions.IExtension.AddNegotiation
- uid: BestHTTP.HTTPRequest
  commentId: T:BestHTTP.HTTPRequest
  parent: BestHTTP
  name: HTTPRequest
  nameWithType: HTTPRequest
  fullName: BestHTTP.HTTPRequest
- uid: BestHTTP
  commentId: N:BestHTTP
  name: BestHTTP
  nameWithType: BestHTTP
  fullName: BestHTTP
- uid: BestHTTP.WebSocket.Extensions.IExtension.ParseNegotiation*
  commentId: Overload:BestHTTP.WebSocket.Extensions.IExtension.ParseNegotiation
  name: ParseNegotiation
  nameWithType: IExtension.ParseNegotiation
  fullName: BestHTTP.WebSocket.Extensions.IExtension.ParseNegotiation
- uid: BestHTTP.WebSocket.WebSocketResponse
  commentId: T:BestHTTP.WebSocket.WebSocketResponse
  parent: BestHTTP.WebSocket
  name: WebSocketResponse
  nameWithType: WebSocketResponse
  fullName: BestHTTP.WebSocket.WebSocketResponse
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: BestHTTP.WebSocket
  commentId: N:BestHTTP.WebSocket
  name: BestHTTP.WebSocket
  nameWithType: BestHTTP.WebSocket
  fullName: BestHTTP.WebSocket
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: BestHTTP.WebSocket.Extensions.IExtension.GetFrameHeader*
  commentId: Overload:BestHTTP.WebSocket.Extensions.IExtension.GetFrameHeader
  name: GetFrameHeader
  nameWithType: IExtension.GetFrameHeader
  fullName: BestHTTP.WebSocket.Extensions.IExtension.GetFrameHeader
- uid: WebSocketFrame
  isExternal: true
  name: WebSocketFrame
  nameWithType: WebSocketFrame
  fullName: WebSocketFrame
- uid: System.Byte
  commentId: T:System.Byte
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte
- uid: BestHTTP.WebSocket.Extensions.IExtension.Encode*
  commentId: Overload:BestHTTP.WebSocket.Extensions.IExtension.Encode
  name: Encode
  nameWithType: IExtension.Encode
  fullName: BestHTTP.WebSocket.Extensions.IExtension.Encode
- uid: System.Byte[]
  isExternal: true
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullName.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: BestHTTP.WebSocket.Extensions.IExtension.Decode*
  commentId: Overload:BestHTTP.WebSocket.Extensions.IExtension.Decode
  name: Decode
  nameWithType: IExtension.Decode
  fullName: BestHTTP.WebSocket.Extensions.IExtension.Decode
