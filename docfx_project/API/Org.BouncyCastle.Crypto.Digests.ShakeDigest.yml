### YamlMime:ManagedReference
items:
- uid: Org.BouncyCastle.Crypto.Digests.ShakeDigest
  commentId: T:Org.BouncyCastle.Crypto.Digests.ShakeDigest
  id: ShakeDigest
  parent: Org.BouncyCastle.Crypto.Digests
  children:
  - Org.BouncyCastle.Crypto.Digests.ShakeDigest.#ctor
  - Org.BouncyCastle.Crypto.Digests.ShakeDigest.#ctor(Org.BouncyCastle.Crypto.Digests.ShakeDigest)
  - Org.BouncyCastle.Crypto.Digests.ShakeDigest.#ctor(System.Int32)
  - Org.BouncyCastle.Crypto.Digests.ShakeDigest.AlgorithmName
  - Org.BouncyCastle.Crypto.Digests.ShakeDigest.Copy
  - Org.BouncyCastle.Crypto.Digests.ShakeDigest.DoFinal(System.Byte[],System.Int32)
  - Org.BouncyCastle.Crypto.Digests.ShakeDigest.DoFinal(System.Byte[],System.Int32,System.Byte,System.Int32)
  - Org.BouncyCastle.Crypto.Digests.ShakeDigest.DoFinal(System.Byte[],System.Int32,System.Int32)
  - Org.BouncyCastle.Crypto.Digests.ShakeDigest.DoFinal(System.Byte[],System.Int32,System.Int32,System.Byte,System.Int32)
  - Org.BouncyCastle.Crypto.Digests.ShakeDigest.DoOutput(System.Byte[],System.Int32,System.Int32)
  langs:
  - csharp
  - vb
  name: ShakeDigest
  nameWithType: ShakeDigest
  fullName: Org.BouncyCastle.Crypto.Digests.ShakeDigest
  type: Class
  source:
    id: ShakeDigest
    path: ''
    startLine: 120099
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Digests
  summary: "\nImplementation of SHAKE based on following KeccakNISTInterface.c from http://keccak.noekeon.org/\n"
  remarks: "\nFollowing the naming conventions used in the C source code to enable easy review of the implementation.\n"
  example: []
  syntax:
    content: 'public class ShakeDigest : KeccakDigest, IMemoable, IXof, IDigest'
    content.vb: >-
      Public Class ShakeDigest
          Inherits KeccakDigest
          Implements IMemoable, IXof, IDigest
  inheritance:
  - System.Object
  - Org.BouncyCastle.Crypto.Digests.KeccakDigest
  implements:
  - IMemoable
  - Org.BouncyCastle.Crypto.IXof
  - Org.BouncyCastle.Crypto.IDigest
  inheritedMembers:
  - Org.BouncyCastle.Crypto.Digests.KeccakDigest.state
  - Org.BouncyCastle.Crypto.Digests.KeccakDigest.dataQueue
  - Org.BouncyCastle.Crypto.Digests.KeccakDigest.rate
  - Org.BouncyCastle.Crypto.Digests.KeccakDigest.bitsInQueue
  - Org.BouncyCastle.Crypto.Digests.KeccakDigest.fixedOutputLength
  - Org.BouncyCastle.Crypto.Digests.KeccakDigest.squeezing
  - Org.BouncyCastle.Crypto.Digests.KeccakDigest.bitsAvailableForSqueezing
  - Org.BouncyCastle.Crypto.Digests.KeccakDigest.chunk
  - Org.BouncyCastle.Crypto.Digests.KeccakDigest.oneByte
  - Org.BouncyCastle.Crypto.Digests.KeccakDigest.GetDigestSize
  - Org.BouncyCastle.Crypto.Digests.KeccakDigest.Update(System.Byte)
  - Org.BouncyCastle.Crypto.Digests.KeccakDigest.BlockUpdate(System.Byte[],System.Int32,System.Int32)
  - Org.BouncyCastle.Crypto.Digests.KeccakDigest.Reset
  - Org.BouncyCastle.Crypto.Digests.KeccakDigest.GetByteLength
  - Org.BouncyCastle.Crypto.Digests.KeccakDigest.Absorb(System.Byte[],System.Int32,System.Int64)
  - Org.BouncyCastle.Crypto.Digests.KeccakDigest.Squeeze(System.Byte[],System.Int32,System.Int64)
  - Org.BouncyCastle.Crypto.Digests.KeccakDigest.Reset(IMemoable)
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ToString
  - System.Object.ReferenceEquals(System.Object,System.Object)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Org.BouncyCastle.Crypto.Digests.ShakeDigest.#ctor
  commentId: M:Org.BouncyCastle.Crypto.Digests.ShakeDigest.#ctor
  id: '#ctor'
  parent: Org.BouncyCastle.Crypto.Digests.ShakeDigest
  langs:
  - csharp
  - vb
  name: ShakeDigest()
  nameWithType: ShakeDigest.ShakeDigest()
  fullName: Org.BouncyCastle.Crypto.Digests.ShakeDigest.ShakeDigest()
  type: Constructor
  source:
    id: .ctor
    path: ''
    startLine: 120114
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Digests
  syntax:
    content: public ShakeDigest()
    content.vb: Public Sub New
  overload: Org.BouncyCastle.Crypto.Digests.ShakeDigest.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Org.BouncyCastle.Crypto.Digests.ShakeDigest.#ctor(System.Int32)
  commentId: M:Org.BouncyCastle.Crypto.Digests.ShakeDigest.#ctor(System.Int32)
  id: '#ctor(System.Int32)'
  parent: Org.BouncyCastle.Crypto.Digests.ShakeDigest
  langs:
  - csharp
  - vb
  name: ShakeDigest(Int32)
  nameWithType: ShakeDigest.ShakeDigest(Int32)
  fullName: Org.BouncyCastle.Crypto.Digests.ShakeDigest.ShakeDigest(System.Int32)
  type: Constructor
  source:
    id: .ctor
    path: ''
    startLine: 120119
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Digests
  syntax:
    content: public ShakeDigest(int bitLength)
    parameters:
    - id: bitLength
      type: System.Int32
    content.vb: Public Sub New(bitLength As Integer)
  overload: Org.BouncyCastle.Crypto.Digests.ShakeDigest.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Org.BouncyCastle.Crypto.Digests.ShakeDigest.#ctor(Org.BouncyCastle.Crypto.Digests.ShakeDigest)
  commentId: M:Org.BouncyCastle.Crypto.Digests.ShakeDigest.#ctor(Org.BouncyCastle.Crypto.Digests.ShakeDigest)
  id: '#ctor(Org.BouncyCastle.Crypto.Digests.ShakeDigest)'
  parent: Org.BouncyCastle.Crypto.Digests.ShakeDigest
  langs:
  - csharp
  - vb
  name: ShakeDigest(ShakeDigest)
  nameWithType: ShakeDigest.ShakeDigest(ShakeDigest)
  fullName: Org.BouncyCastle.Crypto.Digests.ShakeDigest.ShakeDigest(Org.BouncyCastle.Crypto.Digests.ShakeDigest)
  type: Constructor
  source:
    id: .ctor
    path: ''
    startLine: 120124
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Digests
  syntax:
    content: public ShakeDigest(ShakeDigest source)
    parameters:
    - id: source
      type: Org.BouncyCastle.Crypto.Digests.ShakeDigest
    content.vb: Public Sub New(source As ShakeDigest)
  overload: Org.BouncyCastle.Crypto.Digests.ShakeDigest.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Org.BouncyCastle.Crypto.Digests.ShakeDigest.AlgorithmName
  commentId: P:Org.BouncyCastle.Crypto.Digests.ShakeDigest.AlgorithmName
  id: AlgorithmName
  parent: Org.BouncyCastle.Crypto.Digests.ShakeDigest
  langs:
  - csharp
  - vb
  name: AlgorithmName
  nameWithType: ShakeDigest.AlgorithmName
  fullName: Org.BouncyCastle.Crypto.Digests.ShakeDigest.AlgorithmName
  type: Property
  source:
    id: AlgorithmName
    path: ''
    startLine: 120129
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Digests
  syntax:
    content: public override string AlgorithmName { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Overrides ReadOnly Property AlgorithmName As String
  overridden: Org.BouncyCastle.Crypto.Digests.KeccakDigest.AlgorithmName
  overload: Org.BouncyCastle.Crypto.Digests.ShakeDigest.AlgorithmName*
  implements:
  - Org.BouncyCastle.Crypto.IDigest.AlgorithmName
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: Org.BouncyCastle.Crypto.Digests.ShakeDigest.DoFinal(System.Byte[],System.Int32)
  commentId: M:Org.BouncyCastle.Crypto.Digests.ShakeDigest.DoFinal(System.Byte[],System.Int32)
  id: DoFinal(System.Byte[],System.Int32)
  parent: Org.BouncyCastle.Crypto.Digests.ShakeDigest
  langs:
  - csharp
  - vb
  name: DoFinal(Byte[], Int32)
  nameWithType: ShakeDigest.DoFinal(Byte[], Int32)
  fullName: Org.BouncyCastle.Crypto.Digests.ShakeDigest.DoFinal(System.Byte[], System.Int32)
  type: Method
  source:
    id: DoFinal
    path: ''
    startLine: 120134
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Digests
  syntax:
    content: public override int DoFinal(byte[] output, int outOff)
    parameters:
    - id: output
      type: System.Byte[]
    - id: outOff
      type: System.Int32
    return:
      type: System.Int32
    content.vb: Public Overrides Function DoFinal(output As Byte(), outOff As Integer) As Integer
  overridden: Org.BouncyCastle.Crypto.Digests.KeccakDigest.DoFinal(System.Byte[],System.Int32)
  overload: Org.BouncyCastle.Crypto.Digests.ShakeDigest.DoFinal*
  implements:
  - Org.BouncyCastle.Crypto.IDigest.DoFinal(System.Byte[],System.Int32)
  nameWithType.vb: ShakeDigest.DoFinal(Byte(), Int32)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: Org.BouncyCastle.Crypto.Digests.ShakeDigest.DoFinal(System.Byte(), System.Int32)
  name.vb: DoFinal(Byte(), Int32)
- uid: Org.BouncyCastle.Crypto.Digests.ShakeDigest.DoFinal(System.Byte[],System.Int32,System.Int32)
  commentId: M:Org.BouncyCastle.Crypto.Digests.ShakeDigest.DoFinal(System.Byte[],System.Int32,System.Int32)
  id: DoFinal(System.Byte[],System.Int32,System.Int32)
  parent: Org.BouncyCastle.Crypto.Digests.ShakeDigest
  langs:
  - csharp
  - vb
  name: DoFinal(Byte[], Int32, Int32)
  nameWithType: ShakeDigest.DoFinal(Byte[], Int32, Int32)
  fullName: Org.BouncyCastle.Crypto.Digests.ShakeDigest.DoFinal(System.Byte[], System.Int32, System.Int32)
  type: Method
  source:
    id: DoFinal
    path: ''
    startLine: 120139
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Digests
  syntax:
    content: public virtual int DoFinal(byte[] output, int outOff, int outLen)
    parameters:
    - id: output
      type: System.Byte[]
    - id: outOff
      type: System.Int32
    - id: outLen
      type: System.Int32
    return:
      type: System.Int32
    content.vb: Public Overridable Function DoFinal(output As Byte(), outOff As Integer, outLen As Integer) As Integer
  overload: Org.BouncyCastle.Crypto.Digests.ShakeDigest.DoFinal*
  implements:
  - Org.BouncyCastle.Crypto.IXof.DoFinal(System.Byte[],System.Int32,System.Int32)
  nameWithType.vb: ShakeDigest.DoFinal(Byte(), Int32, Int32)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Org.BouncyCastle.Crypto.Digests.ShakeDigest.DoFinal(System.Byte(), System.Int32, System.Int32)
  name.vb: DoFinal(Byte(), Int32, Int32)
- uid: Org.BouncyCastle.Crypto.Digests.ShakeDigest.DoOutput(System.Byte[],System.Int32,System.Int32)
  commentId: M:Org.BouncyCastle.Crypto.Digests.ShakeDigest.DoOutput(System.Byte[],System.Int32,System.Int32)
  id: DoOutput(System.Byte[],System.Int32,System.Int32)
  parent: Org.BouncyCastle.Crypto.Digests.ShakeDigest
  langs:
  - csharp
  - vb
  name: DoOutput(Byte[], Int32, Int32)
  nameWithType: ShakeDigest.DoOutput(Byte[], Int32, Int32)
  fullName: Org.BouncyCastle.Crypto.Digests.ShakeDigest.DoOutput(System.Byte[], System.Int32, System.Int32)
  type: Method
  source:
    id: DoOutput
    path: ''
    startLine: 120148
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Digests
  syntax:
    content: public virtual int DoOutput(byte[] output, int outOff, int outLen)
    parameters:
    - id: output
      type: System.Byte[]
    - id: outOff
      type: System.Int32
    - id: outLen
      type: System.Int32
    return:
      type: System.Int32
    content.vb: Public Overridable Function DoOutput(output As Byte(), outOff As Integer, outLen As Integer) As Integer
  overload: Org.BouncyCastle.Crypto.Digests.ShakeDigest.DoOutput*
  implements:
  - Org.BouncyCastle.Crypto.IXof.DoOutput(System.Byte[],System.Int32,System.Int32)
  nameWithType.vb: ShakeDigest.DoOutput(Byte(), Int32, Int32)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Org.BouncyCastle.Crypto.Digests.ShakeDigest.DoOutput(System.Byte(), System.Int32, System.Int32)
  name.vb: DoOutput(Byte(), Int32, Int32)
- uid: Org.BouncyCastle.Crypto.Digests.ShakeDigest.DoFinal(System.Byte[],System.Int32,System.Byte,System.Int32)
  commentId: M:Org.BouncyCastle.Crypto.Digests.ShakeDigest.DoFinal(System.Byte[],System.Int32,System.Byte,System.Int32)
  id: DoFinal(System.Byte[],System.Int32,System.Byte,System.Int32)
  parent: Org.BouncyCastle.Crypto.Digests.ShakeDigest
  langs:
  - csharp
  - vb
  name: DoFinal(Byte[], Int32, Byte, Int32)
  nameWithType: ShakeDigest.DoFinal(Byte[], Int32, Byte, Int32)
  fullName: Org.BouncyCastle.Crypto.Digests.ShakeDigest.DoFinal(System.Byte[], System.Int32, System.Byte, System.Int32)
  type: Method
  source:
    id: DoFinal
    path: ''
    startLine: 120163
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Digests
  syntax:
    content: protected override int DoFinal(byte[] output, int outOff, byte partialByte, int partialBits)
    parameters:
    - id: output
      type: System.Byte[]
    - id: outOff
      type: System.Int32
    - id: partialByte
      type: System.Byte
    - id: partialBits
      type: System.Int32
    return:
      type: System.Int32
    content.vb: Protected Overrides Function DoFinal(output As Byte(), outOff As Integer, partialByte As Byte, partialBits As Integer) As Integer
  overridden: Org.BouncyCastle.Crypto.Digests.KeccakDigest.DoFinal(System.Byte[],System.Int32,System.Byte,System.Int32)
  overload: Org.BouncyCastle.Crypto.Digests.ShakeDigest.DoFinal*
  nameWithType.vb: ShakeDigest.DoFinal(Byte(), Int32, Byte, Int32)
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
  fullName.vb: Org.BouncyCastle.Crypto.Digests.ShakeDigest.DoFinal(System.Byte(), System.Int32, System.Byte, System.Int32)
  name.vb: DoFinal(Byte(), Int32, Byte, Int32)
- uid: Org.BouncyCastle.Crypto.Digests.ShakeDigest.DoFinal(System.Byte[],System.Int32,System.Int32,System.Byte,System.Int32)
  commentId: M:Org.BouncyCastle.Crypto.Digests.ShakeDigest.DoFinal(System.Byte[],System.Int32,System.Int32,System.Byte,System.Int32)
  id: DoFinal(System.Byte[],System.Int32,System.Int32,System.Byte,System.Int32)
  parent: Org.BouncyCastle.Crypto.Digests.ShakeDigest
  langs:
  - csharp
  - vb
  name: DoFinal(Byte[], Int32, Int32, Byte, Int32)
  nameWithType: ShakeDigest.DoFinal(Byte[], Int32, Int32, Byte, Int32)
  fullName: Org.BouncyCastle.Crypto.Digests.ShakeDigest.DoFinal(System.Byte[], System.Int32, System.Int32, System.Byte, System.Int32)
  type: Method
  source:
    id: DoFinal
    path: ''
    startLine: 120171
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Digests
  syntax:
    content: protected virtual int DoFinal(byte[] output, int outOff, int outLen, byte partialByte, int partialBits)
    parameters:
    - id: output
      type: System.Byte[]
    - id: outOff
      type: System.Int32
    - id: outLen
      type: System.Int32
    - id: partialByte
      type: System.Byte
    - id: partialBits
      type: System.Int32
    return:
      type: System.Int32
    content.vb: Protected Overridable Function DoFinal(output As Byte(), outOff As Integer, outLen As Integer, partialByte As Byte, partialBits As Integer) As Integer
  overload: Org.BouncyCastle.Crypto.Digests.ShakeDigest.DoFinal*
  nameWithType.vb: ShakeDigest.DoFinal(Byte(), Int32, Int32, Byte, Int32)
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
  fullName.vb: Org.BouncyCastle.Crypto.Digests.ShakeDigest.DoFinal(System.Byte(), System.Int32, System.Int32, System.Byte, System.Int32)
  name.vb: DoFinal(Byte(), Int32, Int32, Byte, Int32)
- uid: Org.BouncyCastle.Crypto.Digests.ShakeDigest.Copy
  commentId: M:Org.BouncyCastle.Crypto.Digests.ShakeDigest.Copy
  id: Copy
  parent: Org.BouncyCastle.Crypto.Digests.ShakeDigest
  langs:
  - csharp
  - vb
  name: Copy()
  nameWithType: ShakeDigest.Copy()
  fullName: Org.BouncyCastle.Crypto.Digests.ShakeDigest.Copy()
  type: Method
  source:
    id: Copy
    path: ''
    startLine: 120201
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Digests
  syntax:
    content: public override IMemoable Copy()
    return:
      type: IMemoable
    content.vb: Public Overrides Function Copy As IMemoable
  overridden: Org.BouncyCastle.Crypto.Digests.KeccakDigest.Copy
  overload: Org.BouncyCastle.Crypto.Digests.ShakeDigest.Copy*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: Org.BouncyCastle.Crypto.Digests
  commentId: N:Org.BouncyCastle.Crypto.Digests
  name: Org.BouncyCastle.Crypto.Digests
  nameWithType: Org.BouncyCastle.Crypto.Digests
  fullName: Org.BouncyCastle.Crypto.Digests
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Org.BouncyCastle.Crypto.Digests.KeccakDigest
  commentId: T:Org.BouncyCastle.Crypto.Digests.KeccakDigest
  parent: Org.BouncyCastle.Crypto.Digests
  name: KeccakDigest
  nameWithType: KeccakDigest
  fullName: Org.BouncyCastle.Crypto.Digests.KeccakDigest
- uid: IMemoable
  isExternal: true
  name: IMemoable
  nameWithType: IMemoable
  fullName: IMemoable
- uid: Org.BouncyCastle.Crypto.IXof
  commentId: T:Org.BouncyCastle.Crypto.IXof
  parent: Org.BouncyCastle.Crypto
  name: IXof
  nameWithType: IXof
  fullName: Org.BouncyCastle.Crypto.IXof
- uid: Org.BouncyCastle.Crypto.IDigest
  commentId: T:Org.BouncyCastle.Crypto.IDigest
  parent: Org.BouncyCastle.Crypto
  name: IDigest
  nameWithType: IDigest
  fullName: Org.BouncyCastle.Crypto.IDigest
- uid: Org.BouncyCastle.Crypto.Digests.KeccakDigest.state
  commentId: F:Org.BouncyCastle.Crypto.Digests.KeccakDigest.state
  parent: Org.BouncyCastle.Crypto.Digests.KeccakDigest
  name: state
  nameWithType: KeccakDigest.state
  fullName: Org.BouncyCastle.Crypto.Digests.KeccakDigest.state
- uid: Org.BouncyCastle.Crypto.Digests.KeccakDigest.dataQueue
  commentId: F:Org.BouncyCastle.Crypto.Digests.KeccakDigest.dataQueue
  parent: Org.BouncyCastle.Crypto.Digests.KeccakDigest
  name: dataQueue
  nameWithType: KeccakDigest.dataQueue
  fullName: Org.BouncyCastle.Crypto.Digests.KeccakDigest.dataQueue
- uid: Org.BouncyCastle.Crypto.Digests.KeccakDigest.rate
  commentId: F:Org.BouncyCastle.Crypto.Digests.KeccakDigest.rate
  parent: Org.BouncyCastle.Crypto.Digests.KeccakDigest
  name: rate
  nameWithType: KeccakDigest.rate
  fullName: Org.BouncyCastle.Crypto.Digests.KeccakDigest.rate
- uid: Org.BouncyCastle.Crypto.Digests.KeccakDigest.bitsInQueue
  commentId: F:Org.BouncyCastle.Crypto.Digests.KeccakDigest.bitsInQueue
  parent: Org.BouncyCastle.Crypto.Digests.KeccakDigest
  name: bitsInQueue
  nameWithType: KeccakDigest.bitsInQueue
  fullName: Org.BouncyCastle.Crypto.Digests.KeccakDigest.bitsInQueue
- uid: Org.BouncyCastle.Crypto.Digests.KeccakDigest.fixedOutputLength
  commentId: F:Org.BouncyCastle.Crypto.Digests.KeccakDigest.fixedOutputLength
  parent: Org.BouncyCastle.Crypto.Digests.KeccakDigest
  name: fixedOutputLength
  nameWithType: KeccakDigest.fixedOutputLength
  fullName: Org.BouncyCastle.Crypto.Digests.KeccakDigest.fixedOutputLength
- uid: Org.BouncyCastle.Crypto.Digests.KeccakDigest.squeezing
  commentId: F:Org.BouncyCastle.Crypto.Digests.KeccakDigest.squeezing
  parent: Org.BouncyCastle.Crypto.Digests.KeccakDigest
  name: squeezing
  nameWithType: KeccakDigest.squeezing
  fullName: Org.BouncyCastle.Crypto.Digests.KeccakDigest.squeezing
- uid: Org.BouncyCastle.Crypto.Digests.KeccakDigest.bitsAvailableForSqueezing
  commentId: F:Org.BouncyCastle.Crypto.Digests.KeccakDigest.bitsAvailableForSqueezing
  parent: Org.BouncyCastle.Crypto.Digests.KeccakDigest
  name: bitsAvailableForSqueezing
  nameWithType: KeccakDigest.bitsAvailableForSqueezing
  fullName: Org.BouncyCastle.Crypto.Digests.KeccakDigest.bitsAvailableForSqueezing
- uid: Org.BouncyCastle.Crypto.Digests.KeccakDigest.chunk
  commentId: F:Org.BouncyCastle.Crypto.Digests.KeccakDigest.chunk
  parent: Org.BouncyCastle.Crypto.Digests.KeccakDigest
  name: chunk
  nameWithType: KeccakDigest.chunk
  fullName: Org.BouncyCastle.Crypto.Digests.KeccakDigest.chunk
- uid: Org.BouncyCastle.Crypto.Digests.KeccakDigest.oneByte
  commentId: F:Org.BouncyCastle.Crypto.Digests.KeccakDigest.oneByte
  parent: Org.BouncyCastle.Crypto.Digests.KeccakDigest
  name: oneByte
  nameWithType: KeccakDigest.oneByte
  fullName: Org.BouncyCastle.Crypto.Digests.KeccakDigest.oneByte
- uid: Org.BouncyCastle.Crypto.Digests.KeccakDigest.GetDigestSize
  commentId: M:Org.BouncyCastle.Crypto.Digests.KeccakDigest.GetDigestSize
  parent: Org.BouncyCastle.Crypto.Digests.KeccakDigest
  name: GetDigestSize()
  nameWithType: KeccakDigest.GetDigestSize()
  fullName: Org.BouncyCastle.Crypto.Digests.KeccakDigest.GetDigestSize()
  spec.csharp:
  - uid: Org.BouncyCastle.Crypto.Digests.KeccakDigest.GetDigestSize
    name: GetDigestSize
    nameWithType: KeccakDigest.GetDigestSize
    fullName: Org.BouncyCastle.Crypto.Digests.KeccakDigest.GetDigestSize
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Org.BouncyCastle.Crypto.Digests.KeccakDigest.GetDigestSize
    name: GetDigestSize
    nameWithType: KeccakDigest.GetDigestSize
    fullName: Org.BouncyCastle.Crypto.Digests.KeccakDigest.GetDigestSize
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Org.BouncyCastle.Crypto.Digests.KeccakDigest.Update(System.Byte)
  commentId: M:Org.BouncyCastle.Crypto.Digests.KeccakDigest.Update(System.Byte)
  parent: Org.BouncyCastle.Crypto.Digests.KeccakDigest
  isExternal: true
  name: Update(Byte)
  nameWithType: KeccakDigest.Update(Byte)
  fullName: Org.BouncyCastle.Crypto.Digests.KeccakDigest.Update(System.Byte)
  spec.csharp:
  - uid: Org.BouncyCastle.Crypto.Digests.KeccakDigest.Update(System.Byte)
    name: Update
    nameWithType: KeccakDigest.Update
    fullName: Org.BouncyCastle.Crypto.Digests.KeccakDigest.Update
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Org.BouncyCastle.Crypto.Digests.KeccakDigest.Update(System.Byte)
    name: Update
    nameWithType: KeccakDigest.Update
    fullName: Org.BouncyCastle.Crypto.Digests.KeccakDigest.Update
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Org.BouncyCastle.Crypto.Digests.KeccakDigest.BlockUpdate(System.Byte[],System.Int32,System.Int32)
  commentId: M:Org.BouncyCastle.Crypto.Digests.KeccakDigest.BlockUpdate(System.Byte[],System.Int32,System.Int32)
  parent: Org.BouncyCastle.Crypto.Digests.KeccakDigest
  isExternal: true
  name: BlockUpdate(Byte[], Int32, Int32)
  nameWithType: KeccakDigest.BlockUpdate(Byte[], Int32, Int32)
  fullName: Org.BouncyCastle.Crypto.Digests.KeccakDigest.BlockUpdate(System.Byte[], System.Int32, System.Int32)
  nameWithType.vb: KeccakDigest.BlockUpdate(Byte(), Int32, Int32)
  fullName.vb: Org.BouncyCastle.Crypto.Digests.KeccakDigest.BlockUpdate(System.Byte(), System.Int32, System.Int32)
  name.vb: BlockUpdate(Byte(), Int32, Int32)
  spec.csharp:
  - uid: Org.BouncyCastle.Crypto.Digests.KeccakDigest.BlockUpdate(System.Byte[],System.Int32,System.Int32)
    name: BlockUpdate
    nameWithType: KeccakDigest.BlockUpdate
    fullName: Org.BouncyCastle.Crypto.Digests.KeccakDigest.BlockUpdate
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Org.BouncyCastle.Crypto.Digests.KeccakDigest.BlockUpdate(System.Byte[],System.Int32,System.Int32)
    name: BlockUpdate
    nameWithType: KeccakDigest.BlockUpdate
    fullName: Org.BouncyCastle.Crypto.Digests.KeccakDigest.BlockUpdate
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Org.BouncyCastle.Crypto.Digests.KeccakDigest.Reset
  commentId: M:Org.BouncyCastle.Crypto.Digests.KeccakDigest.Reset
  parent: Org.BouncyCastle.Crypto.Digests.KeccakDigest
  name: Reset()
  nameWithType: KeccakDigest.Reset()
  fullName: Org.BouncyCastle.Crypto.Digests.KeccakDigest.Reset()
  spec.csharp:
  - uid: Org.BouncyCastle.Crypto.Digests.KeccakDigest.Reset
    name: Reset
    nameWithType: KeccakDigest.Reset
    fullName: Org.BouncyCastle.Crypto.Digests.KeccakDigest.Reset
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Org.BouncyCastle.Crypto.Digests.KeccakDigest.Reset
    name: Reset
    nameWithType: KeccakDigest.Reset
    fullName: Org.BouncyCastle.Crypto.Digests.KeccakDigest.Reset
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Org.BouncyCastle.Crypto.Digests.KeccakDigest.GetByteLength
  commentId: M:Org.BouncyCastle.Crypto.Digests.KeccakDigest.GetByteLength
  parent: Org.BouncyCastle.Crypto.Digests.KeccakDigest
  name: GetByteLength()
  nameWithType: KeccakDigest.GetByteLength()
  fullName: Org.BouncyCastle.Crypto.Digests.KeccakDigest.GetByteLength()
  spec.csharp:
  - uid: Org.BouncyCastle.Crypto.Digests.KeccakDigest.GetByteLength
    name: GetByteLength
    nameWithType: KeccakDigest.GetByteLength
    fullName: Org.BouncyCastle.Crypto.Digests.KeccakDigest.GetByteLength
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Org.BouncyCastle.Crypto.Digests.KeccakDigest.GetByteLength
    name: GetByteLength
    nameWithType: KeccakDigest.GetByteLength
    fullName: Org.BouncyCastle.Crypto.Digests.KeccakDigest.GetByteLength
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Org.BouncyCastle.Crypto.Digests.KeccakDigest.Absorb(System.Byte[],System.Int32,System.Int64)
  commentId: M:Org.BouncyCastle.Crypto.Digests.KeccakDigest.Absorb(System.Byte[],System.Int32,System.Int64)
  parent: Org.BouncyCastle.Crypto.Digests.KeccakDigest
  isExternal: true
  name: Absorb(Byte[], Int32, Int64)
  nameWithType: KeccakDigest.Absorb(Byte[], Int32, Int64)
  fullName: Org.BouncyCastle.Crypto.Digests.KeccakDigest.Absorb(System.Byte[], System.Int32, System.Int64)
  nameWithType.vb: KeccakDigest.Absorb(Byte(), Int32, Int64)
  fullName.vb: Org.BouncyCastle.Crypto.Digests.KeccakDigest.Absorb(System.Byte(), System.Int32, System.Int64)
  name.vb: Absorb(Byte(), Int32, Int64)
  spec.csharp:
  - uid: Org.BouncyCastle.Crypto.Digests.KeccakDigest.Absorb(System.Byte[],System.Int32,System.Int64)
    name: Absorb
    nameWithType: KeccakDigest.Absorb
    fullName: Org.BouncyCastle.Crypto.Digests.KeccakDigest.Absorb
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Org.BouncyCastle.Crypto.Digests.KeccakDigest.Absorb(System.Byte[],System.Int32,System.Int64)
    name: Absorb
    nameWithType: KeccakDigest.Absorb
    fullName: Org.BouncyCastle.Crypto.Digests.KeccakDigest.Absorb
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Org.BouncyCastle.Crypto.Digests.KeccakDigest.Squeeze(System.Byte[],System.Int32,System.Int64)
  commentId: M:Org.BouncyCastle.Crypto.Digests.KeccakDigest.Squeeze(System.Byte[],System.Int32,System.Int64)
  parent: Org.BouncyCastle.Crypto.Digests.KeccakDigest
  isExternal: true
  name: Squeeze(Byte[], Int32, Int64)
  nameWithType: KeccakDigest.Squeeze(Byte[], Int32, Int64)
  fullName: Org.BouncyCastle.Crypto.Digests.KeccakDigest.Squeeze(System.Byte[], System.Int32, System.Int64)
  nameWithType.vb: KeccakDigest.Squeeze(Byte(), Int32, Int64)
  fullName.vb: Org.BouncyCastle.Crypto.Digests.KeccakDigest.Squeeze(System.Byte(), System.Int32, System.Int64)
  name.vb: Squeeze(Byte(), Int32, Int64)
  spec.csharp:
  - uid: Org.BouncyCastle.Crypto.Digests.KeccakDigest.Squeeze(System.Byte[],System.Int32,System.Int64)
    name: Squeeze
    nameWithType: KeccakDigest.Squeeze
    fullName: Org.BouncyCastle.Crypto.Digests.KeccakDigest.Squeeze
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Org.BouncyCastle.Crypto.Digests.KeccakDigest.Squeeze(System.Byte[],System.Int32,System.Int64)
    name: Squeeze
    nameWithType: KeccakDigest.Squeeze
    fullName: Org.BouncyCastle.Crypto.Digests.KeccakDigest.Squeeze
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Org.BouncyCastle.Crypto.Digests.KeccakDigest.Reset(IMemoable)
  commentId: M:Org.BouncyCastle.Crypto.Digests.KeccakDigest.Reset(IMemoable)
  parent: Org.BouncyCastle.Crypto.Digests.KeccakDigest
  isExternal: true
  name: Reset(IMemoable)
  nameWithType: KeccakDigest.Reset(IMemoable)
  fullName: Org.BouncyCastle.Crypto.Digests.KeccakDigest.Reset(IMemoable)
  spec.csharp:
  - uid: Org.BouncyCastle.Crypto.Digests.KeccakDigest.Reset(IMemoable)
    name: Reset
    nameWithType: KeccakDigest.Reset
    fullName: Org.BouncyCastle.Crypto.Digests.KeccakDigest.Reset
  - name: (
    nameWithType: (
    fullName: (
  - uid: IMemoable
    name: IMemoable
    nameWithType: IMemoable
    fullName: IMemoable
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Org.BouncyCastle.Crypto.Digests.KeccakDigest.Reset(IMemoable)
    name: Reset
    nameWithType: KeccakDigest.Reset
    fullName: Org.BouncyCastle.Crypto.Digests.KeccakDigest.Reset
  - name: (
    nameWithType: (
    fullName: (
  - uid: IMemoable
    name: IMemoable
    nameWithType: IMemoable
    fullName: IMemoable
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Org.BouncyCastle.Crypto
  commentId: N:Org.BouncyCastle.Crypto
  name: Org.BouncyCastle.Crypto
  nameWithType: Org.BouncyCastle.Crypto
  fullName: Org.BouncyCastle.Crypto
- uid: Org.BouncyCastle.Crypto.Digests.ShakeDigest.#ctor*
  commentId: Overload:Org.BouncyCastle.Crypto.Digests.ShakeDigest.#ctor
  name: ShakeDigest
  nameWithType: ShakeDigest.ShakeDigest
  fullName: Org.BouncyCastle.Crypto.Digests.ShakeDigest.ShakeDigest
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Org.BouncyCastle.Crypto.Digests.ShakeDigest
  commentId: T:Org.BouncyCastle.Crypto.Digests.ShakeDigest
  parent: Org.BouncyCastle.Crypto.Digests
  name: ShakeDigest
  nameWithType: ShakeDigest
  fullName: Org.BouncyCastle.Crypto.Digests.ShakeDigest
- uid: Org.BouncyCastle.Crypto.Digests.KeccakDigest.AlgorithmName
  commentId: P:Org.BouncyCastle.Crypto.Digests.KeccakDigest.AlgorithmName
  parent: Org.BouncyCastle.Crypto.Digests.KeccakDigest
  name: AlgorithmName
  nameWithType: KeccakDigest.AlgorithmName
  fullName: Org.BouncyCastle.Crypto.Digests.KeccakDigest.AlgorithmName
- uid: Org.BouncyCastle.Crypto.Digests.ShakeDigest.AlgorithmName*
  commentId: Overload:Org.BouncyCastle.Crypto.Digests.ShakeDigest.AlgorithmName
  name: AlgorithmName
  nameWithType: ShakeDigest.AlgorithmName
  fullName: Org.BouncyCastle.Crypto.Digests.ShakeDigest.AlgorithmName
- uid: Org.BouncyCastle.Crypto.IDigest.AlgorithmName
  commentId: P:Org.BouncyCastle.Crypto.IDigest.AlgorithmName
  parent: Org.BouncyCastle.Crypto.IDigest
  name: AlgorithmName
  nameWithType: IDigest.AlgorithmName
  fullName: Org.BouncyCastle.Crypto.IDigest.AlgorithmName
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Org.BouncyCastle.Crypto.Digests.KeccakDigest.DoFinal(System.Byte[],System.Int32)
  commentId: M:Org.BouncyCastle.Crypto.Digests.KeccakDigest.DoFinal(System.Byte[],System.Int32)
  parent: Org.BouncyCastle.Crypto.Digests.KeccakDigest
  isExternal: true
  name: DoFinal(Byte[], Int32)
  nameWithType: KeccakDigest.DoFinal(Byte[], Int32)
  fullName: Org.BouncyCastle.Crypto.Digests.KeccakDigest.DoFinal(System.Byte[], System.Int32)
  nameWithType.vb: KeccakDigest.DoFinal(Byte(), Int32)
  fullName.vb: Org.BouncyCastle.Crypto.Digests.KeccakDigest.DoFinal(System.Byte(), System.Int32)
  name.vb: DoFinal(Byte(), Int32)
  spec.csharp:
  - uid: Org.BouncyCastle.Crypto.Digests.KeccakDigest.DoFinal(System.Byte[],System.Int32)
    name: DoFinal
    nameWithType: KeccakDigest.DoFinal
    fullName: Org.BouncyCastle.Crypto.Digests.KeccakDigest.DoFinal
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Org.BouncyCastle.Crypto.Digests.KeccakDigest.DoFinal(System.Byte[],System.Int32)
    name: DoFinal
    nameWithType: KeccakDigest.DoFinal
    fullName: Org.BouncyCastle.Crypto.Digests.KeccakDigest.DoFinal
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Org.BouncyCastle.Crypto.Digests.ShakeDigest.DoFinal*
  commentId: Overload:Org.BouncyCastle.Crypto.Digests.ShakeDigest.DoFinal
  name: DoFinal
  nameWithType: ShakeDigest.DoFinal
  fullName: Org.BouncyCastle.Crypto.Digests.ShakeDigest.DoFinal
- uid: Org.BouncyCastle.Crypto.IDigest.DoFinal(System.Byte[],System.Int32)
  commentId: M:Org.BouncyCastle.Crypto.IDigest.DoFinal(System.Byte[],System.Int32)
  parent: Org.BouncyCastle.Crypto.IDigest
  isExternal: true
  name: DoFinal(Byte[], Int32)
  nameWithType: IDigest.DoFinal(Byte[], Int32)
  fullName: Org.BouncyCastle.Crypto.IDigest.DoFinal(System.Byte[], System.Int32)
  nameWithType.vb: IDigest.DoFinal(Byte(), Int32)
  fullName.vb: Org.BouncyCastle.Crypto.IDigest.DoFinal(System.Byte(), System.Int32)
  name.vb: DoFinal(Byte(), Int32)
  spec.csharp:
  - uid: Org.BouncyCastle.Crypto.IDigest.DoFinal(System.Byte[],System.Int32)
    name: DoFinal
    nameWithType: IDigest.DoFinal
    fullName: Org.BouncyCastle.Crypto.IDigest.DoFinal
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Org.BouncyCastle.Crypto.IDigest.DoFinal(System.Byte[],System.Int32)
    name: DoFinal
    nameWithType: IDigest.DoFinal
    fullName: Org.BouncyCastle.Crypto.IDigest.DoFinal
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Byte[]
  isExternal: true
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullName.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Org.BouncyCastle.Crypto.IXof.DoFinal(System.Byte[],System.Int32,System.Int32)
  commentId: M:Org.BouncyCastle.Crypto.IXof.DoFinal(System.Byte[],System.Int32,System.Int32)
  parent: Org.BouncyCastle.Crypto.IXof
  isExternal: true
  name: DoFinal(Byte[], Int32, Int32)
  nameWithType: IXof.DoFinal(Byte[], Int32, Int32)
  fullName: Org.BouncyCastle.Crypto.IXof.DoFinal(System.Byte[], System.Int32, System.Int32)
  nameWithType.vb: IXof.DoFinal(Byte(), Int32, Int32)
  fullName.vb: Org.BouncyCastle.Crypto.IXof.DoFinal(System.Byte(), System.Int32, System.Int32)
  name.vb: DoFinal(Byte(), Int32, Int32)
  spec.csharp:
  - uid: Org.BouncyCastle.Crypto.IXof.DoFinal(System.Byte[],System.Int32,System.Int32)
    name: DoFinal
    nameWithType: IXof.DoFinal
    fullName: Org.BouncyCastle.Crypto.IXof.DoFinal
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Org.BouncyCastle.Crypto.IXof.DoFinal(System.Byte[],System.Int32,System.Int32)
    name: DoFinal
    nameWithType: IXof.DoFinal
    fullName: Org.BouncyCastle.Crypto.IXof.DoFinal
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Org.BouncyCastle.Crypto.Digests.ShakeDigest.DoOutput*
  commentId: Overload:Org.BouncyCastle.Crypto.Digests.ShakeDigest.DoOutput
  name: DoOutput
  nameWithType: ShakeDigest.DoOutput
  fullName: Org.BouncyCastle.Crypto.Digests.ShakeDigest.DoOutput
- uid: Org.BouncyCastle.Crypto.IXof.DoOutput(System.Byte[],System.Int32,System.Int32)
  commentId: M:Org.BouncyCastle.Crypto.IXof.DoOutput(System.Byte[],System.Int32,System.Int32)
  parent: Org.BouncyCastle.Crypto.IXof
  isExternal: true
  name: DoOutput(Byte[], Int32, Int32)
  nameWithType: IXof.DoOutput(Byte[], Int32, Int32)
  fullName: Org.BouncyCastle.Crypto.IXof.DoOutput(System.Byte[], System.Int32, System.Int32)
  nameWithType.vb: IXof.DoOutput(Byte(), Int32, Int32)
  fullName.vb: Org.BouncyCastle.Crypto.IXof.DoOutput(System.Byte(), System.Int32, System.Int32)
  name.vb: DoOutput(Byte(), Int32, Int32)
  spec.csharp:
  - uid: Org.BouncyCastle.Crypto.IXof.DoOutput(System.Byte[],System.Int32,System.Int32)
    name: DoOutput
    nameWithType: IXof.DoOutput
    fullName: Org.BouncyCastle.Crypto.IXof.DoOutput
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Org.BouncyCastle.Crypto.IXof.DoOutput(System.Byte[],System.Int32,System.Int32)
    name: DoOutput
    nameWithType: IXof.DoOutput
    fullName: Org.BouncyCastle.Crypto.IXof.DoOutput
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Org.BouncyCastle.Crypto.Digests.KeccakDigest.DoFinal(System.Byte[],System.Int32,System.Byte,System.Int32)
  commentId: M:Org.BouncyCastle.Crypto.Digests.KeccakDigest.DoFinal(System.Byte[],System.Int32,System.Byte,System.Int32)
  parent: Org.BouncyCastle.Crypto.Digests.KeccakDigest
  isExternal: true
  name: DoFinal(Byte[], Int32, Byte, Int32)
  nameWithType: KeccakDigest.DoFinal(Byte[], Int32, Byte, Int32)
  fullName: Org.BouncyCastle.Crypto.Digests.KeccakDigest.DoFinal(System.Byte[], System.Int32, System.Byte, System.Int32)
  nameWithType.vb: KeccakDigest.DoFinal(Byte(), Int32, Byte, Int32)
  fullName.vb: Org.BouncyCastle.Crypto.Digests.KeccakDigest.DoFinal(System.Byte(), System.Int32, System.Byte, System.Int32)
  name.vb: DoFinal(Byte(), Int32, Byte, Int32)
  spec.csharp:
  - uid: Org.BouncyCastle.Crypto.Digests.KeccakDigest.DoFinal(System.Byte[],System.Int32,System.Byte,System.Int32)
    name: DoFinal
    nameWithType: KeccakDigest.DoFinal
    fullName: Org.BouncyCastle.Crypto.Digests.KeccakDigest.DoFinal
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Org.BouncyCastle.Crypto.Digests.KeccakDigest.DoFinal(System.Byte[],System.Int32,System.Byte,System.Int32)
    name: DoFinal
    nameWithType: KeccakDigest.DoFinal
    fullName: Org.BouncyCastle.Crypto.Digests.KeccakDigest.DoFinal
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Byte
  commentId: T:System.Byte
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte
- uid: Org.BouncyCastle.Crypto.Digests.KeccakDigest.Copy
  commentId: M:Org.BouncyCastle.Crypto.Digests.KeccakDigest.Copy
  parent: Org.BouncyCastle.Crypto.Digests.KeccakDigest
  name: Copy()
  nameWithType: KeccakDigest.Copy()
  fullName: Org.BouncyCastle.Crypto.Digests.KeccakDigest.Copy()
  spec.csharp:
  - uid: Org.BouncyCastle.Crypto.Digests.KeccakDigest.Copy
    name: Copy
    nameWithType: KeccakDigest.Copy
    fullName: Org.BouncyCastle.Crypto.Digests.KeccakDigest.Copy
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Org.BouncyCastle.Crypto.Digests.KeccakDigest.Copy
    name: Copy
    nameWithType: KeccakDigest.Copy
    fullName: Org.BouncyCastle.Crypto.Digests.KeccakDigest.Copy
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Org.BouncyCastle.Crypto.Digests.ShakeDigest.Copy*
  commentId: Overload:Org.BouncyCastle.Crypto.Digests.ShakeDigest.Copy
  name: Copy
  nameWithType: ShakeDigest.Copy
  fullName: Org.BouncyCastle.Crypto.Digests.ShakeDigest.Copy
