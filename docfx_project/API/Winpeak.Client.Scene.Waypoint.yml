### YamlMime:ManagedReference
items:
- uid: Winpeak.Client.Scene.Waypoint
  commentId: T:Winpeak.Client.Scene.Waypoint
  id: Waypoint
  parent: Winpeak.Client.Scene
  children:
  - Winpeak.Client.Scene.Waypoint.#ctor
  - Winpeak.Client.Scene.Waypoint.#ctor(System.Int64,System.Single,System.Single,System.Single)
  - Winpeak.Client.Scene.Waypoint.r
  - Winpeak.Client.Scene.Waypoint.time
  - Winpeak.Client.Scene.Waypoint.ToString
  - Winpeak.Client.Scene.Waypoint.x
  - Winpeak.Client.Scene.Waypoint.y
  langs:
  - csharp
  - vb
  name: Waypoint
  nameWithType: Waypoint
  fullName: Winpeak.Client.Scene.Waypoint
  type: Class
  source:
    id: Waypoint
    path: ''
    startLine: 1763
  assemblies:
  - cs.temp.dll
  namespace: Winpeak.Client.Scene
  syntax:
    content: >-
      [Serializable]

      public class Waypoint
    content.vb: >-
      <Serializable>

      Public Class Waypoint
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  attributes:
  - type: System.SerializableAttribute
    ctor: System.SerializableAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Winpeak.Client.Scene.Waypoint.time
  commentId: F:Winpeak.Client.Scene.Waypoint.time
  id: time
  parent: Winpeak.Client.Scene.Waypoint
  langs:
  - csharp
  - vb
  name: time
  nameWithType: Waypoint.time
  fullName: Winpeak.Client.Scene.Waypoint.time
  type: Field
  source:
    id: time
    path: ''
    startLine: 1766
  assemblies:
  - cs.temp.dll
  namespace: Winpeak.Client.Scene
  syntax:
    content: public readonly long time
    return:
      type: System.Int64
    content.vb: Public ReadOnly time As Long
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Winpeak.Client.Scene.Waypoint.x
  commentId: F:Winpeak.Client.Scene.Waypoint.x
  id: x
  parent: Winpeak.Client.Scene.Waypoint
  langs:
  - csharp
  - vb
  name: x
  nameWithType: Waypoint.x
  fullName: Winpeak.Client.Scene.Waypoint.x
  type: Field
  source:
    id: x
    path: ''
    startLine: 1767
  assemblies:
  - cs.temp.dll
  namespace: Winpeak.Client.Scene
  syntax:
    content: public readonly float x
    return:
      type: System.Single
    content.vb: Public ReadOnly x As Single
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Winpeak.Client.Scene.Waypoint.y
  commentId: F:Winpeak.Client.Scene.Waypoint.y
  id: y
  parent: Winpeak.Client.Scene.Waypoint
  langs:
  - csharp
  - vb
  name: y
  nameWithType: Waypoint.y
  fullName: Winpeak.Client.Scene.Waypoint.y
  type: Field
  source:
    id: y
    path: ''
    startLine: 1768
  assemblies:
  - cs.temp.dll
  namespace: Winpeak.Client.Scene
  syntax:
    content: public readonly float y
    return:
      type: System.Single
    content.vb: Public ReadOnly y As Single
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Winpeak.Client.Scene.Waypoint.r
  commentId: F:Winpeak.Client.Scene.Waypoint.r
  id: r
  parent: Winpeak.Client.Scene.Waypoint
  langs:
  - csharp
  - vb
  name: r
  nameWithType: Waypoint.r
  fullName: Winpeak.Client.Scene.Waypoint.r
  type: Field
  source:
    id: r
    path: ''
    startLine: 1769
  assemblies:
  - cs.temp.dll
  namespace: Winpeak.Client.Scene
  syntax:
    content: public readonly float r
    return:
      type: System.Single
    content.vb: Public ReadOnly r As Single
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Winpeak.Client.Scene.Waypoint.#ctor(System.Int64,System.Single,System.Single,System.Single)
  commentId: M:Winpeak.Client.Scene.Waypoint.#ctor(System.Int64,System.Single,System.Single,System.Single)
  id: '#ctor(System.Int64,System.Single,System.Single,System.Single)'
  parent: Winpeak.Client.Scene.Waypoint
  langs:
  - csharp
  - vb
  name: Waypoint(Int64, Single, Single, Single)
  nameWithType: Waypoint.Waypoint(Int64, Single, Single, Single)
  fullName: Winpeak.Client.Scene.Waypoint.Waypoint(System.Int64, System.Single, System.Single, System.Single)
  type: Constructor
  source:
    id: .ctor
    path: ''
    startLine: 1771
  assemblies:
  - cs.temp.dll
  namespace: Winpeak.Client.Scene
  syntax:
    content: public Waypoint(long time, float x, float y, float r)
    parameters:
    - id: time
      type: System.Int64
    - id: x
      type: System.Single
    - id: y
      type: System.Single
    - id: r
      type: System.Single
    content.vb: Public Sub New(time As Long, x As Single, y As Single, r As Single)
  overload: Winpeak.Client.Scene.Waypoint.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Winpeak.Client.Scene.Waypoint.#ctor
  commentId: M:Winpeak.Client.Scene.Waypoint.#ctor
  id: '#ctor'
  parent: Winpeak.Client.Scene.Waypoint
  langs:
  - csharp
  - vb
  name: Waypoint()
  nameWithType: Waypoint.Waypoint()
  fullName: Winpeak.Client.Scene.Waypoint.Waypoint()
  type: Constructor
  source:
    id: .ctor
    path: ''
    startLine: 1778
  assemblies:
  - cs.temp.dll
  namespace: Winpeak.Client.Scene
  syntax:
    content: public Waypoint()
    content.vb: Public Sub New
  overload: Winpeak.Client.Scene.Waypoint.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Winpeak.Client.Scene.Waypoint.ToString
  commentId: M:Winpeak.Client.Scene.Waypoint.ToString
  id: ToString
  parent: Winpeak.Client.Scene.Waypoint
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: Waypoint.ToString()
  fullName: Winpeak.Client.Scene.Waypoint.ToString()
  type: Method
  source:
    id: ToString
    path: ''
    startLine: 1780
  assemblies:
  - cs.temp.dll
  namespace: Winpeak.Client.Scene
  syntax:
    content: public override string ToString()
    return:
      type: System.String
    content.vb: Public Overrides Function ToString As String
  overridden: System.Object.ToString
  overload: Winpeak.Client.Scene.Waypoint.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: Winpeak.Client.Scene
  commentId: N:Winpeak.Client.Scene
  name: Winpeak.Client.Scene
  nameWithType: Winpeak.Client.Scene
  fullName: Winpeak.Client.Scene
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: Winpeak.Client.Scene.Waypoint.#ctor*
  commentId: Overload:Winpeak.Client.Scene.Waypoint.#ctor
  name: Waypoint
  nameWithType: Waypoint.Waypoint
  fullName: Winpeak.Client.Scene.Waypoint.Waypoint
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Winpeak.Client.Scene.Waypoint.ToString*
  commentId: Overload:Winpeak.Client.Scene.Waypoint.ToString
  name: ToString
  nameWithType: Waypoint.ToString
  fullName: Winpeak.Client.Scene.Waypoint.ToString
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
