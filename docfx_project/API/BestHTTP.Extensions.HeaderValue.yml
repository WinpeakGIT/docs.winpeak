### YamlMime:ManagedReference
items:
- uid: BestHTTP.Extensions.HeaderValue
  commentId: T:BestHTTP.Extensions.HeaderValue
  id: HeaderValue
  parent: BestHTTP.Extensions
  children:
  - BestHTTP.Extensions.HeaderValue.#ctor
  - BestHTTP.Extensions.HeaderValue.#ctor(System.String)
  - BestHTTP.Extensions.HeaderValue.HasValue
  - BestHTTP.Extensions.HeaderValue.Key
  - BestHTTP.Extensions.HeaderValue.Options
  - BestHTTP.Extensions.HeaderValue.Parse(System.String,System.Int32@)
  - BestHTTP.Extensions.HeaderValue.ToString
  - BestHTTP.Extensions.HeaderValue.TryGetOption(System.String,BestHTTP.Extensions.HeaderValue@)
  - BestHTTP.Extensions.HeaderValue.Value
  langs:
  - csharp
  - vb
  name: HeaderValue
  nameWithType: HeaderValue
  fullName: BestHTTP.Extensions.HeaderValue
  type: Class
  source:
    id: HeaderValue
    path: ''
    startLine: 24362
  assemblies:
  - cs.temp.dll
  namespace: BestHTTP.Extensions
  summary: "\nUsed in string parsers. Its Value is optional.\n"
  example: []
  syntax:
    content: public sealed class HeaderValue
    content.vb: Public NotInheritable Class HeaderValue
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: BestHTTP.Extensions.HeaderValue.Key
  commentId: P:BestHTTP.Extensions.HeaderValue.Key
  id: Key
  parent: BestHTTP.Extensions.HeaderValue
  langs:
  - csharp
  - vb
  name: Key
  nameWithType: HeaderValue.Key
  fullName: BestHTTP.Extensions.HeaderValue.Key
  type: Property
  source:
    id: Key
    path: ''
    startLine: 24366
  assemblies:
  - cs.temp.dll
  namespace: BestHTTP.Extensions
  syntax:
    content: public string Key { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Key As String
  overload: BestHTTP.Extensions.HeaderValue.Key*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: BestHTTP.Extensions.HeaderValue.Value
  commentId: P:BestHTTP.Extensions.HeaderValue.Value
  id: Value
  parent: BestHTTP.Extensions.HeaderValue
  langs:
  - csharp
  - vb
  name: Value
  nameWithType: HeaderValue.Value
  fullName: BestHTTP.Extensions.HeaderValue.Value
  type: Property
  source:
    id: Value
    path: ''
    startLine: 24367
  assemblies:
  - cs.temp.dll
  namespace: BestHTTP.Extensions
  syntax:
    content: public string Value { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Value As String
  overload: BestHTTP.Extensions.HeaderValue.Value*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: BestHTTP.Extensions.HeaderValue.Options
  commentId: P:BestHTTP.Extensions.HeaderValue.Options
  id: Options
  parent: BestHTTP.Extensions.HeaderValue
  langs:
  - csharp
  - vb
  name: Options
  nameWithType: HeaderValue.Options
  fullName: BestHTTP.Extensions.HeaderValue.Options
  type: Property
  source:
    id: Options
    path: ''
    startLine: 24368
  assemblies:
  - cs.temp.dll
  namespace: BestHTTP.Extensions
  syntax:
    content: public List<HeaderValue> Options { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.List{BestHTTP.Extensions.HeaderValue}
    content.vb: Public Property Options As List(Of HeaderValue)
  overload: BestHTTP.Extensions.HeaderValue.Options*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: BestHTTP.Extensions.HeaderValue.HasValue
  commentId: P:BestHTTP.Extensions.HeaderValue.HasValue
  id: HasValue
  parent: BestHTTP.Extensions.HeaderValue
  langs:
  - csharp
  - vb
  name: HasValue
  nameWithType: HeaderValue.HasValue
  fullName: BestHTTP.Extensions.HeaderValue.HasValue
  type: Property
  source:
    id: HasValue
    path: ''
    startLine: 24370
  assemblies:
  - cs.temp.dll
  namespace: BestHTTP.Extensions
  syntax:
    content: public bool HasValue { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property HasValue As Boolean
  overload: BestHTTP.Extensions.HeaderValue.HasValue*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: BestHTTP.Extensions.HeaderValue.#ctor
  commentId: M:BestHTTP.Extensions.HeaderValue.#ctor
  id: '#ctor'
  parent: BestHTTP.Extensions.HeaderValue
  langs:
  - csharp
  - vb
  name: HeaderValue()
  nameWithType: HeaderValue.HeaderValue()
  fullName: BestHTTP.Extensions.HeaderValue.HeaderValue()
  type: Constructor
  source:
    id: .ctor
    path: ''
    startLine: 24376
  assemblies:
  - cs.temp.dll
  namespace: BestHTTP.Extensions
  syntax:
    content: public HeaderValue()
    content.vb: Public Sub New
  overload: BestHTTP.Extensions.HeaderValue.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: BestHTTP.Extensions.HeaderValue.#ctor(System.String)
  commentId: M:BestHTTP.Extensions.HeaderValue.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: BestHTTP.Extensions.HeaderValue
  langs:
  - csharp
  - vb
  name: HeaderValue(String)
  nameWithType: HeaderValue.HeaderValue(String)
  fullName: BestHTTP.Extensions.HeaderValue.HeaderValue(System.String)
  type: Constructor
  source:
    id: .ctor
    path: ''
    startLine: 24379
  assemblies:
  - cs.temp.dll
  namespace: BestHTTP.Extensions
  syntax:
    content: public HeaderValue(string key)
    parameters:
    - id: key
      type: System.String
    content.vb: Public Sub New(key As String)
  overload: BestHTTP.Extensions.HeaderValue.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: BestHTTP.Extensions.HeaderValue.Parse(System.String,System.Int32@)
  commentId: M:BestHTTP.Extensions.HeaderValue.Parse(System.String,System.Int32@)
  id: Parse(System.String,System.Int32@)
  parent: BestHTTP.Extensions.HeaderValue
  langs:
  - csharp
  - vb
  name: Parse(String, ref Int32)
  nameWithType: HeaderValue.Parse(String, ref Int32)
  fullName: BestHTTP.Extensions.HeaderValue.Parse(System.String, ref System.Int32)
  type: Method
  source:
    id: Parse
    path: ''
    startLine: 24388
  assemblies:
  - cs.temp.dll
  namespace: BestHTTP.Extensions
  syntax:
    content: public void Parse(string headerStr, ref int pos)
    parameters:
    - id: headerStr
      type: System.String
    - id: pos
      type: System.Int32
    content.vb: Public Sub Parse(headerStr As String, ByRef pos As Integer)
  overload: BestHTTP.Extensions.HeaderValue.Parse*
  nameWithType.vb: HeaderValue.Parse(String, ByRef Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: BestHTTP.Extensions.HeaderValue.Parse(System.String, ByRef System.Int32)
  name.vb: Parse(String, ByRef Int32)
- uid: BestHTTP.Extensions.HeaderValue.TryGetOption(System.String,BestHTTP.Extensions.HeaderValue@)
  commentId: M:BestHTTP.Extensions.HeaderValue.TryGetOption(System.String,BestHTTP.Extensions.HeaderValue@)
  id: TryGetOption(System.String,BestHTTP.Extensions.HeaderValue@)
  parent: BestHTTP.Extensions.HeaderValue
  langs:
  - csharp
  - vb
  name: TryGetOption(String, out HeaderValue)
  nameWithType: HeaderValue.TryGetOption(String, out HeaderValue)
  fullName: BestHTTP.Extensions.HeaderValue.TryGetOption(System.String, out BestHTTP.Extensions.HeaderValue)
  type: Method
  source:
    id: TryGetOption
    path: ''
    startLine: 24393
  assemblies:
  - cs.temp.dll
  namespace: BestHTTP.Extensions
  syntax:
    content: public bool TryGetOption(string key, out HeaderValue option)
    parameters:
    - id: key
      type: System.String
    - id: option
      type: BestHTTP.Extensions.HeaderValue
    return:
      type: System.Boolean
    content.vb: Public Function TryGetOption(key As String, ByRef option As HeaderValue) As Boolean
  overload: BestHTTP.Extensions.HeaderValue.TryGetOption*
  nameWithType.vb: HeaderValue.TryGetOption(String, ByRef HeaderValue)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: BestHTTP.Extensions.HeaderValue.TryGetOption(System.String, ByRef BestHTTP.Extensions.HeaderValue)
  name.vb: TryGetOption(String, ByRef HeaderValue)
- uid: BestHTTP.Extensions.HeaderValue.ToString
  commentId: M:BestHTTP.Extensions.HeaderValue.ToString
  id: ToString
  parent: BestHTTP.Extensions.HeaderValue
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: HeaderValue.ToString()
  fullName: BestHTTP.Extensions.HeaderValue.ToString()
  type: Method
  source:
    id: ToString
    path: ''
    startLine: 24455
  assemblies:
  - cs.temp.dll
  namespace: BestHTTP.Extensions
  syntax:
    content: public override string ToString()
    return:
      type: System.String
    content.vb: Public Overrides Function ToString As String
  overridden: System.Object.ToString
  overload: BestHTTP.Extensions.HeaderValue.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: BestHTTP.Extensions
  commentId: N:BestHTTP.Extensions
  name: BestHTTP.Extensions
  nameWithType: BestHTTP.Extensions
  fullName: BestHTTP.Extensions
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: BestHTTP.Extensions.HeaderValue.Key*
  commentId: Overload:BestHTTP.Extensions.HeaderValue.Key
  name: Key
  nameWithType: HeaderValue.Key
  fullName: BestHTTP.Extensions.HeaderValue.Key
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: BestHTTP.Extensions.HeaderValue.Value*
  commentId: Overload:BestHTTP.Extensions.HeaderValue.Value
  name: Value
  nameWithType: HeaderValue.Value
  fullName: BestHTTP.Extensions.HeaderValue.Value
- uid: BestHTTP.Extensions.HeaderValue.Options*
  commentId: Overload:BestHTTP.Extensions.HeaderValue.Options
  name: Options
  nameWithType: HeaderValue.Options
  fullName: BestHTTP.Extensions.HeaderValue.Options
- uid: System.Collections.Generic.List{BestHTTP.Extensions.HeaderValue}
  commentId: T:System.Collections.Generic.List{BestHTTP.Extensions.HeaderValue}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<HeaderValue>
  nameWithType: List<HeaderValue>
  fullName: System.Collections.Generic.List<BestHTTP.Extensions.HeaderValue>
  nameWithType.vb: List(Of HeaderValue)
  fullName.vb: System.Collections.Generic.List(Of BestHTTP.Extensions.HeaderValue)
  name.vb: List(Of HeaderValue)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: BestHTTP.Extensions.HeaderValue
    name: HeaderValue
    nameWithType: HeaderValue
    fullName: BestHTTP.Extensions.HeaderValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: BestHTTP.Extensions.HeaderValue
    name: HeaderValue
    nameWithType: HeaderValue
    fullName: BestHTTP.Extensions.HeaderValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: BestHTTP.Extensions.HeaderValue.HasValue*
  commentId: Overload:BestHTTP.Extensions.HeaderValue.HasValue
  name: HasValue
  nameWithType: HeaderValue.HasValue
  fullName: BestHTTP.Extensions.HeaderValue.HasValue
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: BestHTTP.Extensions.HeaderValue.#ctor*
  commentId: Overload:BestHTTP.Extensions.HeaderValue.#ctor
  name: HeaderValue
  nameWithType: HeaderValue.HeaderValue
  fullName: BestHTTP.Extensions.HeaderValue.HeaderValue
- uid: BestHTTP.Extensions.HeaderValue.Parse*
  commentId: Overload:BestHTTP.Extensions.HeaderValue.Parse
  name: Parse
  nameWithType: HeaderValue.Parse
  fullName: BestHTTP.Extensions.HeaderValue.Parse
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: BestHTTP.Extensions.HeaderValue.TryGetOption*
  commentId: Overload:BestHTTP.Extensions.HeaderValue.TryGetOption
  name: TryGetOption
  nameWithType: HeaderValue.TryGetOption
  fullName: BestHTTP.Extensions.HeaderValue.TryGetOption
- uid: BestHTTP.Extensions.HeaderValue
  commentId: T:BestHTTP.Extensions.HeaderValue
  parent: BestHTTP.Extensions
  name: HeaderValue
  nameWithType: HeaderValue
  fullName: BestHTTP.Extensions.HeaderValue
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: BestHTTP.Extensions.HeaderValue.ToString*
  commentId: Overload:BestHTTP.Extensions.HeaderValue.ToString
  name: ToString
  nameWithType: HeaderValue.ToString
  fullName: BestHTTP.Extensions.HeaderValue.ToString
