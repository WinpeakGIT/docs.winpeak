### YamlMime:ManagedReference
items:
- uid: Org.BouncyCastle.Crypto.Signers.IDsaKCalculator
  commentId: T:Org.BouncyCastle.Crypto.Signers.IDsaKCalculator
  id: IDsaKCalculator
  parent: Org.BouncyCastle.Crypto.Signers
  children:
  - Org.BouncyCastle.Crypto.Signers.IDsaKCalculator.Init(BigInteger,BigInteger,System.Byte[])
  - Org.BouncyCastle.Crypto.Signers.IDsaKCalculator.Init(BigInteger,SecureRandom)
  - Org.BouncyCastle.Crypto.Signers.IDsaKCalculator.IsDeterministic
  - Org.BouncyCastle.Crypto.Signers.IDsaKCalculator.NextK
  langs:
  - csharp
  - vb
  name: IDsaKCalculator
  nameWithType: IDsaKCalculator
  fullName: Org.BouncyCastle.Crypto.Signers.IDsaKCalculator
  type: Interface
  source:
    id: IDsaKCalculator
    path: ''
    startLine: 83489
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Signers
  example: []
  syntax:
    content: public interface IDsaKCalculator
    content.vb: Public Interface IDsaKCalculator
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Org.BouncyCastle.Crypto.Signers.IDsaKCalculator.IsDeterministic
  commentId: P:Org.BouncyCastle.Crypto.Signers.IDsaKCalculator.IsDeterministic
  id: IsDeterministic
  parent: Org.BouncyCastle.Crypto.Signers.IDsaKCalculator
  langs:
  - csharp
  - vb
  name: IsDeterministic
  nameWithType: IDsaKCalculator.IsDeterministic
  fullName: Org.BouncyCastle.Crypto.Signers.IDsaKCalculator.IsDeterministic
  type: Property
  source:
    id: IsDeterministic
    path: ''
    startLine: 83496
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Signers
  example: []
  syntax:
    content: bool IsDeterministic { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: ReadOnly Property IsDeterministic As Boolean
  overload: Org.BouncyCastle.Crypto.Signers.IDsaKCalculator.IsDeterministic*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Org.BouncyCastle.Crypto.Signers.IDsaKCalculator.Init(BigInteger,SecureRandom)
  commentId: M:Org.BouncyCastle.Crypto.Signers.IDsaKCalculator.Init(BigInteger,SecureRandom)
  id: Init(BigInteger,SecureRandom)
  parent: Org.BouncyCastle.Crypto.Signers.IDsaKCalculator
  langs:
  - csharp
  - vb
  name: Init(BigInteger, SecureRandom)
  nameWithType: IDsaKCalculator.Init(BigInteger, SecureRandom)
  fullName: Org.BouncyCastle.Crypto.Signers.IDsaKCalculator.Init(BigInteger, SecureRandom)
  type: Method
  source:
    id: Init
    path: ''
    startLine: 83504
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Signers
  example: []
  syntax:
    content: void Init(BigInteger n, SecureRandom random)
    parameters:
    - id: n
      type: BigInteger
    - id: random
      type: SecureRandom
    content.vb: Sub Init(n As BigInteger, random As SecureRandom)
  overload: Org.BouncyCastle.Crypto.Signers.IDsaKCalculator.Init*
- uid: Org.BouncyCastle.Crypto.Signers.IDsaKCalculator.Init(BigInteger,BigInteger,System.Byte[])
  commentId: M:Org.BouncyCastle.Crypto.Signers.IDsaKCalculator.Init(BigInteger,BigInteger,System.Byte[])
  id: Init(BigInteger,BigInteger,System.Byte[])
  parent: Org.BouncyCastle.Crypto.Signers.IDsaKCalculator
  langs:
  - csharp
  - vb
  name: Init(BigInteger, BigInteger, Byte[])
  nameWithType: IDsaKCalculator.Init(BigInteger, BigInteger, Byte[])
  fullName: Org.BouncyCastle.Crypto.Signers.IDsaKCalculator.Init(BigInteger, BigInteger, System.Byte[])
  type: Method
  source:
    id: Init
    path: ''
    startLine: 83513
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Signers
  example: []
  syntax:
    content: void Init(BigInteger n, BigInteger d, byte[] message)
    parameters:
    - id: n
      type: BigInteger
    - id: d
      type: BigInteger
    - id: message
      type: System.Byte[]
    content.vb: Sub Init(n As BigInteger, d As BigInteger, message As Byte())
  overload: Org.BouncyCastle.Crypto.Signers.IDsaKCalculator.Init*
  nameWithType.vb: IDsaKCalculator.Init(BigInteger, BigInteger, Byte())
  fullName.vb: Org.BouncyCastle.Crypto.Signers.IDsaKCalculator.Init(BigInteger, BigInteger, System.Byte())
  name.vb: Init(BigInteger, BigInteger, Byte())
- uid: Org.BouncyCastle.Crypto.Signers.IDsaKCalculator.NextK
  commentId: M:Org.BouncyCastle.Crypto.Signers.IDsaKCalculator.NextK
  id: NextK
  parent: Org.BouncyCastle.Crypto.Signers.IDsaKCalculator
  langs:
  - csharp
  - vb
  name: NextK()
  nameWithType: IDsaKCalculator.NextK()
  fullName: Org.BouncyCastle.Crypto.Signers.IDsaKCalculator.NextK()
  type: Method
  source:
    id: NextK
    path: ''
    startLine: 83520
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Signers
  example: []
  syntax:
    content: BigInteger NextK()
    return:
      type: BigInteger
    content.vb: Function NextK As BigInteger
  overload: Org.BouncyCastle.Crypto.Signers.IDsaKCalculator.NextK*
references:
- uid: Org.BouncyCastle.Crypto.Signers
  commentId: N:Org.BouncyCastle.Crypto.Signers
  name: Org.BouncyCastle.Crypto.Signers
  nameWithType: Org.BouncyCastle.Crypto.Signers
  fullName: Org.BouncyCastle.Crypto.Signers
- uid: Org.BouncyCastle.Crypto.Signers.IDsaKCalculator.IsDeterministic*
  commentId: Overload:Org.BouncyCastle.Crypto.Signers.IDsaKCalculator.IsDeterministic
  name: IsDeterministic
  nameWithType: IDsaKCalculator.IsDeterministic
  fullName: Org.BouncyCastle.Crypto.Signers.IDsaKCalculator.IsDeterministic
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Org.BouncyCastle.Crypto.Signers.IDsaKCalculator.Init*
  commentId: Overload:Org.BouncyCastle.Crypto.Signers.IDsaKCalculator.Init
  name: Init
  nameWithType: IDsaKCalculator.Init
  fullName: Org.BouncyCastle.Crypto.Signers.IDsaKCalculator.Init
- uid: BigInteger
  isExternal: true
  name: BigInteger
  nameWithType: BigInteger
  fullName: BigInteger
- uid: SecureRandom
  isExternal: true
  name: SecureRandom
  nameWithType: SecureRandom
  fullName: SecureRandom
- uid: System.Byte[]
  isExternal: true
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullName.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Org.BouncyCastle.Crypto.Signers.IDsaKCalculator.NextK*
  commentId: Overload:Org.BouncyCastle.Crypto.Signers.IDsaKCalculator.NextK
  name: NextK
  nameWithType: IDsaKCalculator.NextK
  fullName: Org.BouncyCastle.Crypto.Signers.IDsaKCalculator.NextK
