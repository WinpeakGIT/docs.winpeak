### YamlMime:ManagedReference
items:
- uid: Org.BouncyCastle.Utilities.Collections.EmptyEnumerator
  commentId: T:Org.BouncyCastle.Utilities.Collections.EmptyEnumerator
  id: EmptyEnumerator
  parent: Org.BouncyCastle.Utilities.Collections
  children:
  - Org.BouncyCastle.Utilities.Collections.EmptyEnumerator.Current
  - Org.BouncyCastle.Utilities.Collections.EmptyEnumerator.Instance
  - Org.BouncyCastle.Utilities.Collections.EmptyEnumerator.MoveNext
  - Org.BouncyCastle.Utilities.Collections.EmptyEnumerator.Reset
  langs:
  - csharp
  - vb
  name: EmptyEnumerator
  nameWithType: EmptyEnumerator
  fullName: Org.BouncyCastle.Utilities.Collections.EmptyEnumerator
  type: Class
  source:
    id: EmptyEnumerator
    path: ''
    startLine: 38040
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Utilities.Collections
  syntax:
    content: 'public sealed class EmptyEnumerator : IEnumerator'
    content.vb: >-
      Public NotInheritable Class EmptyEnumerator
          Implements IEnumerator
  inheritance:
  - System.Object
  implements:
  - System.Collections.IEnumerator
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ToString
  - System.Object.ReferenceEquals(System.Object,System.Object)
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: Org.BouncyCastle.Utilities.Collections.EmptyEnumerator.Instance
  commentId: F:Org.BouncyCastle.Utilities.Collections.EmptyEnumerator.Instance
  id: Instance
  parent: Org.BouncyCastle.Utilities.Collections.EmptyEnumerator
  langs:
  - csharp
  - vb
  name: Instance
  nameWithType: EmptyEnumerator.Instance
  fullName: Org.BouncyCastle.Utilities.Collections.EmptyEnumerator.Instance
  type: Field
  source:
    id: Instance
    path: ''
    startLine: 38043
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Utilities.Collections
  syntax:
    content: public static readonly IEnumerator Instance
    return:
      type: System.Collections.IEnumerator
    content.vb: Public Shared ReadOnly Instance As IEnumerator
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Org.BouncyCastle.Utilities.Collections.EmptyEnumerator.MoveNext
  commentId: M:Org.BouncyCastle.Utilities.Collections.EmptyEnumerator.MoveNext
  id: MoveNext
  parent: Org.BouncyCastle.Utilities.Collections.EmptyEnumerator
  langs:
  - csharp
  - vb
  name: MoveNext()
  nameWithType: EmptyEnumerator.MoveNext()
  fullName: Org.BouncyCastle.Utilities.Collections.EmptyEnumerator.MoveNext()
  type: Method
  source:
    id: MoveNext
    path: ''
    startLine: 38049
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Utilities.Collections
  syntax:
    content: public bool MoveNext()
    return:
      type: System.Boolean
    content.vb: Public Function MoveNext As Boolean
  overload: Org.BouncyCastle.Utilities.Collections.EmptyEnumerator.MoveNext*
  implements:
  - System.Collections.IEnumerator.MoveNext
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Org.BouncyCastle.Utilities.Collections.EmptyEnumerator.Reset
  commentId: M:Org.BouncyCastle.Utilities.Collections.EmptyEnumerator.Reset
  id: Reset
  parent: Org.BouncyCastle.Utilities.Collections.EmptyEnumerator
  langs:
  - csharp
  - vb
  name: Reset()
  nameWithType: EmptyEnumerator.Reset()
  fullName: Org.BouncyCastle.Utilities.Collections.EmptyEnumerator.Reset()
  type: Method
  source:
    id: Reset
    path: ''
    startLine: 38054
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Utilities.Collections
  syntax:
    content: public void Reset()
    content.vb: Public Sub Reset
  overload: Org.BouncyCastle.Utilities.Collections.EmptyEnumerator.Reset*
  implements:
  - System.Collections.IEnumerator.Reset
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Org.BouncyCastle.Utilities.Collections.EmptyEnumerator.Current
  commentId: P:Org.BouncyCastle.Utilities.Collections.EmptyEnumerator.Current
  id: Current
  parent: Org.BouncyCastle.Utilities.Collections.EmptyEnumerator
  langs:
  - csharp
  - vb
  name: Current
  nameWithType: EmptyEnumerator.Current
  fullName: Org.BouncyCastle.Utilities.Collections.EmptyEnumerator.Current
  type: Property
  source:
    id: Current
    path: ''
    startLine: 38058
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Utilities.Collections
  syntax:
    content: public object Current { get; }
    parameters: []
    return:
      type: System.Object
    content.vb: Public ReadOnly Property Current As Object
  overload: Org.BouncyCastle.Utilities.Collections.EmptyEnumerator.Current*
  implements:
  - System.Collections.IEnumerator.Current
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: Org.BouncyCastle.Utilities.Collections
  commentId: N:Org.BouncyCastle.Utilities.Collections
  name: Org.BouncyCastle.Utilities.Collections
  nameWithType: Org.BouncyCastle.Utilities.Collections
  fullName: Org.BouncyCastle.Utilities.Collections
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Collections.IEnumerator
  commentId: T:System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Collections
  commentId: N:System.Collections
  isExternal: true
  name: System.Collections
  nameWithType: System.Collections
  fullName: System.Collections
- uid: Org.BouncyCastle.Utilities.Collections.EmptyEnumerator.MoveNext*
  commentId: Overload:Org.BouncyCastle.Utilities.Collections.EmptyEnumerator.MoveNext
  name: MoveNext
  nameWithType: EmptyEnumerator.MoveNext
  fullName: Org.BouncyCastle.Utilities.Collections.EmptyEnumerator.MoveNext
- uid: System.Collections.IEnumerator.MoveNext
  commentId: M:System.Collections.IEnumerator.MoveNext
  parent: System.Collections.IEnumerator
  isExternal: true
  name: MoveNext()
  nameWithType: IEnumerator.MoveNext()
  fullName: System.Collections.IEnumerator.MoveNext()
  spec.csharp:
  - uid: System.Collections.IEnumerator.MoveNext
    name: MoveNext
    nameWithType: IEnumerator.MoveNext
    fullName: System.Collections.IEnumerator.MoveNext
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.IEnumerator.MoveNext
    name: MoveNext
    nameWithType: IEnumerator.MoveNext
    fullName: System.Collections.IEnumerator.MoveNext
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Org.BouncyCastle.Utilities.Collections.EmptyEnumerator.Reset*
  commentId: Overload:Org.BouncyCastle.Utilities.Collections.EmptyEnumerator.Reset
  name: Reset
  nameWithType: EmptyEnumerator.Reset
  fullName: Org.BouncyCastle.Utilities.Collections.EmptyEnumerator.Reset
- uid: System.Collections.IEnumerator.Reset
  commentId: M:System.Collections.IEnumerator.Reset
  parent: System.Collections.IEnumerator
  isExternal: true
  name: Reset()
  nameWithType: IEnumerator.Reset()
  fullName: System.Collections.IEnumerator.Reset()
  spec.csharp:
  - uid: System.Collections.IEnumerator.Reset
    name: Reset
    nameWithType: IEnumerator.Reset
    fullName: System.Collections.IEnumerator.Reset
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.IEnumerator.Reset
    name: Reset
    nameWithType: IEnumerator.Reset
    fullName: System.Collections.IEnumerator.Reset
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Org.BouncyCastle.Utilities.Collections.EmptyEnumerator.Current*
  commentId: Overload:Org.BouncyCastle.Utilities.Collections.EmptyEnumerator.Current
  name: Current
  nameWithType: EmptyEnumerator.Current
  fullName: Org.BouncyCastle.Utilities.Collections.EmptyEnumerator.Current
- uid: System.Collections.IEnumerator.Current
  commentId: P:System.Collections.IEnumerator.Current
  parent: System.Collections.IEnumerator
  isExternal: true
  name: Current
  nameWithType: IEnumerator.Current
  fullName: System.Collections.IEnumerator.Current
