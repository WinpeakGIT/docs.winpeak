### YamlMime:ManagedReference
items:
- uid: Winpeak.Client.Scene.WinPeakNetworkObject
  commentId: T:Winpeak.Client.Scene.WinPeakNetworkObject
  id: WinPeakNetworkObject
  parent: Winpeak.Client.Scene
  children:
  - Winpeak.Client.Scene.WinPeakNetworkObject.AddWaypoints(System.Collections.Generic.IEnumerable{Winpeak.Client.Scene.Waypoint})
  - Winpeak.Client.Scene.WinPeakNetworkObject.AddWaypoints(System.Collections.Generic.IEnumerable{Winpeak.Client.Scene.Waypoint},System.Int64)
  - Winpeak.Client.Scene.WinPeakNetworkObject.ColliderParams
  - Winpeak.Client.Scene.WinPeakNetworkObject.Init(ServerConnectionStatusController)
  - Winpeak.Client.Scene.WinPeakNetworkObject.InitializeFromConfig(JToken)
  - Winpeak.Client.Scene.WinPeakNetworkObject.LastNetworkPoints
  - Winpeak.Client.Scene.WinPeakNetworkObject.Move(Winpeak.Client.Scene.Waypoint[],System.Int64)
  - Winpeak.Client.Scene.WinPeakNetworkObject.MoveCount
  - Winpeak.Client.Scene.WinPeakNetworkObject.Name
  - Winpeak.Client.Scene.WinPeakNetworkObject.OnDestroy
  - Winpeak.Client.Scene.WinPeakNetworkObject.Positions
  - Winpeak.Client.Scene.WinPeakNetworkObject.Speed
  - Winpeak.Client.Scene.WinPeakNetworkObject.UsedNetwork
  - Winpeak.Client.Scene.WinPeakNetworkObject.Waypoints
  langs:
  - csharp
  - vb
  name: WinPeakNetworkObject
  nameWithType: WinPeakNetworkObject
  fullName: Winpeak.Client.Scene.WinPeakNetworkObject
  type: Class
  source:
    id: WinPeakNetworkObject
    path: ''
    startLine: 347
  assemblies:
  - cs.temp.dll
  namespace: Winpeak.Client.Scene
  syntax:
    content: 'public class WinPeakNetworkObject : MonoBehaviour, IWinPeakSubscriber'
    content.vb: >-
      Public Class WinPeakNetworkObject
          Inherits MonoBehaviour
          Implements IWinPeakSubscriber
  inheritance:
  - System.Object
  implements:
  - Winpeak.Client.Scene.IWinPeakSubscriber
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Winpeak.Client.Scene.WinPeakNetworkObject.Name
  commentId: P:Winpeak.Client.Scene.WinPeakNetworkObject.Name
  id: Name
  parent: Winpeak.Client.Scene.WinPeakNetworkObject
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: WinPeakNetworkObject.Name
  fullName: Winpeak.Client.Scene.WinPeakNetworkObject.Name
  type: Property
  source:
    id: Name
    path: ''
    startLine: 384
  assemblies:
  - cs.temp.dll
  namespace: Winpeak.Client.Scene
  syntax:
    content: public string Name { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property Name As String
  overload: Winpeak.Client.Scene.WinPeakNetworkObject.Name*
  implements:
  - Winpeak.Client.Scene.IWinPeakSubscriber.Name
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Winpeak.Client.Scene.WinPeakNetworkObject.Waypoints
  commentId: P:Winpeak.Client.Scene.WinPeakNetworkObject.Waypoints
  id: Waypoints
  parent: Winpeak.Client.Scene.WinPeakNetworkObject
  langs:
  - csharp
  - vb
  name: Waypoints
  nameWithType: WinPeakNetworkObject.Waypoints
  fullName: Winpeak.Client.Scene.WinPeakNetworkObject.Waypoints
  type: Property
  source:
    id: Waypoints
    path: ''
    startLine: 385
  assemblies:
  - cs.temp.dll
  namespace: Winpeak.Client.Scene
  syntax:
    content: public List<Waypoint> Waypoints { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.List{Winpeak.Client.Scene.Waypoint}
    content.vb: Public Property Waypoints As List(Of Waypoint)
  overload: Winpeak.Client.Scene.WinPeakNetworkObject.Waypoints*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Winpeak.Client.Scene.WinPeakNetworkObject.OnDestroy
  commentId: M:Winpeak.Client.Scene.WinPeakNetworkObject.OnDestroy
  id: OnDestroy
  parent: Winpeak.Client.Scene.WinPeakNetworkObject
  langs:
  - csharp
  - vb
  name: OnDestroy()
  nameWithType: WinPeakNetworkObject.OnDestroy()
  fullName: Winpeak.Client.Scene.WinPeakNetworkObject.OnDestroy()
  type: Method
  source:
    id: OnDestroy
    path: ''
    startLine: 451
  assemblies:
  - cs.temp.dll
  namespace: Winpeak.Client.Scene
  syntax:
    content: public void OnDestroy()
    content.vb: Public Sub OnDestroy
  overload: Winpeak.Client.Scene.WinPeakNetworkObject.OnDestroy*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Winpeak.Client.Scene.WinPeakNetworkObject.InitializeFromConfig(JToken)
  commentId: M:Winpeak.Client.Scene.WinPeakNetworkObject.InitializeFromConfig(JToken)
  id: InitializeFromConfig(JToken)
  parent: Winpeak.Client.Scene.WinPeakNetworkObject
  langs:
  - csharp
  - vb
  name: InitializeFromConfig(JToken)
  nameWithType: WinPeakNetworkObject.InitializeFromConfig(JToken)
  fullName: Winpeak.Client.Scene.WinPeakNetworkObject.InitializeFromConfig(JToken)
  type: Method
  source:
    id: InitializeFromConfig
    path: ''
    startLine: 458
  assemblies:
  - cs.temp.dll
  namespace: Winpeak.Client.Scene
  syntax:
    content: public void InitializeFromConfig(JToken data)
    parameters:
    - id: data
      type: JToken
    content.vb: Public Sub InitializeFromConfig(data As JToken)
  overload: Winpeak.Client.Scene.WinPeakNetworkObject.InitializeFromConfig*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Winpeak.Client.Scene.WinPeakNetworkObject.Positions
  commentId: P:Winpeak.Client.Scene.WinPeakNetworkObject.Positions
  id: Positions
  parent: Winpeak.Client.Scene.WinPeakNetworkObject
  langs:
  - csharp
  - vb
  name: Positions
  nameWithType: WinPeakNetworkObject.Positions
  fullName: Winpeak.Client.Scene.WinPeakNetworkObject.Positions
  type: Property
  source:
    id: Positions
    path: ''
    startLine: 475
  assemblies:
  - cs.temp.dll
  namespace: Winpeak.Client.Scene
  syntax:
    content: public float[] Positions { get; }
    parameters: []
    return:
      type: System.Single[]
    content.vb: Public ReadOnly Property Positions As Single()
  overload: Winpeak.Client.Scene.WinPeakNetworkObject.Positions*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Winpeak.Client.Scene.WinPeakNetworkObject.ColliderParams
  commentId: P:Winpeak.Client.Scene.WinPeakNetworkObject.ColliderParams
  id: ColliderParams
  parent: Winpeak.Client.Scene.WinPeakNetworkObject
  langs:
  - csharp
  - vb
  name: ColliderParams
  nameWithType: WinPeakNetworkObject.ColliderParams
  fullName: Winpeak.Client.Scene.WinPeakNetworkObject.ColliderParams
  type: Property
  source:
    id: ColliderParams
    path: ''
    startLine: 477
  assemblies:
  - cs.temp.dll
  namespace: Winpeak.Client.Scene
  syntax:
    content: public float[] ColliderParams { get; }
    parameters: []
    return:
      type: System.Single[]
    content.vb: Public ReadOnly Property ColliderParams As Single()
  overload: Winpeak.Client.Scene.WinPeakNetworkObject.ColliderParams*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Winpeak.Client.Scene.WinPeakNetworkObject.Speed
  commentId: P:Winpeak.Client.Scene.WinPeakNetworkObject.Speed
  id: Speed
  parent: Winpeak.Client.Scene.WinPeakNetworkObject
  langs:
  - csharp
  - vb
  name: Speed
  nameWithType: WinPeakNetworkObject.Speed
  fullName: Winpeak.Client.Scene.WinPeakNetworkObject.Speed
  type: Property
  source:
    id: Speed
    path: ''
    startLine: 479
  assemblies:
  - cs.temp.dll
  namespace: Winpeak.Client.Scene
  syntax:
    content: public float Speed { get; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public ReadOnly Property Speed As Single
  overload: Winpeak.Client.Scene.WinPeakNetworkObject.Speed*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Winpeak.Client.Scene.WinPeakNetworkObject.MoveCount
  commentId: P:Winpeak.Client.Scene.WinPeakNetworkObject.MoveCount
  id: MoveCount
  parent: Winpeak.Client.Scene.WinPeakNetworkObject
  langs:
  - csharp
  - vb
  name: MoveCount
  nameWithType: WinPeakNetworkObject.MoveCount
  fullName: Winpeak.Client.Scene.WinPeakNetworkObject.MoveCount
  type: Property
  source:
    id: MoveCount
    path: ''
    startLine: 481
  assemblies:
  - cs.temp.dll
  namespace: Winpeak.Client.Scene
  syntax:
    content: public long MoveCount { get; }
    parameters: []
    return:
      type: System.Int64
    content.vb: Public ReadOnly Property MoveCount As Long
  overload: Winpeak.Client.Scene.WinPeakNetworkObject.MoveCount*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Winpeak.Client.Scene.WinPeakNetworkObject.LastNetworkPoints
  commentId: P:Winpeak.Client.Scene.WinPeakNetworkObject.LastNetworkPoints
  id: LastNetworkPoints
  parent: Winpeak.Client.Scene.WinPeakNetworkObject
  langs:
  - csharp
  - vb
  name: LastNetworkPoints
  nameWithType: WinPeakNetworkObject.LastNetworkPoints
  fullName: Winpeak.Client.Scene.WinPeakNetworkObject.LastNetworkPoints
  type: Property
  source:
    id: LastNetworkPoints
    path: ''
    startLine: 492
  assemblies:
  - cs.temp.dll
  namespace: Winpeak.Client.Scene
  syntax:
    content: public Waypoint[] LastNetworkPoints { get; }
    parameters: []
    return:
      type: Winpeak.Client.Scene.Waypoint[]
    content.vb: Public ReadOnly Property LastNetworkPoints As Waypoint()
  overload: Winpeak.Client.Scene.WinPeakNetworkObject.LastNetworkPoints*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Winpeak.Client.Scene.WinPeakNetworkObject.Move(Winpeak.Client.Scene.Waypoint[],System.Int64)
  commentId: M:Winpeak.Client.Scene.WinPeakNetworkObject.Move(Winpeak.Client.Scene.Waypoint[],System.Int64)
  id: Move(Winpeak.Client.Scene.Waypoint[],System.Int64)
  parent: Winpeak.Client.Scene.WinPeakNetworkObject
  langs:
  - csharp
  - vb
  name: Move(Waypoint[], Int64)
  nameWithType: WinPeakNetworkObject.Move(Waypoint[], Int64)
  fullName: Winpeak.Client.Scene.WinPeakNetworkObject.Move(Winpeak.Client.Scene.Waypoint[], System.Int64)
  type: Method
  source:
    id: Move
    path: ''
    startLine: 528
  assemblies:
  - cs.temp.dll
  namespace: Winpeak.Client.Scene
  syntax:
    content: public void Move(Waypoint[] waypoints, long moveCount)
    parameters:
    - id: waypoints
      type: Winpeak.Client.Scene.Waypoint[]
    - id: moveCount
      type: System.Int64
    content.vb: Public Sub Move(waypoints As Waypoint(), moveCount As Long)
  overload: Winpeak.Client.Scene.WinPeakNetworkObject.Move*
  implements:
  - Winpeak.Client.Scene.IWinPeakSubscriber.Move(Winpeak.Client.Scene.Waypoint[],System.Int64)
  nameWithType.vb: WinPeakNetworkObject.Move(Waypoint(), Int64)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Winpeak.Client.Scene.WinPeakNetworkObject.Move(Winpeak.Client.Scene.Waypoint(), System.Int64)
  name.vb: Move(Waypoint(), Int64)
- uid: Winpeak.Client.Scene.WinPeakNetworkObject.AddWaypoints(System.Collections.Generic.IEnumerable{Winpeak.Client.Scene.Waypoint},System.Int64)
  commentId: M:Winpeak.Client.Scene.WinPeakNetworkObject.AddWaypoints(System.Collections.Generic.IEnumerable{Winpeak.Client.Scene.Waypoint},System.Int64)
  id: AddWaypoints(System.Collections.Generic.IEnumerable{Winpeak.Client.Scene.Waypoint},System.Int64)
  parent: Winpeak.Client.Scene.WinPeakNetworkObject
  langs:
  - csharp
  - vb
  name: AddWaypoints(IEnumerable<Waypoint>, Int64)
  nameWithType: WinPeakNetworkObject.AddWaypoints(IEnumerable<Waypoint>, Int64)
  fullName: Winpeak.Client.Scene.WinPeakNetworkObject.AddWaypoints(System.Collections.Generic.IEnumerable<Winpeak.Client.Scene.Waypoint>, System.Int64)
  type: Method
  source:
    id: AddWaypoints
    path: ''
    startLine: 532
  assemblies:
  - cs.temp.dll
  namespace: Winpeak.Client.Scene
  syntax:
    content: public void AddWaypoints(IEnumerable<Waypoint> newWaypoints, long moveCount)
    parameters:
    - id: newWaypoints
      type: System.Collections.Generic.IEnumerable{Winpeak.Client.Scene.Waypoint}
    - id: moveCount
      type: System.Int64
    content.vb: Public Sub AddWaypoints(newWaypoints As IEnumerable(Of Waypoint), moveCount As Long)
  overload: Winpeak.Client.Scene.WinPeakNetworkObject.AddWaypoints*
  nameWithType.vb: WinPeakNetworkObject.AddWaypoints(IEnumerable(Of Waypoint), Int64)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Winpeak.Client.Scene.WinPeakNetworkObject.AddWaypoints(System.Collections.Generic.IEnumerable(Of Winpeak.Client.Scene.Waypoint), System.Int64)
  name.vb: AddWaypoints(IEnumerable(Of Waypoint), Int64)
- uid: Winpeak.Client.Scene.WinPeakNetworkObject.AddWaypoints(System.Collections.Generic.IEnumerable{Winpeak.Client.Scene.Waypoint})
  commentId: M:Winpeak.Client.Scene.WinPeakNetworkObject.AddWaypoints(System.Collections.Generic.IEnumerable{Winpeak.Client.Scene.Waypoint})
  id: AddWaypoints(System.Collections.Generic.IEnumerable{Winpeak.Client.Scene.Waypoint})
  parent: Winpeak.Client.Scene.WinPeakNetworkObject
  langs:
  - csharp
  - vb
  name: AddWaypoints(IEnumerable<Waypoint>)
  nameWithType: WinPeakNetworkObject.AddWaypoints(IEnumerable<Waypoint>)
  fullName: Winpeak.Client.Scene.WinPeakNetworkObject.AddWaypoints(System.Collections.Generic.IEnumerable<Winpeak.Client.Scene.Waypoint>)
  type: Method
  source:
    id: AddWaypoints
    path: ''
    startLine: 541
  assemblies:
  - cs.temp.dll
  namespace: Winpeak.Client.Scene
  syntax:
    content: public void AddWaypoints(IEnumerable<Waypoint> newWaypoints)
    parameters:
    - id: newWaypoints
      type: System.Collections.Generic.IEnumerable{Winpeak.Client.Scene.Waypoint}
    content.vb: Public Sub AddWaypoints(newWaypoints As IEnumerable(Of Waypoint))
  overload: Winpeak.Client.Scene.WinPeakNetworkObject.AddWaypoints*
  nameWithType.vb: WinPeakNetworkObject.AddWaypoints(IEnumerable(Of Waypoint))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Winpeak.Client.Scene.WinPeakNetworkObject.AddWaypoints(System.Collections.Generic.IEnumerable(Of Winpeak.Client.Scene.Waypoint))
  name.vb: AddWaypoints(IEnumerable(Of Waypoint))
- uid: Winpeak.Client.Scene.WinPeakNetworkObject.Init(ServerConnectionStatusController)
  commentId: M:Winpeak.Client.Scene.WinPeakNetworkObject.Init(ServerConnectionStatusController)
  id: Init(ServerConnectionStatusController)
  parent: Winpeak.Client.Scene.WinPeakNetworkObject
  langs:
  - csharp
  - vb
  name: Init(ServerConnectionStatusController)
  nameWithType: WinPeakNetworkObject.Init(ServerConnectionStatusController)
  fullName: Winpeak.Client.Scene.WinPeakNetworkObject.Init(ServerConnectionStatusController)
  type: Method
  source:
    id: Init
    path: ''
    startLine: 603
  assemblies:
  - cs.temp.dll
  namespace: Winpeak.Client.Scene
  syntax:
    content: public void Init(ServerConnectionStatusController statusController)
    parameters:
    - id: statusController
      type: ServerConnectionStatusController
    content.vb: Public Sub Init(statusController As ServerConnectionStatusController)
  overload: Winpeak.Client.Scene.WinPeakNetworkObject.Init*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Winpeak.Client.Scene.WinPeakNetworkObject.UsedNetwork
  commentId: P:Winpeak.Client.Scene.WinPeakNetworkObject.UsedNetwork
  id: UsedNetwork
  parent: Winpeak.Client.Scene.WinPeakNetworkObject
  langs:
  - csharp
  - vb
  name: UsedNetwork
  nameWithType: WinPeakNetworkObject.UsedNetwork
  fullName: Winpeak.Client.Scene.WinPeakNetworkObject.UsedNetwork
  type: Property
  source:
    id: UsedNetwork
    path: ''
    startLine: 657
  assemblies:
  - cs.temp.dll
  namespace: Winpeak.Client.Scene
  syntax:
    content: public bool UsedNetwork { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property UsedNetwork As Boolean
  overload: Winpeak.Client.Scene.WinPeakNetworkObject.UsedNetwork*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: Winpeak.Client.Scene
  commentId: N:Winpeak.Client.Scene
  name: Winpeak.Client.Scene
  nameWithType: Winpeak.Client.Scene
  fullName: Winpeak.Client.Scene
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Winpeak.Client.Scene.IWinPeakSubscriber
  commentId: T:Winpeak.Client.Scene.IWinPeakSubscriber
  parent: Winpeak.Client.Scene
  name: IWinPeakSubscriber
  nameWithType: IWinPeakSubscriber
  fullName: Winpeak.Client.Scene.IWinPeakSubscriber
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Winpeak.Client.Scene.WinPeakNetworkObject.Name*
  commentId: Overload:Winpeak.Client.Scene.WinPeakNetworkObject.Name
  name: Name
  nameWithType: WinPeakNetworkObject.Name
  fullName: Winpeak.Client.Scene.WinPeakNetworkObject.Name
- uid: Winpeak.Client.Scene.IWinPeakSubscriber.Name
  commentId: P:Winpeak.Client.Scene.IWinPeakSubscriber.Name
  parent: Winpeak.Client.Scene.IWinPeakSubscriber
  name: Name
  nameWithType: IWinPeakSubscriber.Name
  fullName: Winpeak.Client.Scene.IWinPeakSubscriber.Name
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Winpeak.Client.Scene.WinPeakNetworkObject.Waypoints*
  commentId: Overload:Winpeak.Client.Scene.WinPeakNetworkObject.Waypoints
  name: Waypoints
  nameWithType: WinPeakNetworkObject.Waypoints
  fullName: Winpeak.Client.Scene.WinPeakNetworkObject.Waypoints
- uid: System.Collections.Generic.List{Winpeak.Client.Scene.Waypoint}
  commentId: T:System.Collections.Generic.List{Winpeak.Client.Scene.Waypoint}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<Waypoint>
  nameWithType: List<Waypoint>
  fullName: System.Collections.Generic.List<Winpeak.Client.Scene.Waypoint>
  nameWithType.vb: List(Of Waypoint)
  fullName.vb: System.Collections.Generic.List(Of Winpeak.Client.Scene.Waypoint)
  name.vb: List(Of Waypoint)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Winpeak.Client.Scene.Waypoint
    name: Waypoint
    nameWithType: Waypoint
    fullName: Winpeak.Client.Scene.Waypoint
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Winpeak.Client.Scene.Waypoint
    name: Waypoint
    nameWithType: Waypoint
    fullName: Winpeak.Client.Scene.Waypoint
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Winpeak.Client.Scene.WinPeakNetworkObject.OnDestroy*
  commentId: Overload:Winpeak.Client.Scene.WinPeakNetworkObject.OnDestroy
  name: OnDestroy
  nameWithType: WinPeakNetworkObject.OnDestroy
  fullName: Winpeak.Client.Scene.WinPeakNetworkObject.OnDestroy
- uid: Winpeak.Client.Scene.WinPeakNetworkObject.InitializeFromConfig*
  commentId: Overload:Winpeak.Client.Scene.WinPeakNetworkObject.InitializeFromConfig
  name: InitializeFromConfig
  nameWithType: WinPeakNetworkObject.InitializeFromConfig
  fullName: Winpeak.Client.Scene.WinPeakNetworkObject.InitializeFromConfig
- uid: JToken
  commentId: '!:JToken'
  isExternal: true
  name: JToken
  nameWithType: JToken
  fullName: JToken
- uid: Winpeak.Client.Scene.WinPeakNetworkObject.Positions*
  commentId: Overload:Winpeak.Client.Scene.WinPeakNetworkObject.Positions
  name: Positions
  nameWithType: WinPeakNetworkObject.Positions
  fullName: Winpeak.Client.Scene.WinPeakNetworkObject.Positions
- uid: System.Single[]
  isExternal: true
  name: Single[]
  nameWithType: Single[]
  fullName: System.Single[]
  nameWithType.vb: Single()
  fullName.vb: System.Single()
  name.vb: Single()
  spec.csharp:
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Winpeak.Client.Scene.WinPeakNetworkObject.ColliderParams*
  commentId: Overload:Winpeak.Client.Scene.WinPeakNetworkObject.ColliderParams
  name: ColliderParams
  nameWithType: WinPeakNetworkObject.ColliderParams
  fullName: Winpeak.Client.Scene.WinPeakNetworkObject.ColliderParams
- uid: Winpeak.Client.Scene.WinPeakNetworkObject.Speed*
  commentId: Overload:Winpeak.Client.Scene.WinPeakNetworkObject.Speed
  name: Speed
  nameWithType: WinPeakNetworkObject.Speed
  fullName: Winpeak.Client.Scene.WinPeakNetworkObject.Speed
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: Winpeak.Client.Scene.WinPeakNetworkObject.MoveCount*
  commentId: Overload:Winpeak.Client.Scene.WinPeakNetworkObject.MoveCount
  name: MoveCount
  nameWithType: WinPeakNetworkObject.MoveCount
  fullName: Winpeak.Client.Scene.WinPeakNetworkObject.MoveCount
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: Winpeak.Client.Scene.WinPeakNetworkObject.LastNetworkPoints*
  commentId: Overload:Winpeak.Client.Scene.WinPeakNetworkObject.LastNetworkPoints
  name: LastNetworkPoints
  nameWithType: WinPeakNetworkObject.LastNetworkPoints
  fullName: Winpeak.Client.Scene.WinPeakNetworkObject.LastNetworkPoints
- uid: Winpeak.Client.Scene.Waypoint[]
  isExternal: true
  name: Waypoint[]
  nameWithType: Waypoint[]
  fullName: Winpeak.Client.Scene.Waypoint[]
  nameWithType.vb: Waypoint()
  fullName.vb: Winpeak.Client.Scene.Waypoint()
  name.vb: Waypoint()
  spec.csharp:
  - uid: Winpeak.Client.Scene.Waypoint
    name: Waypoint
    nameWithType: Waypoint
    fullName: Winpeak.Client.Scene.Waypoint
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: Winpeak.Client.Scene.Waypoint
    name: Waypoint
    nameWithType: Waypoint
    fullName: Winpeak.Client.Scene.Waypoint
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Winpeak.Client.Scene.WinPeakNetworkObject.Move*
  commentId: Overload:Winpeak.Client.Scene.WinPeakNetworkObject.Move
  name: Move
  nameWithType: WinPeakNetworkObject.Move
  fullName: Winpeak.Client.Scene.WinPeakNetworkObject.Move
- uid: Winpeak.Client.Scene.IWinPeakSubscriber.Move(Winpeak.Client.Scene.Waypoint[],System.Int64)
  commentId: M:Winpeak.Client.Scene.IWinPeakSubscriber.Move(Winpeak.Client.Scene.Waypoint[],System.Int64)
  parent: Winpeak.Client.Scene.IWinPeakSubscriber
  isExternal: true
  name: Move(Waypoint[], Int64)
  nameWithType: IWinPeakSubscriber.Move(Waypoint[], Int64)
  fullName: Winpeak.Client.Scene.IWinPeakSubscriber.Move(Winpeak.Client.Scene.Waypoint[], System.Int64)
  nameWithType.vb: IWinPeakSubscriber.Move(Waypoint(), Int64)
  fullName.vb: Winpeak.Client.Scene.IWinPeakSubscriber.Move(Winpeak.Client.Scene.Waypoint(), System.Int64)
  name.vb: Move(Waypoint(), Int64)
  spec.csharp:
  - uid: Winpeak.Client.Scene.IWinPeakSubscriber.Move(Winpeak.Client.Scene.Waypoint[],System.Int64)
    name: Move
    nameWithType: IWinPeakSubscriber.Move
    fullName: Winpeak.Client.Scene.IWinPeakSubscriber.Move
  - name: (
    nameWithType: (
    fullName: (
  - uid: Winpeak.Client.Scene.Waypoint
    name: Waypoint
    nameWithType: Waypoint
    fullName: Winpeak.Client.Scene.Waypoint
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Winpeak.Client.Scene.IWinPeakSubscriber.Move(Winpeak.Client.Scene.Waypoint[],System.Int64)
    name: Move
    nameWithType: IWinPeakSubscriber.Move
    fullName: Winpeak.Client.Scene.IWinPeakSubscriber.Move
  - name: (
    nameWithType: (
    fullName: (
  - uid: Winpeak.Client.Scene.Waypoint
    name: Waypoint
    nameWithType: Waypoint
    fullName: Winpeak.Client.Scene.Waypoint
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Winpeak.Client.Scene.WinPeakNetworkObject.AddWaypoints*
  commentId: Overload:Winpeak.Client.Scene.WinPeakNetworkObject.AddWaypoints
  name: AddWaypoints
  nameWithType: WinPeakNetworkObject.AddWaypoints
  fullName: Winpeak.Client.Scene.WinPeakNetworkObject.AddWaypoints
- uid: System.Collections.Generic.IEnumerable{Winpeak.Client.Scene.Waypoint}
  commentId: T:System.Collections.Generic.IEnumerable{Winpeak.Client.Scene.Waypoint}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<Waypoint>
  nameWithType: IEnumerable<Waypoint>
  fullName: System.Collections.Generic.IEnumerable<Winpeak.Client.Scene.Waypoint>
  nameWithType.vb: IEnumerable(Of Waypoint)
  fullName.vb: System.Collections.Generic.IEnumerable(Of Winpeak.Client.Scene.Waypoint)
  name.vb: IEnumerable(Of Waypoint)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Winpeak.Client.Scene.Waypoint
    name: Waypoint
    nameWithType: Waypoint
    fullName: Winpeak.Client.Scene.Waypoint
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Winpeak.Client.Scene.Waypoint
    name: Waypoint
    nameWithType: Waypoint
    fullName: Winpeak.Client.Scene.Waypoint
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Winpeak.Client.Scene.WinPeakNetworkObject.Init*
  commentId: Overload:Winpeak.Client.Scene.WinPeakNetworkObject.Init
  name: Init
  nameWithType: WinPeakNetworkObject.Init
  fullName: Winpeak.Client.Scene.WinPeakNetworkObject.Init
- uid: ServerConnectionStatusController
  isExternal: true
  name: ServerConnectionStatusController
  nameWithType: ServerConnectionStatusController
  fullName: ServerConnectionStatusController
- uid: Winpeak.Client.Scene.WinPeakNetworkObject.UsedNetwork*
  commentId: Overload:Winpeak.Client.Scene.WinPeakNetworkObject.UsedNetwork
  name: UsedNetwork
  nameWithType: WinPeakNetworkObject.UsedNetwork
  fullName: Winpeak.Client.Scene.WinPeakNetworkObject.UsedNetwork
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
