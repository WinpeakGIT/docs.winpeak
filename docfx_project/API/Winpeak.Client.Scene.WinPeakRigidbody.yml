### YamlMime:ManagedReference
items:
- uid: Winpeak.Client.Scene.WinPeakRigidbody
  commentId: T:Winpeak.Client.Scene.WinPeakRigidbody
  id: WinPeakRigidbody
  parent: Winpeak.Client.Scene
  children:
  - Winpeak.Client.Scene.WinPeakRigidbody.AddLocalWaypoints(System.Collections.Generic.List{Waypoint})
  - Winpeak.Client.Scene.WinPeakRigidbody.Clear
  - Winpeak.Client.Scene.WinPeakRigidbody.ColliderParams
  - Winpeak.Client.Scene.WinPeakRigidbody.Fence
  - Winpeak.Client.Scene.WinPeakRigidbody.Init(ServerConnectionStatusController)
  - Winpeak.Client.Scene.WinPeakRigidbody.InitializeFromConfig(JToken)
  - Winpeak.Client.Scene.WinPeakRigidbody.Move(System.Collections.Generic.List{Waypoint},System.Int64)
  - Winpeak.Client.Scene.WinPeakRigidbody.Positions
  - Winpeak.Client.Scene.WinPeakRigidbody.Reset
  - Winpeak.Client.Scene.WinPeakRigidbody.Speed
  - Winpeak.Client.Scene.WinPeakRigidbody.StatusControllerInited
  - Winpeak.Client.Scene.WinPeakRigidbody.UsedNetwork
  - Winpeak.Client.Scene.WinPeakRigidbody.Waypoints
  langs:
  - csharp
  - vb
  name: WinPeakRigidbody
  nameWithType: WinPeakRigidbody
  fullName: Winpeak.Client.Scene.WinPeakRigidbody
  type: Class
  source:
    id: WinPeakRigidbody
    path: ''
    startLine: 1474
  assemblies:
  - cs.temp.dll
  namespace: Winpeak.Client.Scene
  syntax:
    content: 'public class WinPeakRigidbody : MonoBehaviour'
    content.vb: >-
      Public Class WinPeakRigidbody
          Inherits MonoBehaviour
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Winpeak.Client.Scene.WinPeakRigidbody.Waypoints
  commentId: P:Winpeak.Client.Scene.WinPeakRigidbody.Waypoints
  id: Waypoints
  parent: Winpeak.Client.Scene.WinPeakRigidbody
  langs:
  - csharp
  - vb
  name: Waypoints
  nameWithType: WinPeakRigidbody.Waypoints
  fullName: Winpeak.Client.Scene.WinPeakRigidbody.Waypoints
  type: Property
  source:
    id: Waypoints
    path: ''
    startLine: 1502
  assemblies:
  - cs.temp.dll
  namespace: Winpeak.Client.Scene
  syntax:
    content: public List<Waypoint> Waypoints { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.List{Waypoint}
    content.vb: Public Property Waypoints As List(Of Waypoint)
  overload: Winpeak.Client.Scene.WinPeakRigidbody.Waypoints*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Winpeak.Client.Scene.WinPeakRigidbody.StatusControllerInited
  commentId: F:Winpeak.Client.Scene.WinPeakRigidbody.StatusControllerInited
  id: StatusControllerInited
  parent: Winpeak.Client.Scene.WinPeakRigidbody
  langs:
  - csharp
  - vb
  name: StatusControllerInited
  nameWithType: WinPeakRigidbody.StatusControllerInited
  fullName: Winpeak.Client.Scene.WinPeakRigidbody.StatusControllerInited
  type: Field
  source:
    id: StatusControllerInited
    path: ''
    startLine: 1530
  assemblies:
  - cs.temp.dll
  namespace: Winpeak.Client.Scene
  syntax:
    content: public bool StatusControllerInited
    return:
      type: System.Boolean
    content.vb: Public StatusControllerInited As Boolean
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Winpeak.Client.Scene.WinPeakRigidbody.Init(ServerConnectionStatusController)
  commentId: M:Winpeak.Client.Scene.WinPeakRigidbody.Init(ServerConnectionStatusController)
  id: Init(ServerConnectionStatusController)
  parent: Winpeak.Client.Scene.WinPeakRigidbody
  langs:
  - csharp
  - vb
  name: Init(ServerConnectionStatusController)
  nameWithType: WinPeakRigidbody.Init(ServerConnectionStatusController)
  fullName: Winpeak.Client.Scene.WinPeakRigidbody.Init(ServerConnectionStatusController)
  type: Method
  source:
    id: Init
    path: ''
    startLine: 1614
  assemblies:
  - cs.temp.dll
  namespace: Winpeak.Client.Scene
  summary: "\nInit scene object, get server connection status to handle movements\n"
  example: []
  syntax:
    content: public void Init(ServerConnectionStatusController statusController)
    parameters:
    - id: statusController
      type: ServerConnectionStatusController
      description: ''
    content.vb: Public Sub Init(statusController As ServerConnectionStatusController)
  overload: Winpeak.Client.Scene.WinPeakRigidbody.Init*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Winpeak.Client.Scene.WinPeakRigidbody.InitializeFromConfig(JToken)
  commentId: M:Winpeak.Client.Scene.WinPeakRigidbody.InitializeFromConfig(JToken)
  id: InitializeFromConfig(JToken)
  parent: Winpeak.Client.Scene.WinPeakRigidbody
  langs:
  - csharp
  - vb
  name: InitializeFromConfig(JToken)
  nameWithType: WinPeakRigidbody.InitializeFromConfig(JToken)
  fullName: Winpeak.Client.Scene.WinPeakRigidbody.InitializeFromConfig(JToken)
  type: Method
  source:
    id: InitializeFromConfig
    path: ''
    startLine: 1637
  assemblies:
  - cs.temp.dll
  namespace: Winpeak.Client.Scene
  summary: "\nCurrently unused initializing from config\n"
  example: []
  syntax:
    content: public void InitializeFromConfig(JToken data)
    parameters:
    - id: data
      type: JToken
      description: ''
    content.vb: Public Sub InitializeFromConfig(data As JToken)
  overload: Winpeak.Client.Scene.WinPeakRigidbody.InitializeFromConfig*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Winpeak.Client.Scene.WinPeakRigidbody.Positions
  commentId: P:Winpeak.Client.Scene.WinPeakRigidbody.Positions
  id: Positions
  parent: Winpeak.Client.Scene.WinPeakRigidbody
  langs:
  - csharp
  - vb
  name: Positions
  nameWithType: WinPeakRigidbody.Positions
  fullName: Winpeak.Client.Scene.WinPeakRigidbody.Positions
  type: Property
  source:
    id: Positions
    path: ''
    startLine: 1654
  assemblies:
  - cs.temp.dll
  namespace: Winpeak.Client.Scene
  syntax:
    content: public float[] Positions { get; }
    parameters: []
    return:
      type: System.Single[]
    content.vb: Public ReadOnly Property Positions As Single()
  overload: Winpeak.Client.Scene.WinPeakRigidbody.Positions*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Winpeak.Client.Scene.WinPeakRigidbody.ColliderParams
  commentId: P:Winpeak.Client.Scene.WinPeakRigidbody.ColliderParams
  id: ColliderParams
  parent: Winpeak.Client.Scene.WinPeakRigidbody
  langs:
  - csharp
  - vb
  name: ColliderParams
  nameWithType: WinPeakRigidbody.ColliderParams
  fullName: Winpeak.Client.Scene.WinPeakRigidbody.ColliderParams
  type: Property
  source:
    id: ColliderParams
    path: ''
    startLine: 1656
  assemblies:
  - cs.temp.dll
  namespace: Winpeak.Client.Scene
  syntax:
    content: public float[] ColliderParams { get; }
    parameters: []
    return:
      type: System.Single[]
    content.vb: Public ReadOnly Property ColliderParams As Single()
  overload: Winpeak.Client.Scene.WinPeakRigidbody.ColliderParams*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Winpeak.Client.Scene.WinPeakRigidbody.Speed
  commentId: P:Winpeak.Client.Scene.WinPeakRigidbody.Speed
  id: Speed
  parent: Winpeak.Client.Scene.WinPeakRigidbody
  langs:
  - csharp
  - vb
  name: Speed
  nameWithType: WinPeakRigidbody.Speed
  fullName: Winpeak.Client.Scene.WinPeakRigidbody.Speed
  type: Property
  source:
    id: Speed
    path: ''
    startLine: 1658
  assemblies:
  - cs.temp.dll
  namespace: Winpeak.Client.Scene
  syntax:
    content: public float Speed { get; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public ReadOnly Property Speed As Single
  overload: Winpeak.Client.Scene.WinPeakRigidbody.Speed*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Winpeak.Client.Scene.WinPeakRigidbody.Fence
  commentId: P:Winpeak.Client.Scene.WinPeakRigidbody.Fence
  id: Fence
  parent: Winpeak.Client.Scene.WinPeakRigidbody
  langs:
  - csharp
  - vb
  name: Fence
  nameWithType: WinPeakRigidbody.Fence
  fullName: Winpeak.Client.Scene.WinPeakRigidbody.Fence
  type: Property
  source:
    id: Fence
    path: ''
    startLine: 1660
  assemblies:
  - cs.temp.dll
  namespace: Winpeak.Client.Scene
  syntax:
    content: public float[] Fence { get; }
    parameters: []
    return:
      type: System.Single[]
    content.vb: Public ReadOnly Property Fence As Single()
  overload: Winpeak.Client.Scene.WinPeakRigidbody.Fence*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Winpeak.Client.Scene.WinPeakRigidbody.AddLocalWaypoints(System.Collections.Generic.List{Waypoint})
  commentId: M:Winpeak.Client.Scene.WinPeakRigidbody.AddLocalWaypoints(System.Collections.Generic.List{Waypoint})
  id: AddLocalWaypoints(System.Collections.Generic.List{Waypoint})
  parent: Winpeak.Client.Scene.WinPeakRigidbody
  langs:
  - csharp
  - vb
  name: AddLocalWaypoints(List<Waypoint>)
  nameWithType: WinPeakRigidbody.AddLocalWaypoints(List<Waypoint>)
  fullName: Winpeak.Client.Scene.WinPeakRigidbody.AddLocalWaypoints(System.Collections.Generic.List<Waypoint>)
  type: Method
  source:
    id: AddLocalWaypoints
    path: ''
    startLine: 1686
  assemblies:
  - cs.temp.dll
  namespace: Winpeak.Client.Scene
  summary: "\nAdd local client waypoints(from scene object controller) or Restore behavior from file\n"
  example: []
  syntax:
    content: public void AddLocalWaypoints(List<Waypoint> newWaypoints)
    parameters:
    - id: newWaypoints
      type: System.Collections.Generic.List{Waypoint}
      description: ''
    content.vb: Public Sub AddLocalWaypoints(newWaypoints As List(Of Waypoint))
  overload: Winpeak.Client.Scene.WinPeakRigidbody.AddLocalWaypoints*
  nameWithType.vb: WinPeakRigidbody.AddLocalWaypoints(List(Of Waypoint))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Winpeak.Client.Scene.WinPeakRigidbody.AddLocalWaypoints(System.Collections.Generic.List(Of Waypoint))
  name.vb: AddLocalWaypoints(List(Of Waypoint))
- uid: Winpeak.Client.Scene.WinPeakRigidbody.Move(System.Collections.Generic.List{Waypoint},System.Int64)
  commentId: M:Winpeak.Client.Scene.WinPeakRigidbody.Move(System.Collections.Generic.List{Waypoint},System.Int64)
  id: Move(System.Collections.Generic.List{Waypoint},System.Int64)
  parent: Winpeak.Client.Scene.WinPeakRigidbody
  langs:
  - csharp
  - vb
  name: Move(List<Waypoint>, Int64)
  nameWithType: WinPeakRigidbody.Move(List<Waypoint>, Int64)
  fullName: Winpeak.Client.Scene.WinPeakRigidbody.Move(System.Collections.Generic.List<Waypoint>, System.Int64)
  type: Method
  source:
    id: Move
    path: ''
    startLine: 1699
  assemblies:
  - cs.temp.dll
  namespace: Winpeak.Client.Scene
  summary: "\nMove object relative on waypoints\n"
  example: []
  syntax:
    content: public void Move(List<Waypoint> waypoints, long moveCount)
    parameters:
    - id: waypoints
      type: System.Collections.Generic.List{Waypoint}
      description: ''
    - id: moveCount
      type: System.Int64
      description: ''
    content.vb: Public Sub Move(waypoints As List(Of Waypoint), moveCount As Long)
  overload: Winpeak.Client.Scene.WinPeakRigidbody.Move*
  nameWithType.vb: WinPeakRigidbody.Move(List(Of Waypoint), Int64)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Winpeak.Client.Scene.WinPeakRigidbody.Move(System.Collections.Generic.List(Of Waypoint), System.Int64)
  name.vb: Move(List(Of Waypoint), Int64)
- uid: Winpeak.Client.Scene.WinPeakRigidbody.Reset
  commentId: M:Winpeak.Client.Scene.WinPeakRigidbody.Reset
  id: Reset
  parent: Winpeak.Client.Scene.WinPeakRigidbody
  langs:
  - csharp
  - vb
  name: Reset()
  nameWithType: WinPeakRigidbody.Reset()
  fullName: Winpeak.Client.Scene.WinPeakRigidbody.Reset()
  type: Method
  source:
    id: Reset
    path: ''
    startLine: 1727
  assemblies:
  - cs.temp.dll
  namespace: Winpeak.Client.Scene
  syntax:
    content: public void Reset()
    content.vb: Public Sub Reset
  overload: Winpeak.Client.Scene.WinPeakRigidbody.Reset*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Winpeak.Client.Scene.WinPeakRigidbody.UsedNetwork
  commentId: P:Winpeak.Client.Scene.WinPeakRigidbody.UsedNetwork
  id: UsedNetwork
  parent: Winpeak.Client.Scene.WinPeakRigidbody
  langs:
  - csharp
  - vb
  name: UsedNetwork
  nameWithType: WinPeakRigidbody.UsedNetwork
  fullName: Winpeak.Client.Scene.WinPeakRigidbody.UsedNetwork
  type: Property
  source:
    id: UsedNetwork
    path: ''
    startLine: 1920
  assemblies:
  - cs.temp.dll
  namespace: Winpeak.Client.Scene
  syntax:
    content: public bool UsedNetwork { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property UsedNetwork As Boolean
  overload: Winpeak.Client.Scene.WinPeakRigidbody.UsedNetwork*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Winpeak.Client.Scene.WinPeakRigidbody.Clear
  commentId: M:Winpeak.Client.Scene.WinPeakRigidbody.Clear
  id: Clear
  parent: Winpeak.Client.Scene.WinPeakRigidbody
  langs:
  - csharp
  - vb
  name: Clear()
  nameWithType: WinPeakRigidbody.Clear()
  fullName: Winpeak.Client.Scene.WinPeakRigidbody.Clear()
  type: Method
  source:
    id: Clear
    path: ''
    startLine: 1976
  assemblies:
  - cs.temp.dll
  namespace: Winpeak.Client.Scene
  summary: "\nClear subscribed object from previous game\n"
  example: []
  syntax:
    content: public void Clear()
    content.vb: Public Sub Clear
  overload: Winpeak.Client.Scene.WinPeakRigidbody.Clear*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Winpeak.Client.Scene
  commentId: N:Winpeak.Client.Scene
  name: Winpeak.Client.Scene
  nameWithType: Winpeak.Client.Scene
  fullName: Winpeak.Client.Scene
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Winpeak.Client.Scene.WinPeakRigidbody.Waypoints*
  commentId: Overload:Winpeak.Client.Scene.WinPeakRigidbody.Waypoints
  name: Waypoints
  nameWithType: WinPeakRigidbody.Waypoints
  fullName: Winpeak.Client.Scene.WinPeakRigidbody.Waypoints
- uid: System.Collections.Generic.List{Waypoint}
  commentId: T:System.Collections.Generic.List{Waypoint}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<Waypoint>
  nameWithType: List<Waypoint>
  fullName: System.Collections.Generic.List<Waypoint>
  nameWithType.vb: List(Of Waypoint)
  fullName.vb: System.Collections.Generic.List(Of Waypoint)
  name.vb: List(Of Waypoint)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Waypoint
    name: Waypoint
    nameWithType: Waypoint
    fullName: Waypoint
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Waypoint
    name: Waypoint
    nameWithType: Waypoint
    fullName: Waypoint
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Winpeak.Client.Scene.WinPeakRigidbody.Init*
  commentId: Overload:Winpeak.Client.Scene.WinPeakRigidbody.Init
  name: Init
  nameWithType: WinPeakRigidbody.Init
  fullName: Winpeak.Client.Scene.WinPeakRigidbody.Init
- uid: ServerConnectionStatusController
  isExternal: true
  name: ServerConnectionStatusController
  nameWithType: ServerConnectionStatusController
  fullName: ServerConnectionStatusController
- uid: Winpeak.Client.Scene.WinPeakRigidbody.InitializeFromConfig*
  commentId: Overload:Winpeak.Client.Scene.WinPeakRigidbody.InitializeFromConfig
  name: InitializeFromConfig
  nameWithType: WinPeakRigidbody.InitializeFromConfig
  fullName: Winpeak.Client.Scene.WinPeakRigidbody.InitializeFromConfig
- uid: JToken
  isExternal: true
  name: JToken
  nameWithType: JToken
  fullName: JToken
- uid: Winpeak.Client.Scene.WinPeakRigidbody.Positions*
  commentId: Overload:Winpeak.Client.Scene.WinPeakRigidbody.Positions
  name: Positions
  nameWithType: WinPeakRigidbody.Positions
  fullName: Winpeak.Client.Scene.WinPeakRigidbody.Positions
- uid: System.Single[]
  isExternal: true
  name: Single[]
  nameWithType: Single[]
  fullName: System.Single[]
  nameWithType.vb: Single()
  fullName.vb: System.Single()
  name.vb: Single()
  spec.csharp:
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Winpeak.Client.Scene.WinPeakRigidbody.ColliderParams*
  commentId: Overload:Winpeak.Client.Scene.WinPeakRigidbody.ColliderParams
  name: ColliderParams
  nameWithType: WinPeakRigidbody.ColliderParams
  fullName: Winpeak.Client.Scene.WinPeakRigidbody.ColliderParams
- uid: Winpeak.Client.Scene.WinPeakRigidbody.Speed*
  commentId: Overload:Winpeak.Client.Scene.WinPeakRigidbody.Speed
  name: Speed
  nameWithType: WinPeakRigidbody.Speed
  fullName: Winpeak.Client.Scene.WinPeakRigidbody.Speed
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: Winpeak.Client.Scene.WinPeakRigidbody.Fence*
  commentId: Overload:Winpeak.Client.Scene.WinPeakRigidbody.Fence
  name: Fence
  nameWithType: WinPeakRigidbody.Fence
  fullName: Winpeak.Client.Scene.WinPeakRigidbody.Fence
- uid: Winpeak.Client.Scene.WinPeakRigidbody.AddLocalWaypoints*
  commentId: Overload:Winpeak.Client.Scene.WinPeakRigidbody.AddLocalWaypoints
  name: AddLocalWaypoints
  nameWithType: WinPeakRigidbody.AddLocalWaypoints
  fullName: Winpeak.Client.Scene.WinPeakRigidbody.AddLocalWaypoints
- uid: Winpeak.Client.Scene.WinPeakRigidbody.Move*
  commentId: Overload:Winpeak.Client.Scene.WinPeakRigidbody.Move
  name: Move
  nameWithType: WinPeakRigidbody.Move
  fullName: Winpeak.Client.Scene.WinPeakRigidbody.Move
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: Winpeak.Client.Scene.WinPeakRigidbody.Reset*
  commentId: Overload:Winpeak.Client.Scene.WinPeakRigidbody.Reset
  name: Reset
  nameWithType: WinPeakRigidbody.Reset
  fullName: Winpeak.Client.Scene.WinPeakRigidbody.Reset
- uid: Winpeak.Client.Scene.WinPeakRigidbody.UsedNetwork*
  commentId: Overload:Winpeak.Client.Scene.WinPeakRigidbody.UsedNetwork
  name: UsedNetwork
  nameWithType: WinPeakRigidbody.UsedNetwork
  fullName: Winpeak.Client.Scene.WinPeakRigidbody.UsedNetwork
- uid: Winpeak.Client.Scene.WinPeakRigidbody.Clear*
  commentId: Overload:Winpeak.Client.Scene.WinPeakRigidbody.Clear
  name: Clear
  nameWithType: WinPeakRigidbody.Clear
  fullName: Winpeak.Client.Scene.WinPeakRigidbody.Clear
