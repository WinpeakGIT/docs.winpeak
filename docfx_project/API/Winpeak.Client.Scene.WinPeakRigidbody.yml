### YamlMime:ManagedReference
items:
- uid: Winpeak.Client.Scene.WinPeakRigidbody
  commentId: T:Winpeak.Client.Scene.WinPeakRigidbody
  id: WinPeakRigidbody
  parent: Winpeak.Client.Scene
  children:
  - Winpeak.Client.Scene.WinPeakRigidbody.AddLocalWaypoints(System.Collections.Generic.List{Waypoint})
  - Winpeak.Client.Scene.WinPeakRigidbody.AnotherMeothd
  - Winpeak.Client.Scene.WinPeakRigidbody.Clear
  - Winpeak.Client.Scene.WinPeakRigidbody.ColliderParams
  - Winpeak.Client.Scene.WinPeakRigidbody.CustomParams
  - Winpeak.Client.Scene.WinPeakRigidbody.Fence
  - Winpeak.Client.Scene.WinPeakRigidbody.Init(ServerConnectionStatusController)
  - Winpeak.Client.Scene.WinPeakRigidbody.InitParamsByConfig(JToken,System.Single,System.Int32,System.Single,System.Single[],System.Single[],System.Int32,System.Single[],System.Single[],System.Boolean,System.Single,System.Collections.Generic.Dictionary{System.String,System.Int32})
  - Winpeak.Client.Scene.WinPeakRigidbody.Move(System.Collections.Generic.List{Waypoint},System.Int64)
  - Winpeak.Client.Scene.WinPeakRigidbody.Positions
  - Winpeak.Client.Scene.WinPeakRigidbody.Reset
  - Winpeak.Client.Scene.WinPeakRigidbody.SetEnable(System.Boolean)
  - Winpeak.Client.Scene.WinPeakRigidbody.Speed
  - Winpeak.Client.Scene.WinPeakRigidbody.StatusControllerInited
  - Winpeak.Client.Scene.WinPeakRigidbody.UpdateParamsByConfig(JToken,GetConfigRequestEvent.ObjectsData)
  - Winpeak.Client.Scene.WinPeakRigidbody.UsedNetwork
  - Winpeak.Client.Scene.WinPeakRigidbody.Waypoints
  langs:
  - csharp
  - vb
  name: WinPeakRigidbody
  nameWithType: WinPeakRigidbody
  fullName: Winpeak.Client.Scene.WinPeakRigidbody
  type: Class
  source:
    id: WinPeakRigidbody
    path: ''
    startLine: 6413
  assemblies:
  - cs.temp.dll
  namespace: Winpeak.Client.Scene
  syntax:
    content: 'public class WinPeakRigidbody : MonoBehaviour'
    content.vb: >-
      Public Class WinPeakRigidbody
          Inherits MonoBehaviour
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Winpeak.Client.Scene.WinPeakRigidbody.StatusControllerInited
  commentId: F:Winpeak.Client.Scene.WinPeakRigidbody.StatusControllerInited
  id: StatusControllerInited
  parent: Winpeak.Client.Scene.WinPeakRigidbody
  langs:
  - csharp
  - vb
  name: StatusControllerInited
  nameWithType: WinPeakRigidbody.StatusControllerInited
  fullName: Winpeak.Client.Scene.WinPeakRigidbody.StatusControllerInited
  type: Field
  source:
    id: StatusControllerInited
    path: ''
    startLine: 6445
  assemblies:
  - cs.temp.dll
  namespace: Winpeak.Client.Scene
  syntax:
    content: public bool StatusControllerInited
    return:
      type: System.Boolean
    content.vb: Public StatusControllerInited As Boolean
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Winpeak.Client.Scene.WinPeakRigidbody.Waypoints
  commentId: P:Winpeak.Client.Scene.WinPeakRigidbody.Waypoints
  id: Waypoints
  parent: Winpeak.Client.Scene.WinPeakRigidbody
  langs:
  - csharp
  - vb
  name: Waypoints
  nameWithType: WinPeakRigidbody.Waypoints
  fullName: Winpeak.Client.Scene.WinPeakRigidbody.Waypoints
  type: Property
  source:
    id: Waypoints
    path: ''
    startLine: 6447
  assemblies:
  - cs.temp.dll
  namespace: Winpeak.Client.Scene
  syntax:
    content: public List<Waypoint> Waypoints { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.List{Waypoint}
    content.vb: Public Property Waypoints As List(Of Waypoint)
  overload: Winpeak.Client.Scene.WinPeakRigidbody.Waypoints*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Winpeak.Client.Scene.WinPeakRigidbody.AnotherMeothd
  commentId: M:Winpeak.Client.Scene.WinPeakRigidbody.AnotherMeothd
  id: AnotherMeothd
  parent: Winpeak.Client.Scene.WinPeakRigidbody
  langs:
  - csharp
  - vb
  name: AnotherMeothd()
  nameWithType: WinPeakRigidbody.AnotherMeothd()
  fullName: Winpeak.Client.Scene.WinPeakRigidbody.AnotherMeothd()
  type: Method
  source:
    id: AnotherMeothd
    path: ''
    startLine: 6487
  assemblies:
  - cs.temp.dll
  namespace: Winpeak.Client.Scene
  syntax:
    content: public void AnotherMeothd()
    content.vb: Public Sub AnotherMeothd
  overload: Winpeak.Client.Scene.WinPeakRigidbody.AnotherMeothd*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Winpeak.Client.Scene.WinPeakRigidbody.CustomParams
  commentId: P:Winpeak.Client.Scene.WinPeakRigidbody.CustomParams
  id: CustomParams
  parent: Winpeak.Client.Scene.WinPeakRigidbody
  langs:
  - csharp
  - vb
  name: CustomParams
  nameWithType: WinPeakRigidbody.CustomParams
  fullName: Winpeak.Client.Scene.WinPeakRigidbody.CustomParams
  type: Property
  source:
    id: CustomParams
    path: ''
    startLine: 6489
  assemblies:
  - cs.temp.dll
  namespace: Winpeak.Client.Scene
  syntax:
    content: public Dictionary<string, object> CustomParams { get; }
    parameters: []
    return:
      type: System.Collections.Generic.Dictionary{System.String,System.Object}
    content.vb: Public ReadOnly Property CustomParams As Dictionary(Of String, Object)
  overload: Winpeak.Client.Scene.WinPeakRigidbody.CustomParams*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Winpeak.Client.Scene.WinPeakRigidbody.Init(ServerConnectionStatusController)
  commentId: M:Winpeak.Client.Scene.WinPeakRigidbody.Init(ServerConnectionStatusController)
  id: Init(ServerConnectionStatusController)
  parent: Winpeak.Client.Scene.WinPeakRigidbody
  langs:
  - csharp
  - vb
  name: Init(ServerConnectionStatusController)
  nameWithType: WinPeakRigidbody.Init(ServerConnectionStatusController)
  fullName: Winpeak.Client.Scene.WinPeakRigidbody.Init(ServerConnectionStatusController)
  type: Method
  source:
    id: Init
    path: ''
    startLine: 6588
  assemblies:
  - cs.temp.dll
  namespace: Winpeak.Client.Scene
  summary: "\nInit scene object, get server connection status to handle movements\n"
  example: []
  syntax:
    content: public void Init(ServerConnectionStatusController statusController)
    parameters:
    - id: statusController
      type: ServerConnectionStatusController
      description: ''
    content.vb: Public Sub Init(statusController As ServerConnectionStatusController)
  overload: Winpeak.Client.Scene.WinPeakRigidbody.Init*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Winpeak.Client.Scene.WinPeakRigidbody.InitParamsByConfig(JToken,System.Single,System.Int32,System.Single,System.Single[],System.Single[],System.Int32,System.Single[],System.Single[],System.Boolean,System.Single,System.Collections.Generic.Dictionary{System.String,System.Int32})
  commentId: M:Winpeak.Client.Scene.WinPeakRigidbody.InitParamsByConfig(JToken,System.Single,System.Int32,System.Single,System.Single[],System.Single[],System.Int32,System.Single[],System.Single[],System.Boolean,System.Single,System.Collections.Generic.Dictionary{System.String,System.Int32})
  id: InitParamsByConfig(JToken,System.Single,System.Int32,System.Single,System.Single[],System.Single[],System.Int32,System.Single[],System.Single[],System.Boolean,System.Single,System.Collections.Generic.Dictionary{System.String,System.Int32})
  parent: Winpeak.Client.Scene.WinPeakRigidbody
  langs:
  - csharp
  - vb
  name: InitParamsByConfig(JToken, Single, Int32, Single, Single[], Single[], Int32, Single[], Single[], Boolean, Single, Dictionary<String, Int32>)
  nameWithType: WinPeakRigidbody.InitParamsByConfig(JToken, Single, Int32, Single, Single[], Single[], Int32, Single[], Single[], Boolean, Single, Dictionary<String, Int32>)
  fullName: Winpeak.Client.Scene.WinPeakRigidbody.InitParamsByConfig(JToken, System.Single, System.Int32, System.Single, System.Single[], System.Single[], System.Int32, System.Single[], System.Single[], System.Boolean, System.Single, System.Collections.Generic.Dictionary<System.String, System.Int32>)
  type: Method
  source:
    id: InitParamsByConfig
    path: ''
    startLine: 6607
  assemblies:
  - cs.temp.dll
  namespace: Winpeak.Client.Scene
  syntax:
    content: public void InitParamsByConfig(JToken rawData, float rotation, int physicsType, float health, float[] pos, float[] velocity, int colliderType, float[] colliderParams, float[] fence, bool destructible, float speed, Dictionary<string, int> scores)
    parameters:
    - id: rawData
      type: JToken
    - id: rotation
      type: System.Single
    - id: physicsType
      type: System.Int32
    - id: health
      type: System.Single
    - id: pos
      type: System.Single[]
    - id: velocity
      type: System.Single[]
    - id: colliderType
      type: System.Int32
    - id: colliderParams
      type: System.Single[]
    - id: fence
      type: System.Single[]
    - id: destructible
      type: System.Boolean
    - id: speed
      type: System.Single
    - id: scores
      type: System.Collections.Generic.Dictionary{System.String,System.Int32}
    content.vb: Public Sub InitParamsByConfig(rawData As JToken, rotation As Single, physicsType As Integer, health As Single, pos As Single(), velocity As Single(), colliderType As Integer, colliderParams As Single(), fence As Single(), destructible As Boolean, speed As Single, scores As Dictionary(Of String, Integer))
  overload: Winpeak.Client.Scene.WinPeakRigidbody.InitParamsByConfig*
  nameWithType.vb: WinPeakRigidbody.InitParamsByConfig(JToken, Single, Int32, Single, Single(), Single(), Int32, Single(), Single(), Boolean, Single, Dictionary(Of String, Int32))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Winpeak.Client.Scene.WinPeakRigidbody.InitParamsByConfig(JToken, System.Single, System.Int32, System.Single, System.Single(), System.Single(), System.Int32, System.Single(), System.Single(), System.Boolean, System.Single, System.Collections.Generic.Dictionary(Of System.String, System.Int32))
  name.vb: InitParamsByConfig(JToken, Single, Int32, Single, Single(), Single(), Int32, Single(), Single(), Boolean, Single, Dictionary(Of String, Int32))
- uid: Winpeak.Client.Scene.WinPeakRigidbody.UpdateParamsByConfig(JToken,GetConfigRequestEvent.ObjectsData)
  commentId: M:Winpeak.Client.Scene.WinPeakRigidbody.UpdateParamsByConfig(JToken,GetConfigRequestEvent.ObjectsData)
  id: UpdateParamsByConfig(JToken,GetConfigRequestEvent.ObjectsData)
  parent: Winpeak.Client.Scene.WinPeakRigidbody
  langs:
  - csharp
  - vb
  name: UpdateParamsByConfig(JToken, GetConfigRequestEvent.ObjectsData)
  nameWithType: WinPeakRigidbody.UpdateParamsByConfig(JToken, GetConfigRequestEvent.ObjectsData)
  fullName: Winpeak.Client.Scene.WinPeakRigidbody.UpdateParamsByConfig(JToken, GetConfigRequestEvent.ObjectsData)
  type: Method
  source:
    id: UpdateParamsByConfig
    path: ''
    startLine: 6615
  assemblies:
  - cs.temp.dll
  namespace: Winpeak.Client.Scene
  syntax:
    content: public void UpdateParamsByConfig(JToken rawData, GetConfigRequestEvent.ObjectsData data)
    parameters:
    - id: rawData
      type: JToken
    - id: data
      type: GetConfigRequestEvent.ObjectsData
    content.vb: Public Sub UpdateParamsByConfig(rawData As JToken, data As GetConfigRequestEvent.ObjectsData)
  overload: Winpeak.Client.Scene.WinPeakRigidbody.UpdateParamsByConfig*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Winpeak.Client.Scene.WinPeakRigidbody.Positions
  commentId: P:Winpeak.Client.Scene.WinPeakRigidbody.Positions
  id: Positions
  parent: Winpeak.Client.Scene.WinPeakRigidbody
  langs:
  - csharp
  - vb
  name: Positions
  nameWithType: WinPeakRigidbody.Positions
  fullName: Winpeak.Client.Scene.WinPeakRigidbody.Positions
  type: Property
  source:
    id: Positions
    path: ''
    startLine: 6707
  assemblies:
  - cs.temp.dll
  namespace: Winpeak.Client.Scene
  syntax:
    content: public float[] Positions { get; }
    parameters: []
    return:
      type: System.Single[]
    content.vb: Public ReadOnly Property Positions As Single()
  overload: Winpeak.Client.Scene.WinPeakRigidbody.Positions*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Winpeak.Client.Scene.WinPeakRigidbody.ColliderParams
  commentId: P:Winpeak.Client.Scene.WinPeakRigidbody.ColliderParams
  id: ColliderParams
  parent: Winpeak.Client.Scene.WinPeakRigidbody
  langs:
  - csharp
  - vb
  name: ColliderParams
  nameWithType: WinPeakRigidbody.ColliderParams
  fullName: Winpeak.Client.Scene.WinPeakRigidbody.ColliderParams
  type: Property
  source:
    id: ColliderParams
    path: ''
    startLine: 6709
  assemblies:
  - cs.temp.dll
  namespace: Winpeak.Client.Scene
  syntax:
    content: public float[] ColliderParams { get; }
    parameters: []
    return:
      type: System.Single[]
    content.vb: Public ReadOnly Property ColliderParams As Single()
  overload: Winpeak.Client.Scene.WinPeakRigidbody.ColliderParams*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Winpeak.Client.Scene.WinPeakRigidbody.Speed
  commentId: P:Winpeak.Client.Scene.WinPeakRigidbody.Speed
  id: Speed
  parent: Winpeak.Client.Scene.WinPeakRigidbody
  langs:
  - csharp
  - vb
  name: Speed
  nameWithType: WinPeakRigidbody.Speed
  fullName: Winpeak.Client.Scene.WinPeakRigidbody.Speed
  type: Property
  source:
    id: Speed
    path: ''
    startLine: 6711
  assemblies:
  - cs.temp.dll
  namespace: Winpeak.Client.Scene
  syntax:
    content: public float Speed { get; set; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public Property Speed As Single
  overload: Winpeak.Client.Scene.WinPeakRigidbody.Speed*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Winpeak.Client.Scene.WinPeakRigidbody.Fence
  commentId: P:Winpeak.Client.Scene.WinPeakRigidbody.Fence
  id: Fence
  parent: Winpeak.Client.Scene.WinPeakRigidbody
  langs:
  - csharp
  - vb
  name: Fence
  nameWithType: WinPeakRigidbody.Fence
  fullName: Winpeak.Client.Scene.WinPeakRigidbody.Fence
  type: Property
  source:
    id: Fence
    path: ''
    startLine: 6716
  assemblies:
  - cs.temp.dll
  namespace: Winpeak.Client.Scene
  syntax:
    content: public float[] Fence { get; }
    parameters: []
    return:
      type: System.Single[]
    content.vb: Public ReadOnly Property Fence As Single()
  overload: Winpeak.Client.Scene.WinPeakRigidbody.Fence*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Winpeak.Client.Scene.WinPeakRigidbody.AddLocalWaypoints(System.Collections.Generic.List{Waypoint})
  commentId: M:Winpeak.Client.Scene.WinPeakRigidbody.AddLocalWaypoints(System.Collections.Generic.List{Waypoint})
  id: AddLocalWaypoints(System.Collections.Generic.List{Waypoint})
  parent: Winpeak.Client.Scene.WinPeakRigidbody
  langs:
  - csharp
  - vb
  name: AddLocalWaypoints(List<Waypoint>)
  nameWithType: WinPeakRigidbody.AddLocalWaypoints(List<Waypoint>)
  fullName: Winpeak.Client.Scene.WinPeakRigidbody.AddLocalWaypoints(System.Collections.Generic.List<Waypoint>)
  type: Method
  source:
    id: AddLocalWaypoints
    path: ''
    startLine: 6742
  assemblies:
  - cs.temp.dll
  namespace: Winpeak.Client.Scene
  summary: "\nAdd local client waypoints(from scene object controller) or Restore behavior from file\n"
  example: []
  syntax:
    content: public void AddLocalWaypoints(List<Waypoint> newWaypoints)
    parameters:
    - id: newWaypoints
      type: System.Collections.Generic.List{Waypoint}
      description: ''
    content.vb: Public Sub AddLocalWaypoints(newWaypoints As List(Of Waypoint))
  overload: Winpeak.Client.Scene.WinPeakRigidbody.AddLocalWaypoints*
  nameWithType.vb: WinPeakRigidbody.AddLocalWaypoints(List(Of Waypoint))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Winpeak.Client.Scene.WinPeakRigidbody.AddLocalWaypoints(System.Collections.Generic.List(Of Waypoint))
  name.vb: AddLocalWaypoints(List(Of Waypoint))
- uid: Winpeak.Client.Scene.WinPeakRigidbody.Move(System.Collections.Generic.List{Waypoint},System.Int64)
  commentId: M:Winpeak.Client.Scene.WinPeakRigidbody.Move(System.Collections.Generic.List{Waypoint},System.Int64)
  id: Move(System.Collections.Generic.List{Waypoint},System.Int64)
  parent: Winpeak.Client.Scene.WinPeakRigidbody
  langs:
  - csharp
  - vb
  name: Move(List<Waypoint>, Int64)
  nameWithType: WinPeakRigidbody.Move(List<Waypoint>, Int64)
  fullName: Winpeak.Client.Scene.WinPeakRigidbody.Move(System.Collections.Generic.List<Waypoint>, System.Int64)
  type: Method
  source:
    id: Move
    path: ''
    startLine: 6755
  assemblies:
  - cs.temp.dll
  namespace: Winpeak.Client.Scene
  summary: "\nMove object relative on waypoints\n"
  example: []
  syntax:
    content: public void Move(List<Waypoint> waypoints, long moveCount)
    parameters:
    - id: waypoints
      type: System.Collections.Generic.List{Waypoint}
      description: ''
    - id: moveCount
      type: System.Int64
      description: ''
    content.vb: Public Sub Move(waypoints As List(Of Waypoint), moveCount As Long)
  overload: Winpeak.Client.Scene.WinPeakRigidbody.Move*
  nameWithType.vb: WinPeakRigidbody.Move(List(Of Waypoint), Int64)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Winpeak.Client.Scene.WinPeakRigidbody.Move(System.Collections.Generic.List(Of Waypoint), System.Int64)
  name.vb: Move(List(Of Waypoint), Int64)
- uid: Winpeak.Client.Scene.WinPeakRigidbody.Reset
  commentId: M:Winpeak.Client.Scene.WinPeakRigidbody.Reset
  id: Reset
  parent: Winpeak.Client.Scene.WinPeakRigidbody
  langs:
  - csharp
  - vb
  name: Reset()
  nameWithType: WinPeakRigidbody.Reset()
  fullName: Winpeak.Client.Scene.WinPeakRigidbody.Reset()
  type: Method
  source:
    id: Reset
    path: ''
    startLine: 6799
  assemblies:
  - cs.temp.dll
  namespace: Winpeak.Client.Scene
  syntax:
    content: public void Reset()
    content.vb: Public Sub Reset
  overload: Winpeak.Client.Scene.WinPeakRigidbody.Reset*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Winpeak.Client.Scene.WinPeakRigidbody.SetEnable(System.Boolean)
  commentId: M:Winpeak.Client.Scene.WinPeakRigidbody.SetEnable(System.Boolean)
  id: SetEnable(System.Boolean)
  parent: Winpeak.Client.Scene.WinPeakRigidbody
  langs:
  - csharp
  - vb
  name: SetEnable(Boolean)
  nameWithType: WinPeakRigidbody.SetEnable(Boolean)
  fullName: Winpeak.Client.Scene.WinPeakRigidbody.SetEnable(System.Boolean)
  type: Method
  source:
    id: SetEnable
    path: ''
    startLine: 6986
  assemblies:
  - cs.temp.dll
  namespace: Winpeak.Client.Scene
  syntax:
    content: public void SetEnable(bool _enable)
    parameters:
    - id: _enable
      type: System.Boolean
    content.vb: Public Sub SetEnable(_enable As Boolean)
  overload: Winpeak.Client.Scene.WinPeakRigidbody.SetEnable*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Winpeak.Client.Scene.WinPeakRigidbody.UsedNetwork
  commentId: P:Winpeak.Client.Scene.WinPeakRigidbody.UsedNetwork
  id: UsedNetwork
  parent: Winpeak.Client.Scene.WinPeakRigidbody
  langs:
  - csharp
  - vb
  name: UsedNetwork
  nameWithType: WinPeakRigidbody.UsedNetwork
  fullName: Winpeak.Client.Scene.WinPeakRigidbody.UsedNetwork
  type: Property
  source:
    id: UsedNetwork
    path: ''
    startLine: 7048
  assemblies:
  - cs.temp.dll
  namespace: Winpeak.Client.Scene
  syntax:
    content: public bool UsedNetwork { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property UsedNetwork As Boolean
  overload: Winpeak.Client.Scene.WinPeakRigidbody.UsedNetwork*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Winpeak.Client.Scene.WinPeakRigidbody.Clear
  commentId: M:Winpeak.Client.Scene.WinPeakRigidbody.Clear
  id: Clear
  parent: Winpeak.Client.Scene.WinPeakRigidbody
  langs:
  - csharp
  - vb
  name: Clear()
  nameWithType: WinPeakRigidbody.Clear()
  fullName: Winpeak.Client.Scene.WinPeakRigidbody.Clear()
  type: Method
  source:
    id: Clear
    path: ''
    startLine: 7104
  assemblies:
  - cs.temp.dll
  namespace: Winpeak.Client.Scene
  summary: "\nClear subscribed object from previous game\n"
  example: []
  syntax:
    content: public void Clear()
    content.vb: Public Sub Clear
  overload: Winpeak.Client.Scene.WinPeakRigidbody.Clear*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Winpeak.Client.Scene
  commentId: N:Winpeak.Client.Scene
  name: Winpeak.Client.Scene
  nameWithType: Winpeak.Client.Scene
  fullName: Winpeak.Client.Scene
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Winpeak.Client.Scene.WinPeakRigidbody.Waypoints*
  commentId: Overload:Winpeak.Client.Scene.WinPeakRigidbody.Waypoints
  name: Waypoints
  nameWithType: WinPeakRigidbody.Waypoints
  fullName: Winpeak.Client.Scene.WinPeakRigidbody.Waypoints
- uid: System.Collections.Generic.List{Waypoint}
  commentId: T:System.Collections.Generic.List{Waypoint}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<Waypoint>
  nameWithType: List<Waypoint>
  fullName: System.Collections.Generic.List<Waypoint>
  nameWithType.vb: List(Of Waypoint)
  fullName.vb: System.Collections.Generic.List(Of Waypoint)
  name.vb: List(Of Waypoint)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Waypoint
    name: Waypoint
    nameWithType: Waypoint
    fullName: Waypoint
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Waypoint
    name: Waypoint
    nameWithType: Waypoint
    fullName: Waypoint
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Winpeak.Client.Scene.WinPeakRigidbody.AnotherMeothd*
  commentId: Overload:Winpeak.Client.Scene.WinPeakRigidbody.AnotherMeothd
  name: AnotherMeothd
  nameWithType: WinPeakRigidbody.AnotherMeothd
  fullName: Winpeak.Client.Scene.WinPeakRigidbody.AnotherMeothd
- uid: Winpeak.Client.Scene.WinPeakRigidbody.CustomParams*
  commentId: Overload:Winpeak.Client.Scene.WinPeakRigidbody.CustomParams
  name: CustomParams
  nameWithType: WinPeakRigidbody.CustomParams
  fullName: Winpeak.Client.Scene.WinPeakRigidbody.CustomParams
- uid: System.Collections.Generic.Dictionary{System.String,System.Object}
  commentId: T:System.Collections.Generic.Dictionary{System.String,System.Object}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  name: Dictionary<String, Object>
  nameWithType: Dictionary<String, Object>
  fullName: System.Collections.Generic.Dictionary<System.String, System.Object>
  nameWithType.vb: Dictionary(Of String, Object)
  fullName.vb: System.Collections.Generic.Dictionary(Of System.String, System.Object)
  name.vb: Dictionary(Of String, Object)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary`2
  commentId: T:System.Collections.Generic.Dictionary`2
  isExternal: true
  name: Dictionary<TKey, TValue>
  nameWithType: Dictionary<TKey, TValue>
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>
  nameWithType.vb: Dictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue)
  name.vb: Dictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: Winpeak.Client.Scene.WinPeakRigidbody.Init*
  commentId: Overload:Winpeak.Client.Scene.WinPeakRigidbody.Init
  name: Init
  nameWithType: WinPeakRigidbody.Init
  fullName: Winpeak.Client.Scene.WinPeakRigidbody.Init
- uid: ServerConnectionStatusController
  isExternal: true
  name: ServerConnectionStatusController
  nameWithType: ServerConnectionStatusController
  fullName: ServerConnectionStatusController
- uid: Winpeak.Client.Scene.WinPeakRigidbody.InitParamsByConfig*
  commentId: Overload:Winpeak.Client.Scene.WinPeakRigidbody.InitParamsByConfig
  name: InitParamsByConfig
  nameWithType: WinPeakRigidbody.InitParamsByConfig
  fullName: Winpeak.Client.Scene.WinPeakRigidbody.InitParamsByConfig
- uid: JToken
  isExternal: true
  name: JToken
  nameWithType: JToken
  fullName: JToken
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Single[]
  isExternal: true
  name: Single[]
  nameWithType: Single[]
  fullName: System.Single[]
  nameWithType.vb: Single()
  fullName.vb: System.Single()
  name.vb: Single()
  spec.csharp:
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Collections.Generic.Dictionary{System.String,System.Int32}
  commentId: T:System.Collections.Generic.Dictionary{System.String,System.Int32}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  name: Dictionary<String, Int32>
  nameWithType: Dictionary<String, Int32>
  fullName: System.Collections.Generic.Dictionary<System.String, System.Int32>
  nameWithType.vb: Dictionary(Of String, Int32)
  fullName.vb: System.Collections.Generic.Dictionary(Of System.String, System.Int32)
  name.vb: Dictionary(Of String, Int32)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Winpeak.Client.Scene.WinPeakRigidbody.UpdateParamsByConfig*
  commentId: Overload:Winpeak.Client.Scene.WinPeakRigidbody.UpdateParamsByConfig
  name: UpdateParamsByConfig
  nameWithType: WinPeakRigidbody.UpdateParamsByConfig
  fullName: Winpeak.Client.Scene.WinPeakRigidbody.UpdateParamsByConfig
- uid: GetConfigRequestEvent.ObjectsData
  commentId: '!:GetConfigRequestEvent.ObjectsData'
  isExternal: true
  name: GetConfigRequestEvent.ObjectsData
  nameWithType: GetConfigRequestEvent.ObjectsData
  fullName: GetConfigRequestEvent.ObjectsData
- uid: Winpeak.Client.Scene.WinPeakRigidbody.Positions*
  commentId: Overload:Winpeak.Client.Scene.WinPeakRigidbody.Positions
  name: Positions
  nameWithType: WinPeakRigidbody.Positions
  fullName: Winpeak.Client.Scene.WinPeakRigidbody.Positions
- uid: Winpeak.Client.Scene.WinPeakRigidbody.ColliderParams*
  commentId: Overload:Winpeak.Client.Scene.WinPeakRigidbody.ColliderParams
  name: ColliderParams
  nameWithType: WinPeakRigidbody.ColliderParams
  fullName: Winpeak.Client.Scene.WinPeakRigidbody.ColliderParams
- uid: Winpeak.Client.Scene.WinPeakRigidbody.Speed*
  commentId: Overload:Winpeak.Client.Scene.WinPeakRigidbody.Speed
  name: Speed
  nameWithType: WinPeakRigidbody.Speed
  fullName: Winpeak.Client.Scene.WinPeakRigidbody.Speed
- uid: Winpeak.Client.Scene.WinPeakRigidbody.Fence*
  commentId: Overload:Winpeak.Client.Scene.WinPeakRigidbody.Fence
  name: Fence
  nameWithType: WinPeakRigidbody.Fence
  fullName: Winpeak.Client.Scene.WinPeakRigidbody.Fence
- uid: Winpeak.Client.Scene.WinPeakRigidbody.AddLocalWaypoints*
  commentId: Overload:Winpeak.Client.Scene.WinPeakRigidbody.AddLocalWaypoints
  name: AddLocalWaypoints
  nameWithType: WinPeakRigidbody.AddLocalWaypoints
  fullName: Winpeak.Client.Scene.WinPeakRigidbody.AddLocalWaypoints
- uid: Winpeak.Client.Scene.WinPeakRigidbody.Move*
  commentId: Overload:Winpeak.Client.Scene.WinPeakRigidbody.Move
  name: Move
  nameWithType: WinPeakRigidbody.Move
  fullName: Winpeak.Client.Scene.WinPeakRigidbody.Move
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: Winpeak.Client.Scene.WinPeakRigidbody.Reset*
  commentId: Overload:Winpeak.Client.Scene.WinPeakRigidbody.Reset
  name: Reset
  nameWithType: WinPeakRigidbody.Reset
  fullName: Winpeak.Client.Scene.WinPeakRigidbody.Reset
- uid: Winpeak.Client.Scene.WinPeakRigidbody.SetEnable*
  commentId: Overload:Winpeak.Client.Scene.WinPeakRigidbody.SetEnable
  name: SetEnable
  nameWithType: WinPeakRigidbody.SetEnable
  fullName: Winpeak.Client.Scene.WinPeakRigidbody.SetEnable
- uid: Winpeak.Client.Scene.WinPeakRigidbody.UsedNetwork*
  commentId: Overload:Winpeak.Client.Scene.WinPeakRigidbody.UsedNetwork
  name: UsedNetwork
  nameWithType: WinPeakRigidbody.UsedNetwork
  fullName: Winpeak.Client.Scene.WinPeakRigidbody.UsedNetwork
- uid: Winpeak.Client.Scene.WinPeakRigidbody.Clear*
  commentId: Overload:Winpeak.Client.Scene.WinPeakRigidbody.Clear
  name: Clear
  nameWithType: WinPeakRigidbody.Clear
  fullName: Winpeak.Client.Scene.WinPeakRigidbody.Clear
