### YamlMime:ManagedReference
items:
- uid: Org.BouncyCastle.Crypto.IStreamCalculator
  commentId: T:Org.BouncyCastle.Crypto.IStreamCalculator
  id: IStreamCalculator
  parent: Org.BouncyCastle.Crypto
  children:
  - Org.BouncyCastle.Crypto.IStreamCalculator.GetResult
  - Org.BouncyCastle.Crypto.IStreamCalculator.Stream
  langs:
  - csharp
  - vb
  name: IStreamCalculator
  nameWithType: IStreamCalculator
  fullName: Org.BouncyCastle.Crypto.IStreamCalculator
  type: Interface
  source:
    id: IStreamCalculator
    path: ''
    startLine: 101415
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto
  summary: "\nBase interface for cryptographic operations such as Hashes, MACs, and Signatures which reduce a stream of data\nto a single value.\n"
  example: []
  syntax:
    content: public interface IStreamCalculator
    content.vb: Public Interface IStreamCalculator
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Org.BouncyCastle.Crypto.IStreamCalculator.Stream
  commentId: P:Org.BouncyCastle.Crypto.IStreamCalculator.Stream
  id: Stream
  parent: Org.BouncyCastle.Crypto.IStreamCalculator
  langs:
  - csharp
  - vb
  name: Stream
  nameWithType: IStreamCalculator.Stream
  fullName: Org.BouncyCastle.Crypto.IStreamCalculator.Stream
  type: Property
  source:
    id: Stream
    path: ''
    startLine: 101419
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto
  summary: Return a &quot;sink&quot; stream which only exists to update the implementing object.
  example: []
  syntax:
    content: Stream Stream { get; }
    parameters: []
    return:
      type: Stream
      description: A stream to write to in order to update the implementing object.
    content.vb: ReadOnly Property Stream As Stream
  overload: Org.BouncyCastle.Crypto.IStreamCalculator.Stream*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Org.BouncyCastle.Crypto.IStreamCalculator.GetResult
  commentId: M:Org.BouncyCastle.Crypto.IStreamCalculator.GetResult
  id: GetResult
  parent: Org.BouncyCastle.Crypto.IStreamCalculator
  langs:
  - csharp
  - vb
  name: GetResult()
  nameWithType: IStreamCalculator.GetResult()
  fullName: Org.BouncyCastle.Crypto.IStreamCalculator.GetResult()
  type: Method
  source:
    id: GetResult
    path: ''
    startLine: 101426
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto
  summary: "\nReturn the result of processing the stream. This value is only available once the stream\nhas been closed.\n"
  example: []
  syntax:
    content: object GetResult()
    return:
      type: System.Object
      description: The result of processing the stream.
    content.vb: Function GetResult As Object
  overload: Org.BouncyCastle.Crypto.IStreamCalculator.GetResult*
references:
- uid: Org.BouncyCastle.Crypto
  commentId: N:Org.BouncyCastle.Crypto
  name: Org.BouncyCastle.Crypto
  nameWithType: Org.BouncyCastle.Crypto
  fullName: Org.BouncyCastle.Crypto
- uid: Org.BouncyCastle.Crypto.IStreamCalculator.Stream*
  commentId: Overload:Org.BouncyCastle.Crypto.IStreamCalculator.Stream
  name: Stream
  nameWithType: IStreamCalculator.Stream
  fullName: Org.BouncyCastle.Crypto.IStreamCalculator.Stream
- uid: Stream
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: Stream
- uid: Org.BouncyCastle.Crypto.IStreamCalculator.GetResult*
  commentId: Overload:Org.BouncyCastle.Crypto.IStreamCalculator.GetResult
  name: GetResult
  nameWithType: IStreamCalculator.GetResult
  fullName: Org.BouncyCastle.Crypto.IStreamCalculator.GetResult
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
