### YamlMime:ManagedReference
items:
- uid: Org.BouncyCastle.Crypto.Tls.TlsRsaKeyExchange
  commentId: T:Org.BouncyCastle.Crypto.Tls.TlsRsaKeyExchange
  id: TlsRsaKeyExchange
  parent: Org.BouncyCastle.Crypto.Tls
  children:
  - Org.BouncyCastle.Crypto.Tls.TlsRsaKeyExchange.#ctor(System.Collections.IList)
  - Org.BouncyCastle.Crypto.Tls.TlsRsaKeyExchange.GenerateClientKeyExchange(Stream)
  - Org.BouncyCastle.Crypto.Tls.TlsRsaKeyExchange.GeneratePremasterSecret
  - Org.BouncyCastle.Crypto.Tls.TlsRsaKeyExchange.mPremasterSecret
  - Org.BouncyCastle.Crypto.Tls.TlsRsaKeyExchange.mRsaServerPublicKey
  - Org.BouncyCastle.Crypto.Tls.TlsRsaKeyExchange.mServerCredentials
  - Org.BouncyCastle.Crypto.Tls.TlsRsaKeyExchange.mServerPublicKey
  - Org.BouncyCastle.Crypto.Tls.TlsRsaKeyExchange.ProcessClientCredentials(Org.BouncyCastle.Crypto.Tls.TlsCredentials)
  - Org.BouncyCastle.Crypto.Tls.TlsRsaKeyExchange.ProcessClientKeyExchange(Stream)
  - Org.BouncyCastle.Crypto.Tls.TlsRsaKeyExchange.ProcessServerCertificate(Org.BouncyCastle.Crypto.Tls.Certificate)
  - Org.BouncyCastle.Crypto.Tls.TlsRsaKeyExchange.ProcessServerCredentials(Org.BouncyCastle.Crypto.Tls.TlsCredentials)
  - Org.BouncyCastle.Crypto.Tls.TlsRsaKeyExchange.SkipServerCredentials
  - Org.BouncyCastle.Crypto.Tls.TlsRsaKeyExchange.ValidateCertificateRequest(Org.BouncyCastle.Crypto.Tls.CertificateRequest)
  - Org.BouncyCastle.Crypto.Tls.TlsRsaKeyExchange.ValidateRsaPublicKey(RsaKeyParameters)
  langs:
  - csharp
  - vb
  name: TlsRsaKeyExchange
  nameWithType: TlsRsaKeyExchange
  fullName: Org.BouncyCastle.Crypto.Tls.TlsRsaKeyExchange
  type: Class
  source:
    id: TlsRsaKeyExchange
    path: ''
    startLine: 73873
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Tls
  summary: (D)TLS and SSLv3 RSA key exchange.
  example: []
  syntax:
    content: 'public class TlsRsaKeyExchange : AbstractTlsKeyExchange, TlsKeyExchange'
    content.vb: >-
      Public Class TlsRsaKeyExchange
          Inherits AbstractTlsKeyExchange
          Implements TlsKeyExchange
  inheritance:
  - System.Object
  - Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange
  implements:
  - Org.BouncyCastle.Crypto.Tls.TlsKeyExchange
  inheritedMembers:
  - Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange.mKeyExchange
  - Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange.mSupportedSignatureAlgorithms
  - Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange.mContext
  - Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange.ParseSignature(Stream)
  - Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange.Init(Org.BouncyCastle.Crypto.Tls.TlsContext)
  - Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange.RequiresServerKeyExchange
  - Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange.GenerateServerKeyExchange
  - Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange.SkipServerKeyExchange
  - Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange.ProcessServerKeyExchange(Stream)
  - Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange.SkipClientCredentials
  - Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange.ProcessClientCertificate(Org.BouncyCastle.Crypto.Tls.Certificate)
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ToString
  - System.Object.ReferenceEquals(System.Object,System.Object)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Org.BouncyCastle.Crypto.Tls.TlsRsaKeyExchange.mServerPublicKey
  commentId: F:Org.BouncyCastle.Crypto.Tls.TlsRsaKeyExchange.mServerPublicKey
  id: mServerPublicKey
  parent: Org.BouncyCastle.Crypto.Tls.TlsRsaKeyExchange
  langs:
  - csharp
  - vb
  name: mServerPublicKey
  nameWithType: TlsRsaKeyExchange.mServerPublicKey
  fullName: Org.BouncyCastle.Crypto.Tls.TlsRsaKeyExchange.mServerPublicKey
  type: Field
  source:
    id: mServerPublicKey
    path: ''
    startLine: 73876
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Tls
  syntax:
    content: protected AsymmetricKeyParameter mServerPublicKey
    return:
      type: Org.BouncyCastle.Crypto.AsymmetricKeyParameter
    content.vb: Protected mServerPublicKey As AsymmetricKeyParameter
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Org.BouncyCastle.Crypto.Tls.TlsRsaKeyExchange.mRsaServerPublicKey
  commentId: F:Org.BouncyCastle.Crypto.Tls.TlsRsaKeyExchange.mRsaServerPublicKey
  id: mRsaServerPublicKey
  parent: Org.BouncyCastle.Crypto.Tls.TlsRsaKeyExchange
  langs:
  - csharp
  - vb
  name: mRsaServerPublicKey
  nameWithType: TlsRsaKeyExchange.mRsaServerPublicKey
  fullName: Org.BouncyCastle.Crypto.Tls.TlsRsaKeyExchange.mRsaServerPublicKey
  type: Field
  source:
    id: mRsaServerPublicKey
    path: ''
    startLine: 73878
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Tls
  syntax:
    content: protected RsaKeyParameters mRsaServerPublicKey
    return:
      type: RsaKeyParameters
    content.vb: Protected mRsaServerPublicKey As RsaKeyParameters
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Org.BouncyCastle.Crypto.Tls.TlsRsaKeyExchange.mServerCredentials
  commentId: F:Org.BouncyCastle.Crypto.Tls.TlsRsaKeyExchange.mServerCredentials
  id: mServerCredentials
  parent: Org.BouncyCastle.Crypto.Tls.TlsRsaKeyExchange
  langs:
  - csharp
  - vb
  name: mServerCredentials
  nameWithType: TlsRsaKeyExchange.mServerCredentials
  fullName: Org.BouncyCastle.Crypto.Tls.TlsRsaKeyExchange.mServerCredentials
  type: Field
  source:
    id: mServerCredentials
    path: ''
    startLine: 73880
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Tls
  syntax:
    content: protected TlsEncryptionCredentials mServerCredentials
    return:
      type: Org.BouncyCastle.Crypto.Tls.TlsEncryptionCredentials
    content.vb: Protected mServerCredentials As TlsEncryptionCredentials
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Org.BouncyCastle.Crypto.Tls.TlsRsaKeyExchange.mPremasterSecret
  commentId: F:Org.BouncyCastle.Crypto.Tls.TlsRsaKeyExchange.mPremasterSecret
  id: mPremasterSecret
  parent: Org.BouncyCastle.Crypto.Tls.TlsRsaKeyExchange
  langs:
  - csharp
  - vb
  name: mPremasterSecret
  nameWithType: TlsRsaKeyExchange.mPremasterSecret
  fullName: Org.BouncyCastle.Crypto.Tls.TlsRsaKeyExchange.mPremasterSecret
  type: Field
  source:
    id: mPremasterSecret
    path: ''
    startLine: 73882
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Tls
  syntax:
    content: protected byte[] mPremasterSecret
    return:
      type: System.Byte[]
    content.vb: Protected mPremasterSecret As Byte()
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Org.BouncyCastle.Crypto.Tls.TlsRsaKeyExchange.#ctor(System.Collections.IList)
  commentId: M:Org.BouncyCastle.Crypto.Tls.TlsRsaKeyExchange.#ctor(System.Collections.IList)
  id: '#ctor(System.Collections.IList)'
  parent: Org.BouncyCastle.Crypto.Tls.TlsRsaKeyExchange
  langs:
  - csharp
  - vb
  name: TlsRsaKeyExchange(IList)
  nameWithType: TlsRsaKeyExchange.TlsRsaKeyExchange(IList)
  fullName: Org.BouncyCastle.Crypto.Tls.TlsRsaKeyExchange.TlsRsaKeyExchange(System.Collections.IList)
  type: Constructor
  source:
    id: .ctor
    path: ''
    startLine: 73884
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Tls
  syntax:
    content: public TlsRsaKeyExchange(IList supportedSignatureAlgorithms)
    parameters:
    - id: supportedSignatureAlgorithms
      type: System.Collections.IList
    content.vb: Public Sub New(supportedSignatureAlgorithms As IList)
  overload: Org.BouncyCastle.Crypto.Tls.TlsRsaKeyExchange.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Org.BouncyCastle.Crypto.Tls.TlsRsaKeyExchange.SkipServerCredentials
  commentId: M:Org.BouncyCastle.Crypto.Tls.TlsRsaKeyExchange.SkipServerCredentials
  id: SkipServerCredentials
  parent: Org.BouncyCastle.Crypto.Tls.TlsRsaKeyExchange
  langs:
  - csharp
  - vb
  name: SkipServerCredentials()
  nameWithType: TlsRsaKeyExchange.SkipServerCredentials()
  fullName: Org.BouncyCastle.Crypto.Tls.TlsRsaKeyExchange.SkipServerCredentials()
  type: Method
  source:
    id: SkipServerCredentials
    path: ''
    startLine: 73889
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Tls
  syntax:
    content: public override void SkipServerCredentials()
    content.vb: Public Overrides Sub SkipServerCredentials
  overridden: Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange.SkipServerCredentials
  overload: Org.BouncyCastle.Crypto.Tls.TlsRsaKeyExchange.SkipServerCredentials*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Org.BouncyCastle.Crypto.Tls.TlsRsaKeyExchange.ProcessServerCredentials(Org.BouncyCastle.Crypto.Tls.TlsCredentials)
  commentId: M:Org.BouncyCastle.Crypto.Tls.TlsRsaKeyExchange.ProcessServerCredentials(Org.BouncyCastle.Crypto.Tls.TlsCredentials)
  id: ProcessServerCredentials(Org.BouncyCastle.Crypto.Tls.TlsCredentials)
  parent: Org.BouncyCastle.Crypto.Tls.TlsRsaKeyExchange
  langs:
  - csharp
  - vb
  name: ProcessServerCredentials(TlsCredentials)
  nameWithType: TlsRsaKeyExchange.ProcessServerCredentials(TlsCredentials)
  fullName: Org.BouncyCastle.Crypto.Tls.TlsRsaKeyExchange.ProcessServerCredentials(Org.BouncyCastle.Crypto.Tls.TlsCredentials)
  type: Method
  source:
    id: ProcessServerCredentials
    path: ''
    startLine: 73894
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Tls
  syntax:
    content: public override void ProcessServerCredentials(TlsCredentials serverCredentials)
    parameters:
    - id: serverCredentials
      type: Org.BouncyCastle.Crypto.Tls.TlsCredentials
    content.vb: Public Overrides Sub ProcessServerCredentials(serverCredentials As TlsCredentials)
  overridden: Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange.ProcessServerCredentials(Org.BouncyCastle.Crypto.Tls.TlsCredentials)
  overload: Org.BouncyCastle.Crypto.Tls.TlsRsaKeyExchange.ProcessServerCredentials*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Org.BouncyCastle.Crypto.Tls.TlsRsaKeyExchange.ProcessServerCertificate(Org.BouncyCastle.Crypto.Tls.Certificate)
  commentId: M:Org.BouncyCastle.Crypto.Tls.TlsRsaKeyExchange.ProcessServerCertificate(Org.BouncyCastle.Crypto.Tls.Certificate)
  id: ProcessServerCertificate(Org.BouncyCastle.Crypto.Tls.Certificate)
  parent: Org.BouncyCastle.Crypto.Tls.TlsRsaKeyExchange
  langs:
  - csharp
  - vb
  name: ProcessServerCertificate(Certificate)
  nameWithType: TlsRsaKeyExchange.ProcessServerCertificate(Certificate)
  fullName: Org.BouncyCastle.Crypto.Tls.TlsRsaKeyExchange.ProcessServerCertificate(Org.BouncyCastle.Crypto.Tls.Certificate)
  type: Method
  source:
    id: ProcessServerCertificate
    path: ''
    startLine: 73904
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Tls
  syntax:
    content: public override void ProcessServerCertificate(Certificate serverCertificate)
    parameters:
    - id: serverCertificate
      type: Org.BouncyCastle.Crypto.Tls.Certificate
    content.vb: Public Overrides Sub ProcessServerCertificate(serverCertificate As Certificate)
  overridden: Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange.ProcessServerCertificate(Org.BouncyCastle.Crypto.Tls.Certificate)
  overload: Org.BouncyCastle.Crypto.Tls.TlsRsaKeyExchange.ProcessServerCertificate*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Org.BouncyCastle.Crypto.Tls.TlsRsaKeyExchange.ValidateCertificateRequest(Org.BouncyCastle.Crypto.Tls.CertificateRequest)
  commentId: M:Org.BouncyCastle.Crypto.Tls.TlsRsaKeyExchange.ValidateCertificateRequest(Org.BouncyCastle.Crypto.Tls.CertificateRequest)
  id: ValidateCertificateRequest(Org.BouncyCastle.Crypto.Tls.CertificateRequest)
  parent: Org.BouncyCastle.Crypto.Tls.TlsRsaKeyExchange
  langs:
  - csharp
  - vb
  name: ValidateCertificateRequest(CertificateRequest)
  nameWithType: TlsRsaKeyExchange.ValidateCertificateRequest(CertificateRequest)
  fullName: Org.BouncyCastle.Crypto.Tls.TlsRsaKeyExchange.ValidateCertificateRequest(Org.BouncyCastle.Crypto.Tls.CertificateRequest)
  type: Method
  source:
    id: ValidateCertificateRequest
    path: ''
    startLine: 73932
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Tls
  syntax:
    content: public override void ValidateCertificateRequest(CertificateRequest certificateRequest)
    parameters:
    - id: certificateRequest
      type: Org.BouncyCastle.Crypto.Tls.CertificateRequest
    content.vb: Public Overrides Sub ValidateCertificateRequest(certificateRequest As CertificateRequest)
  overridden: Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange.ValidateCertificateRequest(Org.BouncyCastle.Crypto.Tls.CertificateRequest)
  overload: Org.BouncyCastle.Crypto.Tls.TlsRsaKeyExchange.ValidateCertificateRequest*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Org.BouncyCastle.Crypto.Tls.TlsRsaKeyExchange.ProcessClientCredentials(Org.BouncyCastle.Crypto.Tls.TlsCredentials)
  commentId: M:Org.BouncyCastle.Crypto.Tls.TlsRsaKeyExchange.ProcessClientCredentials(Org.BouncyCastle.Crypto.Tls.TlsCredentials)
  id: ProcessClientCredentials(Org.BouncyCastle.Crypto.Tls.TlsCredentials)
  parent: Org.BouncyCastle.Crypto.Tls.TlsRsaKeyExchange
  langs:
  - csharp
  - vb
  name: ProcessClientCredentials(TlsCredentials)
  nameWithType: TlsRsaKeyExchange.ProcessClientCredentials(TlsCredentials)
  fullName: Org.BouncyCastle.Crypto.Tls.TlsRsaKeyExchange.ProcessClientCredentials(Org.BouncyCastle.Crypto.Tls.TlsCredentials)
  type: Method
  source:
    id: ProcessClientCredentials
    path: ''
    startLine: 73949
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Tls
  syntax:
    content: public override void ProcessClientCredentials(TlsCredentials clientCredentials)
    parameters:
    - id: clientCredentials
      type: Org.BouncyCastle.Crypto.Tls.TlsCredentials
    content.vb: Public Overrides Sub ProcessClientCredentials(clientCredentials As TlsCredentials)
  overridden: Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange.ProcessClientCredentials(Org.BouncyCastle.Crypto.Tls.TlsCredentials)
  overload: Org.BouncyCastle.Crypto.Tls.TlsRsaKeyExchange.ProcessClientCredentials*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Org.BouncyCastle.Crypto.Tls.TlsRsaKeyExchange.GenerateClientKeyExchange(Stream)
  commentId: M:Org.BouncyCastle.Crypto.Tls.TlsRsaKeyExchange.GenerateClientKeyExchange(Stream)
  id: GenerateClientKeyExchange(Stream)
  parent: Org.BouncyCastle.Crypto.Tls.TlsRsaKeyExchange
  langs:
  - csharp
  - vb
  name: GenerateClientKeyExchange(Stream)
  nameWithType: TlsRsaKeyExchange.GenerateClientKeyExchange(Stream)
  fullName: Org.BouncyCastle.Crypto.Tls.TlsRsaKeyExchange.GenerateClientKeyExchange(Stream)
  type: Method
  source:
    id: GenerateClientKeyExchange
    path: ''
    startLine: 73955
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Tls
  syntax:
    content: public override void GenerateClientKeyExchange(Stream output)
    parameters:
    - id: output
      type: Stream
    content.vb: Public Overrides Sub GenerateClientKeyExchange(output As Stream)
  overridden: Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange.GenerateClientKeyExchange(Stream)
  overload: Org.BouncyCastle.Crypto.Tls.TlsRsaKeyExchange.GenerateClientKeyExchange*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Org.BouncyCastle.Crypto.Tls.TlsRsaKeyExchange.ProcessClientKeyExchange(Stream)
  commentId: M:Org.BouncyCastle.Crypto.Tls.TlsRsaKeyExchange.ProcessClientKeyExchange(Stream)
  id: ProcessClientKeyExchange(Stream)
  parent: Org.BouncyCastle.Crypto.Tls.TlsRsaKeyExchange
  langs:
  - csharp
  - vb
  name: ProcessClientKeyExchange(Stream)
  nameWithType: TlsRsaKeyExchange.ProcessClientKeyExchange(Stream)
  fullName: Org.BouncyCastle.Crypto.Tls.TlsRsaKeyExchange.ProcessClientKeyExchange(Stream)
  type: Method
  source:
    id: ProcessClientKeyExchange
    path: ''
    startLine: 73960
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Tls
  syntax:
    content: public override void ProcessClientKeyExchange(Stream input)
    parameters:
    - id: input
      type: Stream
    content.vb: Public Overrides Sub ProcessClientKeyExchange(input As Stream)
  overridden: Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange.ProcessClientKeyExchange(Stream)
  overload: Org.BouncyCastle.Crypto.Tls.TlsRsaKeyExchange.ProcessClientKeyExchange*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Org.BouncyCastle.Crypto.Tls.TlsRsaKeyExchange.GeneratePremasterSecret
  commentId: M:Org.BouncyCastle.Crypto.Tls.TlsRsaKeyExchange.GeneratePremasterSecret
  id: GeneratePremasterSecret
  parent: Org.BouncyCastle.Crypto.Tls.TlsRsaKeyExchange
  langs:
  - csharp
  - vb
  name: GeneratePremasterSecret()
  nameWithType: TlsRsaKeyExchange.GeneratePremasterSecret()
  fullName: Org.BouncyCastle.Crypto.Tls.TlsRsaKeyExchange.GeneratePremasterSecret()
  type: Method
  source:
    id: GeneratePremasterSecret
    path: ''
    startLine: 73976
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Tls
  syntax:
    content: public override byte[] GeneratePremasterSecret()
    return:
      type: System.Byte[]
    content.vb: Public Overrides Function GeneratePremasterSecret As Byte()
  overridden: Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange.GeneratePremasterSecret
  overload: Org.BouncyCastle.Crypto.Tls.TlsRsaKeyExchange.GeneratePremasterSecret*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Org.BouncyCastle.Crypto.Tls.TlsRsaKeyExchange.ValidateRsaPublicKey(RsaKeyParameters)
  commentId: M:Org.BouncyCastle.Crypto.Tls.TlsRsaKeyExchange.ValidateRsaPublicKey(RsaKeyParameters)
  id: ValidateRsaPublicKey(RsaKeyParameters)
  parent: Org.BouncyCastle.Crypto.Tls.TlsRsaKeyExchange
  langs:
  - csharp
  - vb
  name: ValidateRsaPublicKey(RsaKeyParameters)
  nameWithType: TlsRsaKeyExchange.ValidateRsaPublicKey(RsaKeyParameters)
  fullName: Org.BouncyCastle.Crypto.Tls.TlsRsaKeyExchange.ValidateRsaPublicKey(RsaKeyParameters)
  type: Method
  source:
    id: ValidateRsaPublicKey
    path: ''
    startLine: 73986
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Tls
  syntax:
    content: protected virtual RsaKeyParameters ValidateRsaPublicKey(RsaKeyParameters key)
    parameters:
    - id: key
      type: RsaKeyParameters
    return:
      type: RsaKeyParameters
    content.vb: Protected Overridable Function ValidateRsaPublicKey(key As RsaKeyParameters) As RsaKeyParameters
  overload: Org.BouncyCastle.Crypto.Tls.TlsRsaKeyExchange.ValidateRsaPublicKey*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
references:
- uid: Org.BouncyCastle.Crypto.Tls
  commentId: N:Org.BouncyCastle.Crypto.Tls
  name: Org.BouncyCastle.Crypto.Tls
  nameWithType: Org.BouncyCastle.Crypto.Tls
  fullName: Org.BouncyCastle.Crypto.Tls
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange
  commentId: T:Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange
  parent: Org.BouncyCastle.Crypto.Tls
  name: AbstractTlsKeyExchange
  nameWithType: AbstractTlsKeyExchange
  fullName: Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange
- uid: Org.BouncyCastle.Crypto.Tls.TlsKeyExchange
  commentId: T:Org.BouncyCastle.Crypto.Tls.TlsKeyExchange
  parent: Org.BouncyCastle.Crypto.Tls
  name: TlsKeyExchange
  nameWithType: TlsKeyExchange
  fullName: Org.BouncyCastle.Crypto.Tls.TlsKeyExchange
- uid: Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange.mKeyExchange
  commentId: F:Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange.mKeyExchange
  parent: Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange
  name: mKeyExchange
  nameWithType: AbstractTlsKeyExchange.mKeyExchange
  fullName: Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange.mKeyExchange
- uid: Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange.mSupportedSignatureAlgorithms
  commentId: F:Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange.mSupportedSignatureAlgorithms
  parent: Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange
  name: mSupportedSignatureAlgorithms
  nameWithType: AbstractTlsKeyExchange.mSupportedSignatureAlgorithms
  fullName: Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange.mSupportedSignatureAlgorithms
- uid: Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange.mContext
  commentId: F:Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange.mContext
  parent: Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange
  name: mContext
  nameWithType: AbstractTlsKeyExchange.mContext
  fullName: Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange.mContext
- uid: Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange.ParseSignature(Stream)
  commentId: M:Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange.ParseSignature(Stream)
  parent: Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange
  isExternal: true
  name: ParseSignature(Stream)
  nameWithType: AbstractTlsKeyExchange.ParseSignature(Stream)
  fullName: Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange.ParseSignature(Stream)
  spec.csharp:
  - uid: Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange.ParseSignature(Stream)
    name: ParseSignature
    nameWithType: AbstractTlsKeyExchange.ParseSignature
    fullName: Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange.ParseSignature
  - name: (
    nameWithType: (
    fullName: (
  - uid: Stream
    name: Stream
    nameWithType: Stream
    fullName: Stream
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange.ParseSignature(Stream)
    name: ParseSignature
    nameWithType: AbstractTlsKeyExchange.ParseSignature
    fullName: Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange.ParseSignature
  - name: (
    nameWithType: (
    fullName: (
  - uid: Stream
    name: Stream
    nameWithType: Stream
    fullName: Stream
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange.Init(Org.BouncyCastle.Crypto.Tls.TlsContext)
  commentId: M:Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange.Init(Org.BouncyCastle.Crypto.Tls.TlsContext)
  parent: Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange
  name: Init(TlsContext)
  nameWithType: AbstractTlsKeyExchange.Init(TlsContext)
  fullName: Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange.Init(Org.BouncyCastle.Crypto.Tls.TlsContext)
  spec.csharp:
  - uid: Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange.Init(Org.BouncyCastle.Crypto.Tls.TlsContext)
    name: Init
    nameWithType: AbstractTlsKeyExchange.Init
    fullName: Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange.Init
  - name: (
    nameWithType: (
    fullName: (
  - uid: Org.BouncyCastle.Crypto.Tls.TlsContext
    name: TlsContext
    nameWithType: TlsContext
    fullName: Org.BouncyCastle.Crypto.Tls.TlsContext
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange.Init(Org.BouncyCastle.Crypto.Tls.TlsContext)
    name: Init
    nameWithType: AbstractTlsKeyExchange.Init
    fullName: Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange.Init
  - name: (
    nameWithType: (
    fullName: (
  - uid: Org.BouncyCastle.Crypto.Tls.TlsContext
    name: TlsContext
    nameWithType: TlsContext
    fullName: Org.BouncyCastle.Crypto.Tls.TlsContext
  - name: )
    nameWithType: )
    fullName: )
- uid: Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange.RequiresServerKeyExchange
  commentId: P:Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange.RequiresServerKeyExchange
  parent: Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange
  name: RequiresServerKeyExchange
  nameWithType: AbstractTlsKeyExchange.RequiresServerKeyExchange
  fullName: Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange.RequiresServerKeyExchange
- uid: Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange.GenerateServerKeyExchange
  commentId: M:Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange.GenerateServerKeyExchange
  parent: Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange
  name: GenerateServerKeyExchange()
  nameWithType: AbstractTlsKeyExchange.GenerateServerKeyExchange()
  fullName: Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange.GenerateServerKeyExchange()
  spec.csharp:
  - uid: Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange.GenerateServerKeyExchange
    name: GenerateServerKeyExchange
    nameWithType: AbstractTlsKeyExchange.GenerateServerKeyExchange
    fullName: Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange.GenerateServerKeyExchange
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange.GenerateServerKeyExchange
    name: GenerateServerKeyExchange
    nameWithType: AbstractTlsKeyExchange.GenerateServerKeyExchange
    fullName: Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange.GenerateServerKeyExchange
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange.SkipServerKeyExchange
  commentId: M:Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange.SkipServerKeyExchange
  parent: Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange
  name: SkipServerKeyExchange()
  nameWithType: AbstractTlsKeyExchange.SkipServerKeyExchange()
  fullName: Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange.SkipServerKeyExchange()
  spec.csharp:
  - uid: Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange.SkipServerKeyExchange
    name: SkipServerKeyExchange
    nameWithType: AbstractTlsKeyExchange.SkipServerKeyExchange
    fullName: Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange.SkipServerKeyExchange
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange.SkipServerKeyExchange
    name: SkipServerKeyExchange
    nameWithType: AbstractTlsKeyExchange.SkipServerKeyExchange
    fullName: Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange.SkipServerKeyExchange
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange.ProcessServerKeyExchange(Stream)
  commentId: M:Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange.ProcessServerKeyExchange(Stream)
  parent: Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange
  isExternal: true
  name: ProcessServerKeyExchange(Stream)
  nameWithType: AbstractTlsKeyExchange.ProcessServerKeyExchange(Stream)
  fullName: Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange.ProcessServerKeyExchange(Stream)
  spec.csharp:
  - uid: Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange.ProcessServerKeyExchange(Stream)
    name: ProcessServerKeyExchange
    nameWithType: AbstractTlsKeyExchange.ProcessServerKeyExchange
    fullName: Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange.ProcessServerKeyExchange
  - name: (
    nameWithType: (
    fullName: (
  - uid: Stream
    name: Stream
    nameWithType: Stream
    fullName: Stream
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange.ProcessServerKeyExchange(Stream)
    name: ProcessServerKeyExchange
    nameWithType: AbstractTlsKeyExchange.ProcessServerKeyExchange
    fullName: Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange.ProcessServerKeyExchange
  - name: (
    nameWithType: (
    fullName: (
  - uid: Stream
    name: Stream
    nameWithType: Stream
    fullName: Stream
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange.SkipClientCredentials
  commentId: M:Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange.SkipClientCredentials
  parent: Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange
  name: SkipClientCredentials()
  nameWithType: AbstractTlsKeyExchange.SkipClientCredentials()
  fullName: Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange.SkipClientCredentials()
  spec.csharp:
  - uid: Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange.SkipClientCredentials
    name: SkipClientCredentials
    nameWithType: AbstractTlsKeyExchange.SkipClientCredentials
    fullName: Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange.SkipClientCredentials
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange.SkipClientCredentials
    name: SkipClientCredentials
    nameWithType: AbstractTlsKeyExchange.SkipClientCredentials
    fullName: Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange.SkipClientCredentials
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange.ProcessClientCertificate(Org.BouncyCastle.Crypto.Tls.Certificate)
  commentId: M:Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange.ProcessClientCertificate(Org.BouncyCastle.Crypto.Tls.Certificate)
  parent: Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange
  name: ProcessClientCertificate(Certificate)
  nameWithType: AbstractTlsKeyExchange.ProcessClientCertificate(Certificate)
  fullName: Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange.ProcessClientCertificate(Org.BouncyCastle.Crypto.Tls.Certificate)
  spec.csharp:
  - uid: Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange.ProcessClientCertificate(Org.BouncyCastle.Crypto.Tls.Certificate)
    name: ProcessClientCertificate
    nameWithType: AbstractTlsKeyExchange.ProcessClientCertificate
    fullName: Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange.ProcessClientCertificate
  - name: (
    nameWithType: (
    fullName: (
  - uid: Org.BouncyCastle.Crypto.Tls.Certificate
    name: Certificate
    nameWithType: Certificate
    fullName: Org.BouncyCastle.Crypto.Tls.Certificate
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange.ProcessClientCertificate(Org.BouncyCastle.Crypto.Tls.Certificate)
    name: ProcessClientCertificate
    nameWithType: AbstractTlsKeyExchange.ProcessClientCertificate
    fullName: Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange.ProcessClientCertificate
  - name: (
    nameWithType: (
    fullName: (
  - uid: Org.BouncyCastle.Crypto.Tls.Certificate
    name: Certificate
    nameWithType: Certificate
    fullName: Org.BouncyCastle.Crypto.Tls.Certificate
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Org.BouncyCastle.Crypto.AsymmetricKeyParameter
  commentId: T:Org.BouncyCastle.Crypto.AsymmetricKeyParameter
  parent: Org.BouncyCastle.Crypto
  name: AsymmetricKeyParameter
  nameWithType: AsymmetricKeyParameter
  fullName: Org.BouncyCastle.Crypto.AsymmetricKeyParameter
- uid: Org.BouncyCastle.Crypto
  commentId: N:Org.BouncyCastle.Crypto
  name: Org.BouncyCastle.Crypto
  nameWithType: Org.BouncyCastle.Crypto
  fullName: Org.BouncyCastle.Crypto
- uid: RsaKeyParameters
  isExternal: true
  name: RsaKeyParameters
  nameWithType: RsaKeyParameters
  fullName: RsaKeyParameters
- uid: Org.BouncyCastle.Crypto.Tls.TlsEncryptionCredentials
  commentId: T:Org.BouncyCastle.Crypto.Tls.TlsEncryptionCredentials
  parent: Org.BouncyCastle.Crypto.Tls
  name: TlsEncryptionCredentials
  nameWithType: TlsEncryptionCredentials
  fullName: Org.BouncyCastle.Crypto.Tls.TlsEncryptionCredentials
- uid: System.Byte[]
  isExternal: true
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullName.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Org.BouncyCastle.Crypto.Tls.TlsRsaKeyExchange.#ctor*
  commentId: Overload:Org.BouncyCastle.Crypto.Tls.TlsRsaKeyExchange.#ctor
  name: TlsRsaKeyExchange
  nameWithType: TlsRsaKeyExchange.TlsRsaKeyExchange
  fullName: Org.BouncyCastle.Crypto.Tls.TlsRsaKeyExchange.TlsRsaKeyExchange
- uid: System.Collections.IList
  commentId: T:System.Collections.IList
  parent: System.Collections
  isExternal: true
  name: IList
  nameWithType: IList
  fullName: System.Collections.IList
- uid: System.Collections
  commentId: N:System.Collections
  isExternal: true
  name: System.Collections
  nameWithType: System.Collections
  fullName: System.Collections
- uid: Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange.SkipServerCredentials
  commentId: M:Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange.SkipServerCredentials
  parent: Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange
  name: SkipServerCredentials()
  nameWithType: AbstractTlsKeyExchange.SkipServerCredentials()
  fullName: Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange.SkipServerCredentials()
  spec.csharp:
  - uid: Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange.SkipServerCredentials
    name: SkipServerCredentials
    nameWithType: AbstractTlsKeyExchange.SkipServerCredentials
    fullName: Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange.SkipServerCredentials
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange.SkipServerCredentials
    name: SkipServerCredentials
    nameWithType: AbstractTlsKeyExchange.SkipServerCredentials
    fullName: Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange.SkipServerCredentials
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Org.BouncyCastle.Crypto.Tls.TlsRsaKeyExchange.SkipServerCredentials*
  commentId: Overload:Org.BouncyCastle.Crypto.Tls.TlsRsaKeyExchange.SkipServerCredentials
  name: SkipServerCredentials
  nameWithType: TlsRsaKeyExchange.SkipServerCredentials
  fullName: Org.BouncyCastle.Crypto.Tls.TlsRsaKeyExchange.SkipServerCredentials
- uid: Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange.ProcessServerCredentials(Org.BouncyCastle.Crypto.Tls.TlsCredentials)
  commentId: M:Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange.ProcessServerCredentials(Org.BouncyCastle.Crypto.Tls.TlsCredentials)
  parent: Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange
  name: ProcessServerCredentials(TlsCredentials)
  nameWithType: AbstractTlsKeyExchange.ProcessServerCredentials(TlsCredentials)
  fullName: Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange.ProcessServerCredentials(Org.BouncyCastle.Crypto.Tls.TlsCredentials)
  spec.csharp:
  - uid: Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange.ProcessServerCredentials(Org.BouncyCastle.Crypto.Tls.TlsCredentials)
    name: ProcessServerCredentials
    nameWithType: AbstractTlsKeyExchange.ProcessServerCredentials
    fullName: Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange.ProcessServerCredentials
  - name: (
    nameWithType: (
    fullName: (
  - uid: Org.BouncyCastle.Crypto.Tls.TlsCredentials
    name: TlsCredentials
    nameWithType: TlsCredentials
    fullName: Org.BouncyCastle.Crypto.Tls.TlsCredentials
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange.ProcessServerCredentials(Org.BouncyCastle.Crypto.Tls.TlsCredentials)
    name: ProcessServerCredentials
    nameWithType: AbstractTlsKeyExchange.ProcessServerCredentials
    fullName: Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange.ProcessServerCredentials
  - name: (
    nameWithType: (
    fullName: (
  - uid: Org.BouncyCastle.Crypto.Tls.TlsCredentials
    name: TlsCredentials
    nameWithType: TlsCredentials
    fullName: Org.BouncyCastle.Crypto.Tls.TlsCredentials
  - name: )
    nameWithType: )
    fullName: )
- uid: Org.BouncyCastle.Crypto.Tls.TlsRsaKeyExchange.ProcessServerCredentials*
  commentId: Overload:Org.BouncyCastle.Crypto.Tls.TlsRsaKeyExchange.ProcessServerCredentials
  name: ProcessServerCredentials
  nameWithType: TlsRsaKeyExchange.ProcessServerCredentials
  fullName: Org.BouncyCastle.Crypto.Tls.TlsRsaKeyExchange.ProcessServerCredentials
- uid: Org.BouncyCastle.Crypto.Tls.TlsCredentials
  commentId: T:Org.BouncyCastle.Crypto.Tls.TlsCredentials
  parent: Org.BouncyCastle.Crypto.Tls
  name: TlsCredentials
  nameWithType: TlsCredentials
  fullName: Org.BouncyCastle.Crypto.Tls.TlsCredentials
- uid: Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange.ProcessServerCertificate(Org.BouncyCastle.Crypto.Tls.Certificate)
  commentId: M:Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange.ProcessServerCertificate(Org.BouncyCastle.Crypto.Tls.Certificate)
  parent: Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange
  name: ProcessServerCertificate(Certificate)
  nameWithType: AbstractTlsKeyExchange.ProcessServerCertificate(Certificate)
  fullName: Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange.ProcessServerCertificate(Org.BouncyCastle.Crypto.Tls.Certificate)
  spec.csharp:
  - uid: Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange.ProcessServerCertificate(Org.BouncyCastle.Crypto.Tls.Certificate)
    name: ProcessServerCertificate
    nameWithType: AbstractTlsKeyExchange.ProcessServerCertificate
    fullName: Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange.ProcessServerCertificate
  - name: (
    nameWithType: (
    fullName: (
  - uid: Org.BouncyCastle.Crypto.Tls.Certificate
    name: Certificate
    nameWithType: Certificate
    fullName: Org.BouncyCastle.Crypto.Tls.Certificate
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange.ProcessServerCertificate(Org.BouncyCastle.Crypto.Tls.Certificate)
    name: ProcessServerCertificate
    nameWithType: AbstractTlsKeyExchange.ProcessServerCertificate
    fullName: Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange.ProcessServerCertificate
  - name: (
    nameWithType: (
    fullName: (
  - uid: Org.BouncyCastle.Crypto.Tls.Certificate
    name: Certificate
    nameWithType: Certificate
    fullName: Org.BouncyCastle.Crypto.Tls.Certificate
  - name: )
    nameWithType: )
    fullName: )
- uid: Org.BouncyCastle.Crypto.Tls.TlsRsaKeyExchange.ProcessServerCertificate*
  commentId: Overload:Org.BouncyCastle.Crypto.Tls.TlsRsaKeyExchange.ProcessServerCertificate
  name: ProcessServerCertificate
  nameWithType: TlsRsaKeyExchange.ProcessServerCertificate
  fullName: Org.BouncyCastle.Crypto.Tls.TlsRsaKeyExchange.ProcessServerCertificate
- uid: Org.BouncyCastle.Crypto.Tls.Certificate
  commentId: T:Org.BouncyCastle.Crypto.Tls.Certificate
  parent: Org.BouncyCastle.Crypto.Tls
  name: Certificate
  nameWithType: Certificate
  fullName: Org.BouncyCastle.Crypto.Tls.Certificate
- uid: Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange.ValidateCertificateRequest(Org.BouncyCastle.Crypto.Tls.CertificateRequest)
  commentId: M:Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange.ValidateCertificateRequest(Org.BouncyCastle.Crypto.Tls.CertificateRequest)
  parent: Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange
  name: ValidateCertificateRequest(CertificateRequest)
  nameWithType: AbstractTlsKeyExchange.ValidateCertificateRequest(CertificateRequest)
  fullName: Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange.ValidateCertificateRequest(Org.BouncyCastle.Crypto.Tls.CertificateRequest)
  spec.csharp:
  - uid: Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange.ValidateCertificateRequest(Org.BouncyCastle.Crypto.Tls.CertificateRequest)
    name: ValidateCertificateRequest
    nameWithType: AbstractTlsKeyExchange.ValidateCertificateRequest
    fullName: Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange.ValidateCertificateRequest
  - name: (
    nameWithType: (
    fullName: (
  - uid: Org.BouncyCastle.Crypto.Tls.CertificateRequest
    name: CertificateRequest
    nameWithType: CertificateRequest
    fullName: Org.BouncyCastle.Crypto.Tls.CertificateRequest
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange.ValidateCertificateRequest(Org.BouncyCastle.Crypto.Tls.CertificateRequest)
    name: ValidateCertificateRequest
    nameWithType: AbstractTlsKeyExchange.ValidateCertificateRequest
    fullName: Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange.ValidateCertificateRequest
  - name: (
    nameWithType: (
    fullName: (
  - uid: Org.BouncyCastle.Crypto.Tls.CertificateRequest
    name: CertificateRequest
    nameWithType: CertificateRequest
    fullName: Org.BouncyCastle.Crypto.Tls.CertificateRequest
  - name: )
    nameWithType: )
    fullName: )
- uid: Org.BouncyCastle.Crypto.Tls.TlsRsaKeyExchange.ValidateCertificateRequest*
  commentId: Overload:Org.BouncyCastle.Crypto.Tls.TlsRsaKeyExchange.ValidateCertificateRequest
  name: ValidateCertificateRequest
  nameWithType: TlsRsaKeyExchange.ValidateCertificateRequest
  fullName: Org.BouncyCastle.Crypto.Tls.TlsRsaKeyExchange.ValidateCertificateRequest
- uid: Org.BouncyCastle.Crypto.Tls.CertificateRequest
  commentId: T:Org.BouncyCastle.Crypto.Tls.CertificateRequest
  parent: Org.BouncyCastle.Crypto.Tls
  name: CertificateRequest
  nameWithType: CertificateRequest
  fullName: Org.BouncyCastle.Crypto.Tls.CertificateRequest
- uid: Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange.ProcessClientCredentials(Org.BouncyCastle.Crypto.Tls.TlsCredentials)
  commentId: M:Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange.ProcessClientCredentials(Org.BouncyCastle.Crypto.Tls.TlsCredentials)
  parent: Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange
  name: ProcessClientCredentials(TlsCredentials)
  nameWithType: AbstractTlsKeyExchange.ProcessClientCredentials(TlsCredentials)
  fullName: Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange.ProcessClientCredentials(Org.BouncyCastle.Crypto.Tls.TlsCredentials)
  spec.csharp:
  - uid: Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange.ProcessClientCredentials(Org.BouncyCastle.Crypto.Tls.TlsCredentials)
    name: ProcessClientCredentials
    nameWithType: AbstractTlsKeyExchange.ProcessClientCredentials
    fullName: Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange.ProcessClientCredentials
  - name: (
    nameWithType: (
    fullName: (
  - uid: Org.BouncyCastle.Crypto.Tls.TlsCredentials
    name: TlsCredentials
    nameWithType: TlsCredentials
    fullName: Org.BouncyCastle.Crypto.Tls.TlsCredentials
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange.ProcessClientCredentials(Org.BouncyCastle.Crypto.Tls.TlsCredentials)
    name: ProcessClientCredentials
    nameWithType: AbstractTlsKeyExchange.ProcessClientCredentials
    fullName: Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange.ProcessClientCredentials
  - name: (
    nameWithType: (
    fullName: (
  - uid: Org.BouncyCastle.Crypto.Tls.TlsCredentials
    name: TlsCredentials
    nameWithType: TlsCredentials
    fullName: Org.BouncyCastle.Crypto.Tls.TlsCredentials
  - name: )
    nameWithType: )
    fullName: )
- uid: Org.BouncyCastle.Crypto.Tls.TlsRsaKeyExchange.ProcessClientCredentials*
  commentId: Overload:Org.BouncyCastle.Crypto.Tls.TlsRsaKeyExchange.ProcessClientCredentials
  name: ProcessClientCredentials
  nameWithType: TlsRsaKeyExchange.ProcessClientCredentials
  fullName: Org.BouncyCastle.Crypto.Tls.TlsRsaKeyExchange.ProcessClientCredentials
- uid: Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange.GenerateClientKeyExchange(Stream)
  commentId: M:Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange.GenerateClientKeyExchange(Stream)
  parent: Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange
  isExternal: true
  name: GenerateClientKeyExchange(Stream)
  nameWithType: AbstractTlsKeyExchange.GenerateClientKeyExchange(Stream)
  fullName: Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange.GenerateClientKeyExchange(Stream)
  spec.csharp:
  - uid: Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange.GenerateClientKeyExchange(Stream)
    name: GenerateClientKeyExchange
    nameWithType: AbstractTlsKeyExchange.GenerateClientKeyExchange
    fullName: Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange.GenerateClientKeyExchange
  - name: (
    nameWithType: (
    fullName: (
  - uid: Stream
    name: Stream
    nameWithType: Stream
    fullName: Stream
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange.GenerateClientKeyExchange(Stream)
    name: GenerateClientKeyExchange
    nameWithType: AbstractTlsKeyExchange.GenerateClientKeyExchange
    fullName: Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange.GenerateClientKeyExchange
  - name: (
    nameWithType: (
    fullName: (
  - uid: Stream
    name: Stream
    nameWithType: Stream
    fullName: Stream
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Org.BouncyCastle.Crypto.Tls.TlsRsaKeyExchange.GenerateClientKeyExchange*
  commentId: Overload:Org.BouncyCastle.Crypto.Tls.TlsRsaKeyExchange.GenerateClientKeyExchange
  name: GenerateClientKeyExchange
  nameWithType: TlsRsaKeyExchange.GenerateClientKeyExchange
  fullName: Org.BouncyCastle.Crypto.Tls.TlsRsaKeyExchange.GenerateClientKeyExchange
- uid: Stream
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: Stream
- uid: Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange.ProcessClientKeyExchange(Stream)
  commentId: M:Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange.ProcessClientKeyExchange(Stream)
  parent: Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange
  isExternal: true
  name: ProcessClientKeyExchange(Stream)
  nameWithType: AbstractTlsKeyExchange.ProcessClientKeyExchange(Stream)
  fullName: Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange.ProcessClientKeyExchange(Stream)
  spec.csharp:
  - uid: Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange.ProcessClientKeyExchange(Stream)
    name: ProcessClientKeyExchange
    nameWithType: AbstractTlsKeyExchange.ProcessClientKeyExchange
    fullName: Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange.ProcessClientKeyExchange
  - name: (
    nameWithType: (
    fullName: (
  - uid: Stream
    name: Stream
    nameWithType: Stream
    fullName: Stream
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange.ProcessClientKeyExchange(Stream)
    name: ProcessClientKeyExchange
    nameWithType: AbstractTlsKeyExchange.ProcessClientKeyExchange
    fullName: Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange.ProcessClientKeyExchange
  - name: (
    nameWithType: (
    fullName: (
  - uid: Stream
    name: Stream
    nameWithType: Stream
    fullName: Stream
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Org.BouncyCastle.Crypto.Tls.TlsRsaKeyExchange.ProcessClientKeyExchange*
  commentId: Overload:Org.BouncyCastle.Crypto.Tls.TlsRsaKeyExchange.ProcessClientKeyExchange
  name: ProcessClientKeyExchange
  nameWithType: TlsRsaKeyExchange.ProcessClientKeyExchange
  fullName: Org.BouncyCastle.Crypto.Tls.TlsRsaKeyExchange.ProcessClientKeyExchange
- uid: Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange.GeneratePremasterSecret
  commentId: M:Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange.GeneratePremasterSecret
  parent: Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange
  name: GeneratePremasterSecret()
  nameWithType: AbstractTlsKeyExchange.GeneratePremasterSecret()
  fullName: Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange.GeneratePremasterSecret()
  spec.csharp:
  - uid: Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange.GeneratePremasterSecret
    name: GeneratePremasterSecret
    nameWithType: AbstractTlsKeyExchange.GeneratePremasterSecret
    fullName: Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange.GeneratePremasterSecret
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange.GeneratePremasterSecret
    name: GeneratePremasterSecret
    nameWithType: AbstractTlsKeyExchange.GeneratePremasterSecret
    fullName: Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange.GeneratePremasterSecret
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Org.BouncyCastle.Crypto.Tls.TlsRsaKeyExchange.GeneratePremasterSecret*
  commentId: Overload:Org.BouncyCastle.Crypto.Tls.TlsRsaKeyExchange.GeneratePremasterSecret
  name: GeneratePremasterSecret
  nameWithType: TlsRsaKeyExchange.GeneratePremasterSecret
  fullName: Org.BouncyCastle.Crypto.Tls.TlsRsaKeyExchange.GeneratePremasterSecret
- uid: Org.BouncyCastle.Crypto.Tls.TlsRsaKeyExchange.ValidateRsaPublicKey*
  commentId: Overload:Org.BouncyCastle.Crypto.Tls.TlsRsaKeyExchange.ValidateRsaPublicKey
  name: ValidateRsaPublicKey
  nameWithType: TlsRsaKeyExchange.ValidateRsaPublicKey
  fullName: Org.BouncyCastle.Crypto.Tls.TlsRsaKeyExchange.ValidateRsaPublicKey
