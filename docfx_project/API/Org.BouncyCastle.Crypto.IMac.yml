### YamlMime:ManagedReference
items:
- uid: Org.BouncyCastle.Crypto.IMac
  commentId: T:Org.BouncyCastle.Crypto.IMac
  id: IMac
  parent: Org.BouncyCastle.Crypto
  children:
  - Org.BouncyCastle.Crypto.IMac.AlgorithmName
  - Org.BouncyCastle.Crypto.IMac.BlockUpdate(System.Byte[],System.Int32,System.Int32)
  - Org.BouncyCastle.Crypto.IMac.DoFinal(System.Byte[],System.Int32)
  - Org.BouncyCastle.Crypto.IMac.GetMacSize
  - Org.BouncyCastle.Crypto.IMac.Init(Org.BouncyCastle.Crypto.ICipherParameters)
  - Org.BouncyCastle.Crypto.IMac.Reset
  - Org.BouncyCastle.Crypto.IMac.Update(System.Byte)
  langs:
  - csharp
  - vb
  name: IMac
  nameWithType: IMac
  fullName: Org.BouncyCastle.Crypto.IMac
  type: Interface
  source:
    id: IMac
    path: ''
    startLine: 99900
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto
  example: []
  syntax:
    content: public interface IMac
    content.vb: Public Interface IMac
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Org.BouncyCastle.Crypto.IMac.Init(Org.BouncyCastle.Crypto.ICipherParameters)
  commentId: M:Org.BouncyCastle.Crypto.IMac.Init(Org.BouncyCastle.Crypto.ICipherParameters)
  id: Init(Org.BouncyCastle.Crypto.ICipherParameters)
  parent: Org.BouncyCastle.Crypto.IMac
  langs:
  - csharp
  - vb
  name: Init(ICipherParameters)
  nameWithType: IMac.Init(ICipherParameters)
  fullName: Org.BouncyCastle.Crypto.IMac.Init(Org.BouncyCastle.Crypto.ICipherParameters)
  type: Method
  source:
    id: Init
    path: ''
    startLine: 99909
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto
  example: []
  syntax:
    content: void Init(ICipherParameters parameters)
    parameters:
    - id: parameters
      type: Org.BouncyCastle.Crypto.ICipherParameters
    content.vb: Sub Init(parameters As ICipherParameters)
  overload: Org.BouncyCastle.Crypto.IMac.Init*
- uid: Org.BouncyCastle.Crypto.IMac.AlgorithmName
  commentId: P:Org.BouncyCastle.Crypto.IMac.AlgorithmName
  id: AlgorithmName
  parent: Org.BouncyCastle.Crypto.IMac
  langs:
  - csharp
  - vb
  name: AlgorithmName
  nameWithType: IMac.AlgorithmName
  fullName: Org.BouncyCastle.Crypto.IMac.AlgorithmName
  type: Property
  source:
    id: AlgorithmName
    path: ''
    startLine: 99916
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto
  example: []
  syntax:
    content: string AlgorithmName { get; }
    parameters: []
    return:
      type: System.String
    content.vb: ReadOnly Property AlgorithmName As String
  overload: Org.BouncyCastle.Crypto.IMac.AlgorithmName*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Org.BouncyCastle.Crypto.IMac.GetMacSize
  commentId: M:Org.BouncyCastle.Crypto.IMac.GetMacSize
  id: GetMacSize
  parent: Org.BouncyCastle.Crypto.IMac
  langs:
  - csharp
  - vb
  name: GetMacSize()
  nameWithType: IMac.GetMacSize()
  fullName: Org.BouncyCastle.Crypto.IMac.GetMacSize()
  type: Method
  source:
    id: GetMacSize
    path: ''
    startLine: 99923
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto
  example: []
  syntax:
    content: int GetMacSize()
    return:
      type: System.Int32
    content.vb: Function GetMacSize As Integer
  overload: Org.BouncyCastle.Crypto.IMac.GetMacSize*
- uid: Org.BouncyCastle.Crypto.IMac.Update(System.Byte)
  commentId: M:Org.BouncyCastle.Crypto.IMac.Update(System.Byte)
  id: Update(System.Byte)
  parent: Org.BouncyCastle.Crypto.IMac
  langs:
  - csharp
  - vb
  name: Update(Byte)
  nameWithType: IMac.Update(Byte)
  fullName: Org.BouncyCastle.Crypto.IMac.Update(System.Byte)
  type: Method
  source:
    id: Update
    path: ''
    startLine: 99931
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto
  example: []
  syntax:
    content: void Update(byte input)
    parameters:
    - id: input
      type: System.Byte
    content.vb: Sub Update(input As Byte)
  overload: Org.BouncyCastle.Crypto.IMac.Update*
- uid: Org.BouncyCastle.Crypto.IMac.BlockUpdate(System.Byte[],System.Int32,System.Int32)
  commentId: M:Org.BouncyCastle.Crypto.IMac.BlockUpdate(System.Byte[],System.Int32,System.Int32)
  id: BlockUpdate(System.Byte[],System.Int32,System.Int32)
  parent: Org.BouncyCastle.Crypto.IMac
  langs:
  - csharp
  - vb
  name: BlockUpdate(Byte[], Int32, Int32)
  nameWithType: IMac.BlockUpdate(Byte[], Int32, Int32)
  fullName: Org.BouncyCastle.Crypto.IMac.BlockUpdate(System.Byte[], System.Int32, System.Int32)
  type: Method
  source:
    id: BlockUpdate
    path: ''
    startLine: 99940
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto
  example: []
  syntax:
    content: void BlockUpdate(byte[] input, int inOff, int len)
    parameters:
    - id: input
      type: System.Byte[]
    - id: inOff
      type: System.Int32
    - id: len
      type: System.Int32
    content.vb: Sub BlockUpdate(input As Byte(), inOff As Integer, len As Integer)
  overload: Org.BouncyCastle.Crypto.IMac.BlockUpdate*
  nameWithType.vb: IMac.BlockUpdate(Byte(), Int32, Int32)
  fullName.vb: Org.BouncyCastle.Crypto.IMac.BlockUpdate(System.Byte(), System.Int32, System.Int32)
  name.vb: BlockUpdate(Byte(), Int32, Int32)
- uid: Org.BouncyCastle.Crypto.IMac.DoFinal(System.Byte[],System.Int32)
  commentId: M:Org.BouncyCastle.Crypto.IMac.DoFinal(System.Byte[],System.Int32)
  id: DoFinal(System.Byte[],System.Int32)
  parent: Org.BouncyCastle.Crypto.IMac
  langs:
  - csharp
  - vb
  name: DoFinal(Byte[], Int32)
  nameWithType: IMac.DoFinal(Byte[], Int32)
  fullName: Org.BouncyCastle.Crypto.IMac.DoFinal(System.Byte[], System.Int32)
  type: Method
  source:
    id: DoFinal
    path: ''
    startLine: 99953
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto
  example: []
  syntax:
    content: int DoFinal(byte[] output, int outOff)
    parameters:
    - id: output
      type: System.Byte[]
    - id: outOff
      type: System.Int32
    return:
      type: System.Int32
    content.vb: Function DoFinal(output As Byte(), outOff As Integer) As Integer
  overload: Org.BouncyCastle.Crypto.IMac.DoFinal*
  nameWithType.vb: IMac.DoFinal(Byte(), Int32)
  fullName.vb: Org.BouncyCastle.Crypto.IMac.DoFinal(System.Byte(), System.Int32)
  name.vb: DoFinal(Byte(), Int32)
- uid: Org.BouncyCastle.Crypto.IMac.Reset
  commentId: M:Org.BouncyCastle.Crypto.IMac.Reset
  id: Reset
  parent: Org.BouncyCastle.Crypto.IMac
  langs:
  - csharp
  - vb
  name: Reset()
  nameWithType: IMac.Reset()
  fullName: Org.BouncyCastle.Crypto.IMac.Reset()
  type: Method
  source:
    id: Reset
    path: ''
    startLine: 99959
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto
  example: []
  syntax:
    content: void Reset()
    content.vb: Sub Reset
  overload: Org.BouncyCastle.Crypto.IMac.Reset*
references:
- uid: Org.BouncyCastle.Crypto
  commentId: N:Org.BouncyCastle.Crypto
  name: Org.BouncyCastle.Crypto
  nameWithType: Org.BouncyCastle.Crypto
  fullName: Org.BouncyCastle.Crypto
- uid: Org.BouncyCastle.Crypto.IMac.Init*
  commentId: Overload:Org.BouncyCastle.Crypto.IMac.Init
  name: Init
  nameWithType: IMac.Init
  fullName: Org.BouncyCastle.Crypto.IMac.Init
- uid: Org.BouncyCastle.Crypto.ICipherParameters
  commentId: T:Org.BouncyCastle.Crypto.ICipherParameters
  parent: Org.BouncyCastle.Crypto
  name: ICipherParameters
  nameWithType: ICipherParameters
  fullName: Org.BouncyCastle.Crypto.ICipherParameters
- uid: Org.BouncyCastle.Crypto.IMac.AlgorithmName*
  commentId: Overload:Org.BouncyCastle.Crypto.IMac.AlgorithmName
  name: AlgorithmName
  nameWithType: IMac.AlgorithmName
  fullName: Org.BouncyCastle.Crypto.IMac.AlgorithmName
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Org.BouncyCastle.Crypto.IMac.GetMacSize*
  commentId: Overload:Org.BouncyCastle.Crypto.IMac.GetMacSize
  name: GetMacSize
  nameWithType: IMac.GetMacSize
  fullName: Org.BouncyCastle.Crypto.IMac.GetMacSize
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Org.BouncyCastle.Crypto.IMac.Update*
  commentId: Overload:Org.BouncyCastle.Crypto.IMac.Update
  name: Update
  nameWithType: IMac.Update
  fullName: Org.BouncyCastle.Crypto.IMac.Update
- uid: System.Byte
  commentId: T:System.Byte
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte
- uid: Org.BouncyCastle.Crypto.IMac.BlockUpdate*
  commentId: Overload:Org.BouncyCastle.Crypto.IMac.BlockUpdate
  name: BlockUpdate
  nameWithType: IMac.BlockUpdate
  fullName: Org.BouncyCastle.Crypto.IMac.BlockUpdate
- uid: System.Byte[]
  isExternal: true
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullName.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Org.BouncyCastle.Crypto.IMac.DoFinal*
  commentId: Overload:Org.BouncyCastle.Crypto.IMac.DoFinal
  name: DoFinal
  nameWithType: IMac.DoFinal
  fullName: Org.BouncyCastle.Crypto.IMac.DoFinal
- uid: Org.BouncyCastle.Crypto.IMac.Reset*
  commentId: Overload:Org.BouncyCastle.Crypto.IMac.Reset
  name: Reset
  nameWithType: IMac.Reset
  fullName: Org.BouncyCastle.Crypto.IMac.Reset
