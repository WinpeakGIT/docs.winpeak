### YamlMime:ManagedReference
items:
- uid: Org.BouncyCastle.Crypto.Tls.Certificate
  commentId: T:Org.BouncyCastle.Crypto.Tls.Certificate
  id: Certificate
  parent: Org.BouncyCastle.Crypto.Tls
  children:
  - Org.BouncyCastle.Crypto.Tls.Certificate.#ctor(X509CertificateStructure[])
  - Org.BouncyCastle.Crypto.Tls.Certificate.CloneCertificateList
  - Org.BouncyCastle.Crypto.Tls.Certificate.EmptyChain
  - Org.BouncyCastle.Crypto.Tls.Certificate.Encode(Stream)
  - Org.BouncyCastle.Crypto.Tls.Certificate.GetCertificateAt(System.Int32)
  - Org.BouncyCastle.Crypto.Tls.Certificate.GetCertificateList
  - Org.BouncyCastle.Crypto.Tls.Certificate.IsEmpty
  - Org.BouncyCastle.Crypto.Tls.Certificate.Length
  - Org.BouncyCastle.Crypto.Tls.Certificate.mCertificateList
  - Org.BouncyCastle.Crypto.Tls.Certificate.Parse(Stream)
  langs:
  - csharp
  - vb
  name: Certificate
  nameWithType: Certificate
  fullName: Org.BouncyCastle.Crypto.Tls.Certificate
  type: Class
  source:
    id: Certificate
    path: ''
    startLine: 78446
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Tls
  example: []
  syntax:
    content: public class Certificate
    content.vb: Public Class Certificate
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ToString
  - System.Object.ReferenceEquals(System.Object,System.Object)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Org.BouncyCastle.Crypto.Tls.Certificate.EmptyChain
  commentId: F:Org.BouncyCastle.Crypto.Tls.Certificate.EmptyChain
  id: EmptyChain
  parent: Org.BouncyCastle.Crypto.Tls.Certificate
  langs:
  - csharp
  - vb
  name: EmptyChain
  nameWithType: Certificate.EmptyChain
  fullName: Org.BouncyCastle.Crypto.Tls.Certificate.EmptyChain
  type: Field
  source:
    id: EmptyChain
    path: ''
    startLine: 78448
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Tls
  syntax:
    content: public static readonly Certificate EmptyChain
    return:
      type: Org.BouncyCastle.Crypto.Tls.Certificate
    content.vb: Public Shared ReadOnly EmptyChain As Certificate
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Org.BouncyCastle.Crypto.Tls.Certificate.mCertificateList
  commentId: F:Org.BouncyCastle.Crypto.Tls.Certificate.mCertificateList
  id: mCertificateList
  parent: Org.BouncyCastle.Crypto.Tls.Certificate
  langs:
  - csharp
  - vb
  name: mCertificateList
  nameWithType: Certificate.mCertificateList
  fullName: Org.BouncyCastle.Crypto.Tls.Certificate.mCertificateList
  type: Field
  source:
    id: mCertificateList
    path: ''
    startLine: 78453
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Tls
  example: []
  syntax:
    content: protected readonly X509CertificateStructure[] mCertificateList
    return:
      type: X509CertificateStructure[]
    content.vb: Protected ReadOnly mCertificateList As X509CertificateStructure()
  modifiers.csharp:
  - protected
  - readonly
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: Org.BouncyCastle.Crypto.Tls.Certificate.#ctor(X509CertificateStructure[])
  commentId: M:Org.BouncyCastle.Crypto.Tls.Certificate.#ctor(X509CertificateStructure[])
  id: '#ctor(X509CertificateStructure[])'
  parent: Org.BouncyCastle.Crypto.Tls.Certificate
  langs:
  - csharp
  - vb
  name: Certificate(X509CertificateStructure[])
  nameWithType: Certificate.Certificate(X509CertificateStructure[])
  fullName: Org.BouncyCastle.Crypto.Tls.Certificate.Certificate(X509CertificateStructure[])
  type: Constructor
  source:
    id: .ctor
    path: ''
    startLine: 78455
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Tls
  syntax:
    content: public Certificate(X509CertificateStructure[] certificateList)
    parameters:
    - id: certificateList
      type: X509CertificateStructure[]
    content.vb: Public Sub New(certificateList As X509CertificateStructure())
  overload: Org.BouncyCastle.Crypto.Tls.Certificate.#ctor*
  nameWithType.vb: Certificate.Certificate(X509CertificateStructure())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Org.BouncyCastle.Crypto.Tls.Certificate.Certificate(X509CertificateStructure())
  name.vb: Certificate(X509CertificateStructure())
- uid: Org.BouncyCastle.Crypto.Tls.Certificate.GetCertificateList
  commentId: M:Org.BouncyCastle.Crypto.Tls.Certificate.GetCertificateList
  id: GetCertificateList
  parent: Org.BouncyCastle.Crypto.Tls.Certificate
  langs:
  - csharp
  - vb
  name: GetCertificateList()
  nameWithType: Certificate.GetCertificateList()
  fullName: Org.BouncyCastle.Crypto.Tls.Certificate.GetCertificateList()
  type: Method
  source:
    id: GetCertificateList
    path: ''
    startLine: 78467
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Tls
  example: []
  syntax:
    content: public virtual X509CertificateStructure[] GetCertificateList()
    return:
      type: X509CertificateStructure[]
    content.vb: Public Overridable Function GetCertificateList As X509CertificateStructure()
  overload: Org.BouncyCastle.Crypto.Tls.Certificate.GetCertificateList*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Org.BouncyCastle.Crypto.Tls.Certificate.GetCertificateAt(System.Int32)
  commentId: M:Org.BouncyCastle.Crypto.Tls.Certificate.GetCertificateAt(System.Int32)
  id: GetCertificateAt(System.Int32)
  parent: Org.BouncyCastle.Crypto.Tls.Certificate
  langs:
  - csharp
  - vb
  name: GetCertificateAt(Int32)
  nameWithType: Certificate.GetCertificateAt(Int32)
  fullName: Org.BouncyCastle.Crypto.Tls.Certificate.GetCertificateAt(System.Int32)
  type: Method
  source:
    id: GetCertificateAt
    path: ''
    startLine: 78472
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Tls
  syntax:
    content: public virtual X509CertificateStructure GetCertificateAt(int index)
    parameters:
    - id: index
      type: System.Int32
    return:
      type: X509CertificateStructure
    content.vb: Public Overridable Function GetCertificateAt(index As Integer) As X509CertificateStructure
  overload: Org.BouncyCastle.Crypto.Tls.Certificate.GetCertificateAt*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Org.BouncyCastle.Crypto.Tls.Certificate.Length
  commentId: P:Org.BouncyCastle.Crypto.Tls.Certificate.Length
  id: Length
  parent: Org.BouncyCastle.Crypto.Tls.Certificate
  langs:
  - csharp
  - vb
  name: Length
  nameWithType: Certificate.Length
  fullName: Org.BouncyCastle.Crypto.Tls.Certificate.Length
  type: Property
  source:
    id: Length
    path: ''
    startLine: 78477
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Tls
  syntax:
    content: public virtual int Length { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Overridable ReadOnly Property Length As Integer
  overload: Org.BouncyCastle.Crypto.Tls.Certificate.Length*
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: Org.BouncyCastle.Crypto.Tls.Certificate.IsEmpty
  commentId: P:Org.BouncyCastle.Crypto.Tls.Certificate.IsEmpty
  id: IsEmpty
  parent: Org.BouncyCastle.Crypto.Tls.Certificate
  langs:
  - csharp
  - vb
  name: IsEmpty
  nameWithType: Certificate.IsEmpty
  fullName: Org.BouncyCastle.Crypto.Tls.Certificate.IsEmpty
  type: Property
  source:
    id: IsEmpty
    path: ''
    startLine: 78486
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Tls
  example: []
  syntax:
    content: public virtual bool IsEmpty { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Overridable ReadOnly Property IsEmpty As Boolean
  overload: Org.BouncyCastle.Crypto.Tls.Certificate.IsEmpty*
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: Org.BouncyCastle.Crypto.Tls.Certificate.Encode(Stream)
  commentId: M:Org.BouncyCastle.Crypto.Tls.Certificate.Encode(Stream)
  id: Encode(Stream)
  parent: Org.BouncyCastle.Crypto.Tls.Certificate
  langs:
  - csharp
  - vb
  name: Encode(Stream)
  nameWithType: Certificate.Encode(Stream)
  fullName: Org.BouncyCastle.Crypto.Tls.Certificate.Encode(Stream)
  type: Method
  source:
    id: Encode
    path: ''
    startLine: 78497
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Tls
  example: []
  syntax:
    content: public virtual void Encode(Stream output)
    parameters:
    - id: output
      type: Stream
    content.vb: Public Overridable Sub Encode(output As Stream)
  overload: Org.BouncyCastle.Crypto.Tls.Certificate.Encode*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Org.BouncyCastle.Crypto.Tls.Certificate.Parse(Stream)
  commentId: M:Org.BouncyCastle.Crypto.Tls.Certificate.Parse(Stream)
  id: Parse(Stream)
  parent: Org.BouncyCastle.Crypto.Tls.Certificate
  langs:
  - csharp
  - vb
  name: Parse(Stream)
  nameWithType: Certificate.Parse(Stream)
  fullName: Org.BouncyCastle.Crypto.Tls.Certificate.Parse(Stream)
  type: Method
  source:
    id: Parse
    path: ''
    startLine: 78525
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Tls
  example: []
  syntax:
    content: public static Certificate Parse(Stream input)
    parameters:
    - id: input
      type: Stream
    return:
      type: Org.BouncyCastle.Crypto.Tls.Certificate
    content.vb: Public Shared Function Parse(input As Stream) As Certificate
  overload: Org.BouncyCastle.Crypto.Tls.Certificate.Parse*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Org.BouncyCastle.Crypto.Tls.Certificate.CloneCertificateList
  commentId: M:Org.BouncyCastle.Crypto.Tls.Certificate.CloneCertificateList
  id: CloneCertificateList
  parent: Org.BouncyCastle.Crypto.Tls.Certificate
  langs:
  - csharp
  - vb
  name: CloneCertificateList()
  nameWithType: Certificate.CloneCertificateList()
  fullName: Org.BouncyCastle.Crypto.Tls.Certificate.CloneCertificateList()
  type: Method
  source:
    id: CloneCertificateList
    path: ''
    startLine: 78553
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Tls
  syntax:
    content: protected virtual X509CertificateStructure[] CloneCertificateList()
    return:
      type: X509CertificateStructure[]
    content.vb: Protected Overridable Function CloneCertificateList As X509CertificateStructure()
  overload: Org.BouncyCastle.Crypto.Tls.Certificate.CloneCertificateList*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
references:
- uid: Org.BouncyCastle.Crypto.Tls
  commentId: N:Org.BouncyCastle.Crypto.Tls
  name: Org.BouncyCastle.Crypto.Tls
  nameWithType: Org.BouncyCastle.Crypto.Tls
  fullName: Org.BouncyCastle.Crypto.Tls
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Org.BouncyCastle.Crypto.Tls.Certificate
  commentId: T:Org.BouncyCastle.Crypto.Tls.Certificate
  parent: Org.BouncyCastle.Crypto.Tls
  name: Certificate
  nameWithType: Certificate
  fullName: Org.BouncyCastle.Crypto.Tls.Certificate
- uid: X509CertificateStructure[]
  isExternal: true
  name: X509CertificateStructure[]
  nameWithType: X509CertificateStructure[]
  fullName: X509CertificateStructure[]
  nameWithType.vb: X509CertificateStructure()
  fullName.vb: X509CertificateStructure()
  name.vb: X509CertificateStructure()
  spec.csharp:
  - uid: X509CertificateStructure
    name: X509CertificateStructure
    nameWithType: X509CertificateStructure
    fullName: X509CertificateStructure
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: X509CertificateStructure
    name: X509CertificateStructure
    nameWithType: X509CertificateStructure
    fullName: X509CertificateStructure
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Org.BouncyCastle.Crypto.Tls.Certificate.#ctor*
  commentId: Overload:Org.BouncyCastle.Crypto.Tls.Certificate.#ctor
  name: Certificate
  nameWithType: Certificate.Certificate
  fullName: Org.BouncyCastle.Crypto.Tls.Certificate.Certificate
- uid: Org.BouncyCastle.Crypto.Tls.Certificate.GetCertificateList*
  commentId: Overload:Org.BouncyCastle.Crypto.Tls.Certificate.GetCertificateList
  name: GetCertificateList
  nameWithType: Certificate.GetCertificateList
  fullName: Org.BouncyCastle.Crypto.Tls.Certificate.GetCertificateList
- uid: Org.BouncyCastle.Crypto.Tls.Certificate.GetCertificateAt*
  commentId: Overload:Org.BouncyCastle.Crypto.Tls.Certificate.GetCertificateAt
  name: GetCertificateAt
  nameWithType: Certificate.GetCertificateAt
  fullName: Org.BouncyCastle.Crypto.Tls.Certificate.GetCertificateAt
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: X509CertificateStructure
  isExternal: true
  name: X509CertificateStructure
  nameWithType: X509CertificateStructure
  fullName: X509CertificateStructure
- uid: Org.BouncyCastle.Crypto.Tls.Certificate.Length*
  commentId: Overload:Org.BouncyCastle.Crypto.Tls.Certificate.Length
  name: Length
  nameWithType: Certificate.Length
  fullName: Org.BouncyCastle.Crypto.Tls.Certificate.Length
- uid: Org.BouncyCastle.Crypto.Tls.Certificate.IsEmpty*
  commentId: Overload:Org.BouncyCastle.Crypto.Tls.Certificate.IsEmpty
  name: IsEmpty
  nameWithType: Certificate.IsEmpty
  fullName: Org.BouncyCastle.Crypto.Tls.Certificate.IsEmpty
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Org.BouncyCastle.Crypto.Tls.Certificate.Encode*
  commentId: Overload:Org.BouncyCastle.Crypto.Tls.Certificate.Encode
  name: Encode
  nameWithType: Certificate.Encode
  fullName: Org.BouncyCastle.Crypto.Tls.Certificate.Encode
- uid: Stream
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: Stream
- uid: Org.BouncyCastle.Crypto.Tls.Certificate.Parse*
  commentId: Overload:Org.BouncyCastle.Crypto.Tls.Certificate.Parse
  name: Parse
  nameWithType: Certificate.Parse
  fullName: Org.BouncyCastle.Crypto.Tls.Certificate.Parse
- uid: Org.BouncyCastle.Crypto.Tls.Certificate.CloneCertificateList*
  commentId: Overload:Org.BouncyCastle.Crypto.Tls.Certificate.CloneCertificateList
  name: CloneCertificateList
  nameWithType: Certificate.CloneCertificateList
  fullName: Org.BouncyCastle.Crypto.Tls.Certificate.CloneCertificateList
