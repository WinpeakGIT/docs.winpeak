### YamlMime:ManagedReference
items:
- uid: BestHTTP.WebSocket.Frames.WebSocketFrame
  commentId: T:BestHTTP.WebSocket.Frames.WebSocketFrame
  id: WebSocketFrame
  parent: BestHTTP.WebSocket.Frames
  children:
  - BestHTTP.WebSocket.Frames.WebSocketFrame.#ctor(BestHTTP.WebSocket.WebSocket,BestHTTP.WebSocket.Frames.WebSocketFrameTypes,System.Byte[])
  - BestHTTP.WebSocket.Frames.WebSocketFrame.#ctor(BestHTTP.WebSocket.WebSocket,BestHTTP.WebSocket.Frames.WebSocketFrameTypes,System.Byte[],System.Boolean)
  - BestHTTP.WebSocket.Frames.WebSocketFrame.#ctor(BestHTTP.WebSocket.WebSocket,BestHTTP.WebSocket.Frames.WebSocketFrameTypes,System.Byte[],System.Boolean,System.Boolean)
  - BestHTTP.WebSocket.Frames.WebSocketFrame.#ctor(BestHTTP.WebSocket.WebSocket,BestHTTP.WebSocket.Frames.WebSocketFrameTypes,System.Byte[],System.UInt64,System.UInt64,System.Boolean,System.Boolean)
  - BestHTTP.WebSocket.Frames.WebSocketFrame.Data
  - BestHTTP.WebSocket.Frames.WebSocketFrame.Fragment(System.UInt16)
  - BestHTTP.WebSocket.Frames.WebSocketFrame.Get
  - BestHTTP.WebSocket.Frames.WebSocketFrame.Header
  - BestHTTP.WebSocket.Frames.WebSocketFrame.IsFinal
  - BestHTTP.WebSocket.Frames.WebSocketFrame.NoData
  - BestHTTP.WebSocket.Frames.WebSocketFrame.Type
  - BestHTTP.WebSocket.Frames.WebSocketFrame.UseExtensions
  langs:
  - csharp
  - vb
  name: WebSocketFrame
  nameWithType: WebSocketFrame
  fullName: BestHTTP.WebSocket.Frames.WebSocketFrame
  type: Class
  source:
    id: WebSocketFrame
    path: ''
    startLine: 9014
  assemblies:
  - cs.temp.dll
  namespace: BestHTTP.WebSocket.Frames
  summary: "\nDenotes a binary frame. The &quot;Payload data&quot; is arbitrary binary data whose interpretation is solely up to the application layer.\nThis is the base class of all other frame writers, as all frame can be represented as a byte array.\n"
  example: []
  syntax:
    content: public sealed class WebSocketFrame
    content.vb: Public NotInheritable Class WebSocketFrame
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ToString
  - System.Object.ReferenceEquals(System.Object,System.Object)
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: BestHTTP.WebSocket.Frames.WebSocketFrame.NoData
  commentId: F:BestHTTP.WebSocket.Frames.WebSocketFrame.NoData
  id: NoData
  parent: BestHTTP.WebSocket.Frames.WebSocketFrame
  langs:
  - csharp
  - vb
  name: NoData
  nameWithType: WebSocketFrame.NoData
  fullName: BestHTTP.WebSocket.Frames.WebSocketFrame.NoData
  type: Field
  source:
    id: NoData
    path: ''
    startLine: 9016
  assemblies:
  - cs.temp.dll
  namespace: BestHTTP.WebSocket.Frames
  syntax:
    content: public static readonly byte[] NoData
    return:
      type: System.Byte[]
    content.vb: Public Shared ReadOnly NoData As Byte()
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: BestHTTP.WebSocket.Frames.WebSocketFrame.Type
  commentId: P:BestHTTP.WebSocket.Frames.WebSocketFrame.Type
  id: Type
  parent: BestHTTP.WebSocket.Frames.WebSocketFrame
  langs:
  - csharp
  - vb
  name: Type
  nameWithType: WebSocketFrame.Type
  fullName: BestHTTP.WebSocket.Frames.WebSocketFrame.Type
  type: Property
  source:
    id: Type
    path: ''
    startLine: 9018
  assemblies:
  - cs.temp.dll
  namespace: BestHTTP.WebSocket.Frames
  syntax:
    content: public WebSocketFrameTypes Type { get; }
    parameters: []
    return:
      type: BestHTTP.WebSocket.Frames.WebSocketFrameTypes
    content.vb: Public ReadOnly Property Type As WebSocketFrameTypes
  overload: BestHTTP.WebSocket.Frames.WebSocketFrame.Type*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: BestHTTP.WebSocket.Frames.WebSocketFrame.IsFinal
  commentId: P:BestHTTP.WebSocket.Frames.WebSocketFrame.IsFinal
  id: IsFinal
  parent: BestHTTP.WebSocket.Frames.WebSocketFrame
  langs:
  - csharp
  - vb
  name: IsFinal
  nameWithType: WebSocketFrame.IsFinal
  fullName: BestHTTP.WebSocket.Frames.WebSocketFrame.IsFinal
  type: Property
  source:
    id: IsFinal
    path: ''
    startLine: 9019
  assemblies:
  - cs.temp.dll
  namespace: BestHTTP.WebSocket.Frames
  syntax:
    content: public bool IsFinal { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsFinal As Boolean
  overload: BestHTTP.WebSocket.Frames.WebSocketFrame.IsFinal*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: BestHTTP.WebSocket.Frames.WebSocketFrame.Header
  commentId: P:BestHTTP.WebSocket.Frames.WebSocketFrame.Header
  id: Header
  parent: BestHTTP.WebSocket.Frames.WebSocketFrame
  langs:
  - csharp
  - vb
  name: Header
  nameWithType: WebSocketFrame.Header
  fullName: BestHTTP.WebSocket.Frames.WebSocketFrame.Header
  type: Property
  source:
    id: Header
    path: ''
    startLine: 9020
  assemblies:
  - cs.temp.dll
  namespace: BestHTTP.WebSocket.Frames
  syntax:
    content: public byte Header { get; }
    parameters: []
    return:
      type: System.Byte
    content.vb: Public ReadOnly Property Header As Byte
  overload: BestHTTP.WebSocket.Frames.WebSocketFrame.Header*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: BestHTTP.WebSocket.Frames.WebSocketFrame.Data
  commentId: P:BestHTTP.WebSocket.Frames.WebSocketFrame.Data
  id: Data
  parent: BestHTTP.WebSocket.Frames.WebSocketFrame
  langs:
  - csharp
  - vb
  name: Data
  nameWithType: WebSocketFrame.Data
  fullName: BestHTTP.WebSocket.Frames.WebSocketFrame.Data
  type: Property
  source:
    id: Data
    path: ''
    startLine: 9022
  assemblies:
  - cs.temp.dll
  namespace: BestHTTP.WebSocket.Frames
  syntax:
    content: public byte[] Data { get; }
    parameters: []
    return:
      type: System.Byte[]
    content.vb: Public ReadOnly Property Data As Byte()
  overload: BestHTTP.WebSocket.Frames.WebSocketFrame.Data*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: BestHTTP.WebSocket.Frames.WebSocketFrame.UseExtensions
  commentId: P:BestHTTP.WebSocket.Frames.WebSocketFrame.UseExtensions
  id: UseExtensions
  parent: BestHTTP.WebSocket.Frames.WebSocketFrame
  langs:
  - csharp
  - vb
  name: UseExtensions
  nameWithType: WebSocketFrame.UseExtensions
  fullName: BestHTTP.WebSocket.Frames.WebSocketFrame.UseExtensions
  type: Property
  source:
    id: UseExtensions
    path: ''
    startLine: 9023
  assemblies:
  - cs.temp.dll
  namespace: BestHTTP.WebSocket.Frames
  syntax:
    content: public bool UseExtensions { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property UseExtensions As Boolean
  overload: BestHTTP.WebSocket.Frames.WebSocketFrame.UseExtensions*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: BestHTTP.WebSocket.Frames.WebSocketFrame.#ctor(BestHTTP.WebSocket.WebSocket,BestHTTP.WebSocket.Frames.WebSocketFrameTypes,System.Byte[])
  commentId: M:BestHTTP.WebSocket.Frames.WebSocketFrame.#ctor(BestHTTP.WebSocket.WebSocket,BestHTTP.WebSocket.Frames.WebSocketFrameTypes,System.Byte[])
  id: '#ctor(BestHTTP.WebSocket.WebSocket,BestHTTP.WebSocket.Frames.WebSocketFrameTypes,System.Byte[])'
  parent: BestHTTP.WebSocket.Frames.WebSocketFrame
  langs:
  - csharp
  - vb
  name: WebSocketFrame(WebSocket, WebSocketFrameTypes, Byte[])
  nameWithType: WebSocketFrame.WebSocketFrame(WebSocket, WebSocketFrameTypes, Byte[])
  fullName: BestHTTP.WebSocket.Frames.WebSocketFrame.WebSocketFrame(BestHTTP.WebSocket.WebSocket, BestHTTP.WebSocket.Frames.WebSocketFrameTypes, System.Byte[])
  type: Constructor
  source:
    id: .ctor
    path: ''
    startLine: 9027
  assemblies:
  - cs.temp.dll
  namespace: BestHTTP.WebSocket.Frames
  syntax:
    content: public WebSocketFrame(WebSocket webSocket, WebSocketFrameTypes type, byte[] data)
    parameters:
    - id: webSocket
      type: BestHTTP.WebSocket.WebSocket
    - id: type
      type: BestHTTP.WebSocket.Frames.WebSocketFrameTypes
    - id: data
      type: System.Byte[]
    content.vb: Public Sub New(webSocket As WebSocket, type As WebSocketFrameTypes, data As Byte())
  overload: BestHTTP.WebSocket.Frames.WebSocketFrame.#ctor*
  nameWithType.vb: WebSocketFrame.WebSocketFrame(WebSocket, WebSocketFrameTypes, Byte())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: BestHTTP.WebSocket.Frames.WebSocketFrame.WebSocketFrame(BestHTTP.WebSocket.WebSocket, BestHTTP.WebSocket.Frames.WebSocketFrameTypes, System.Byte())
  name.vb: WebSocketFrame(WebSocket, WebSocketFrameTypes, Byte())
- uid: BestHTTP.WebSocket.Frames.WebSocketFrame.#ctor(BestHTTP.WebSocket.WebSocket,BestHTTP.WebSocket.Frames.WebSocketFrameTypes,System.Byte[],System.Boolean)
  commentId: M:BestHTTP.WebSocket.Frames.WebSocketFrame.#ctor(BestHTTP.WebSocket.WebSocket,BestHTTP.WebSocket.Frames.WebSocketFrameTypes,System.Byte[],System.Boolean)
  id: '#ctor(BestHTTP.WebSocket.WebSocket,BestHTTP.WebSocket.Frames.WebSocketFrameTypes,System.Byte[],System.Boolean)'
  parent: BestHTTP.WebSocket.Frames.WebSocketFrame
  langs:
  - csharp
  - vb
  name: WebSocketFrame(WebSocket, WebSocketFrameTypes, Byte[], Boolean)
  nameWithType: WebSocketFrame.WebSocketFrame(WebSocket, WebSocketFrameTypes, Byte[], Boolean)
  fullName: BestHTTP.WebSocket.Frames.WebSocketFrame.WebSocketFrame(BestHTTP.WebSocket.WebSocket, BestHTTP.WebSocket.Frames.WebSocketFrameTypes, System.Byte[], System.Boolean)
  type: Constructor
  source:
    id: .ctor
    path: ''
    startLine: 9031
  assemblies:
  - cs.temp.dll
  namespace: BestHTTP.WebSocket.Frames
  syntax:
    content: public WebSocketFrame(WebSocket webSocket, WebSocketFrameTypes type, byte[] data, bool useExtensions)
    parameters:
    - id: webSocket
      type: BestHTTP.WebSocket.WebSocket
    - id: type
      type: BestHTTP.WebSocket.Frames.WebSocketFrameTypes
    - id: data
      type: System.Byte[]
    - id: useExtensions
      type: System.Boolean
    content.vb: Public Sub New(webSocket As WebSocket, type As WebSocketFrameTypes, data As Byte(), useExtensions As Boolean)
  overload: BestHTTP.WebSocket.Frames.WebSocketFrame.#ctor*
  nameWithType.vb: WebSocketFrame.WebSocketFrame(WebSocket, WebSocketFrameTypes, Byte(), Boolean)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: BestHTTP.WebSocket.Frames.WebSocketFrame.WebSocketFrame(BestHTTP.WebSocket.WebSocket, BestHTTP.WebSocket.Frames.WebSocketFrameTypes, System.Byte(), System.Boolean)
  name.vb: WebSocketFrame(WebSocket, WebSocketFrameTypes, Byte(), Boolean)
- uid: BestHTTP.WebSocket.Frames.WebSocketFrame.#ctor(BestHTTP.WebSocket.WebSocket,BestHTTP.WebSocket.Frames.WebSocketFrameTypes,System.Byte[],System.Boolean,System.Boolean)
  commentId: M:BestHTTP.WebSocket.Frames.WebSocketFrame.#ctor(BestHTTP.WebSocket.WebSocket,BestHTTP.WebSocket.Frames.WebSocketFrameTypes,System.Byte[],System.Boolean,System.Boolean)
  id: '#ctor(BestHTTP.WebSocket.WebSocket,BestHTTP.WebSocket.Frames.WebSocketFrameTypes,System.Byte[],System.Boolean,System.Boolean)'
  parent: BestHTTP.WebSocket.Frames.WebSocketFrame
  langs:
  - csharp
  - vb
  name: WebSocketFrame(WebSocket, WebSocketFrameTypes, Byte[], Boolean, Boolean)
  nameWithType: WebSocketFrame.WebSocketFrame(WebSocket, WebSocketFrameTypes, Byte[], Boolean, Boolean)
  fullName: BestHTTP.WebSocket.Frames.WebSocketFrame.WebSocketFrame(BestHTTP.WebSocket.WebSocket, BestHTTP.WebSocket.Frames.WebSocketFrameTypes, System.Byte[], System.Boolean, System.Boolean)
  type: Constructor
  source:
    id: .ctor
    path: ''
    startLine: 9036
  assemblies:
  - cs.temp.dll
  namespace: BestHTTP.WebSocket.Frames
  syntax:
    content: public WebSocketFrame(WebSocket webSocket, WebSocketFrameTypes type, byte[] data, bool isFinal, bool useExtensions)
    parameters:
    - id: webSocket
      type: BestHTTP.WebSocket.WebSocket
    - id: type
      type: BestHTTP.WebSocket.Frames.WebSocketFrameTypes
    - id: data
      type: System.Byte[]
    - id: isFinal
      type: System.Boolean
    - id: useExtensions
      type: System.Boolean
    content.vb: Public Sub New(webSocket As WebSocket, type As WebSocketFrameTypes, data As Byte(), isFinal As Boolean, useExtensions As Boolean)
  overload: BestHTTP.WebSocket.Frames.WebSocketFrame.#ctor*
  nameWithType.vb: WebSocketFrame.WebSocketFrame(WebSocket, WebSocketFrameTypes, Byte(), Boolean, Boolean)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: BestHTTP.WebSocket.Frames.WebSocketFrame.WebSocketFrame(BestHTTP.WebSocket.WebSocket, BestHTTP.WebSocket.Frames.WebSocketFrameTypes, System.Byte(), System.Boolean, System.Boolean)
  name.vb: WebSocketFrame(WebSocket, WebSocketFrameTypes, Byte(), Boolean, Boolean)
- uid: BestHTTP.WebSocket.Frames.WebSocketFrame.#ctor(BestHTTP.WebSocket.WebSocket,BestHTTP.WebSocket.Frames.WebSocketFrameTypes,System.Byte[],System.UInt64,System.UInt64,System.Boolean,System.Boolean)
  commentId: M:BestHTTP.WebSocket.Frames.WebSocketFrame.#ctor(BestHTTP.WebSocket.WebSocket,BestHTTP.WebSocket.Frames.WebSocketFrameTypes,System.Byte[],System.UInt64,System.UInt64,System.Boolean,System.Boolean)
  id: '#ctor(BestHTTP.WebSocket.WebSocket,BestHTTP.WebSocket.Frames.WebSocketFrameTypes,System.Byte[],System.UInt64,System.UInt64,System.Boolean,System.Boolean)'
  parent: BestHTTP.WebSocket.Frames.WebSocketFrame
  langs:
  - csharp
  - vb
  name: WebSocketFrame(WebSocket, WebSocketFrameTypes, Byte[], UInt64, UInt64, Boolean, Boolean)
  nameWithType: WebSocketFrame.WebSocketFrame(WebSocket, WebSocketFrameTypes, Byte[], UInt64, UInt64, Boolean, Boolean)
  fullName: BestHTTP.WebSocket.Frames.WebSocketFrame.WebSocketFrame(BestHTTP.WebSocket.WebSocket, BestHTTP.WebSocket.Frames.WebSocketFrameTypes, System.Byte[], System.UInt64, System.UInt64, System.Boolean, System.Boolean)
  type: Constructor
  source:
    id: .ctor
    path: ''
    startLine: 9041
  assemblies:
  - cs.temp.dll
  namespace: BestHTTP.WebSocket.Frames
  syntax:
    content: public WebSocketFrame(WebSocket webSocket, WebSocketFrameTypes type, byte[] data, ulong pos, ulong length, bool isFinal, bool useExtensions)
    parameters:
    - id: webSocket
      type: BestHTTP.WebSocket.WebSocket
    - id: type
      type: BestHTTP.WebSocket.Frames.WebSocketFrameTypes
    - id: data
      type: System.Byte[]
    - id: pos
      type: System.UInt64
    - id: length
      type: System.UInt64
    - id: isFinal
      type: System.Boolean
    - id: useExtensions
      type: System.Boolean
    content.vb: Public Sub New(webSocket As WebSocket, type As WebSocketFrameTypes, data As Byte(), pos As ULong, length As ULong, isFinal As Boolean, useExtensions As Boolean)
  overload: BestHTTP.WebSocket.Frames.WebSocketFrame.#ctor*
  nameWithType.vb: WebSocketFrame.WebSocketFrame(WebSocket, WebSocketFrameTypes, Byte(), UInt64, UInt64, Boolean, Boolean)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: BestHTTP.WebSocket.Frames.WebSocketFrame.WebSocketFrame(BestHTTP.WebSocket.WebSocket, BestHTTP.WebSocket.Frames.WebSocketFrameTypes, System.Byte(), System.UInt64, System.UInt64, System.Boolean, System.Boolean)
  name.vb: WebSocketFrame(WebSocket, WebSocketFrameTypes, Byte(), UInt64, UInt64, Boolean, Boolean)
- uid: BestHTTP.WebSocket.Frames.WebSocketFrame.Get
  commentId: M:BestHTTP.WebSocket.Frames.WebSocketFrame.Get
  id: Get
  parent: BestHTTP.WebSocket.Frames.WebSocketFrame
  langs:
  - csharp
  - vb
  name: Get()
  nameWithType: WebSocketFrame.Get()
  fullName: BestHTTP.WebSocket.Frames.WebSocketFrame.Get()
  type: Method
  source:
    id: Get
    path: ''
    startLine: 9077
  assemblies:
  - cs.temp.dll
  namespace: BestHTTP.WebSocket.Frames
  syntax:
    content: public byte[] Get()
    return:
      type: System.Byte[]
    content.vb: Public Function Get As Byte()
  overload: BestHTTP.WebSocket.Frames.WebSocketFrame.Get*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: BestHTTP.WebSocket.Frames.WebSocketFrame.Fragment(System.UInt16)
  commentId: M:BestHTTP.WebSocket.Frames.WebSocketFrame.Fragment(System.UInt16)
  id: Fragment(System.UInt16)
  parent: BestHTTP.WebSocket.Frames.WebSocketFrame
  langs:
  - csharp
  - vb
  name: Fragment(UInt16)
  nameWithType: WebSocketFrame.Fragment(UInt16)
  fullName: BestHTTP.WebSocket.Frames.WebSocketFrame.Fragment(System.UInt16)
  type: Method
  source:
    id: Fragment
    path: ''
    startLine: 9128
  assemblies:
  - cs.temp.dll
  namespace: BestHTTP.WebSocket.Frames
  syntax:
    content: public WebSocketFrame[] Fragment(ushort maxFragmentSize)
    parameters:
    - id: maxFragmentSize
      type: System.UInt16
    return:
      type: BestHTTP.WebSocket.Frames.WebSocketFrame[]
    content.vb: Public Function Fragment(maxFragmentSize As UShort) As WebSocketFrame()
  overload: BestHTTP.WebSocket.Frames.WebSocketFrame.Fragment*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: BestHTTP.WebSocket.Frames
  commentId: N:BestHTTP.WebSocket.Frames
  name: BestHTTP.WebSocket.Frames
  nameWithType: BestHTTP.WebSocket.Frames
  fullName: BestHTTP.WebSocket.Frames
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Byte[]
  isExternal: true
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullName.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: BestHTTP.WebSocket.Frames.WebSocketFrame.Type*
  commentId: Overload:BestHTTP.WebSocket.Frames.WebSocketFrame.Type
  name: Type
  nameWithType: WebSocketFrame.Type
  fullName: BestHTTP.WebSocket.Frames.WebSocketFrame.Type
- uid: BestHTTP.WebSocket.Frames.WebSocketFrameTypes
  commentId: T:BestHTTP.WebSocket.Frames.WebSocketFrameTypes
  parent: BestHTTP.WebSocket.Frames
  name: WebSocketFrameTypes
  nameWithType: WebSocketFrameTypes
  fullName: BestHTTP.WebSocket.Frames.WebSocketFrameTypes
- uid: BestHTTP.WebSocket.Frames.WebSocketFrame.IsFinal*
  commentId: Overload:BestHTTP.WebSocket.Frames.WebSocketFrame.IsFinal
  name: IsFinal
  nameWithType: WebSocketFrame.IsFinal
  fullName: BestHTTP.WebSocket.Frames.WebSocketFrame.IsFinal
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: BestHTTP.WebSocket.Frames.WebSocketFrame.Header*
  commentId: Overload:BestHTTP.WebSocket.Frames.WebSocketFrame.Header
  name: Header
  nameWithType: WebSocketFrame.Header
  fullName: BestHTTP.WebSocket.Frames.WebSocketFrame.Header
- uid: System.Byte
  commentId: T:System.Byte
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte
- uid: BestHTTP.WebSocket.Frames.WebSocketFrame.Data*
  commentId: Overload:BestHTTP.WebSocket.Frames.WebSocketFrame.Data
  name: Data
  nameWithType: WebSocketFrame.Data
  fullName: BestHTTP.WebSocket.Frames.WebSocketFrame.Data
- uid: BestHTTP.WebSocket.Frames.WebSocketFrame.UseExtensions*
  commentId: Overload:BestHTTP.WebSocket.Frames.WebSocketFrame.UseExtensions
  name: UseExtensions
  nameWithType: WebSocketFrame.UseExtensions
  fullName: BestHTTP.WebSocket.Frames.WebSocketFrame.UseExtensions
- uid: BestHTTP.WebSocket.Frames.WebSocketFrame.#ctor*
  commentId: Overload:BestHTTP.WebSocket.Frames.WebSocketFrame.#ctor
  name: WebSocketFrame
  nameWithType: WebSocketFrame.WebSocketFrame
  fullName: BestHTTP.WebSocket.Frames.WebSocketFrame.WebSocketFrame
- uid: BestHTTP.WebSocket.WebSocket
  commentId: T:BestHTTP.WebSocket.WebSocket
  parent: BestHTTP.WebSocket
  name: WebSocket
  nameWithType: WebSocket
  fullName: BestHTTP.WebSocket.WebSocket
- uid: BestHTTP.WebSocket
  commentId: N:BestHTTP.WebSocket
  name: BestHTTP.WebSocket
  nameWithType: BestHTTP.WebSocket
  fullName: BestHTTP.WebSocket
- uid: System.UInt64
  commentId: T:System.UInt64
  parent: System
  isExternal: true
  name: UInt64
  nameWithType: UInt64
  fullName: System.UInt64
- uid: BestHTTP.WebSocket.Frames.WebSocketFrame.Get*
  commentId: Overload:BestHTTP.WebSocket.Frames.WebSocketFrame.Get
  name: Get
  nameWithType: WebSocketFrame.Get
  fullName: BestHTTP.WebSocket.Frames.WebSocketFrame.Get
- uid: BestHTTP.WebSocket.Frames.WebSocketFrame.Fragment*
  commentId: Overload:BestHTTP.WebSocket.Frames.WebSocketFrame.Fragment
  name: Fragment
  nameWithType: WebSocketFrame.Fragment
  fullName: BestHTTP.WebSocket.Frames.WebSocketFrame.Fragment
- uid: System.UInt16
  commentId: T:System.UInt16
  parent: System
  isExternal: true
  name: UInt16
  nameWithType: UInt16
  fullName: System.UInt16
- uid: BestHTTP.WebSocket.Frames.WebSocketFrame[]
  isExternal: true
  name: WebSocketFrame[]
  nameWithType: WebSocketFrame[]
  fullName: BestHTTP.WebSocket.Frames.WebSocketFrame[]
  nameWithType.vb: WebSocketFrame()
  fullName.vb: BestHTTP.WebSocket.Frames.WebSocketFrame()
  name.vb: WebSocketFrame()
  spec.csharp:
  - uid: BestHTTP.WebSocket.Frames.WebSocketFrame
    name: WebSocketFrame
    nameWithType: WebSocketFrame
    fullName: BestHTTP.WebSocket.Frames.WebSocketFrame
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: BestHTTP.WebSocket.Frames.WebSocketFrame
    name: WebSocketFrame
    nameWithType: WebSocketFrame
    fullName: BestHTTP.WebSocket.Frames.WebSocketFrame
  - name: ()
    nameWithType: ()
    fullName: ()
