### YamlMime:ManagedReference
items:
- uid: Org.BouncyCastle.Crypto.Tls.LegacyTlsAuthentication
  commentId: T:Org.BouncyCastle.Crypto.Tls.LegacyTlsAuthentication
  id: LegacyTlsAuthentication
  parent: Org.BouncyCastle.Crypto.Tls
  children:
  - Org.BouncyCastle.Crypto.Tls.LegacyTlsAuthentication.#ctor(System.Uri,Org.BouncyCastle.Crypto.Tls.ICertificateVerifyer,Org.BouncyCastle.Crypto.Tls.IClientCredentialsProvider)
  - Org.BouncyCastle.Crypto.Tls.LegacyTlsAuthentication.credProvider
  - Org.BouncyCastle.Crypto.Tls.LegacyTlsAuthentication.GetClientCredentials(Org.BouncyCastle.Crypto.Tls.TlsContext,Org.BouncyCastle.Crypto.Tls.CertificateRequest)
  - Org.BouncyCastle.Crypto.Tls.LegacyTlsAuthentication.NotifyServerCertificate(Org.BouncyCastle.Crypto.Tls.Certificate)
  - Org.BouncyCastle.Crypto.Tls.LegacyTlsAuthentication.TargetUri
  - Org.BouncyCastle.Crypto.Tls.LegacyTlsAuthentication.verifyer
  langs:
  - csharp
  - vb
  name: LegacyTlsAuthentication
  nameWithType: LegacyTlsAuthentication
  fullName: Org.BouncyCastle.Crypto.Tls.LegacyTlsAuthentication
  type: Class
  source:
    id: LegacyTlsAuthentication
    path: ''
    startLine: 117696
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Tls
  summary: "\nA temporary class to wrap old CertificateVerifyer stuff for new TlsAuthentication.\n"
  example: []
  syntax:
    content: 'public class LegacyTlsAuthentication : TlsAuthentication'
    content.vb: >-
      Public Class LegacyTlsAuthentication
          Implements TlsAuthentication
  inheritance:
  - System.Object
  implements:
  - Org.BouncyCastle.Crypto.Tls.TlsAuthentication
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ToString
  - System.Object.ReferenceEquals(System.Object,System.Object)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Org.BouncyCastle.Crypto.Tls.LegacyTlsAuthentication.verifyer
  commentId: F:Org.BouncyCastle.Crypto.Tls.LegacyTlsAuthentication.verifyer
  id: verifyer
  parent: Org.BouncyCastle.Crypto.Tls.LegacyTlsAuthentication
  langs:
  - csharp
  - vb
  name: verifyer
  nameWithType: LegacyTlsAuthentication.verifyer
  fullName: Org.BouncyCastle.Crypto.Tls.LegacyTlsAuthentication.verifyer
  type: Field
  source:
    id: verifyer
    path: ''
    startLine: 117698
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Tls
  syntax:
    content: protected ICertificateVerifyer verifyer
    return:
      type: Org.BouncyCastle.Crypto.Tls.ICertificateVerifyer
    content.vb: Protected verifyer As ICertificateVerifyer
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Org.BouncyCastle.Crypto.Tls.LegacyTlsAuthentication.credProvider
  commentId: F:Org.BouncyCastle.Crypto.Tls.LegacyTlsAuthentication.credProvider
  id: credProvider
  parent: Org.BouncyCastle.Crypto.Tls.LegacyTlsAuthentication
  langs:
  - csharp
  - vb
  name: credProvider
  nameWithType: LegacyTlsAuthentication.credProvider
  fullName: Org.BouncyCastle.Crypto.Tls.LegacyTlsAuthentication.credProvider
  type: Field
  source:
    id: credProvider
    path: ''
    startLine: 117699
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Tls
  syntax:
    content: protected IClientCredentialsProvider credProvider
    return:
      type: Org.BouncyCastle.Crypto.Tls.IClientCredentialsProvider
    content.vb: Protected credProvider As IClientCredentialsProvider
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Org.BouncyCastle.Crypto.Tls.LegacyTlsAuthentication.TargetUri
  commentId: F:Org.BouncyCastle.Crypto.Tls.LegacyTlsAuthentication.TargetUri
  id: TargetUri
  parent: Org.BouncyCastle.Crypto.Tls.LegacyTlsAuthentication
  langs:
  - csharp
  - vb
  name: TargetUri
  nameWithType: LegacyTlsAuthentication.TargetUri
  fullName: Org.BouncyCastle.Crypto.Tls.LegacyTlsAuthentication.TargetUri
  type: Field
  source:
    id: TargetUri
    path: ''
    startLine: 117700
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Tls
  syntax:
    content: protected Uri TargetUri
    return:
      type: System.Uri
    content.vb: Protected TargetUri As Uri
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Org.BouncyCastle.Crypto.Tls.LegacyTlsAuthentication.#ctor(System.Uri,Org.BouncyCastle.Crypto.Tls.ICertificateVerifyer,Org.BouncyCastle.Crypto.Tls.IClientCredentialsProvider)
  commentId: M:Org.BouncyCastle.Crypto.Tls.LegacyTlsAuthentication.#ctor(System.Uri,Org.BouncyCastle.Crypto.Tls.ICertificateVerifyer,Org.BouncyCastle.Crypto.Tls.IClientCredentialsProvider)
  id: '#ctor(System.Uri,Org.BouncyCastle.Crypto.Tls.ICertificateVerifyer,Org.BouncyCastle.Crypto.Tls.IClientCredentialsProvider)'
  parent: Org.BouncyCastle.Crypto.Tls.LegacyTlsAuthentication
  langs:
  - csharp
  - vb
  name: LegacyTlsAuthentication(Uri, ICertificateVerifyer, IClientCredentialsProvider)
  nameWithType: LegacyTlsAuthentication.LegacyTlsAuthentication(Uri, ICertificateVerifyer, IClientCredentialsProvider)
  fullName: Org.BouncyCastle.Crypto.Tls.LegacyTlsAuthentication.LegacyTlsAuthentication(System.Uri, Org.BouncyCastle.Crypto.Tls.ICertificateVerifyer, Org.BouncyCastle.Crypto.Tls.IClientCredentialsProvider)
  type: Constructor
  source:
    id: .ctor
    path: ''
    startLine: 117702
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Tls
  syntax:
    content: public LegacyTlsAuthentication(Uri targetUri, ICertificateVerifyer verifyer, IClientCredentialsProvider prov)
    parameters:
    - id: targetUri
      type: System.Uri
    - id: verifyer
      type: Org.BouncyCastle.Crypto.Tls.ICertificateVerifyer
    - id: prov
      type: Org.BouncyCastle.Crypto.Tls.IClientCredentialsProvider
    content.vb: Public Sub New(targetUri As Uri, verifyer As ICertificateVerifyer, prov As IClientCredentialsProvider)
  overload: Org.BouncyCastle.Crypto.Tls.LegacyTlsAuthentication.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Org.BouncyCastle.Crypto.Tls.LegacyTlsAuthentication.NotifyServerCertificate(Org.BouncyCastle.Crypto.Tls.Certificate)
  commentId: M:Org.BouncyCastle.Crypto.Tls.LegacyTlsAuthentication.NotifyServerCertificate(Org.BouncyCastle.Crypto.Tls.Certificate)
  id: NotifyServerCertificate(Org.BouncyCastle.Crypto.Tls.Certificate)
  parent: Org.BouncyCastle.Crypto.Tls.LegacyTlsAuthentication
  langs:
  - csharp
  - vb
  name: NotifyServerCertificate(Certificate)
  nameWithType: LegacyTlsAuthentication.NotifyServerCertificate(Certificate)
  fullName: Org.BouncyCastle.Crypto.Tls.LegacyTlsAuthentication.NotifyServerCertificate(Org.BouncyCastle.Crypto.Tls.Certificate)
  type: Method
  source:
    id: NotifyServerCertificate
    path: ''
    startLine: 117709
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Tls
  syntax:
    content: public virtual void NotifyServerCertificate(Certificate serverCertificate)
    parameters:
    - id: serverCertificate
      type: Org.BouncyCastle.Crypto.Tls.Certificate
    content.vb: Public Overridable Sub NotifyServerCertificate(serverCertificate As Certificate)
  overload: Org.BouncyCastle.Crypto.Tls.LegacyTlsAuthentication.NotifyServerCertificate*
  implements:
  - Org.BouncyCastle.Crypto.Tls.TlsAuthentication.NotifyServerCertificate(Org.BouncyCastle.Crypto.Tls.Certificate)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Org.BouncyCastle.Crypto.Tls.LegacyTlsAuthentication.GetClientCredentials(Org.BouncyCastle.Crypto.Tls.TlsContext,Org.BouncyCastle.Crypto.Tls.CertificateRequest)
  commentId: M:Org.BouncyCastle.Crypto.Tls.LegacyTlsAuthentication.GetClientCredentials(Org.BouncyCastle.Crypto.Tls.TlsContext,Org.BouncyCastle.Crypto.Tls.CertificateRequest)
  id: GetClientCredentials(Org.BouncyCastle.Crypto.Tls.TlsContext,Org.BouncyCastle.Crypto.Tls.CertificateRequest)
  parent: Org.BouncyCastle.Crypto.Tls.LegacyTlsAuthentication
  langs:
  - csharp
  - vb
  name: GetClientCredentials(TlsContext, CertificateRequest)
  nameWithType: LegacyTlsAuthentication.GetClientCredentials(TlsContext, CertificateRequest)
  fullName: Org.BouncyCastle.Crypto.Tls.LegacyTlsAuthentication.GetClientCredentials(Org.BouncyCastle.Crypto.Tls.TlsContext, Org.BouncyCastle.Crypto.Tls.CertificateRequest)
  type: Method
  source:
    id: GetClientCredentials
    path: ''
    startLine: 117715
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Tls
  syntax:
    content: public virtual TlsCredentials GetClientCredentials(TlsContext context, CertificateRequest certificateRequest)
    parameters:
    - id: context
      type: Org.BouncyCastle.Crypto.Tls.TlsContext
    - id: certificateRequest
      type: Org.BouncyCastle.Crypto.Tls.CertificateRequest
    return:
      type: Org.BouncyCastle.Crypto.Tls.TlsCredentials
    content.vb: Public Overridable Function GetClientCredentials(context As TlsContext, certificateRequest As CertificateRequest) As TlsCredentials
  overload: Org.BouncyCastle.Crypto.Tls.LegacyTlsAuthentication.GetClientCredentials*
  implements:
  - Org.BouncyCastle.Crypto.Tls.TlsAuthentication.GetClientCredentials(Org.BouncyCastle.Crypto.Tls.TlsContext,Org.BouncyCastle.Crypto.Tls.CertificateRequest)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
references:
- uid: Org.BouncyCastle.Crypto.Tls
  commentId: N:Org.BouncyCastle.Crypto.Tls
  name: Org.BouncyCastle.Crypto.Tls
  nameWithType: Org.BouncyCastle.Crypto.Tls
  fullName: Org.BouncyCastle.Crypto.Tls
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Org.BouncyCastle.Crypto.Tls.TlsAuthentication
  commentId: T:Org.BouncyCastle.Crypto.Tls.TlsAuthentication
  parent: Org.BouncyCastle.Crypto.Tls
  name: TlsAuthentication
  nameWithType: TlsAuthentication
  fullName: Org.BouncyCastle.Crypto.Tls.TlsAuthentication
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Org.BouncyCastle.Crypto.Tls.ICertificateVerifyer
  commentId: T:Org.BouncyCastle.Crypto.Tls.ICertificateVerifyer
  parent: Org.BouncyCastle.Crypto.Tls
  name: ICertificateVerifyer
  nameWithType: ICertificateVerifyer
  fullName: Org.BouncyCastle.Crypto.Tls.ICertificateVerifyer
- uid: Org.BouncyCastle.Crypto.Tls.IClientCredentialsProvider
  commentId: T:Org.BouncyCastle.Crypto.Tls.IClientCredentialsProvider
  parent: Org.BouncyCastle.Crypto.Tls
  name: IClientCredentialsProvider
  nameWithType: IClientCredentialsProvider
  fullName: Org.BouncyCastle.Crypto.Tls.IClientCredentialsProvider
- uid: System.Uri
  commentId: T:System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: Org.BouncyCastle.Crypto.Tls.LegacyTlsAuthentication.#ctor*
  commentId: Overload:Org.BouncyCastle.Crypto.Tls.LegacyTlsAuthentication.#ctor
  name: LegacyTlsAuthentication
  nameWithType: LegacyTlsAuthentication.LegacyTlsAuthentication
  fullName: Org.BouncyCastle.Crypto.Tls.LegacyTlsAuthentication.LegacyTlsAuthentication
- uid: Org.BouncyCastle.Crypto.Tls.LegacyTlsAuthentication.NotifyServerCertificate*
  commentId: Overload:Org.BouncyCastle.Crypto.Tls.LegacyTlsAuthentication.NotifyServerCertificate
  name: NotifyServerCertificate
  nameWithType: LegacyTlsAuthentication.NotifyServerCertificate
  fullName: Org.BouncyCastle.Crypto.Tls.LegacyTlsAuthentication.NotifyServerCertificate
- uid: Org.BouncyCastle.Crypto.Tls.TlsAuthentication.NotifyServerCertificate(Org.BouncyCastle.Crypto.Tls.Certificate)
  commentId: M:Org.BouncyCastle.Crypto.Tls.TlsAuthentication.NotifyServerCertificate(Org.BouncyCastle.Crypto.Tls.Certificate)
  parent: Org.BouncyCastle.Crypto.Tls.TlsAuthentication
  name: NotifyServerCertificate(Certificate)
  nameWithType: TlsAuthentication.NotifyServerCertificate(Certificate)
  fullName: Org.BouncyCastle.Crypto.Tls.TlsAuthentication.NotifyServerCertificate(Org.BouncyCastle.Crypto.Tls.Certificate)
  spec.csharp:
  - uid: Org.BouncyCastle.Crypto.Tls.TlsAuthentication.NotifyServerCertificate(Org.BouncyCastle.Crypto.Tls.Certificate)
    name: NotifyServerCertificate
    nameWithType: TlsAuthentication.NotifyServerCertificate
    fullName: Org.BouncyCastle.Crypto.Tls.TlsAuthentication.NotifyServerCertificate
  - name: (
    nameWithType: (
    fullName: (
  - uid: Org.BouncyCastle.Crypto.Tls.Certificate
    name: Certificate
    nameWithType: Certificate
    fullName: Org.BouncyCastle.Crypto.Tls.Certificate
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Org.BouncyCastle.Crypto.Tls.TlsAuthentication.NotifyServerCertificate(Org.BouncyCastle.Crypto.Tls.Certificate)
    name: NotifyServerCertificate
    nameWithType: TlsAuthentication.NotifyServerCertificate
    fullName: Org.BouncyCastle.Crypto.Tls.TlsAuthentication.NotifyServerCertificate
  - name: (
    nameWithType: (
    fullName: (
  - uid: Org.BouncyCastle.Crypto.Tls.Certificate
    name: Certificate
    nameWithType: Certificate
    fullName: Org.BouncyCastle.Crypto.Tls.Certificate
  - name: )
    nameWithType: )
    fullName: )
- uid: Org.BouncyCastle.Crypto.Tls.Certificate
  commentId: T:Org.BouncyCastle.Crypto.Tls.Certificate
  parent: Org.BouncyCastle.Crypto.Tls
  name: Certificate
  nameWithType: Certificate
  fullName: Org.BouncyCastle.Crypto.Tls.Certificate
- uid: Org.BouncyCastle.Crypto.Tls.LegacyTlsAuthentication.GetClientCredentials*
  commentId: Overload:Org.BouncyCastle.Crypto.Tls.LegacyTlsAuthentication.GetClientCredentials
  name: GetClientCredentials
  nameWithType: LegacyTlsAuthentication.GetClientCredentials
  fullName: Org.BouncyCastle.Crypto.Tls.LegacyTlsAuthentication.GetClientCredentials
- uid: Org.BouncyCastle.Crypto.Tls.TlsAuthentication.GetClientCredentials(Org.BouncyCastle.Crypto.Tls.TlsContext,Org.BouncyCastle.Crypto.Tls.CertificateRequest)
  commentId: M:Org.BouncyCastle.Crypto.Tls.TlsAuthentication.GetClientCredentials(Org.BouncyCastle.Crypto.Tls.TlsContext,Org.BouncyCastle.Crypto.Tls.CertificateRequest)
  parent: Org.BouncyCastle.Crypto.Tls.TlsAuthentication
  name: GetClientCredentials(TlsContext, CertificateRequest)
  nameWithType: TlsAuthentication.GetClientCredentials(TlsContext, CertificateRequest)
  fullName: Org.BouncyCastle.Crypto.Tls.TlsAuthentication.GetClientCredentials(Org.BouncyCastle.Crypto.Tls.TlsContext, Org.BouncyCastle.Crypto.Tls.CertificateRequest)
  spec.csharp:
  - uid: Org.BouncyCastle.Crypto.Tls.TlsAuthentication.GetClientCredentials(Org.BouncyCastle.Crypto.Tls.TlsContext,Org.BouncyCastle.Crypto.Tls.CertificateRequest)
    name: GetClientCredentials
    nameWithType: TlsAuthentication.GetClientCredentials
    fullName: Org.BouncyCastle.Crypto.Tls.TlsAuthentication.GetClientCredentials
  - name: (
    nameWithType: (
    fullName: (
  - uid: Org.BouncyCastle.Crypto.Tls.TlsContext
    name: TlsContext
    nameWithType: TlsContext
    fullName: Org.BouncyCastle.Crypto.Tls.TlsContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Org.BouncyCastle.Crypto.Tls.CertificateRequest
    name: CertificateRequest
    nameWithType: CertificateRequest
    fullName: Org.BouncyCastle.Crypto.Tls.CertificateRequest
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Org.BouncyCastle.Crypto.Tls.TlsAuthentication.GetClientCredentials(Org.BouncyCastle.Crypto.Tls.TlsContext,Org.BouncyCastle.Crypto.Tls.CertificateRequest)
    name: GetClientCredentials
    nameWithType: TlsAuthentication.GetClientCredentials
    fullName: Org.BouncyCastle.Crypto.Tls.TlsAuthentication.GetClientCredentials
  - name: (
    nameWithType: (
    fullName: (
  - uid: Org.BouncyCastle.Crypto.Tls.TlsContext
    name: TlsContext
    nameWithType: TlsContext
    fullName: Org.BouncyCastle.Crypto.Tls.TlsContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Org.BouncyCastle.Crypto.Tls.CertificateRequest
    name: CertificateRequest
    nameWithType: CertificateRequest
    fullName: Org.BouncyCastle.Crypto.Tls.CertificateRequest
  - name: )
    nameWithType: )
    fullName: )
- uid: Org.BouncyCastle.Crypto.Tls.TlsContext
  commentId: T:Org.BouncyCastle.Crypto.Tls.TlsContext
  parent: Org.BouncyCastle.Crypto.Tls
  name: TlsContext
  nameWithType: TlsContext
  fullName: Org.BouncyCastle.Crypto.Tls.TlsContext
- uid: Org.BouncyCastle.Crypto.Tls.CertificateRequest
  commentId: T:Org.BouncyCastle.Crypto.Tls.CertificateRequest
  parent: Org.BouncyCastle.Crypto.Tls
  name: CertificateRequest
  nameWithType: CertificateRequest
  fullName: Org.BouncyCastle.Crypto.Tls.CertificateRequest
- uid: Org.BouncyCastle.Crypto.Tls.TlsCredentials
  commentId: T:Org.BouncyCastle.Crypto.Tls.TlsCredentials
  parent: Org.BouncyCastle.Crypto.Tls
  name: TlsCredentials
  nameWithType: TlsCredentials
  fullName: Org.BouncyCastle.Crypto.Tls.TlsCredentials
