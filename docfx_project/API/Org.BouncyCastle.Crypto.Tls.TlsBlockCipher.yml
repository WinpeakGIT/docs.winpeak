### YamlMime:ManagedReference
items:
- uid: Org.BouncyCastle.Crypto.Tls.TlsBlockCipher
  commentId: T:Org.BouncyCastle.Crypto.Tls.TlsBlockCipher
  id: TlsBlockCipher
  parent: Org.BouncyCastle.Crypto.Tls
  children:
  - Org.BouncyCastle.Crypto.Tls.TlsBlockCipher.#ctor(Org.BouncyCastle.Crypto.Tls.TlsContext,Org.BouncyCastle.Crypto.IBlockCipher,Org.BouncyCastle.Crypto.IBlockCipher,Org.BouncyCastle.Crypto.IDigest,Org.BouncyCastle.Crypto.IDigest,System.Int32)
  - Org.BouncyCastle.Crypto.Tls.TlsBlockCipher.CheckPaddingConstantTime(System.Byte[],System.Int32,System.Int32,System.Int32,System.Int32)
  - Org.BouncyCastle.Crypto.Tls.TlsBlockCipher.ChooseExtraPadBlocks(SecureRandom,System.Int32)
  - Org.BouncyCastle.Crypto.Tls.TlsBlockCipher.context
  - Org.BouncyCastle.Crypto.Tls.TlsBlockCipher.DecodeCiphertext(System.Int64,System.Byte,System.Byte[],System.Int32,System.Int32)
  - Org.BouncyCastle.Crypto.Tls.TlsBlockCipher.decryptCipher
  - Org.BouncyCastle.Crypto.Tls.TlsBlockCipher.EncodePlaintext(System.Int64,System.Byte,System.Byte[],System.Int32,System.Int32)
  - Org.BouncyCastle.Crypto.Tls.TlsBlockCipher.encryptCipher
  - Org.BouncyCastle.Crypto.Tls.TlsBlockCipher.encryptThenMac
  - Org.BouncyCastle.Crypto.Tls.TlsBlockCipher.GetPlaintextLimit(System.Int32)
  - Org.BouncyCastle.Crypto.Tls.TlsBlockCipher.LowestBitSet(System.Int32)
  - Org.BouncyCastle.Crypto.Tls.TlsBlockCipher.mReadMac
  - Org.BouncyCastle.Crypto.Tls.TlsBlockCipher.mWriteMac
  - Org.BouncyCastle.Crypto.Tls.TlsBlockCipher.randomData
  - Org.BouncyCastle.Crypto.Tls.TlsBlockCipher.ReadMac
  - Org.BouncyCastle.Crypto.Tls.TlsBlockCipher.useExplicitIV
  - Org.BouncyCastle.Crypto.Tls.TlsBlockCipher.WriteMac
  langs:
  - csharp
  - vb
  name: TlsBlockCipher
  nameWithType: TlsBlockCipher
  fullName: Org.BouncyCastle.Crypto.Tls.TlsBlockCipher
  type: Class
  source:
    id: TlsBlockCipher
    path: ''
    startLine: 129060
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Tls
  summary: "\nA generic TLS 1.0-1.2 / SSLv3 block cipher. This can be used for AES or 3DES for example.\n"
  example: []
  syntax:
    content: 'public class TlsBlockCipher : TlsCipher'
    content.vb: >-
      Public Class TlsBlockCipher
          Implements TlsCipher
  inheritance:
  - System.Object
  implements:
  - Org.BouncyCastle.Crypto.Tls.TlsCipher
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ToString
  - System.Object.ReferenceEquals(System.Object,System.Object)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Org.BouncyCastle.Crypto.Tls.TlsBlockCipher.context
  commentId: F:Org.BouncyCastle.Crypto.Tls.TlsBlockCipher.context
  id: context
  parent: Org.BouncyCastle.Crypto.Tls.TlsBlockCipher
  langs:
  - csharp
  - vb
  name: context
  nameWithType: TlsBlockCipher.context
  fullName: Org.BouncyCastle.Crypto.Tls.TlsBlockCipher.context
  type: Field
  source:
    id: context
    path: ''
    startLine: 129063
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Tls
  syntax:
    content: protected readonly TlsContext context
    return:
      type: Org.BouncyCastle.Crypto.Tls.TlsContext
    content.vb: Protected ReadOnly context As TlsContext
  modifiers.csharp:
  - protected
  - readonly
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: Org.BouncyCastle.Crypto.Tls.TlsBlockCipher.randomData
  commentId: F:Org.BouncyCastle.Crypto.Tls.TlsBlockCipher.randomData
  id: randomData
  parent: Org.BouncyCastle.Crypto.Tls.TlsBlockCipher
  langs:
  - csharp
  - vb
  name: randomData
  nameWithType: TlsBlockCipher.randomData
  fullName: Org.BouncyCastle.Crypto.Tls.TlsBlockCipher.randomData
  type: Field
  source:
    id: randomData
    path: ''
    startLine: 129064
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Tls
  syntax:
    content: protected readonly byte[] randomData
    return:
      type: System.Byte[]
    content.vb: Protected ReadOnly randomData As Byte()
  modifiers.csharp:
  - protected
  - readonly
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: Org.BouncyCastle.Crypto.Tls.TlsBlockCipher.useExplicitIV
  commentId: F:Org.BouncyCastle.Crypto.Tls.TlsBlockCipher.useExplicitIV
  id: useExplicitIV
  parent: Org.BouncyCastle.Crypto.Tls.TlsBlockCipher
  langs:
  - csharp
  - vb
  name: useExplicitIV
  nameWithType: TlsBlockCipher.useExplicitIV
  fullName: Org.BouncyCastle.Crypto.Tls.TlsBlockCipher.useExplicitIV
  type: Field
  source:
    id: useExplicitIV
    path: ''
    startLine: 129065
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Tls
  syntax:
    content: protected readonly bool useExplicitIV
    return:
      type: System.Boolean
    content.vb: Protected ReadOnly useExplicitIV As Boolean
  modifiers.csharp:
  - protected
  - readonly
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: Org.BouncyCastle.Crypto.Tls.TlsBlockCipher.encryptThenMac
  commentId: F:Org.BouncyCastle.Crypto.Tls.TlsBlockCipher.encryptThenMac
  id: encryptThenMac
  parent: Org.BouncyCastle.Crypto.Tls.TlsBlockCipher
  langs:
  - csharp
  - vb
  name: encryptThenMac
  nameWithType: TlsBlockCipher.encryptThenMac
  fullName: Org.BouncyCastle.Crypto.Tls.TlsBlockCipher.encryptThenMac
  type: Field
  source:
    id: encryptThenMac
    path: ''
    startLine: 129066
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Tls
  syntax:
    content: protected readonly bool encryptThenMac
    return:
      type: System.Boolean
    content.vb: Protected ReadOnly encryptThenMac As Boolean
  modifiers.csharp:
  - protected
  - readonly
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: Org.BouncyCastle.Crypto.Tls.TlsBlockCipher.encryptCipher
  commentId: F:Org.BouncyCastle.Crypto.Tls.TlsBlockCipher.encryptCipher
  id: encryptCipher
  parent: Org.BouncyCastle.Crypto.Tls.TlsBlockCipher
  langs:
  - csharp
  - vb
  name: encryptCipher
  nameWithType: TlsBlockCipher.encryptCipher
  fullName: Org.BouncyCastle.Crypto.Tls.TlsBlockCipher.encryptCipher
  type: Field
  source:
    id: encryptCipher
    path: ''
    startLine: 129068
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Tls
  syntax:
    content: protected readonly IBlockCipher encryptCipher
    return:
      type: Org.BouncyCastle.Crypto.IBlockCipher
    content.vb: Protected ReadOnly encryptCipher As IBlockCipher
  modifiers.csharp:
  - protected
  - readonly
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: Org.BouncyCastle.Crypto.Tls.TlsBlockCipher.decryptCipher
  commentId: F:Org.BouncyCastle.Crypto.Tls.TlsBlockCipher.decryptCipher
  id: decryptCipher
  parent: Org.BouncyCastle.Crypto.Tls.TlsBlockCipher
  langs:
  - csharp
  - vb
  name: decryptCipher
  nameWithType: TlsBlockCipher.decryptCipher
  fullName: Org.BouncyCastle.Crypto.Tls.TlsBlockCipher.decryptCipher
  type: Field
  source:
    id: decryptCipher
    path: ''
    startLine: 129069
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Tls
  syntax:
    content: protected readonly IBlockCipher decryptCipher
    return:
      type: Org.BouncyCastle.Crypto.IBlockCipher
    content.vb: Protected ReadOnly decryptCipher As IBlockCipher
  modifiers.csharp:
  - protected
  - readonly
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: Org.BouncyCastle.Crypto.Tls.TlsBlockCipher.mWriteMac
  commentId: F:Org.BouncyCastle.Crypto.Tls.TlsBlockCipher.mWriteMac
  id: mWriteMac
  parent: Org.BouncyCastle.Crypto.Tls.TlsBlockCipher
  langs:
  - csharp
  - vb
  name: mWriteMac
  nameWithType: TlsBlockCipher.mWriteMac
  fullName: Org.BouncyCastle.Crypto.Tls.TlsBlockCipher.mWriteMac
  type: Field
  source:
    id: mWriteMac
    path: ''
    startLine: 129071
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Tls
  syntax:
    content: protected readonly TlsMac mWriteMac
    return:
      type: Org.BouncyCastle.Crypto.Tls.TlsMac
    content.vb: Protected ReadOnly mWriteMac As TlsMac
  modifiers.csharp:
  - protected
  - readonly
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: Org.BouncyCastle.Crypto.Tls.TlsBlockCipher.mReadMac
  commentId: F:Org.BouncyCastle.Crypto.Tls.TlsBlockCipher.mReadMac
  id: mReadMac
  parent: Org.BouncyCastle.Crypto.Tls.TlsBlockCipher
  langs:
  - csharp
  - vb
  name: mReadMac
  nameWithType: TlsBlockCipher.mReadMac
  fullName: Org.BouncyCastle.Crypto.Tls.TlsBlockCipher.mReadMac
  type: Field
  source:
    id: mReadMac
    path: ''
    startLine: 129072
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Tls
  syntax:
    content: protected readonly TlsMac mReadMac
    return:
      type: Org.BouncyCastle.Crypto.Tls.TlsMac
    content.vb: Protected ReadOnly mReadMac As TlsMac
  modifiers.csharp:
  - protected
  - readonly
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: Org.BouncyCastle.Crypto.Tls.TlsBlockCipher.WriteMac
  commentId: P:Org.BouncyCastle.Crypto.Tls.TlsBlockCipher.WriteMac
  id: WriteMac
  parent: Org.BouncyCastle.Crypto.Tls.TlsBlockCipher
  langs:
  - csharp
  - vb
  name: WriteMac
  nameWithType: TlsBlockCipher.WriteMac
  fullName: Org.BouncyCastle.Crypto.Tls.TlsBlockCipher.WriteMac
  type: Property
  source:
    id: WriteMac
    path: ''
    startLine: 129074
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Tls
  syntax:
    content: public virtual TlsMac WriteMac { get; }
    parameters: []
    return:
      type: Org.BouncyCastle.Crypto.Tls.TlsMac
    content.vb: Public Overridable ReadOnly Property WriteMac As TlsMac
  overload: Org.BouncyCastle.Crypto.Tls.TlsBlockCipher.WriteMac*
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: Org.BouncyCastle.Crypto.Tls.TlsBlockCipher.ReadMac
  commentId: P:Org.BouncyCastle.Crypto.Tls.TlsBlockCipher.ReadMac
  id: ReadMac
  parent: Org.BouncyCastle.Crypto.Tls.TlsBlockCipher
  langs:
  - csharp
  - vb
  name: ReadMac
  nameWithType: TlsBlockCipher.ReadMac
  fullName: Org.BouncyCastle.Crypto.Tls.TlsBlockCipher.ReadMac
  type: Property
  source:
    id: ReadMac
    path: ''
    startLine: 129079
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Tls
  syntax:
    content: public virtual TlsMac ReadMac { get; }
    parameters: []
    return:
      type: Org.BouncyCastle.Crypto.Tls.TlsMac
    content.vb: Public Overridable ReadOnly Property ReadMac As TlsMac
  overload: Org.BouncyCastle.Crypto.Tls.TlsBlockCipher.ReadMac*
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: Org.BouncyCastle.Crypto.Tls.TlsBlockCipher.#ctor(Org.BouncyCastle.Crypto.Tls.TlsContext,Org.BouncyCastle.Crypto.IBlockCipher,Org.BouncyCastle.Crypto.IBlockCipher,Org.BouncyCastle.Crypto.IDigest,Org.BouncyCastle.Crypto.IDigest,System.Int32)
  commentId: M:Org.BouncyCastle.Crypto.Tls.TlsBlockCipher.#ctor(Org.BouncyCastle.Crypto.Tls.TlsContext,Org.BouncyCastle.Crypto.IBlockCipher,Org.BouncyCastle.Crypto.IBlockCipher,Org.BouncyCastle.Crypto.IDigest,Org.BouncyCastle.Crypto.IDigest,System.Int32)
  id: '#ctor(Org.BouncyCastle.Crypto.Tls.TlsContext,Org.BouncyCastle.Crypto.IBlockCipher,Org.BouncyCastle.Crypto.IBlockCipher,Org.BouncyCastle.Crypto.IDigest,Org.BouncyCastle.Crypto.IDigest,System.Int32)'
  parent: Org.BouncyCastle.Crypto.Tls.TlsBlockCipher
  langs:
  - csharp
  - vb
  name: TlsBlockCipher(TlsContext, IBlockCipher, IBlockCipher, IDigest, IDigest, Int32)
  nameWithType: TlsBlockCipher.TlsBlockCipher(TlsContext, IBlockCipher, IBlockCipher, IDigest, IDigest, Int32)
  fullName: Org.BouncyCastle.Crypto.Tls.TlsBlockCipher.TlsBlockCipher(Org.BouncyCastle.Crypto.Tls.TlsContext, Org.BouncyCastle.Crypto.IBlockCipher, Org.BouncyCastle.Crypto.IBlockCipher, Org.BouncyCastle.Crypto.IDigest, Org.BouncyCastle.Crypto.IDigest, System.Int32)
  type: Constructor
  source:
    id: .ctor
    path: ''
    startLine: 129085
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Tls
  example: []
  syntax:
    content: public TlsBlockCipher(TlsContext context, IBlockCipher clientWriteCipher, IBlockCipher serverWriteCipher, IDigest clientWriteDigest, IDigest serverWriteDigest, int cipherKeySize)
    parameters:
    - id: context
      type: Org.BouncyCastle.Crypto.Tls.TlsContext
    - id: clientWriteCipher
      type: Org.BouncyCastle.Crypto.IBlockCipher
    - id: serverWriteCipher
      type: Org.BouncyCastle.Crypto.IBlockCipher
    - id: clientWriteDigest
      type: Org.BouncyCastle.Crypto.IDigest
    - id: serverWriteDigest
      type: Org.BouncyCastle.Crypto.IDigest
    - id: cipherKeySize
      type: System.Int32
    content.vb: Public Sub New(context As TlsContext, clientWriteCipher As IBlockCipher, serverWriteCipher As IBlockCipher, clientWriteDigest As IDigest, serverWriteDigest As IDigest, cipherKeySize As Integer)
  overload: Org.BouncyCastle.Crypto.Tls.TlsBlockCipher.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Org.BouncyCastle.Crypto.Tls.TlsBlockCipher.GetPlaintextLimit(System.Int32)
  commentId: M:Org.BouncyCastle.Crypto.Tls.TlsBlockCipher.GetPlaintextLimit(System.Int32)
  id: GetPlaintextLimit(System.Int32)
  parent: Org.BouncyCastle.Crypto.Tls.TlsBlockCipher
  langs:
  - csharp
  - vb
  name: GetPlaintextLimit(Int32)
  nameWithType: TlsBlockCipher.GetPlaintextLimit(Int32)
  fullName: Org.BouncyCastle.Crypto.Tls.TlsBlockCipher.GetPlaintextLimit(System.Int32)
  type: Method
  source:
    id: GetPlaintextLimit
    path: ''
    startLine: 129164
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Tls
  syntax:
    content: public virtual int GetPlaintextLimit(int ciphertextLimit)
    parameters:
    - id: ciphertextLimit
      type: System.Int32
    return:
      type: System.Int32
    content.vb: Public Overridable Function GetPlaintextLimit(ciphertextLimit As Integer) As Integer
  overload: Org.BouncyCastle.Crypto.Tls.TlsBlockCipher.GetPlaintextLimit*
  implements:
  - Org.BouncyCastle.Crypto.Tls.TlsCipher.GetPlaintextLimit(System.Int32)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Org.BouncyCastle.Crypto.Tls.TlsBlockCipher.EncodePlaintext(System.Int64,System.Byte,System.Byte[],System.Int32,System.Int32)
  commentId: M:Org.BouncyCastle.Crypto.Tls.TlsBlockCipher.EncodePlaintext(System.Int64,System.Byte,System.Byte[],System.Int32,System.Int32)
  id: EncodePlaintext(System.Int64,System.Byte,System.Byte[],System.Int32,System.Int32)
  parent: Org.BouncyCastle.Crypto.Tls.TlsBlockCipher
  langs:
  - csharp
  - vb
  name: EncodePlaintext(Int64, Byte, Byte[], Int32, Int32)
  nameWithType: TlsBlockCipher.EncodePlaintext(Int64, Byte, Byte[], Int32, Int32)
  fullName: Org.BouncyCastle.Crypto.Tls.TlsBlockCipher.EncodePlaintext(System.Int64, System.Byte, System.Byte[], System.Int32, System.Int32)
  type: Method
  source:
    id: EncodePlaintext
    path: ''
    startLine: 129195
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Tls
  syntax:
    content: public virtual byte[] EncodePlaintext(long seqNo, byte type, byte[] plaintext, int offset, int len)
    parameters:
    - id: seqNo
      type: System.Int64
    - id: type
      type: System.Byte
    - id: plaintext
      type: System.Byte[]
    - id: offset
      type: System.Int32
    - id: len
      type: System.Int32
    return:
      type: System.Byte[]
    content.vb: Public Overridable Function EncodePlaintext(seqNo As Long, type As Byte, plaintext As Byte(), offset As Integer, len As Integer) As Byte()
  overload: Org.BouncyCastle.Crypto.Tls.TlsBlockCipher.EncodePlaintext*
  implements:
  - Org.BouncyCastle.Crypto.Tls.TlsCipher.EncodePlaintext(System.Int64,System.Byte,System.Byte[],System.Int32,System.Int32)
  nameWithType.vb: TlsBlockCipher.EncodePlaintext(Int64, Byte, Byte(), Int32, Int32)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Org.BouncyCastle.Crypto.Tls.TlsBlockCipher.EncodePlaintext(System.Int64, System.Byte, System.Byte(), System.Int32, System.Int32)
  name.vb: EncodePlaintext(Int64, Byte, Byte(), Int32, Int32)
- uid: Org.BouncyCastle.Crypto.Tls.TlsBlockCipher.DecodeCiphertext(System.Int64,System.Byte,System.Byte[],System.Int32,System.Int32)
  commentId: M:Org.BouncyCastle.Crypto.Tls.TlsBlockCipher.DecodeCiphertext(System.Int64,System.Byte,System.Byte[],System.Int32,System.Int32)
  id: DecodeCiphertext(System.Int64,System.Byte,System.Byte[],System.Int32,System.Int32)
  parent: Org.BouncyCastle.Crypto.Tls.TlsBlockCipher
  langs:
  - csharp
  - vb
  name: DecodeCiphertext(Int64, Byte, Byte[], Int32, Int32)
  nameWithType: TlsBlockCipher.DecodeCiphertext(Int64, Byte, Byte[], Int32, Int32)
  fullName: Org.BouncyCastle.Crypto.Tls.TlsBlockCipher.DecodeCiphertext(System.Int64, System.Byte, System.Byte[], System.Int32, System.Int32)
  type: Method
  source:
    id: DecodeCiphertext
    path: ''
    startLine: 129274
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Tls
  example: []
  syntax:
    content: public virtual byte[] DecodeCiphertext(long seqNo, byte type, byte[] ciphertext, int offset, int len)
    parameters:
    - id: seqNo
      type: System.Int64
    - id: type
      type: System.Byte
    - id: ciphertext
      type: System.Byte[]
    - id: offset
      type: System.Int32
    - id: len
      type: System.Int32
    return:
      type: System.Byte[]
    content.vb: Public Overridable Function DecodeCiphertext(seqNo As Long, type As Byte, ciphertext As Byte(), offset As Integer, len As Integer) As Byte()
  overload: Org.BouncyCastle.Crypto.Tls.TlsBlockCipher.DecodeCiphertext*
  implements:
  - Org.BouncyCastle.Crypto.Tls.TlsCipher.DecodeCiphertext(System.Int64,System.Byte,System.Byte[],System.Int32,System.Int32)
  nameWithType.vb: TlsBlockCipher.DecodeCiphertext(Int64, Byte, Byte(), Int32, Int32)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Org.BouncyCastle.Crypto.Tls.TlsBlockCipher.DecodeCiphertext(System.Int64, System.Byte, System.Byte(), System.Int32, System.Int32)
  name.vb: DecodeCiphertext(Int64, Byte, Byte(), Int32, Int32)
- uid: Org.BouncyCastle.Crypto.Tls.TlsBlockCipher.CheckPaddingConstantTime(System.Byte[],System.Int32,System.Int32,System.Int32,System.Int32)
  commentId: M:Org.BouncyCastle.Crypto.Tls.TlsBlockCipher.CheckPaddingConstantTime(System.Byte[],System.Int32,System.Int32,System.Int32,System.Int32)
  id: CheckPaddingConstantTime(System.Byte[],System.Int32,System.Int32,System.Int32,System.Int32)
  parent: Org.BouncyCastle.Crypto.Tls.TlsBlockCipher
  langs:
  - csharp
  - vb
  name: CheckPaddingConstantTime(Byte[], Int32, Int32, Int32, Int32)
  nameWithType: TlsBlockCipher.CheckPaddingConstantTime(Byte[], Int32, Int32, Int32, Int32)
  fullName: Org.BouncyCastle.Crypto.Tls.TlsBlockCipher.CheckPaddingConstantTime(System.Byte[], System.Int32, System.Int32, System.Int32, System.Int32)
  type: Method
  source:
    id: CheckPaddingConstantTime
    path: ''
    startLine: 129364
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Tls
  syntax:
    content: protected virtual int CheckPaddingConstantTime(byte[] buf, int off, int len, int blockSize, int macSize)
    parameters:
    - id: buf
      type: System.Byte[]
    - id: off
      type: System.Int32
    - id: len
      type: System.Int32
    - id: blockSize
      type: System.Int32
    - id: macSize
      type: System.Int32
    return:
      type: System.Int32
    content.vb: Protected Overridable Function CheckPaddingConstantTime(buf As Byte(), off As Integer, len As Integer, blockSize As Integer, macSize As Integer) As Integer
  overload: Org.BouncyCastle.Crypto.Tls.TlsBlockCipher.CheckPaddingConstantTime*
  nameWithType.vb: TlsBlockCipher.CheckPaddingConstantTime(Byte(), Int32, Int32, Int32, Int32)
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
  fullName.vb: Org.BouncyCastle.Crypto.Tls.TlsBlockCipher.CheckPaddingConstantTime(System.Byte(), System.Int32, System.Int32, System.Int32, System.Int32)
  name.vb: CheckPaddingConstantTime(Byte(), Int32, Int32, Int32, Int32)
- uid: Org.BouncyCastle.Crypto.Tls.TlsBlockCipher.ChooseExtraPadBlocks(SecureRandom,System.Int32)
  commentId: M:Org.BouncyCastle.Crypto.Tls.TlsBlockCipher.ChooseExtraPadBlocks(SecureRandom,System.Int32)
  id: ChooseExtraPadBlocks(SecureRandom,System.Int32)
  parent: Org.BouncyCastle.Crypto.Tls.TlsBlockCipher
  langs:
  - csharp
  - vb
  name: ChooseExtraPadBlocks(SecureRandom, Int32)
  nameWithType: TlsBlockCipher.ChooseExtraPadBlocks(SecureRandom, Int32)
  fullName: Org.BouncyCastle.Crypto.Tls.TlsBlockCipher.ChooseExtraPadBlocks(SecureRandom, System.Int32)
  type: Method
  source:
    id: ChooseExtraPadBlocks
    path: ''
    startLine: 129409
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Tls
  syntax:
    content: protected virtual int ChooseExtraPadBlocks(SecureRandom r, int max)
    parameters:
    - id: r
      type: SecureRandom
    - id: max
      type: System.Int32
    return:
      type: System.Int32
    content.vb: Protected Overridable Function ChooseExtraPadBlocks(r As SecureRandom, max As Integer) As Integer
  overload: Org.BouncyCastle.Crypto.Tls.TlsBlockCipher.ChooseExtraPadBlocks*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: Org.BouncyCastle.Crypto.Tls.TlsBlockCipher.LowestBitSet(System.Int32)
  commentId: M:Org.BouncyCastle.Crypto.Tls.TlsBlockCipher.LowestBitSet(System.Int32)
  id: LowestBitSet(System.Int32)
  parent: Org.BouncyCastle.Crypto.Tls.TlsBlockCipher
  langs:
  - csharp
  - vb
  name: LowestBitSet(Int32)
  nameWithType: TlsBlockCipher.LowestBitSet(Int32)
  fullName: Org.BouncyCastle.Crypto.Tls.TlsBlockCipher.LowestBitSet(System.Int32)
  type: Method
  source:
    id: LowestBitSet
    path: ''
    startLine: 129418
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Tls
  syntax:
    content: protected virtual int LowestBitSet(int x)
    parameters:
    - id: x
      type: System.Int32
    return:
      type: System.Int32
    content.vb: Protected Overridable Function LowestBitSet(x As Integer) As Integer
  overload: Org.BouncyCastle.Crypto.Tls.TlsBlockCipher.LowestBitSet*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
references:
- uid: Org.BouncyCastle.Crypto.Tls
  commentId: N:Org.BouncyCastle.Crypto.Tls
  name: Org.BouncyCastle.Crypto.Tls
  nameWithType: Org.BouncyCastle.Crypto.Tls
  fullName: Org.BouncyCastle.Crypto.Tls
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Org.BouncyCastle.Crypto.Tls.TlsCipher
  commentId: T:Org.BouncyCastle.Crypto.Tls.TlsCipher
  parent: Org.BouncyCastle.Crypto.Tls
  name: TlsCipher
  nameWithType: TlsCipher
  fullName: Org.BouncyCastle.Crypto.Tls.TlsCipher
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Org.BouncyCastle.Crypto.Tls.TlsContext
  commentId: T:Org.BouncyCastle.Crypto.Tls.TlsContext
  parent: Org.BouncyCastle.Crypto.Tls
  name: TlsContext
  nameWithType: TlsContext
  fullName: Org.BouncyCastle.Crypto.Tls.TlsContext
- uid: System.Byte[]
  isExternal: true
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullName.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Org.BouncyCastle.Crypto.IBlockCipher
  commentId: T:Org.BouncyCastle.Crypto.IBlockCipher
  parent: Org.BouncyCastle.Crypto
  name: IBlockCipher
  nameWithType: IBlockCipher
  fullName: Org.BouncyCastle.Crypto.IBlockCipher
- uid: Org.BouncyCastle.Crypto
  commentId: N:Org.BouncyCastle.Crypto
  name: Org.BouncyCastle.Crypto
  nameWithType: Org.BouncyCastle.Crypto
  fullName: Org.BouncyCastle.Crypto
- uid: Org.BouncyCastle.Crypto.Tls.TlsMac
  commentId: T:Org.BouncyCastle.Crypto.Tls.TlsMac
  parent: Org.BouncyCastle.Crypto.Tls
  name: TlsMac
  nameWithType: TlsMac
  fullName: Org.BouncyCastle.Crypto.Tls.TlsMac
- uid: Org.BouncyCastle.Crypto.Tls.TlsBlockCipher.WriteMac*
  commentId: Overload:Org.BouncyCastle.Crypto.Tls.TlsBlockCipher.WriteMac
  name: WriteMac
  nameWithType: TlsBlockCipher.WriteMac
  fullName: Org.BouncyCastle.Crypto.Tls.TlsBlockCipher.WriteMac
- uid: Org.BouncyCastle.Crypto.Tls.TlsBlockCipher.ReadMac*
  commentId: Overload:Org.BouncyCastle.Crypto.Tls.TlsBlockCipher.ReadMac
  name: ReadMac
  nameWithType: TlsBlockCipher.ReadMac
  fullName: Org.BouncyCastle.Crypto.Tls.TlsBlockCipher.ReadMac
- uid: Org.BouncyCastle.Crypto.Tls.TlsBlockCipher.#ctor*
  commentId: Overload:Org.BouncyCastle.Crypto.Tls.TlsBlockCipher.#ctor
  name: TlsBlockCipher
  nameWithType: TlsBlockCipher.TlsBlockCipher
  fullName: Org.BouncyCastle.Crypto.Tls.TlsBlockCipher.TlsBlockCipher
- uid: Org.BouncyCastle.Crypto.IDigest
  commentId: T:Org.BouncyCastle.Crypto.IDigest
  parent: Org.BouncyCastle.Crypto
  name: IDigest
  nameWithType: IDigest
  fullName: Org.BouncyCastle.Crypto.IDigest
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Org.BouncyCastle.Crypto.Tls.TlsBlockCipher.GetPlaintextLimit*
  commentId: Overload:Org.BouncyCastle.Crypto.Tls.TlsBlockCipher.GetPlaintextLimit
  name: GetPlaintextLimit
  nameWithType: TlsBlockCipher.GetPlaintextLimit
  fullName: Org.BouncyCastle.Crypto.Tls.TlsBlockCipher.GetPlaintextLimit
- uid: Org.BouncyCastle.Crypto.Tls.TlsCipher.GetPlaintextLimit(System.Int32)
  commentId: M:Org.BouncyCastle.Crypto.Tls.TlsCipher.GetPlaintextLimit(System.Int32)
  parent: Org.BouncyCastle.Crypto.Tls.TlsCipher
  isExternal: true
  name: GetPlaintextLimit(Int32)
  nameWithType: TlsCipher.GetPlaintextLimit(Int32)
  fullName: Org.BouncyCastle.Crypto.Tls.TlsCipher.GetPlaintextLimit(System.Int32)
  spec.csharp:
  - uid: Org.BouncyCastle.Crypto.Tls.TlsCipher.GetPlaintextLimit(System.Int32)
    name: GetPlaintextLimit
    nameWithType: TlsCipher.GetPlaintextLimit
    fullName: Org.BouncyCastle.Crypto.Tls.TlsCipher.GetPlaintextLimit
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Org.BouncyCastle.Crypto.Tls.TlsCipher.GetPlaintextLimit(System.Int32)
    name: GetPlaintextLimit
    nameWithType: TlsCipher.GetPlaintextLimit
    fullName: Org.BouncyCastle.Crypto.Tls.TlsCipher.GetPlaintextLimit
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Org.BouncyCastle.Crypto.Tls.TlsBlockCipher.EncodePlaintext*
  commentId: Overload:Org.BouncyCastle.Crypto.Tls.TlsBlockCipher.EncodePlaintext
  name: EncodePlaintext
  nameWithType: TlsBlockCipher.EncodePlaintext
  fullName: Org.BouncyCastle.Crypto.Tls.TlsBlockCipher.EncodePlaintext
- uid: Org.BouncyCastle.Crypto.Tls.TlsCipher.EncodePlaintext(System.Int64,System.Byte,System.Byte[],System.Int32,System.Int32)
  commentId: M:Org.BouncyCastle.Crypto.Tls.TlsCipher.EncodePlaintext(System.Int64,System.Byte,System.Byte[],System.Int32,System.Int32)
  parent: Org.BouncyCastle.Crypto.Tls.TlsCipher
  isExternal: true
  name: EncodePlaintext(Int64, Byte, Byte[], Int32, Int32)
  nameWithType: TlsCipher.EncodePlaintext(Int64, Byte, Byte[], Int32, Int32)
  fullName: Org.BouncyCastle.Crypto.Tls.TlsCipher.EncodePlaintext(System.Int64, System.Byte, System.Byte[], System.Int32, System.Int32)
  nameWithType.vb: TlsCipher.EncodePlaintext(Int64, Byte, Byte(), Int32, Int32)
  fullName.vb: Org.BouncyCastle.Crypto.Tls.TlsCipher.EncodePlaintext(System.Int64, System.Byte, System.Byte(), System.Int32, System.Int32)
  name.vb: EncodePlaintext(Int64, Byte, Byte(), Int32, Int32)
  spec.csharp:
  - uid: Org.BouncyCastle.Crypto.Tls.TlsCipher.EncodePlaintext(System.Int64,System.Byte,System.Byte[],System.Int32,System.Int32)
    name: EncodePlaintext
    nameWithType: TlsCipher.EncodePlaintext
    fullName: Org.BouncyCastle.Crypto.Tls.TlsCipher.EncodePlaintext
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Org.BouncyCastle.Crypto.Tls.TlsCipher.EncodePlaintext(System.Int64,System.Byte,System.Byte[],System.Int32,System.Int32)
    name: EncodePlaintext
    nameWithType: TlsCipher.EncodePlaintext
    fullName: Org.BouncyCastle.Crypto.Tls.TlsCipher.EncodePlaintext
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Byte
  commentId: T:System.Byte
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte
- uid: Org.BouncyCastle.Crypto.Tls.TlsBlockCipher.DecodeCiphertext*
  commentId: Overload:Org.BouncyCastle.Crypto.Tls.TlsBlockCipher.DecodeCiphertext
  name: DecodeCiphertext
  nameWithType: TlsBlockCipher.DecodeCiphertext
  fullName: Org.BouncyCastle.Crypto.Tls.TlsBlockCipher.DecodeCiphertext
- uid: Org.BouncyCastle.Crypto.Tls.TlsCipher.DecodeCiphertext(System.Int64,System.Byte,System.Byte[],System.Int32,System.Int32)
  commentId: M:Org.BouncyCastle.Crypto.Tls.TlsCipher.DecodeCiphertext(System.Int64,System.Byte,System.Byte[],System.Int32,System.Int32)
  parent: Org.BouncyCastle.Crypto.Tls.TlsCipher
  isExternal: true
  name: DecodeCiphertext(Int64, Byte, Byte[], Int32, Int32)
  nameWithType: TlsCipher.DecodeCiphertext(Int64, Byte, Byte[], Int32, Int32)
  fullName: Org.BouncyCastle.Crypto.Tls.TlsCipher.DecodeCiphertext(System.Int64, System.Byte, System.Byte[], System.Int32, System.Int32)
  nameWithType.vb: TlsCipher.DecodeCiphertext(Int64, Byte, Byte(), Int32, Int32)
  fullName.vb: Org.BouncyCastle.Crypto.Tls.TlsCipher.DecodeCiphertext(System.Int64, System.Byte, System.Byte(), System.Int32, System.Int32)
  name.vb: DecodeCiphertext(Int64, Byte, Byte(), Int32, Int32)
  spec.csharp:
  - uid: Org.BouncyCastle.Crypto.Tls.TlsCipher.DecodeCiphertext(System.Int64,System.Byte,System.Byte[],System.Int32,System.Int32)
    name: DecodeCiphertext
    nameWithType: TlsCipher.DecodeCiphertext
    fullName: Org.BouncyCastle.Crypto.Tls.TlsCipher.DecodeCiphertext
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Org.BouncyCastle.Crypto.Tls.TlsCipher.DecodeCiphertext(System.Int64,System.Byte,System.Byte[],System.Int32,System.Int32)
    name: DecodeCiphertext
    nameWithType: TlsCipher.DecodeCiphertext
    fullName: Org.BouncyCastle.Crypto.Tls.TlsCipher.DecodeCiphertext
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Org.BouncyCastle.Crypto.Tls.TlsBlockCipher.CheckPaddingConstantTime*
  commentId: Overload:Org.BouncyCastle.Crypto.Tls.TlsBlockCipher.CheckPaddingConstantTime
  name: CheckPaddingConstantTime
  nameWithType: TlsBlockCipher.CheckPaddingConstantTime
  fullName: Org.BouncyCastle.Crypto.Tls.TlsBlockCipher.CheckPaddingConstantTime
- uid: Org.BouncyCastle.Crypto.Tls.TlsBlockCipher.ChooseExtraPadBlocks*
  commentId: Overload:Org.BouncyCastle.Crypto.Tls.TlsBlockCipher.ChooseExtraPadBlocks
  name: ChooseExtraPadBlocks
  nameWithType: TlsBlockCipher.ChooseExtraPadBlocks
  fullName: Org.BouncyCastle.Crypto.Tls.TlsBlockCipher.ChooseExtraPadBlocks
- uid: SecureRandom
  isExternal: true
  name: SecureRandom
  nameWithType: SecureRandom
  fullName: SecureRandom
- uid: Org.BouncyCastle.Crypto.Tls.TlsBlockCipher.LowestBitSet*
  commentId: Overload:Org.BouncyCastle.Crypto.Tls.TlsBlockCipher.LowestBitSet
  name: LowestBitSet
  nameWithType: TlsBlockCipher.LowestBitSet
  fullName: Org.BouncyCastle.Crypto.Tls.TlsBlockCipher.LowestBitSet
