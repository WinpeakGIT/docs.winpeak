### YamlMime:ManagedReference
items:
- uid: Winpeak.Client.Legacy.WaypointsResponse
  commentId: T:Winpeak.Client.Legacy.WaypointsResponse
  id: WaypointsResponse
  parent: Winpeak.Client.Legacy
  children:
  - Winpeak.Client.Legacy.WaypointsResponse.#ctor
  - Winpeak.Client.Legacy.WaypointsResponse.#ctor(Waypoint[],System.String,System.Int64)
  - Winpeak.Client.Legacy.WaypointsResponse.MoveCount
  - Winpeak.Client.Legacy.WaypointsResponse.ObjectId
  - Winpeak.Client.Legacy.WaypointsResponse.Waypoints
  langs:
  - csharp
  - vb
  name: WaypointsResponse
  nameWithType: WaypointsResponse
  fullName: Winpeak.Client.Legacy.WaypointsResponse
  type: Class
  source:
    id: WaypointsResponse
    path: ''
    startLine: 3623
  assemblies:
  - cs.temp.dll
  namespace: Winpeak.Client.Legacy
  syntax:
    content: public class WaypointsResponse
    content.vb: Public Class WaypointsResponse
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ToString
  - System.Object.ReferenceEquals(System.Object,System.Object)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Winpeak.Client.Legacy.WaypointsResponse.Waypoints
  commentId: P:Winpeak.Client.Legacy.WaypointsResponse.Waypoints
  id: Waypoints
  parent: Winpeak.Client.Legacy.WaypointsResponse
  langs:
  - csharp
  - vb
  name: Waypoints
  nameWithType: WaypointsResponse.Waypoints
  fullName: Winpeak.Client.Legacy.WaypointsResponse.Waypoints
  type: Property
  source:
    id: Waypoints
    path: ''
    startLine: 3626
  assemblies:
  - cs.temp.dll
  namespace: Winpeak.Client.Legacy
  syntax:
    content: public Waypoint[] Waypoints { get; }
    parameters: []
    return:
      type: Waypoint[]
    content.vb: Public ReadOnly Property Waypoints As Waypoint()
  overload: Winpeak.Client.Legacy.WaypointsResponse.Waypoints*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Winpeak.Client.Legacy.WaypointsResponse.ObjectId
  commentId: P:Winpeak.Client.Legacy.WaypointsResponse.ObjectId
  id: ObjectId
  parent: Winpeak.Client.Legacy.WaypointsResponse
  langs:
  - csharp
  - vb
  name: ObjectId
  nameWithType: WaypointsResponse.ObjectId
  fullName: Winpeak.Client.Legacy.WaypointsResponse.ObjectId
  type: Property
  source:
    id: ObjectId
    path: ''
    startLine: 3628
  assemblies:
  - cs.temp.dll
  namespace: Winpeak.Client.Legacy
  syntax:
    content: public string ObjectId { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property ObjectId As String
  overload: Winpeak.Client.Legacy.WaypointsResponse.ObjectId*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Winpeak.Client.Legacy.WaypointsResponse.MoveCount
  commentId: P:Winpeak.Client.Legacy.WaypointsResponse.MoveCount
  id: MoveCount
  parent: Winpeak.Client.Legacy.WaypointsResponse
  langs:
  - csharp
  - vb
  name: MoveCount
  nameWithType: WaypointsResponse.MoveCount
  fullName: Winpeak.Client.Legacy.WaypointsResponse.MoveCount
  type: Property
  source:
    id: MoveCount
    path: ''
    startLine: 3630
  assemblies:
  - cs.temp.dll
  namespace: Winpeak.Client.Legacy
  syntax:
    content: public long MoveCount { get; }
    parameters: []
    return:
      type: System.Int64
    content.vb: Public ReadOnly Property MoveCount As Long
  overload: Winpeak.Client.Legacy.WaypointsResponse.MoveCount*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Winpeak.Client.Legacy.WaypointsResponse.#ctor(Waypoint[],System.String,System.Int64)
  commentId: M:Winpeak.Client.Legacy.WaypointsResponse.#ctor(Waypoint[],System.String,System.Int64)
  id: '#ctor(Waypoint[],System.String,System.Int64)'
  parent: Winpeak.Client.Legacy.WaypointsResponse
  langs:
  - csharp
  - vb
  name: WaypointsResponse(Waypoint[], String, Int64)
  nameWithType: WaypointsResponse.WaypointsResponse(Waypoint[], String, Int64)
  fullName: Winpeak.Client.Legacy.WaypointsResponse.WaypointsResponse(Waypoint[], System.String, System.Int64)
  type: Constructor
  source:
    id: .ctor
    path: ''
    startLine: 3633
  assemblies:
  - cs.temp.dll
  namespace: Winpeak.Client.Legacy
  syntax:
    content: public WaypointsResponse(Waypoint[] waypoints, string objectId, long moveCount)
    parameters:
    - id: waypoints
      type: Waypoint[]
    - id: objectId
      type: System.String
    - id: moveCount
      type: System.Int64
    content.vb: Public Sub New(waypoints As Waypoint(), objectId As String, moveCount As Long)
  overload: Winpeak.Client.Legacy.WaypointsResponse.#ctor*
  nameWithType.vb: WaypointsResponse.WaypointsResponse(Waypoint(), String, Int64)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Winpeak.Client.Legacy.WaypointsResponse.WaypointsResponse(Waypoint(), System.String, System.Int64)
  name.vb: WaypointsResponse(Waypoint(), String, Int64)
- uid: Winpeak.Client.Legacy.WaypointsResponse.#ctor
  commentId: M:Winpeak.Client.Legacy.WaypointsResponse.#ctor
  id: '#ctor'
  parent: Winpeak.Client.Legacy.WaypointsResponse
  langs:
  - csharp
  - vb
  name: WaypointsResponse()
  nameWithType: WaypointsResponse.WaypointsResponse()
  fullName: Winpeak.Client.Legacy.WaypointsResponse.WaypointsResponse()
  type: Constructor
  source:
    id: .ctor
    path: ''
    startLine: 3639
  assemblies:
  - cs.temp.dll
  namespace: Winpeak.Client.Legacy
  syntax:
    content: public WaypointsResponse()
    content.vb: Public Sub New
  overload: Winpeak.Client.Legacy.WaypointsResponse.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Winpeak.Client.Legacy
  commentId: N:Winpeak.Client.Legacy
  name: Winpeak.Client.Legacy
  nameWithType: Winpeak.Client.Legacy
  fullName: Winpeak.Client.Legacy
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Winpeak.Client.Legacy.WaypointsResponse.Waypoints*
  commentId: Overload:Winpeak.Client.Legacy.WaypointsResponse.Waypoints
  name: Waypoints
  nameWithType: WaypointsResponse.Waypoints
  fullName: Winpeak.Client.Legacy.WaypointsResponse.Waypoints
- uid: Waypoint[]
  isExternal: true
  name: Waypoint[]
  nameWithType: Waypoint[]
  fullName: Waypoint[]
  nameWithType.vb: Waypoint()
  fullName.vb: Waypoint()
  name.vb: Waypoint()
  spec.csharp:
  - uid: Waypoint
    name: Waypoint
    nameWithType: Waypoint
    fullName: Waypoint
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: Waypoint
    name: Waypoint
    nameWithType: Waypoint
    fullName: Waypoint
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Winpeak.Client.Legacy.WaypointsResponse.ObjectId*
  commentId: Overload:Winpeak.Client.Legacy.WaypointsResponse.ObjectId
  name: ObjectId
  nameWithType: WaypointsResponse.ObjectId
  fullName: Winpeak.Client.Legacy.WaypointsResponse.ObjectId
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Winpeak.Client.Legacy.WaypointsResponse.MoveCount*
  commentId: Overload:Winpeak.Client.Legacy.WaypointsResponse.MoveCount
  name: MoveCount
  nameWithType: WaypointsResponse.MoveCount
  fullName: Winpeak.Client.Legacy.WaypointsResponse.MoveCount
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: Winpeak.Client.Legacy.WaypointsResponse.#ctor*
  commentId: Overload:Winpeak.Client.Legacy.WaypointsResponse.#ctor
  name: WaypointsResponse
  nameWithType: WaypointsResponse.WaypointsResponse
  fullName: Winpeak.Client.Legacy.WaypointsResponse.WaypointsResponse
