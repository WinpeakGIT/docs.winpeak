### YamlMime:ManagedReference
items:
- uid: Org.BouncyCastle.Crypto.Digests.NullDigest
  commentId: T:Org.BouncyCastle.Crypto.Digests.NullDigest
  id: NullDigest
  parent: Org.BouncyCastle.Crypto.Digests
  children:
  - Org.BouncyCastle.Crypto.Digests.NullDigest.AlgorithmName
  - Org.BouncyCastle.Crypto.Digests.NullDigest.BlockUpdate(System.Byte[],System.Int32,System.Int32)
  - Org.BouncyCastle.Crypto.Digests.NullDigest.DoFinal(System.Byte[],System.Int32)
  - Org.BouncyCastle.Crypto.Digests.NullDigest.GetByteLength
  - Org.BouncyCastle.Crypto.Digests.NullDigest.GetDigestSize
  - Org.BouncyCastle.Crypto.Digests.NullDigest.Reset
  - Org.BouncyCastle.Crypto.Digests.NullDigest.Update(System.Byte)
  langs:
  - csharp
  - vb
  name: NullDigest
  nameWithType: NullDigest
  fullName: Org.BouncyCastle.Crypto.Digests.NullDigest
  type: Class
  source:
    id: NullDigest
    path: ''
    startLine: 132803
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Digests
  syntax:
    content: 'public class NullDigest : IDigest'
    content.vb: >-
      Public Class NullDigest
          Implements IDigest
  inheritance:
  - System.Object
  implements:
  - Org.BouncyCastle.Crypto.IDigest
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ToString
  - System.Object.ReferenceEquals(System.Object,System.Object)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Org.BouncyCastle.Crypto.Digests.NullDigest.AlgorithmName
  commentId: P:Org.BouncyCastle.Crypto.Digests.NullDigest.AlgorithmName
  id: AlgorithmName
  parent: Org.BouncyCastle.Crypto.Digests.NullDigest
  langs:
  - csharp
  - vb
  name: AlgorithmName
  nameWithType: NullDigest.AlgorithmName
  fullName: Org.BouncyCastle.Crypto.Digests.NullDigest.AlgorithmName
  type: Property
  source:
    id: AlgorithmName
    path: ''
    startLine: 132807
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Digests
  syntax:
    content: public string AlgorithmName { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property AlgorithmName As String
  overload: Org.BouncyCastle.Crypto.Digests.NullDigest.AlgorithmName*
  implements:
  - Org.BouncyCastle.Crypto.IDigest.AlgorithmName
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Org.BouncyCastle.Crypto.Digests.NullDigest.GetByteLength
  commentId: M:Org.BouncyCastle.Crypto.Digests.NullDigest.GetByteLength
  id: GetByteLength
  parent: Org.BouncyCastle.Crypto.Digests.NullDigest
  langs:
  - csharp
  - vb
  name: GetByteLength()
  nameWithType: NullDigest.GetByteLength()
  fullName: Org.BouncyCastle.Crypto.Digests.NullDigest.GetByteLength()
  type: Method
  source:
    id: GetByteLength
    path: ''
    startLine: 132812
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Digests
  syntax:
    content: public int GetByteLength()
    return:
      type: System.Int32
    content.vb: Public Function GetByteLength As Integer
  overload: Org.BouncyCastle.Crypto.Digests.NullDigest.GetByteLength*
  implements:
  - Org.BouncyCastle.Crypto.IDigest.GetByteLength
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Org.BouncyCastle.Crypto.Digests.NullDigest.GetDigestSize
  commentId: M:Org.BouncyCastle.Crypto.Digests.NullDigest.GetDigestSize
  id: GetDigestSize
  parent: Org.BouncyCastle.Crypto.Digests.NullDigest
  langs:
  - csharp
  - vb
  name: GetDigestSize()
  nameWithType: NullDigest.GetDigestSize()
  fullName: Org.BouncyCastle.Crypto.Digests.NullDigest.GetDigestSize()
  type: Method
  source:
    id: GetDigestSize
    path: ''
    startLine: 132818
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Digests
  syntax:
    content: public int GetDigestSize()
    return:
      type: System.Int32
    content.vb: Public Function GetDigestSize As Integer
  overload: Org.BouncyCastle.Crypto.Digests.NullDigest.GetDigestSize*
  implements:
  - Org.BouncyCastle.Crypto.IDigest.GetDigestSize
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Org.BouncyCastle.Crypto.Digests.NullDigest.Update(System.Byte)
  commentId: M:Org.BouncyCastle.Crypto.Digests.NullDigest.Update(System.Byte)
  id: Update(System.Byte)
  parent: Org.BouncyCastle.Crypto.Digests.NullDigest
  langs:
  - csharp
  - vb
  name: Update(Byte)
  nameWithType: NullDigest.Update(Byte)
  fullName: Org.BouncyCastle.Crypto.Digests.NullDigest.Update(System.Byte)
  type: Method
  source:
    id: Update
    path: ''
    startLine: 132823
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Digests
  syntax:
    content: public void Update(byte b)
    parameters:
    - id: b
      type: System.Byte
    content.vb: Public Sub Update(b As Byte)
  overload: Org.BouncyCastle.Crypto.Digests.NullDigest.Update*
  implements:
  - Org.BouncyCastle.Crypto.IDigest.Update(System.Byte)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Org.BouncyCastle.Crypto.Digests.NullDigest.BlockUpdate(System.Byte[],System.Int32,System.Int32)
  commentId: M:Org.BouncyCastle.Crypto.Digests.NullDigest.BlockUpdate(System.Byte[],System.Int32,System.Int32)
  id: BlockUpdate(System.Byte[],System.Int32,System.Int32)
  parent: Org.BouncyCastle.Crypto.Digests.NullDigest
  langs:
  - csharp
  - vb
  name: BlockUpdate(Byte[], Int32, Int32)
  nameWithType: NullDigest.BlockUpdate(Byte[], Int32, Int32)
  fullName: Org.BouncyCastle.Crypto.Digests.NullDigest.BlockUpdate(System.Byte[], System.Int32, System.Int32)
  type: Method
  source:
    id: BlockUpdate
    path: ''
    startLine: 132828
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Digests
  syntax:
    content: public void BlockUpdate(byte[] inBytes, int inOff, int len)
    parameters:
    - id: inBytes
      type: System.Byte[]
    - id: inOff
      type: System.Int32
    - id: len
      type: System.Int32
    content.vb: Public Sub BlockUpdate(inBytes As Byte(), inOff As Integer, len As Integer)
  overload: Org.BouncyCastle.Crypto.Digests.NullDigest.BlockUpdate*
  implements:
  - Org.BouncyCastle.Crypto.IDigest.BlockUpdate(System.Byte[],System.Int32,System.Int32)
  nameWithType.vb: NullDigest.BlockUpdate(Byte(), Int32, Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Org.BouncyCastle.Crypto.Digests.NullDigest.BlockUpdate(System.Byte(), System.Int32, System.Int32)
  name.vb: BlockUpdate(Byte(), Int32, Int32)
- uid: Org.BouncyCastle.Crypto.Digests.NullDigest.DoFinal(System.Byte[],System.Int32)
  commentId: M:Org.BouncyCastle.Crypto.Digests.NullDigest.DoFinal(System.Byte[],System.Int32)
  id: DoFinal(System.Byte[],System.Int32)
  parent: Org.BouncyCastle.Crypto.Digests.NullDigest
  langs:
  - csharp
  - vb
  name: DoFinal(Byte[], Int32)
  nameWithType: NullDigest.DoFinal(Byte[], Int32)
  fullName: Org.BouncyCastle.Crypto.Digests.NullDigest.DoFinal(System.Byte[], System.Int32)
  type: Method
  source:
    id: DoFinal
    path: ''
    startLine: 132833
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Digests
  syntax:
    content: public int DoFinal(byte[] outBytes, int outOff)
    parameters:
    - id: outBytes
      type: System.Byte[]
    - id: outOff
      type: System.Int32
    return:
      type: System.Int32
    content.vb: Public Function DoFinal(outBytes As Byte(), outOff As Integer) As Integer
  overload: Org.BouncyCastle.Crypto.Digests.NullDigest.DoFinal*
  implements:
  - Org.BouncyCastle.Crypto.IDigest.DoFinal(System.Byte[],System.Int32)
  nameWithType.vb: NullDigest.DoFinal(Byte(), Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Org.BouncyCastle.Crypto.Digests.NullDigest.DoFinal(System.Byte(), System.Int32)
  name.vb: DoFinal(Byte(), Int32)
- uid: Org.BouncyCastle.Crypto.Digests.NullDigest.Reset
  commentId: M:Org.BouncyCastle.Crypto.Digests.NullDigest.Reset
  id: Reset
  parent: Org.BouncyCastle.Crypto.Digests.NullDigest
  langs:
  - csharp
  - vb
  name: Reset()
  nameWithType: NullDigest.Reset()
  fullName: Org.BouncyCastle.Crypto.Digests.NullDigest.Reset()
  type: Method
  source:
    id: Reset
    path: ''
    startLine: 132841
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Digests
  syntax:
    content: public void Reset()
    content.vb: Public Sub Reset
  overload: Org.BouncyCastle.Crypto.Digests.NullDigest.Reset*
  implements:
  - Org.BouncyCastle.Crypto.IDigest.Reset
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Org.BouncyCastle.Crypto.Digests
  commentId: N:Org.BouncyCastle.Crypto.Digests
  name: Org.BouncyCastle.Crypto.Digests
  nameWithType: Org.BouncyCastle.Crypto.Digests
  fullName: Org.BouncyCastle.Crypto.Digests
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Org.BouncyCastle.Crypto.IDigest
  commentId: T:Org.BouncyCastle.Crypto.IDigest
  parent: Org.BouncyCastle.Crypto
  name: IDigest
  nameWithType: IDigest
  fullName: Org.BouncyCastle.Crypto.IDigest
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Org.BouncyCastle.Crypto
  commentId: N:Org.BouncyCastle.Crypto
  name: Org.BouncyCastle.Crypto
  nameWithType: Org.BouncyCastle.Crypto
  fullName: Org.BouncyCastle.Crypto
- uid: Org.BouncyCastle.Crypto.Digests.NullDigest.AlgorithmName*
  commentId: Overload:Org.BouncyCastle.Crypto.Digests.NullDigest.AlgorithmName
  name: AlgorithmName
  nameWithType: NullDigest.AlgorithmName
  fullName: Org.BouncyCastle.Crypto.Digests.NullDigest.AlgorithmName
- uid: Org.BouncyCastle.Crypto.IDigest.AlgorithmName
  commentId: P:Org.BouncyCastle.Crypto.IDigest.AlgorithmName
  parent: Org.BouncyCastle.Crypto.IDigest
  name: AlgorithmName
  nameWithType: IDigest.AlgorithmName
  fullName: Org.BouncyCastle.Crypto.IDigest.AlgorithmName
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Org.BouncyCastle.Crypto.Digests.NullDigest.GetByteLength*
  commentId: Overload:Org.BouncyCastle.Crypto.Digests.NullDigest.GetByteLength
  name: GetByteLength
  nameWithType: NullDigest.GetByteLength
  fullName: Org.BouncyCastle.Crypto.Digests.NullDigest.GetByteLength
- uid: Org.BouncyCastle.Crypto.IDigest.GetByteLength
  commentId: M:Org.BouncyCastle.Crypto.IDigest.GetByteLength
  parent: Org.BouncyCastle.Crypto.IDigest
  name: GetByteLength()
  nameWithType: IDigest.GetByteLength()
  fullName: Org.BouncyCastle.Crypto.IDigest.GetByteLength()
  spec.csharp:
  - uid: Org.BouncyCastle.Crypto.IDigest.GetByteLength
    name: GetByteLength
    nameWithType: IDigest.GetByteLength
    fullName: Org.BouncyCastle.Crypto.IDigest.GetByteLength
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Org.BouncyCastle.Crypto.IDigest.GetByteLength
    name: GetByteLength
    nameWithType: IDigest.GetByteLength
    fullName: Org.BouncyCastle.Crypto.IDigest.GetByteLength
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Org.BouncyCastle.Crypto.Digests.NullDigest.GetDigestSize*
  commentId: Overload:Org.BouncyCastle.Crypto.Digests.NullDigest.GetDigestSize
  name: GetDigestSize
  nameWithType: NullDigest.GetDigestSize
  fullName: Org.BouncyCastle.Crypto.Digests.NullDigest.GetDigestSize
- uid: Org.BouncyCastle.Crypto.IDigest.GetDigestSize
  commentId: M:Org.BouncyCastle.Crypto.IDigest.GetDigestSize
  parent: Org.BouncyCastle.Crypto.IDigest
  name: GetDigestSize()
  nameWithType: IDigest.GetDigestSize()
  fullName: Org.BouncyCastle.Crypto.IDigest.GetDigestSize()
  spec.csharp:
  - uid: Org.BouncyCastle.Crypto.IDigest.GetDigestSize
    name: GetDigestSize
    nameWithType: IDigest.GetDigestSize
    fullName: Org.BouncyCastle.Crypto.IDigest.GetDigestSize
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Org.BouncyCastle.Crypto.IDigest.GetDigestSize
    name: GetDigestSize
    nameWithType: IDigest.GetDigestSize
    fullName: Org.BouncyCastle.Crypto.IDigest.GetDigestSize
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Org.BouncyCastle.Crypto.Digests.NullDigest.Update*
  commentId: Overload:Org.BouncyCastle.Crypto.Digests.NullDigest.Update
  name: Update
  nameWithType: NullDigest.Update
  fullName: Org.BouncyCastle.Crypto.Digests.NullDigest.Update
- uid: Org.BouncyCastle.Crypto.IDigest.Update(System.Byte)
  commentId: M:Org.BouncyCastle.Crypto.IDigest.Update(System.Byte)
  parent: Org.BouncyCastle.Crypto.IDigest
  isExternal: true
  name: Update(Byte)
  nameWithType: IDigest.Update(Byte)
  fullName: Org.BouncyCastle.Crypto.IDigest.Update(System.Byte)
  spec.csharp:
  - uid: Org.BouncyCastle.Crypto.IDigest.Update(System.Byte)
    name: Update
    nameWithType: IDigest.Update
    fullName: Org.BouncyCastle.Crypto.IDigest.Update
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Org.BouncyCastle.Crypto.IDigest.Update(System.Byte)
    name: Update
    nameWithType: IDigest.Update
    fullName: Org.BouncyCastle.Crypto.IDigest.Update
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Byte
  commentId: T:System.Byte
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte
- uid: Org.BouncyCastle.Crypto.Digests.NullDigest.BlockUpdate*
  commentId: Overload:Org.BouncyCastle.Crypto.Digests.NullDigest.BlockUpdate
  name: BlockUpdate
  nameWithType: NullDigest.BlockUpdate
  fullName: Org.BouncyCastle.Crypto.Digests.NullDigest.BlockUpdate
- uid: Org.BouncyCastle.Crypto.IDigest.BlockUpdate(System.Byte[],System.Int32,System.Int32)
  commentId: M:Org.BouncyCastle.Crypto.IDigest.BlockUpdate(System.Byte[],System.Int32,System.Int32)
  parent: Org.BouncyCastle.Crypto.IDigest
  isExternal: true
  name: BlockUpdate(Byte[], Int32, Int32)
  nameWithType: IDigest.BlockUpdate(Byte[], Int32, Int32)
  fullName: Org.BouncyCastle.Crypto.IDigest.BlockUpdate(System.Byte[], System.Int32, System.Int32)
  nameWithType.vb: IDigest.BlockUpdate(Byte(), Int32, Int32)
  fullName.vb: Org.BouncyCastle.Crypto.IDigest.BlockUpdate(System.Byte(), System.Int32, System.Int32)
  name.vb: BlockUpdate(Byte(), Int32, Int32)
  spec.csharp:
  - uid: Org.BouncyCastle.Crypto.IDigest.BlockUpdate(System.Byte[],System.Int32,System.Int32)
    name: BlockUpdate
    nameWithType: IDigest.BlockUpdate
    fullName: Org.BouncyCastle.Crypto.IDigest.BlockUpdate
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Org.BouncyCastle.Crypto.IDigest.BlockUpdate(System.Byte[],System.Int32,System.Int32)
    name: BlockUpdate
    nameWithType: IDigest.BlockUpdate
    fullName: Org.BouncyCastle.Crypto.IDigest.BlockUpdate
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Byte[]
  isExternal: true
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullName.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Org.BouncyCastle.Crypto.Digests.NullDigest.DoFinal*
  commentId: Overload:Org.BouncyCastle.Crypto.Digests.NullDigest.DoFinal
  name: DoFinal
  nameWithType: NullDigest.DoFinal
  fullName: Org.BouncyCastle.Crypto.Digests.NullDigest.DoFinal
- uid: Org.BouncyCastle.Crypto.IDigest.DoFinal(System.Byte[],System.Int32)
  commentId: M:Org.BouncyCastle.Crypto.IDigest.DoFinal(System.Byte[],System.Int32)
  parent: Org.BouncyCastle.Crypto.IDigest
  isExternal: true
  name: DoFinal(Byte[], Int32)
  nameWithType: IDigest.DoFinal(Byte[], Int32)
  fullName: Org.BouncyCastle.Crypto.IDigest.DoFinal(System.Byte[], System.Int32)
  nameWithType.vb: IDigest.DoFinal(Byte(), Int32)
  fullName.vb: Org.BouncyCastle.Crypto.IDigest.DoFinal(System.Byte(), System.Int32)
  name.vb: DoFinal(Byte(), Int32)
  spec.csharp:
  - uid: Org.BouncyCastle.Crypto.IDigest.DoFinal(System.Byte[],System.Int32)
    name: DoFinal
    nameWithType: IDigest.DoFinal
    fullName: Org.BouncyCastle.Crypto.IDigest.DoFinal
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Org.BouncyCastle.Crypto.IDigest.DoFinal(System.Byte[],System.Int32)
    name: DoFinal
    nameWithType: IDigest.DoFinal
    fullName: Org.BouncyCastle.Crypto.IDigest.DoFinal
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Org.BouncyCastle.Crypto.Digests.NullDigest.Reset*
  commentId: Overload:Org.BouncyCastle.Crypto.Digests.NullDigest.Reset
  name: Reset
  nameWithType: NullDigest.Reset
  fullName: Org.BouncyCastle.Crypto.Digests.NullDigest.Reset
- uid: Org.BouncyCastle.Crypto.IDigest.Reset
  commentId: M:Org.BouncyCastle.Crypto.IDigest.Reset
  parent: Org.BouncyCastle.Crypto.IDigest
  name: Reset()
  nameWithType: IDigest.Reset()
  fullName: Org.BouncyCastle.Crypto.IDigest.Reset()
  spec.csharp:
  - uid: Org.BouncyCastle.Crypto.IDigest.Reset
    name: Reset
    nameWithType: IDigest.Reset
    fullName: Org.BouncyCastle.Crypto.IDigest.Reset
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Org.BouncyCastle.Crypto.IDigest.Reset
    name: Reset
    nameWithType: IDigest.Reset
    fullName: Org.BouncyCastle.Crypto.IDigest.Reset
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
