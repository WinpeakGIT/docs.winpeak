### YamlMime:ManagedReference
items:
- uid: Winpeak.Client.API.IWinPeakNetworkClient
  commentId: T:Winpeak.Client.API.IWinPeakNetworkClient
  id: IWinPeakNetworkClient
  parent: Winpeak.Client.API
  children:
  - Winpeak.Client.API.IWinPeakNetworkClient.AddFriend(System.Int64,System.Action{AddFriendResult})
  - Winpeak.Client.API.IWinPeakNetworkClient.ApproveCreateGameSessionRequest(System.Int64,System.Int64,System.Action{ApproveGameSessionRequestResult})
  - Winpeak.Client.API.IWinPeakNetworkClient.Authenticate(System.String,System.String,System.Boolean,System.Int64,System.Action{AuthorizationResult})
  - Winpeak.Client.API.IWinPeakNetworkClient.CheckAuthorization(System.Action{System.Boolean})
  - Winpeak.Client.API.IWinPeakNetworkClient.CloseGameSession(System.Int64,System.Action{CloseGameSessionResult})
  - Winpeak.Client.API.IWinPeakNetworkClient.CreateGame(System.Int32,System.Int32,System.Int32,System.Action{CreateGameSessionResult})
  - Winpeak.Client.API.IWinPeakNetworkClient.CreateGameSessionRequest(System.Int64,System.Action{CreateGameSessionRequestResult})
  - Winpeak.Client.API.IWinPeakNetworkClient.EditProfile(System.String,System.String,System.String,System.String,System.String,System.Int32,System.Action{EditProfileResult})
  - Winpeak.Client.API.IWinPeakNetworkClient.EditProfile(System.String,System.String,System.String,System.String,System.String,System.String,System.Action{EditProfileResult})
  - Winpeak.Client.API.IWinPeakNetworkClient.GetActiveGameSessionsRequest(System.Int32,System.Action{GetActiveGameSessionsRequestResult})
  - Winpeak.Client.API.IWinPeakNetworkClient.GetGameInfo(System.Int32,System.Int64,System.Action{GetGameInfoResult})
  - Winpeak.Client.API.IWinPeakNetworkClient.GetLastTournaments(System.Int32,System.Int64,System.Int32,System.Int32,System.Int32,System.Action{GetLastTournamentsResult})
  - Winpeak.Client.API.IWinPeakNetworkClient.GetUserInfo(System.Int32,System.Int32,System.Int32,System.Action{GetUserInfoResult})
  - Winpeak.Client.API.IWinPeakNetworkClient.Logout(System.Action{System.Boolean})
  - Winpeak.Client.API.IWinPeakNetworkClient.PasswordRecovery(System.String,System.Int64,System.Action{PasswordRecoveryRequestResult})
  - Winpeak.Client.API.IWinPeakNetworkClient.Register(System.Int64,System.Action{RegistrationResult})
  - Winpeak.Client.API.IWinPeakNetworkClient.RejectCreateGameSessionRequest(System.Int64,System.Int64,System.Action{RejectCreateGameSessionRequestResult})
  - Winpeak.Client.API.IWinPeakNetworkClient.RemoveFriend(System.Int64,System.Action{RemoveFriendResult})
  - Winpeak.Client.API.IWinPeakNetworkClient.SearchGame(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int64,System.Action{SearchGameResult})
  - Winpeak.Client.API.IWinPeakNetworkClient.SearchUser(System.Int64,System.Int32,System.Int32,System.Int32,System.String,System.String,System.String,System.String,System.Int64,System.Boolean,System.Action{SearchUserResult})
  langs:
  - csharp
  - vb
  name: IWinPeakNetworkClient
  nameWithType: IWinPeakNetworkClient
  fullName: Winpeak.Client.API.IWinPeakNetworkClient
  type: Interface
  source:
    id: IWinPeakNetworkClient
    path: ''
    startLine: 168589
  assemblies:
  - cs.temp.dll
  namespace: Winpeak.Client.API
  syntax:
    content: public interface IWinPeakNetworkClient
    content.vb: Public Interface IWinPeakNetworkClient
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Winpeak.Client.API.IWinPeakNetworkClient.CheckAuthorization(System.Action{System.Boolean})
  commentId: M:Winpeak.Client.API.IWinPeakNetworkClient.CheckAuthorization(System.Action{System.Boolean})
  id: CheckAuthorization(System.Action{System.Boolean})
  parent: Winpeak.Client.API.IWinPeakNetworkClient
  langs:
  - csharp
  - vb
  name: CheckAuthorization(Action<Boolean>)
  nameWithType: IWinPeakNetworkClient.CheckAuthorization(Action<Boolean>)
  fullName: Winpeak.Client.API.IWinPeakNetworkClient.CheckAuthorization(System.Action<System.Boolean>)
  type: Method
  source:
    id: CheckAuthorization
    path: ''
    startLine: 168594
  assemblies:
  - cs.temp.dll
  namespace: Winpeak.Client.API
  summary: "\nCheck user authorization\n"
  example: []
  syntax:
    content: void CheckAuthorization(Action<bool> callback)
    parameters:
    - id: callback
      type: System.Action{System.Boolean}
    content.vb: Sub CheckAuthorization(callback As Action(Of Boolean))
  overload: Winpeak.Client.API.IWinPeakNetworkClient.CheckAuthorization*
  nameWithType.vb: IWinPeakNetworkClient.CheckAuthorization(Action(Of Boolean))
  fullName.vb: Winpeak.Client.API.IWinPeakNetworkClient.CheckAuthorization(System.Action(Of System.Boolean))
  name.vb: CheckAuthorization(Action(Of Boolean))
- uid: Winpeak.Client.API.IWinPeakNetworkClient.Authenticate(System.String,System.String,System.Boolean,System.Int64,System.Action{AuthorizationResult})
  commentId: M:Winpeak.Client.API.IWinPeakNetworkClient.Authenticate(System.String,System.String,System.Boolean,System.Int64,System.Action{AuthorizationResult})
  id: Authenticate(System.String,System.String,System.Boolean,System.Int64,System.Action{AuthorizationResult})
  parent: Winpeak.Client.API.IWinPeakNetworkClient
  langs:
  - csharp
  - vb
  name: Authenticate(String, String, Boolean, Int64, Action<AuthorizationResult>)
  nameWithType: IWinPeakNetworkClient.Authenticate(String, String, Boolean, Int64, Action<AuthorizationResult>)
  fullName: Winpeak.Client.API.IWinPeakNetworkClient.Authenticate(System.String, System.String, System.Boolean, System.Int64, System.Action<AuthorizationResult>)
  type: Method
  source:
    id: Authenticate
    path: ''
    startLine: 168603
  assemblies:
  - cs.temp.dll
  namespace: Winpeak.Client.API
  summary: "\nAuthenticate user in the system\n"
  example: []
  syntax:
    content: void Authenticate(string login, string password, bool rememberMe, long partnerId, Action<AuthorizationResult> callback)
    parameters:
    - id: login
      type: System.String
      description: ''
    - id: password
      type: System.String
      description: ''
    - id: rememberMe
      type: System.Boolean
      description: ''
    - id: partnerId
      type: System.Int64
    - id: callback
      type: System.Action{AuthorizationResult}
      description: ''
    content.vb: Sub Authenticate(login As String, password As String, rememberMe As Boolean, partnerId As Long, callback As Action(Of AuthorizationResult))
  overload: Winpeak.Client.API.IWinPeakNetworkClient.Authenticate*
  nameWithType.vb: IWinPeakNetworkClient.Authenticate(String, String, Boolean, Int64, Action(Of AuthorizationResult))
  fullName.vb: Winpeak.Client.API.IWinPeakNetworkClient.Authenticate(System.String, System.String, System.Boolean, System.Int64, System.Action(Of AuthorizationResult))
  name.vb: Authenticate(String, String, Boolean, Int64, Action(Of AuthorizationResult))
- uid: Winpeak.Client.API.IWinPeakNetworkClient.EditProfile(System.String,System.String,System.String,System.String,System.String,System.String,System.Action{EditProfileResult})
  commentId: M:Winpeak.Client.API.IWinPeakNetworkClient.EditProfile(System.String,System.String,System.String,System.String,System.String,System.String,System.Action{EditProfileResult})
  id: EditProfile(System.String,System.String,System.String,System.String,System.String,System.String,System.Action{EditProfileResult})
  parent: Winpeak.Client.API.IWinPeakNetworkClient
  langs:
  - csharp
  - vb
  name: EditProfile(String, String, String, String, String, String, Action<EditProfileResult>)
  nameWithType: IWinPeakNetworkClient.EditProfile(String, String, String, String, String, String, Action<EditProfileResult>)
  fullName: Winpeak.Client.API.IWinPeakNetworkClient.EditProfile(System.String, System.String, System.String, System.String, System.String, System.String, System.Action<EditProfileResult>)
  type: Method
  source:
    id: EditProfile
    path: ''
    startLine: 168619
  assemblies:
  - cs.temp.dll
  namespace: Winpeak.Client.API
  summary: "\nUses for profile edit form. Edit user profile in the system. Returns result of action true - succeeded, false - failed\n"
  example: []
  syntax:
    content: void EditProfile(string email, string login, string phone, string password, string oldPassword, string rePassword, Action<EditProfileResult> callback)
    parameters:
    - id: email
      type: System.String
      description: ''
    - id: login
      type: System.String
      description: ''
    - id: phone
      type: System.String
      description: ''
    - id: password
      type: System.String
      description: ''
    - id: oldPassword
      type: System.String
    - id: rePassword
      type: System.String
      description: ''
    - id: callback
      type: System.Action{EditProfileResult}
      description: ''
    content.vb: Sub EditProfile(email As String, login As String, phone As String, password As String, oldPassword As String, rePassword As String, callback As Action(Of EditProfileResult))
  overload: Winpeak.Client.API.IWinPeakNetworkClient.EditProfile*
  nameWithType.vb: IWinPeakNetworkClient.EditProfile(String, String, String, String, String, String, Action(Of EditProfileResult))
  fullName.vb: Winpeak.Client.API.IWinPeakNetworkClient.EditProfile(System.String, System.String, System.String, System.String, System.String, System.String, System.Action(Of EditProfileResult))
  name.vb: EditProfile(String, String, String, String, String, String, Action(Of EditProfileResult))
- uid: Winpeak.Client.API.IWinPeakNetworkClient.EditProfile(System.String,System.String,System.String,System.String,System.String,System.Int32,System.Action{EditProfileResult})
  commentId: M:Winpeak.Client.API.IWinPeakNetworkClient.EditProfile(System.String,System.String,System.String,System.String,System.String,System.Int32,System.Action{EditProfileResult})
  id: EditProfile(System.String,System.String,System.String,System.String,System.String,System.Int32,System.Action{EditProfileResult})
  parent: Winpeak.Client.API.IWinPeakNetworkClient
  langs:
  - csharp
  - vb
  name: EditProfile(String, String, String, String, String, Int32, Action<EditProfileResult>)
  nameWithType: IWinPeakNetworkClient.EditProfile(String, String, String, String, String, Int32, Action<EditProfileResult>)
  fullName: Winpeak.Client.API.IWinPeakNetworkClient.EditProfile(System.String, System.String, System.String, System.String, System.String, System.Int32, System.Action<EditProfileResult>)
  type: Method
  source:
    id: EditProfile
    path: ''
    startLine: 168630
  assemblies:
  - cs.temp.dll
  namespace: Winpeak.Client.API
  summary: "\nUses for registration form. Edit user profile in the system with specified fields. Returns result of action true - succeeded, false - failed\n"
  example: []
  syntax:
    content: void EditProfile(string email, string login, string password, string oldPassword, string rePassword, int agree, Action<EditProfileResult> callback)
    parameters:
    - id: email
      type: System.String
      description: ''
    - id: login
      type: System.String
      description: ''
    - id: password
      type: System.String
      description: ''
    - id: oldPassword
      type: System.String
    - id: rePassword
      type: System.String
      description: ''
    - id: agree
      type: System.Int32
      description: ''
    - id: callback
      type: System.Action{EditProfileResult}
      description: ''
    content.vb: Sub EditProfile(email As String, login As String, password As String, oldPassword As String, rePassword As String, agree As Integer, callback As Action(Of EditProfileResult))
  overload: Winpeak.Client.API.IWinPeakNetworkClient.EditProfile*
  nameWithType.vb: IWinPeakNetworkClient.EditProfile(String, String, String, String, String, Int32, Action(Of EditProfileResult))
  fullName.vb: Winpeak.Client.API.IWinPeakNetworkClient.EditProfile(System.String, System.String, System.String, System.String, System.String, System.Int32, System.Action(Of EditProfileResult))
  name.vb: EditProfile(String, String, String, String, String, Int32, Action(Of EditProfileResult))
- uid: Winpeak.Client.API.IWinPeakNetworkClient.Register(System.Int64,System.Action{RegistrationResult})
  commentId: M:Winpeak.Client.API.IWinPeakNetworkClient.Register(System.Int64,System.Action{RegistrationResult})
  id: Register(System.Int64,System.Action{RegistrationResult})
  parent: Winpeak.Client.API.IWinPeakNetworkClient
  langs:
  - csharp
  - vb
  name: Register(Int64, Action<RegistrationResult>)
  nameWithType: IWinPeakNetworkClient.Register(Int64, Action<RegistrationResult>)
  fullName: Winpeak.Client.API.IWinPeakNetworkClient.Register(System.Int64, System.Action<RegistrationResult>)
  type: Method
  source:
    id: Register
    path: ''
    startLine: 168637
  assemblies:
  - cs.temp.dll
  namespace: Winpeak.Client.API
  summary: "\nRegister user in the system. Return user_id, login, password\n"
  example: []
  syntax:
    content: void Register(long partnerId, Action<RegistrationResult> callback)
    parameters:
    - id: partnerId
      type: System.Int64
      description: ''
    - id: callback
      type: System.Action{RegistrationResult}
      description: ''
    content.vb: Sub Register(partnerId As Long, callback As Action(Of RegistrationResult))
  overload: Winpeak.Client.API.IWinPeakNetworkClient.Register*
  nameWithType.vb: IWinPeakNetworkClient.Register(Int64, Action(Of RegistrationResult))
  fullName.vb: Winpeak.Client.API.IWinPeakNetworkClient.Register(System.Int64, System.Action(Of RegistrationResult))
  name.vb: Register(Int64, Action(Of RegistrationResult))
- uid: Winpeak.Client.API.IWinPeakNetworkClient.GetUserInfo(System.Int32,System.Int32,System.Int32,System.Action{GetUserInfoResult})
  commentId: M:Winpeak.Client.API.IWinPeakNetworkClient.GetUserInfo(System.Int32,System.Int32,System.Int32,System.Action{GetUserInfoResult})
  id: GetUserInfo(System.Int32,System.Int32,System.Int32,System.Action{GetUserInfoResult})
  parent: Winpeak.Client.API.IWinPeakNetworkClient
  langs:
  - csharp
  - vb
  name: GetUserInfo(Int32, Int32, Int32, Action<GetUserInfoResult>)
  nameWithType: IWinPeakNetworkClient.GetUserInfo(Int32, Int32, Int32, Action<GetUserInfoResult>)
  fullName: Winpeak.Client.API.IWinPeakNetworkClient.GetUserInfo(System.Int32, System.Int32, System.Int32, System.Action<GetUserInfoResult>)
  type: Method
  source:
    id: GetUserInfo
    path: ''
    startLine: 168646
  assemblies:
  - cs.temp.dll
  namespace: Winpeak.Client.API
  summary: "\nGet actual userinfo\n"
  example: []
  syntax:
    content: void GetUserInfo(int appVersion, int gameId, int gameVersion, Action<GetUserInfoResult> callback)
    parameters:
    - id: appVersion
      type: System.Int32
      description: ''
    - id: gameId
      type: System.Int32
      description: ''
    - id: gameVersion
      type: System.Int32
      description: ''
    - id: callback
      type: System.Action{GetUserInfoResult}
      description: ''
    content.vb: Sub GetUserInfo(appVersion As Integer, gameId As Integer, gameVersion As Integer, callback As Action(Of GetUserInfoResult))
  overload: Winpeak.Client.API.IWinPeakNetworkClient.GetUserInfo*
  nameWithType.vb: IWinPeakNetworkClient.GetUserInfo(Int32, Int32, Int32, Action(Of GetUserInfoResult))
  fullName.vb: Winpeak.Client.API.IWinPeakNetworkClient.GetUserInfo(System.Int32, System.Int32, System.Int32, System.Action(Of GetUserInfoResult))
  name.vb: GetUserInfo(Int32, Int32, Int32, Action(Of GetUserInfoResult))
- uid: Winpeak.Client.API.IWinPeakNetworkClient.Logout(System.Action{System.Boolean})
  commentId: M:Winpeak.Client.API.IWinPeakNetworkClient.Logout(System.Action{System.Boolean})
  id: Logout(System.Action{System.Boolean})
  parent: Winpeak.Client.API.IWinPeakNetworkClient
  langs:
  - csharp
  - vb
  name: Logout(Action<Boolean>)
  nameWithType: IWinPeakNetworkClient.Logout(Action<Boolean>)
  fullName: Winpeak.Client.API.IWinPeakNetworkClient.Logout(System.Action<System.Boolean>)
  type: Method
  source:
    id: Logout
    path: ''
    startLine: 168652
  assemblies:
  - cs.temp.dll
  namespace: Winpeak.Client.API
  summary: "\nLogout user in the system. Clear session on server side\n"
  example: []
  syntax:
    content: void Logout(Action<bool> callback)
    parameters:
    - id: callback
      type: System.Action{System.Boolean}
      description: ''
    content.vb: Sub Logout(callback As Action(Of Boolean))
  overload: Winpeak.Client.API.IWinPeakNetworkClient.Logout*
  nameWithType.vb: IWinPeakNetworkClient.Logout(Action(Of Boolean))
  fullName.vb: Winpeak.Client.API.IWinPeakNetworkClient.Logout(System.Action(Of System.Boolean))
  name.vb: Logout(Action(Of Boolean))
- uid: Winpeak.Client.API.IWinPeakNetworkClient.SearchGame(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int64,System.Action{SearchGameResult})
  commentId: M:Winpeak.Client.API.IWinPeakNetworkClient.SearchGame(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int64,System.Action{SearchGameResult})
  id: SearchGame(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int64,System.Action{SearchGameResult})
  parent: Winpeak.Client.API.IWinPeakNetworkClient
  langs:
  - csharp
  - vb
  name: SearchGame(Int32, Int32, Int32, Int32, Int32, Int64, Action<SearchGameResult>)
  nameWithType: IWinPeakNetworkClient.SearchGame(Int32, Int32, Int32, Int32, Int32, Int64, Action<SearchGameResult>)
  fullName: Winpeak.Client.API.IWinPeakNetworkClient.SearchGame(System.Int32, System.Int32, System.Int32, System.Int32, System.Int32, System.Int64, System.Action<SearchGameResult>)
  type: Method
  source:
    id: SearchGame
    path: ''
    startLine: 168664
  assemblies:
  - cs.temp.dll
  namespace: Winpeak.Client.API
  summary: "\nSearch game session by specified params\n"
  example: []
  syntax:
    content: void SearchGame(int offset, int size, int gameId, int state, int tplId, long userId, Action<SearchGameResult> callback)
    parameters:
    - id: offset
      type: System.Int32
      description: ''
    - id: size
      type: System.Int32
      description: ''
    - id: gameId
      type: System.Int32
      description: ''
    - id: state
      type: System.Int32
      description: ''
    - id: tplId
      type: System.Int32
      description: ''
    - id: userId
      type: System.Int64
      description: ''
    - id: callback
      type: System.Action{SearchGameResult}
      description: ''
    content.vb: Sub SearchGame(offset As Integer, size As Integer, gameId As Integer, state As Integer, tplId As Integer, userId As Long, callback As Action(Of SearchGameResult))
  overload: Winpeak.Client.API.IWinPeakNetworkClient.SearchGame*
  nameWithType.vb: IWinPeakNetworkClient.SearchGame(Int32, Int32, Int32, Int32, Int32, Int64, Action(Of SearchGameResult))
  fullName.vb: Winpeak.Client.API.IWinPeakNetworkClient.SearchGame(System.Int32, System.Int32, System.Int32, System.Int32, System.Int32, System.Int64, System.Action(Of SearchGameResult))
  name.vb: SearchGame(Int32, Int32, Int32, Int32, Int32, Int64, Action(Of SearchGameResult))
- uid: Winpeak.Client.API.IWinPeakNetworkClient.CreateGameSessionRequest(System.Int64,System.Action{CreateGameSessionRequestResult})
  commentId: M:Winpeak.Client.API.IWinPeakNetworkClient.CreateGameSessionRequest(System.Int64,System.Action{CreateGameSessionRequestResult})
  id: CreateGameSessionRequest(System.Int64,System.Action{CreateGameSessionRequestResult})
  parent: Winpeak.Client.API.IWinPeakNetworkClient
  langs:
  - csharp
  - vb
  name: CreateGameSessionRequest(Int64, Action<CreateGameSessionRequestResult>)
  nameWithType: IWinPeakNetworkClient.CreateGameSessionRequest(Int64, Action<CreateGameSessionRequestResult>)
  fullName: Winpeak.Client.API.IWinPeakNetworkClient.CreateGameSessionRequest(System.Int64, System.Action<CreateGameSessionRequestResult>)
  type: Method
  source:
    id: CreateGameSessionRequest
    path: ''
    startLine: 168671
  assemblies:
  - cs.temp.dll
  namespace: Winpeak.Client.API
  summary: "\nCreate game session request for chosen game\n"
  example: []
  syntax:
    content: void CreateGameSessionRequest(long gameSessionId, Action<CreateGameSessionRequestResult> callback)
    parameters:
    - id: gameSessionId
      type: System.Int64
      description: ''
    - id: callback
      type: System.Action{CreateGameSessionRequestResult}
      description: ''
    content.vb: Sub CreateGameSessionRequest(gameSessionId As Long, callback As Action(Of CreateGameSessionRequestResult))
  overload: Winpeak.Client.API.IWinPeakNetworkClient.CreateGameSessionRequest*
  nameWithType.vb: IWinPeakNetworkClient.CreateGameSessionRequest(Int64, Action(Of CreateGameSessionRequestResult))
  fullName.vb: Winpeak.Client.API.IWinPeakNetworkClient.CreateGameSessionRequest(System.Int64, System.Action(Of CreateGameSessionRequestResult))
  name.vb: CreateGameSessionRequest(Int64, Action(Of CreateGameSessionRequestResult))
- uid: Winpeak.Client.API.IWinPeakNetworkClient.RejectCreateGameSessionRequest(System.Int64,System.Int64,System.Action{RejectCreateGameSessionRequestResult})
  commentId: M:Winpeak.Client.API.IWinPeakNetworkClient.RejectCreateGameSessionRequest(System.Int64,System.Int64,System.Action{RejectCreateGameSessionRequestResult})
  id: RejectCreateGameSessionRequest(System.Int64,System.Int64,System.Action{RejectCreateGameSessionRequestResult})
  parent: Winpeak.Client.API.IWinPeakNetworkClient
  langs:
  - csharp
  - vb
  name: RejectCreateGameSessionRequest(Int64, Int64, Action<RejectCreateGameSessionRequestResult>)
  nameWithType: IWinPeakNetworkClient.RejectCreateGameSessionRequest(Int64, Int64, Action<RejectCreateGameSessionRequestResult>)
  fullName: Winpeak.Client.API.IWinPeakNetworkClient.RejectCreateGameSessionRequest(System.Int64, System.Int64, System.Action<RejectCreateGameSessionRequestResult>)
  type: Method
  source:
    id: RejectCreateGameSessionRequest
    path: ''
    startLine: 168679
  assemblies:
  - cs.temp.dll
  namespace: Winpeak.Client.API
  summary: "\nReject create game session request for chosen game. Can be rejected by game creator or user who wants to play in this game\n"
  example: []
  syntax:
    content: void RejectCreateGameSessionRequest(long userId, long gameSessionId, Action<RejectCreateGameSessionRequestResult> callback)
    parameters:
    - id: userId
      type: System.Int64
      description: ''
    - id: gameSessionId
      type: System.Int64
      description: ''
    - id: callback
      type: System.Action{RejectCreateGameSessionRequestResult}
      description: ''
    content.vb: Sub RejectCreateGameSessionRequest(userId As Long, gameSessionId As Long, callback As Action(Of RejectCreateGameSessionRequestResult))
  overload: Winpeak.Client.API.IWinPeakNetworkClient.RejectCreateGameSessionRequest*
  nameWithType.vb: IWinPeakNetworkClient.RejectCreateGameSessionRequest(Int64, Int64, Action(Of RejectCreateGameSessionRequestResult))
  fullName.vb: Winpeak.Client.API.IWinPeakNetworkClient.RejectCreateGameSessionRequest(System.Int64, System.Int64, System.Action(Of RejectCreateGameSessionRequestResult))
  name.vb: RejectCreateGameSessionRequest(Int64, Int64, Action(Of RejectCreateGameSessionRequestResult))
- uid: Winpeak.Client.API.IWinPeakNetworkClient.ApproveCreateGameSessionRequest(System.Int64,System.Int64,System.Action{ApproveGameSessionRequestResult})
  commentId: M:Winpeak.Client.API.IWinPeakNetworkClient.ApproveCreateGameSessionRequest(System.Int64,System.Int64,System.Action{ApproveGameSessionRequestResult})
  id: ApproveCreateGameSessionRequest(System.Int64,System.Int64,System.Action{ApproveGameSessionRequestResult})
  parent: Winpeak.Client.API.IWinPeakNetworkClient
  langs:
  - csharp
  - vb
  name: ApproveCreateGameSessionRequest(Int64, Int64, Action<ApproveGameSessionRequestResult>)
  nameWithType: IWinPeakNetworkClient.ApproveCreateGameSessionRequest(Int64, Int64, Action<ApproveGameSessionRequestResult>)
  fullName: Winpeak.Client.API.IWinPeakNetworkClient.ApproveCreateGameSessionRequest(System.Int64, System.Int64, System.Action<ApproveGameSessionRequestResult>)
  type: Method
  source:
    id: ApproveCreateGameSessionRequest
    path: ''
    startLine: 168687
  assemblies:
  - cs.temp.dll
  namespace: Winpeak.Client.API
  summary: "\nApprove create game session request from another user\n"
  example: []
  syntax:
    content: void ApproveCreateGameSessionRequest(long userId, long gameSessionId, Action<ApproveGameSessionRequestResult> callback)
    parameters:
    - id: userId
      type: System.Int64
      description: ''
    - id: gameSessionId
      type: System.Int64
      description: ''
    - id: callback
      type: System.Action{ApproveGameSessionRequestResult}
      description: ''
    content.vb: Sub ApproveCreateGameSessionRequest(userId As Long, gameSessionId As Long, callback As Action(Of ApproveGameSessionRequestResult))
  overload: Winpeak.Client.API.IWinPeakNetworkClient.ApproveCreateGameSessionRequest*
  nameWithType.vb: IWinPeakNetworkClient.ApproveCreateGameSessionRequest(Int64, Int64, Action(Of ApproveGameSessionRequestResult))
  fullName.vb: Winpeak.Client.API.IWinPeakNetworkClient.ApproveCreateGameSessionRequest(System.Int64, System.Int64, System.Action(Of ApproveGameSessionRequestResult))
  name.vb: ApproveCreateGameSessionRequest(Int64, Int64, Action(Of ApproveGameSessionRequestResult))
- uid: Winpeak.Client.API.IWinPeakNetworkClient.CreateGame(System.Int32,System.Int32,System.Int32,System.Action{CreateGameSessionResult})
  commentId: M:Winpeak.Client.API.IWinPeakNetworkClient.CreateGame(System.Int32,System.Int32,System.Int32,System.Action{CreateGameSessionResult})
  id: CreateGame(System.Int32,System.Int32,System.Int32,System.Action{CreateGameSessionResult})
  parent: Winpeak.Client.API.IWinPeakNetworkClient
  langs:
  - csharp
  - vb
  name: CreateGame(Int32, Int32, Int32, Action<CreateGameSessionResult>)
  nameWithType: IWinPeakNetworkClient.CreateGame(Int32, Int32, Int32, Action<CreateGameSessionResult>)
  fullName: Winpeak.Client.API.IWinPeakNetworkClient.CreateGame(System.Int32, System.Int32, System.Int32, System.Action<CreateGameSessionResult>)
  type: Method
  source:
    id: CreateGame
    path: ''
    startLine: 168696
  assemblies:
  - cs.temp.dll
  namespace: Winpeak.Client.API
  summary: "\nCreate game session by specified params\n"
  example: []
  syntax:
    content: void CreateGame(int gameId, int gameType, int cashFee, Action<CreateGameSessionResult> callback)
    parameters:
    - id: gameId
      type: System.Int32
      description: ''
    - id: gameType
      type: System.Int32
      description: ''
    - id: cashFee
      type: System.Int32
      description: ''
    - id: callback
      type: System.Action{CreateGameSessionResult}
      description: ''
    content.vb: Sub CreateGame(gameId As Integer, gameType As Integer, cashFee As Integer, callback As Action(Of CreateGameSessionResult))
  overload: Winpeak.Client.API.IWinPeakNetworkClient.CreateGame*
  nameWithType.vb: IWinPeakNetworkClient.CreateGame(Int32, Int32, Int32, Action(Of CreateGameSessionResult))
  fullName.vb: Winpeak.Client.API.IWinPeakNetworkClient.CreateGame(System.Int32, System.Int32, System.Int32, System.Action(Of CreateGameSessionResult))
  name.vb: CreateGame(Int32, Int32, Int32, Action(Of CreateGameSessionResult))
- uid: Winpeak.Client.API.IWinPeakNetworkClient.GetGameInfo(System.Int32,System.Int64,System.Action{GetGameInfoResult})
  commentId: M:Winpeak.Client.API.IWinPeakNetworkClient.GetGameInfo(System.Int32,System.Int64,System.Action{GetGameInfoResult})
  id: GetGameInfo(System.Int32,System.Int64,System.Action{GetGameInfoResult})
  parent: Winpeak.Client.API.IWinPeakNetworkClient
  langs:
  - csharp
  - vb
  name: GetGameInfo(Int32, Int64, Action<GetGameInfoResult>)
  nameWithType: IWinPeakNetworkClient.GetGameInfo(Int32, Int64, Action<GetGameInfoResult>)
  fullName: Winpeak.Client.API.IWinPeakNetworkClient.GetGameInfo(System.Int32, System.Int64, System.Action<GetGameInfoResult>)
  type: Method
  source:
    id: GetGameInfo
    path: ''
    startLine: 168704
  assemblies:
  - cs.temp.dll
  namespace: Winpeak.Client.API
  summary: "\nGet detailed information about specified game\n"
  example: []
  syntax:
    content: void GetGameInfo(int gameId, long gameSessionId, Action<GetGameInfoResult> callback)
    parameters:
    - id: gameId
      type: System.Int32
      description: ''
    - id: gameSessionId
      type: System.Int64
      description: ''
    - id: callback
      type: System.Action{GetGameInfoResult}
      description: ''
    content.vb: Sub GetGameInfo(gameId As Integer, gameSessionId As Long, callback As Action(Of GetGameInfoResult))
  overload: Winpeak.Client.API.IWinPeakNetworkClient.GetGameInfo*
  nameWithType.vb: IWinPeakNetworkClient.GetGameInfo(Int32, Int64, Action(Of GetGameInfoResult))
  fullName.vb: Winpeak.Client.API.IWinPeakNetworkClient.GetGameInfo(System.Int32, System.Int64, System.Action(Of GetGameInfoResult))
  name.vb: GetGameInfo(Int32, Int64, Action(Of GetGameInfoResult))
- uid: Winpeak.Client.API.IWinPeakNetworkClient.CloseGameSession(System.Int64,System.Action{CloseGameSessionResult})
  commentId: M:Winpeak.Client.API.IWinPeakNetworkClient.CloseGameSession(System.Int64,System.Action{CloseGameSessionResult})
  id: CloseGameSession(System.Int64,System.Action{CloseGameSessionResult})
  parent: Winpeak.Client.API.IWinPeakNetworkClient
  langs:
  - csharp
  - vb
  name: CloseGameSession(Int64, Action<CloseGameSessionResult>)
  nameWithType: IWinPeakNetworkClient.CloseGameSession(Int64, Action<CloseGameSessionResult>)
  fullName: Winpeak.Client.API.IWinPeakNetworkClient.CloseGameSession(System.Int64, System.Action<CloseGameSessionResult>)
  type: Method
  source:
    id: CloseGameSession
    path: ''
    startLine: 168711
  assemblies:
  - cs.temp.dll
  namespace: Winpeak.Client.API
  summary: "\nClose game session by specified params\n"
  example: []
  syntax:
    content: void CloseGameSession(long gameSessionId, Action<CloseGameSessionResult> callback)
    parameters:
    - id: gameSessionId
      type: System.Int64
      description: ''
    - id: callback
      type: System.Action{CloseGameSessionResult}
      description: ''
    content.vb: Sub CloseGameSession(gameSessionId As Long, callback As Action(Of CloseGameSessionResult))
  overload: Winpeak.Client.API.IWinPeakNetworkClient.CloseGameSession*
  nameWithType.vb: IWinPeakNetworkClient.CloseGameSession(Int64, Action(Of CloseGameSessionResult))
  fullName.vb: Winpeak.Client.API.IWinPeakNetworkClient.CloseGameSession(System.Int64, System.Action(Of CloseGameSessionResult))
  name.vb: CloseGameSession(Int64, Action(Of CloseGameSessionResult))
- uid: Winpeak.Client.API.IWinPeakNetworkClient.PasswordRecovery(System.String,System.Int64,System.Action{PasswordRecoveryRequestResult})
  commentId: M:Winpeak.Client.API.IWinPeakNetworkClient.PasswordRecovery(System.String,System.Int64,System.Action{PasswordRecoveryRequestResult})
  id: PasswordRecovery(System.String,System.Int64,System.Action{PasswordRecoveryRequestResult})
  parent: Winpeak.Client.API.IWinPeakNetworkClient
  langs:
  - csharp
  - vb
  name: PasswordRecovery(String, Int64, Action<PasswordRecoveryRequestResult>)
  nameWithType: IWinPeakNetworkClient.PasswordRecovery(String, Int64, Action<PasswordRecoveryRequestResult>)
  fullName: Winpeak.Client.API.IWinPeakNetworkClient.PasswordRecovery(System.String, System.Int64, System.Action<PasswordRecoveryRequestResult>)
  type: Method
  source:
    id: PasswordRecovery
    path: ''
    startLine: 168718
  assemblies:
  - cs.temp.dll
  namespace: Winpeak.Client.API
  summary: "\nUse for password recovery form. Returns result of action true - succeeded, false - failed\n"
  example: []
  syntax:
    content: void PasswordRecovery(string email, long partnerId, Action<PasswordRecoveryRequestResult> callback)
    parameters:
    - id: email
      type: System.String
      description: ''
    - id: partnerId
      type: System.Int64
      description: ''
    - id: callback
      type: System.Action{PasswordRecoveryRequestResult}
    content.vb: Sub PasswordRecovery(email As String, partnerId As Long, callback As Action(Of PasswordRecoveryRequestResult))
  overload: Winpeak.Client.API.IWinPeakNetworkClient.PasswordRecovery*
  nameWithType.vb: IWinPeakNetworkClient.PasswordRecovery(String, Int64, Action(Of PasswordRecoveryRequestResult))
  fullName.vb: Winpeak.Client.API.IWinPeakNetworkClient.PasswordRecovery(System.String, System.Int64, System.Action(Of PasswordRecoveryRequestResult))
  name.vb: PasswordRecovery(String, Int64, Action(Of PasswordRecoveryRequestResult))
- uid: Winpeak.Client.API.IWinPeakNetworkClient.GetActiveGameSessionsRequest(System.Int32,System.Action{GetActiveGameSessionsRequestResult})
  commentId: M:Winpeak.Client.API.IWinPeakNetworkClient.GetActiveGameSessionsRequest(System.Int32,System.Action{GetActiveGameSessionsRequestResult})
  id: GetActiveGameSessionsRequest(System.Int32,System.Action{GetActiveGameSessionsRequestResult})
  parent: Winpeak.Client.API.IWinPeakNetworkClient
  langs:
  - csharp
  - vb
  name: GetActiveGameSessionsRequest(Int32, Action<GetActiveGameSessionsRequestResult>)
  nameWithType: IWinPeakNetworkClient.GetActiveGameSessionsRequest(Int32, Action<GetActiveGameSessionsRequestResult>)
  fullName: Winpeak.Client.API.IWinPeakNetworkClient.GetActiveGameSessionsRequest(System.Int32, System.Action<GetActiveGameSessionsRequestResult>)
  type: Method
  source:
    id: GetActiveGameSessionsRequest
    path: ''
    startLine: 168725
  assemblies:
  - cs.temp.dll
  namespace: Winpeak.Client.API
  summary: "\nGet user active game sessions\n"
  example: []
  syntax:
    content: void GetActiveGameSessionsRequest(int gameId, Action<GetActiveGameSessionsRequestResult> callback)
    parameters:
    - id: gameId
      type: System.Int32
      description: ''
    - id: callback
      type: System.Action{GetActiveGameSessionsRequestResult}
      description: ''
    content.vb: Sub GetActiveGameSessionsRequest(gameId As Integer, callback As Action(Of GetActiveGameSessionsRequestResult))
  overload: Winpeak.Client.API.IWinPeakNetworkClient.GetActiveGameSessionsRequest*
  nameWithType.vb: IWinPeakNetworkClient.GetActiveGameSessionsRequest(Int32, Action(Of GetActiveGameSessionsRequestResult))
  fullName.vb: Winpeak.Client.API.IWinPeakNetworkClient.GetActiveGameSessionsRequest(System.Int32, System.Action(Of GetActiveGameSessionsRequestResult))
  name.vb: GetActiveGameSessionsRequest(Int32, Action(Of GetActiveGameSessionsRequestResult))
- uid: Winpeak.Client.API.IWinPeakNetworkClient.RemoveFriend(System.Int64,System.Action{RemoveFriendResult})
  commentId: M:Winpeak.Client.API.IWinPeakNetworkClient.RemoveFriend(System.Int64,System.Action{RemoveFriendResult})
  id: RemoveFriend(System.Int64,System.Action{RemoveFriendResult})
  parent: Winpeak.Client.API.IWinPeakNetworkClient
  langs:
  - csharp
  - vb
  name: RemoveFriend(Int64, Action<RemoveFriendResult>)
  nameWithType: IWinPeakNetworkClient.RemoveFriend(Int64, Action<RemoveFriendResult>)
  fullName: Winpeak.Client.API.IWinPeakNetworkClient.RemoveFriend(System.Int64, System.Action<RemoveFriendResult>)
  type: Method
  source:
    id: RemoveFriend
    path: ''
    startLine: 168731
  assemblies:
  - cs.temp.dll
  namespace: Winpeak.Client.API
  summary: "\nRemove user by user Id. Returns result of action true - succeeded, false - failed\n"
  example: []
  syntax:
    content: void RemoveFriend(long userId, Action<RemoveFriendResult> callback)
    parameters:
    - id: userId
      type: System.Int64
      description: ''
    - id: callback
      type: System.Action{RemoveFriendResult}
    content.vb: Sub RemoveFriend(userId As Long, callback As Action(Of RemoveFriendResult))
  overload: Winpeak.Client.API.IWinPeakNetworkClient.RemoveFriend*
  nameWithType.vb: IWinPeakNetworkClient.RemoveFriend(Int64, Action(Of RemoveFriendResult))
  fullName.vb: Winpeak.Client.API.IWinPeakNetworkClient.RemoveFriend(System.Int64, System.Action(Of RemoveFriendResult))
  name.vb: RemoveFriend(Int64, Action(Of RemoveFriendResult))
- uid: Winpeak.Client.API.IWinPeakNetworkClient.SearchUser(System.Int64,System.Int32,System.Int32,System.Int32,System.String,System.String,System.String,System.String,System.Int64,System.Boolean,System.Action{SearchUserResult})
  commentId: M:Winpeak.Client.API.IWinPeakNetworkClient.SearchUser(System.Int64,System.Int32,System.Int32,System.Int32,System.String,System.String,System.String,System.String,System.Int64,System.Boolean,System.Action{SearchUserResult})
  id: SearchUser(System.Int64,System.Int32,System.Int32,System.Int32,System.String,System.String,System.String,System.String,System.Int64,System.Boolean,System.Action{SearchUserResult})
  parent: Winpeak.Client.API.IWinPeakNetworkClient
  langs:
  - csharp
  - vb
  name: SearchUser(Int64, Int32, Int32, Int32, String, String, String, String, Int64, Boolean, Action<SearchUserResult>)
  nameWithType: IWinPeakNetworkClient.SearchUser(Int64, Int32, Int32, Int32, String, String, String, String, Int64, Boolean, Action<SearchUserResult>)
  fullName: Winpeak.Client.API.IWinPeakNetworkClient.SearchUser(System.Int64, System.Int32, System.Int32, System.Int32, System.String, System.String, System.String, System.String, System.Int64, System.Boolean, System.Action<SearchUserResult>)
  type: Method
  source:
    id: SearchUser
    path: ''
    startLine: 168747
  assemblies:
  - cs.temp.dll
  namespace: Winpeak.Client.API
  summary: "\nSearch users by specified params\n"
  example: []
  syntax:
    content: void SearchUser(long partnerId, int offset, int size, int gameId, string login, string email, string firstName, string lastName, long userId, bool friends, Action<SearchUserResult> callback)
    parameters:
    - id: partnerId
      type: System.Int64
      description: ''
    - id: offset
      type: System.Int32
      description: ''
    - id: size
      type: System.Int32
      description: ''
    - id: gameId
      type: System.Int32
      description: ''
    - id: login
      type: System.String
      description: ''
    - id: email
      type: System.String
      description: ''
    - id: firstName
      type: System.String
      description: ''
    - id: lastName
      type: System.String
      description: ''
    - id: userId
      type: System.Int64
      description: ''
    - id: friends
      type: System.Boolean
      description: ''
    - id: callback
      type: System.Action{SearchUserResult}
      description: ''
    content.vb: Sub SearchUser(partnerId As Long, offset As Integer, size As Integer, gameId As Integer, login As String, email As String, firstName As String, lastName As String, userId As Long, friends As Boolean, callback As Action(Of SearchUserResult))
  overload: Winpeak.Client.API.IWinPeakNetworkClient.SearchUser*
  nameWithType.vb: IWinPeakNetworkClient.SearchUser(Int64, Int32, Int32, Int32, String, String, String, String, Int64, Boolean, Action(Of SearchUserResult))
  fullName.vb: Winpeak.Client.API.IWinPeakNetworkClient.SearchUser(System.Int64, System.Int32, System.Int32, System.Int32, System.String, System.String, System.String, System.String, System.Int64, System.Boolean, System.Action(Of SearchUserResult))
  name.vb: SearchUser(Int64, Int32, Int32, Int32, String, String, String, String, Int64, Boolean, Action(Of SearchUserResult))
- uid: Winpeak.Client.API.IWinPeakNetworkClient.AddFriend(System.Int64,System.Action{AddFriendResult})
  commentId: M:Winpeak.Client.API.IWinPeakNetworkClient.AddFriend(System.Int64,System.Action{AddFriendResult})
  id: AddFriend(System.Int64,System.Action{AddFriendResult})
  parent: Winpeak.Client.API.IWinPeakNetworkClient
  langs:
  - csharp
  - vb
  name: AddFriend(Int64, Action<AddFriendResult>)
  nameWithType: IWinPeakNetworkClient.AddFriend(Int64, Action<AddFriendResult>)
  fullName: Winpeak.Client.API.IWinPeakNetworkClient.AddFriend(System.Int64, System.Action<AddFriendResult>)
  type: Method
  source:
    id: AddFriend
    path: ''
    startLine: 168753
  assemblies:
  - cs.temp.dll
  namespace: Winpeak.Client.API
  summary: "\nAdd user to friendList. Returns result of action true - succeeded, false - failed\n"
  example: []
  syntax:
    content: void AddFriend(long userId, Action<AddFriendResult> callback)
    parameters:
    - id: userId
      type: System.Int64
      description: ''
    - id: callback
      type: System.Action{AddFriendResult}
    content.vb: Sub AddFriend(userId As Long, callback As Action(Of AddFriendResult))
  overload: Winpeak.Client.API.IWinPeakNetworkClient.AddFriend*
  nameWithType.vb: IWinPeakNetworkClient.AddFriend(Int64, Action(Of AddFriendResult))
  fullName.vb: Winpeak.Client.API.IWinPeakNetworkClient.AddFriend(System.Int64, System.Action(Of AddFriendResult))
  name.vb: AddFriend(Int64, Action(Of AddFriendResult))
- uid: Winpeak.Client.API.IWinPeakNetworkClient.GetLastTournaments(System.Int32,System.Int64,System.Int32,System.Int32,System.Int32,System.Action{GetLastTournamentsResult})
  commentId: M:Winpeak.Client.API.IWinPeakNetworkClient.GetLastTournaments(System.Int32,System.Int64,System.Int32,System.Int32,System.Int32,System.Action{GetLastTournamentsResult})
  id: GetLastTournaments(System.Int32,System.Int64,System.Int32,System.Int32,System.Int32,System.Action{GetLastTournamentsResult})
  parent: Winpeak.Client.API.IWinPeakNetworkClient
  langs:
  - csharp
  - vb
  name: GetLastTournaments(Int32, Int64, Int32, Int32, Int32, Action<GetLastTournamentsResult>)
  nameWithType: IWinPeakNetworkClient.GetLastTournaments(Int32, Int64, Int32, Int32, Int32, Action<GetLastTournamentsResult>)
  fullName: Winpeak.Client.API.IWinPeakNetworkClient.GetLastTournaments(System.Int32, System.Int64, System.Int32, System.Int32, System.Int32, System.Action<GetLastTournamentsResult>)
  type: Method
  source:
    id: GetLastTournaments
    path: ''
    startLine: 168763
  assemblies:
  - cs.temp.dll
  namespace: Winpeak.Client.API
  summary: "\nGet the last user tournaments where he participated\n"
  example: []
  syntax:
    content: void GetLastTournaments(int gameId, long userId, int win, int offset, int size, Action<GetLastTournamentsResult> callback)
    parameters:
    - id: gameId
      type: System.Int32
      description: ''
    - id: userId
      type: System.Int64
      description: ''
    - id: win
      type: System.Int32
    - id: offset
      type: System.Int32
      description: ''
    - id: size
      type: System.Int32
      description: ''
    - id: callback
      type: System.Action{GetLastTournamentsResult}
      description: ''
    content.vb: Sub GetLastTournaments(gameId As Integer, userId As Long, win As Integer, offset As Integer, size As Integer, callback As Action(Of GetLastTournamentsResult))
  overload: Winpeak.Client.API.IWinPeakNetworkClient.GetLastTournaments*
  nameWithType.vb: IWinPeakNetworkClient.GetLastTournaments(Int32, Int64, Int32, Int32, Int32, Action(Of GetLastTournamentsResult))
  fullName.vb: Winpeak.Client.API.IWinPeakNetworkClient.GetLastTournaments(System.Int32, System.Int64, System.Int32, System.Int32, System.Int32, System.Action(Of GetLastTournamentsResult))
  name.vb: GetLastTournaments(Int32, Int64, Int32, Int32, Int32, Action(Of GetLastTournamentsResult))
references:
- uid: Winpeak.Client.API
  commentId: N:Winpeak.Client.API
  name: Winpeak.Client.API
  nameWithType: Winpeak.Client.API
  fullName: Winpeak.Client.API
- uid: Winpeak.Client.API.IWinPeakNetworkClient.CheckAuthorization*
  commentId: Overload:Winpeak.Client.API.IWinPeakNetworkClient.CheckAuthorization
  name: CheckAuthorization
  nameWithType: IWinPeakNetworkClient.CheckAuthorization
  fullName: Winpeak.Client.API.IWinPeakNetworkClient.CheckAuthorization
- uid: System.Action{System.Boolean}
  commentId: T:System.Action{System.Boolean}
  parent: System
  definition: System.Action`1
  name: Action<Boolean>
  nameWithType: Action<Boolean>
  fullName: System.Action<System.Boolean>
  nameWithType.vb: Action(Of Boolean)
  fullName.vb: System.Action(Of System.Boolean)
  name.vb: Action(Of Boolean)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Action`1
  commentId: T:System.Action`1
  isExternal: true
  name: Action<T>
  nameWithType: Action<T>
  fullName: System.Action<T>
  nameWithType.vb: Action(Of T)
  fullName.vb: System.Action(Of T)
  name.vb: Action(Of T)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Winpeak.Client.API.IWinPeakNetworkClient.Authenticate*
  commentId: Overload:Winpeak.Client.API.IWinPeakNetworkClient.Authenticate
  name: Authenticate
  nameWithType: IWinPeakNetworkClient.Authenticate
  fullName: Winpeak.Client.API.IWinPeakNetworkClient.Authenticate
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Action{AuthorizationResult}
  commentId: T:System.Action{AuthorizationResult}
  parent: System
  definition: System.Action`1
  name: Action<AuthorizationResult>
  nameWithType: Action<AuthorizationResult>
  fullName: System.Action<AuthorizationResult>
  nameWithType.vb: Action(Of AuthorizationResult)
  fullName.vb: System.Action(Of AuthorizationResult)
  name.vb: Action(Of AuthorizationResult)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: AuthorizationResult
    name: AuthorizationResult
    nameWithType: AuthorizationResult
    fullName: AuthorizationResult
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: AuthorizationResult
    name: AuthorizationResult
    nameWithType: AuthorizationResult
    fullName: AuthorizationResult
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Winpeak.Client.API.IWinPeakNetworkClient.EditProfile*
  commentId: Overload:Winpeak.Client.API.IWinPeakNetworkClient.EditProfile
  name: EditProfile
  nameWithType: IWinPeakNetworkClient.EditProfile
  fullName: Winpeak.Client.API.IWinPeakNetworkClient.EditProfile
- uid: System.Action{EditProfileResult}
  commentId: T:System.Action{EditProfileResult}
  parent: System
  definition: System.Action`1
  name: Action<EditProfileResult>
  nameWithType: Action<EditProfileResult>
  fullName: System.Action<EditProfileResult>
  nameWithType.vb: Action(Of EditProfileResult)
  fullName.vb: System.Action(Of EditProfileResult)
  name.vb: Action(Of EditProfileResult)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: EditProfileResult
    name: EditProfileResult
    nameWithType: EditProfileResult
    fullName: EditProfileResult
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: EditProfileResult
    name: EditProfileResult
    nameWithType: EditProfileResult
    fullName: EditProfileResult
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Winpeak.Client.API.IWinPeakNetworkClient.Register*
  commentId: Overload:Winpeak.Client.API.IWinPeakNetworkClient.Register
  name: Register
  nameWithType: IWinPeakNetworkClient.Register
  fullName: Winpeak.Client.API.IWinPeakNetworkClient.Register
- uid: System.Action{RegistrationResult}
  commentId: T:System.Action{RegistrationResult}
  parent: System
  definition: System.Action`1
  name: Action<RegistrationResult>
  nameWithType: Action<RegistrationResult>
  fullName: System.Action<RegistrationResult>
  nameWithType.vb: Action(Of RegistrationResult)
  fullName.vb: System.Action(Of RegistrationResult)
  name.vb: Action(Of RegistrationResult)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: RegistrationResult
    name: RegistrationResult
    nameWithType: RegistrationResult
    fullName: RegistrationResult
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: RegistrationResult
    name: RegistrationResult
    nameWithType: RegistrationResult
    fullName: RegistrationResult
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Winpeak.Client.API.IWinPeakNetworkClient.GetUserInfo*
  commentId: Overload:Winpeak.Client.API.IWinPeakNetworkClient.GetUserInfo
  name: GetUserInfo
  nameWithType: IWinPeakNetworkClient.GetUserInfo
  fullName: Winpeak.Client.API.IWinPeakNetworkClient.GetUserInfo
- uid: System.Action{GetUserInfoResult}
  commentId: T:System.Action{GetUserInfoResult}
  parent: System
  definition: System.Action`1
  name: Action<GetUserInfoResult>
  nameWithType: Action<GetUserInfoResult>
  fullName: System.Action<GetUserInfoResult>
  nameWithType.vb: Action(Of GetUserInfoResult)
  fullName.vb: System.Action(Of GetUserInfoResult)
  name.vb: Action(Of GetUserInfoResult)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: GetUserInfoResult
    name: GetUserInfoResult
    nameWithType: GetUserInfoResult
    fullName: GetUserInfoResult
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: GetUserInfoResult
    name: GetUserInfoResult
    nameWithType: GetUserInfoResult
    fullName: GetUserInfoResult
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Winpeak.Client.API.IWinPeakNetworkClient.Logout*
  commentId: Overload:Winpeak.Client.API.IWinPeakNetworkClient.Logout
  name: Logout
  nameWithType: IWinPeakNetworkClient.Logout
  fullName: Winpeak.Client.API.IWinPeakNetworkClient.Logout
- uid: Winpeak.Client.API.IWinPeakNetworkClient.SearchGame*
  commentId: Overload:Winpeak.Client.API.IWinPeakNetworkClient.SearchGame
  name: SearchGame
  nameWithType: IWinPeakNetworkClient.SearchGame
  fullName: Winpeak.Client.API.IWinPeakNetworkClient.SearchGame
- uid: System.Action{SearchGameResult}
  commentId: T:System.Action{SearchGameResult}
  parent: System
  definition: System.Action`1
  name: Action<SearchGameResult>
  nameWithType: Action<SearchGameResult>
  fullName: System.Action<SearchGameResult>
  nameWithType.vb: Action(Of SearchGameResult)
  fullName.vb: System.Action(Of SearchGameResult)
  name.vb: Action(Of SearchGameResult)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SearchGameResult
    name: SearchGameResult
    nameWithType: SearchGameResult
    fullName: SearchGameResult
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SearchGameResult
    name: SearchGameResult
    nameWithType: SearchGameResult
    fullName: SearchGameResult
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Winpeak.Client.API.IWinPeakNetworkClient.CreateGameSessionRequest*
  commentId: Overload:Winpeak.Client.API.IWinPeakNetworkClient.CreateGameSessionRequest
  name: CreateGameSessionRequest
  nameWithType: IWinPeakNetworkClient.CreateGameSessionRequest
  fullName: Winpeak.Client.API.IWinPeakNetworkClient.CreateGameSessionRequest
- uid: System.Action{CreateGameSessionRequestResult}
  commentId: T:System.Action{CreateGameSessionRequestResult}
  parent: System
  definition: System.Action`1
  name: Action<CreateGameSessionRequestResult>
  nameWithType: Action<CreateGameSessionRequestResult>
  fullName: System.Action<CreateGameSessionRequestResult>
  nameWithType.vb: Action(Of CreateGameSessionRequestResult)
  fullName.vb: System.Action(Of CreateGameSessionRequestResult)
  name.vb: Action(Of CreateGameSessionRequestResult)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: CreateGameSessionRequestResult
    name: CreateGameSessionRequestResult
    nameWithType: CreateGameSessionRequestResult
    fullName: CreateGameSessionRequestResult
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: CreateGameSessionRequestResult
    name: CreateGameSessionRequestResult
    nameWithType: CreateGameSessionRequestResult
    fullName: CreateGameSessionRequestResult
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Winpeak.Client.API.IWinPeakNetworkClient.RejectCreateGameSessionRequest*
  commentId: Overload:Winpeak.Client.API.IWinPeakNetworkClient.RejectCreateGameSessionRequest
  name: RejectCreateGameSessionRequest
  nameWithType: IWinPeakNetworkClient.RejectCreateGameSessionRequest
  fullName: Winpeak.Client.API.IWinPeakNetworkClient.RejectCreateGameSessionRequest
- uid: System.Action{RejectCreateGameSessionRequestResult}
  commentId: T:System.Action{RejectCreateGameSessionRequestResult}
  parent: System
  definition: System.Action`1
  name: Action<RejectCreateGameSessionRequestResult>
  nameWithType: Action<RejectCreateGameSessionRequestResult>
  fullName: System.Action<RejectCreateGameSessionRequestResult>
  nameWithType.vb: Action(Of RejectCreateGameSessionRequestResult)
  fullName.vb: System.Action(Of RejectCreateGameSessionRequestResult)
  name.vb: Action(Of RejectCreateGameSessionRequestResult)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: RejectCreateGameSessionRequestResult
    name: RejectCreateGameSessionRequestResult
    nameWithType: RejectCreateGameSessionRequestResult
    fullName: RejectCreateGameSessionRequestResult
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: RejectCreateGameSessionRequestResult
    name: RejectCreateGameSessionRequestResult
    nameWithType: RejectCreateGameSessionRequestResult
    fullName: RejectCreateGameSessionRequestResult
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Winpeak.Client.API.IWinPeakNetworkClient.ApproveCreateGameSessionRequest*
  commentId: Overload:Winpeak.Client.API.IWinPeakNetworkClient.ApproveCreateGameSessionRequest
  name: ApproveCreateGameSessionRequest
  nameWithType: IWinPeakNetworkClient.ApproveCreateGameSessionRequest
  fullName: Winpeak.Client.API.IWinPeakNetworkClient.ApproveCreateGameSessionRequest
- uid: System.Action{ApproveGameSessionRequestResult}
  commentId: T:System.Action{ApproveGameSessionRequestResult}
  parent: System
  definition: System.Action`1
  name: Action<ApproveGameSessionRequestResult>
  nameWithType: Action<ApproveGameSessionRequestResult>
  fullName: System.Action<ApproveGameSessionRequestResult>
  nameWithType.vb: Action(Of ApproveGameSessionRequestResult)
  fullName.vb: System.Action(Of ApproveGameSessionRequestResult)
  name.vb: Action(Of ApproveGameSessionRequestResult)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: ApproveGameSessionRequestResult
    name: ApproveGameSessionRequestResult
    nameWithType: ApproveGameSessionRequestResult
    fullName: ApproveGameSessionRequestResult
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: ApproveGameSessionRequestResult
    name: ApproveGameSessionRequestResult
    nameWithType: ApproveGameSessionRequestResult
    fullName: ApproveGameSessionRequestResult
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Winpeak.Client.API.IWinPeakNetworkClient.CreateGame*
  commentId: Overload:Winpeak.Client.API.IWinPeakNetworkClient.CreateGame
  name: CreateGame
  nameWithType: IWinPeakNetworkClient.CreateGame
  fullName: Winpeak.Client.API.IWinPeakNetworkClient.CreateGame
- uid: System.Action{CreateGameSessionResult}
  commentId: T:System.Action{CreateGameSessionResult}
  parent: System
  definition: System.Action`1
  name: Action<CreateGameSessionResult>
  nameWithType: Action<CreateGameSessionResult>
  fullName: System.Action<CreateGameSessionResult>
  nameWithType.vb: Action(Of CreateGameSessionResult)
  fullName.vb: System.Action(Of CreateGameSessionResult)
  name.vb: Action(Of CreateGameSessionResult)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: CreateGameSessionResult
    name: CreateGameSessionResult
    nameWithType: CreateGameSessionResult
    fullName: CreateGameSessionResult
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: CreateGameSessionResult
    name: CreateGameSessionResult
    nameWithType: CreateGameSessionResult
    fullName: CreateGameSessionResult
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Winpeak.Client.API.IWinPeakNetworkClient.GetGameInfo*
  commentId: Overload:Winpeak.Client.API.IWinPeakNetworkClient.GetGameInfo
  name: GetGameInfo
  nameWithType: IWinPeakNetworkClient.GetGameInfo
  fullName: Winpeak.Client.API.IWinPeakNetworkClient.GetGameInfo
- uid: System.Action{GetGameInfoResult}
  commentId: T:System.Action{GetGameInfoResult}
  parent: System
  definition: System.Action`1
  name: Action<GetGameInfoResult>
  nameWithType: Action<GetGameInfoResult>
  fullName: System.Action<GetGameInfoResult>
  nameWithType.vb: Action(Of GetGameInfoResult)
  fullName.vb: System.Action(Of GetGameInfoResult)
  name.vb: Action(Of GetGameInfoResult)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: GetGameInfoResult
    name: GetGameInfoResult
    nameWithType: GetGameInfoResult
    fullName: GetGameInfoResult
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: GetGameInfoResult
    name: GetGameInfoResult
    nameWithType: GetGameInfoResult
    fullName: GetGameInfoResult
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Winpeak.Client.API.IWinPeakNetworkClient.CloseGameSession*
  commentId: Overload:Winpeak.Client.API.IWinPeakNetworkClient.CloseGameSession
  name: CloseGameSession
  nameWithType: IWinPeakNetworkClient.CloseGameSession
  fullName: Winpeak.Client.API.IWinPeakNetworkClient.CloseGameSession
- uid: System.Action{CloseGameSessionResult}
  commentId: T:System.Action{CloseGameSessionResult}
  parent: System
  definition: System.Action`1
  name: Action<CloseGameSessionResult>
  nameWithType: Action<CloseGameSessionResult>
  fullName: System.Action<CloseGameSessionResult>
  nameWithType.vb: Action(Of CloseGameSessionResult)
  fullName.vb: System.Action(Of CloseGameSessionResult)
  name.vb: Action(Of CloseGameSessionResult)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: CloseGameSessionResult
    name: CloseGameSessionResult
    nameWithType: CloseGameSessionResult
    fullName: CloseGameSessionResult
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: CloseGameSessionResult
    name: CloseGameSessionResult
    nameWithType: CloseGameSessionResult
    fullName: CloseGameSessionResult
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Winpeak.Client.API.IWinPeakNetworkClient.PasswordRecovery*
  commentId: Overload:Winpeak.Client.API.IWinPeakNetworkClient.PasswordRecovery
  name: PasswordRecovery
  nameWithType: IWinPeakNetworkClient.PasswordRecovery
  fullName: Winpeak.Client.API.IWinPeakNetworkClient.PasswordRecovery
- uid: System.Action{PasswordRecoveryRequestResult}
  commentId: T:System.Action{PasswordRecoveryRequestResult}
  parent: System
  definition: System.Action`1
  name: Action<PasswordRecoveryRequestResult>
  nameWithType: Action<PasswordRecoveryRequestResult>
  fullName: System.Action<PasswordRecoveryRequestResult>
  nameWithType.vb: Action(Of PasswordRecoveryRequestResult)
  fullName.vb: System.Action(Of PasswordRecoveryRequestResult)
  name.vb: Action(Of PasswordRecoveryRequestResult)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: PasswordRecoveryRequestResult
    name: PasswordRecoveryRequestResult
    nameWithType: PasswordRecoveryRequestResult
    fullName: PasswordRecoveryRequestResult
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: PasswordRecoveryRequestResult
    name: PasswordRecoveryRequestResult
    nameWithType: PasswordRecoveryRequestResult
    fullName: PasswordRecoveryRequestResult
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Winpeak.Client.API.IWinPeakNetworkClient.GetActiveGameSessionsRequest*
  commentId: Overload:Winpeak.Client.API.IWinPeakNetworkClient.GetActiveGameSessionsRequest
  name: GetActiveGameSessionsRequest
  nameWithType: IWinPeakNetworkClient.GetActiveGameSessionsRequest
  fullName: Winpeak.Client.API.IWinPeakNetworkClient.GetActiveGameSessionsRequest
- uid: System.Action{GetActiveGameSessionsRequestResult}
  commentId: T:System.Action{GetActiveGameSessionsRequestResult}
  parent: System
  definition: System.Action`1
  name: Action<GetActiveGameSessionsRequestResult>
  nameWithType: Action<GetActiveGameSessionsRequestResult>
  fullName: System.Action<GetActiveGameSessionsRequestResult>
  nameWithType.vb: Action(Of GetActiveGameSessionsRequestResult)
  fullName.vb: System.Action(Of GetActiveGameSessionsRequestResult)
  name.vb: Action(Of GetActiveGameSessionsRequestResult)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: GetActiveGameSessionsRequestResult
    name: GetActiveGameSessionsRequestResult
    nameWithType: GetActiveGameSessionsRequestResult
    fullName: GetActiveGameSessionsRequestResult
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: GetActiveGameSessionsRequestResult
    name: GetActiveGameSessionsRequestResult
    nameWithType: GetActiveGameSessionsRequestResult
    fullName: GetActiveGameSessionsRequestResult
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Winpeak.Client.API.IWinPeakNetworkClient.RemoveFriend*
  commentId: Overload:Winpeak.Client.API.IWinPeakNetworkClient.RemoveFriend
  name: RemoveFriend
  nameWithType: IWinPeakNetworkClient.RemoveFriend
  fullName: Winpeak.Client.API.IWinPeakNetworkClient.RemoveFriend
- uid: System.Action{RemoveFriendResult}
  commentId: T:System.Action{RemoveFriendResult}
  parent: System
  definition: System.Action`1
  name: Action<RemoveFriendResult>
  nameWithType: Action<RemoveFriendResult>
  fullName: System.Action<RemoveFriendResult>
  nameWithType.vb: Action(Of RemoveFriendResult)
  fullName.vb: System.Action(Of RemoveFriendResult)
  name.vb: Action(Of RemoveFriendResult)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: RemoveFriendResult
    name: RemoveFriendResult
    nameWithType: RemoveFriendResult
    fullName: RemoveFriendResult
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: RemoveFriendResult
    name: RemoveFriendResult
    nameWithType: RemoveFriendResult
    fullName: RemoveFriendResult
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Winpeak.Client.API.IWinPeakNetworkClient.SearchUser*
  commentId: Overload:Winpeak.Client.API.IWinPeakNetworkClient.SearchUser
  name: SearchUser
  nameWithType: IWinPeakNetworkClient.SearchUser
  fullName: Winpeak.Client.API.IWinPeakNetworkClient.SearchUser
- uid: System.Action{SearchUserResult}
  commentId: T:System.Action{SearchUserResult}
  parent: System
  definition: System.Action`1
  name: Action<SearchUserResult>
  nameWithType: Action<SearchUserResult>
  fullName: System.Action<SearchUserResult>
  nameWithType.vb: Action(Of SearchUserResult)
  fullName.vb: System.Action(Of SearchUserResult)
  name.vb: Action(Of SearchUserResult)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SearchUserResult
    name: SearchUserResult
    nameWithType: SearchUserResult
    fullName: SearchUserResult
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SearchUserResult
    name: SearchUserResult
    nameWithType: SearchUserResult
    fullName: SearchUserResult
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Winpeak.Client.API.IWinPeakNetworkClient.AddFriend*
  commentId: Overload:Winpeak.Client.API.IWinPeakNetworkClient.AddFriend
  name: AddFriend
  nameWithType: IWinPeakNetworkClient.AddFriend
  fullName: Winpeak.Client.API.IWinPeakNetworkClient.AddFriend
- uid: System.Action{AddFriendResult}
  commentId: T:System.Action{AddFriendResult}
  parent: System
  definition: System.Action`1
  name: Action<AddFriendResult>
  nameWithType: Action<AddFriendResult>
  fullName: System.Action<AddFriendResult>
  nameWithType.vb: Action(Of AddFriendResult)
  fullName.vb: System.Action(Of AddFriendResult)
  name.vb: Action(Of AddFriendResult)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: AddFriendResult
    name: AddFriendResult
    nameWithType: AddFriendResult
    fullName: AddFriendResult
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: AddFriendResult
    name: AddFriendResult
    nameWithType: AddFriendResult
    fullName: AddFriendResult
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Winpeak.Client.API.IWinPeakNetworkClient.GetLastTournaments*
  commentId: Overload:Winpeak.Client.API.IWinPeakNetworkClient.GetLastTournaments
  name: GetLastTournaments
  nameWithType: IWinPeakNetworkClient.GetLastTournaments
  fullName: Winpeak.Client.API.IWinPeakNetworkClient.GetLastTournaments
- uid: System.Action{GetLastTournamentsResult}
  commentId: T:System.Action{GetLastTournamentsResult}
  parent: System
  definition: System.Action`1
  name: Action<GetLastTournamentsResult>
  nameWithType: Action<GetLastTournamentsResult>
  fullName: System.Action<GetLastTournamentsResult>
  nameWithType.vb: Action(Of GetLastTournamentsResult)
  fullName.vb: System.Action(Of GetLastTournamentsResult)
  name.vb: Action(Of GetLastTournamentsResult)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: GetLastTournamentsResult
    name: GetLastTournamentsResult
    nameWithType: GetLastTournamentsResult
    fullName: GetLastTournamentsResult
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: GetLastTournamentsResult
    name: GetLastTournamentsResult
    nameWithType: GetLastTournamentsResult
    fullName: GetLastTournamentsResult
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
