### YamlMime:ManagedReference
items:
- uid: BestHTTP.HTTPManager
  commentId: T:BestHTTP.HTTPManager
  id: HTTPManager
  parent: BestHTTP
  children:
  - BestHTTP.HTTPManager.ConnectTimeout
  - BestHTTP.HTTPManager.CookieJarSize
  - BestHTTP.HTTPManager.DefaultCertificateVerifyer
  - BestHTTP.HTTPManager.DefaultClientCredentialsProvider
  - BestHTTP.HTTPManager.EnablePrivateBrowsing
  - BestHTTP.HTTPManager.GetGeneralStatistics(StatisticsQueryFlags)
  - BestHTTP.HTTPManager.Heartbeats
  - BestHTTP.HTTPManager.IsCachingDisabled
  - BestHTTP.HTTPManager.IsCookiesEnabled
  - BestHTTP.HTTPManager.KeepAliveDefaultValue
  - BestHTTP.HTTPManager.Logger
  - BestHTTP.HTTPManager.MaxConnectionIdleTime
  - BestHTTP.HTTPManager.MaxConnectionPerServer
  - BestHTTP.HTTPManager.OnQuit
  - BestHTTP.HTTPManager.OnUpdate
  - BestHTTP.HTTPManager.Proxy
  - BestHTTP.HTTPManager.RequestTimeout
  - BestHTTP.HTTPManager.RootCacheFolderProvider
  - BestHTTP.HTTPManager.SendRequest(BestHTTP.HTTPRequest)
  - BestHTTP.HTTPManager.SendRequest(System.String,BestHTTP.HTTPMethods,BestHTTP.OnRequestFinishedDelegate)
  - BestHTTP.HTTPManager.SendRequest(System.String,BestHTTP.HTTPMethods,System.Boolean,BestHTTP.OnRequestFinishedDelegate)
  - BestHTTP.HTTPManager.SendRequest(System.String,BestHTTP.HTTPMethods,System.Boolean,System.Boolean,BestHTTP.OnRequestFinishedDelegate)
  - BestHTTP.HTTPManager.SendRequest(System.String,BestHTTP.OnRequestFinishedDelegate)
  - BestHTTP.HTTPManager.Setup
  - BestHTTP.HTTPManager.UseAlternateSSLDefaultValue
  langs:
  - csharp
  - vb
  name: HTTPManager
  nameWithType: HTTPManager
  fullName: BestHTTP.HTTPManager
  type: Class
  source:
    id: HTTPManager
    path: ''
    startLine: 4429
  assemblies:
  - cs.temp.dll
  namespace: BestHTTP
  summary: "\n\n"
  example: []
  syntax:
    content: public static class HTTPManager
    content.vb: Public Module HTTPManager
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ToString
  - System.Object.ReferenceEquals(System.Object,System.Object)
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: BestHTTP.HTTPManager.MaxConnectionPerServer
  commentId: P:BestHTTP.HTTPManager.MaxConnectionPerServer
  id: MaxConnectionPerServer
  parent: BestHTTP.HTTPManager
  langs:
  - csharp
  - vb
  name: MaxConnectionPerServer
  nameWithType: HTTPManager.MaxConnectionPerServer
  fullName: BestHTTP.HTTPManager.MaxConnectionPerServer
  type: Property
  source:
    id: MaxConnectionPerServer
    path: ''
    startLine: 4462
  assemblies:
  - cs.temp.dll
  namespace: BestHTTP
  summary: "\nThe maximum active TCP connections that the client will maintain to a server. Default value is 4. Minimum value is 1.\n"
  example: []
  syntax:
    content: public static byte MaxConnectionPerServer { get; set; }
    parameters: []
    return:
      type: System.Byte
    content.vb: Public Shared Property MaxConnectionPerServer As Byte
  overload: BestHTTP.HTTPManager.MaxConnectionPerServer*
  modifiers.csharp:
  - public
  - static
  - get
  - set
  modifiers.vb:
  - Public
  - Shared
- uid: BestHTTP.HTTPManager.KeepAliveDefaultValue
  commentId: P:BestHTTP.HTTPManager.KeepAliveDefaultValue
  id: KeepAliveDefaultValue
  parent: BestHTTP.HTTPManager
  langs:
  - csharp
  - vb
  name: KeepAliveDefaultValue
  nameWithType: HTTPManager.KeepAliveDefaultValue
  fullName: BestHTTP.HTTPManager.KeepAliveDefaultValue
  type: Property
  source:
    id: KeepAliveDefaultValue
    path: ''
    startLine: 4477
  assemblies:
  - cs.temp.dll
  namespace: BestHTTP
  summary: "\nDefault value of a HTTP request&apos;s IsKeepAlive value. Default value is true. If you make rare request to the server it should be changed to false.\n"
  example: []
  syntax:
    content: public static bool KeepAliveDefaultValue { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Shared Property KeepAliveDefaultValue As Boolean
  overload: BestHTTP.HTTPManager.KeepAliveDefaultValue*
  modifiers.csharp:
  - public
  - static
  - get
  - set
  modifiers.vb:
  - Public
  - Shared
- uid: BestHTTP.HTTPManager.IsCachingDisabled
  commentId: P:BestHTTP.HTTPManager.IsCachingDisabled
  id: IsCachingDisabled
  parent: BestHTTP.HTTPManager
  langs:
  - csharp
  - vb
  name: IsCachingDisabled
  nameWithType: HTTPManager.IsCachingDisabled
  fullName: BestHTTP.HTTPManager.IsCachingDisabled
  type: Property
  source:
    id: IsCachingDisabled
    path: ''
    startLine: 4483
  assemblies:
  - cs.temp.dll
  namespace: BestHTTP
  summary: "\nSet to true, if caching is prohibited.\n"
  example: []
  syntax:
    content: public static bool IsCachingDisabled { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Shared Property IsCachingDisabled As Boolean
  overload: BestHTTP.HTTPManager.IsCachingDisabled*
  modifiers.csharp:
  - public
  - static
  - get
  - set
  modifiers.vb:
  - Public
  - Shared
- uid: BestHTTP.HTTPManager.MaxConnectionIdleTime
  commentId: P:BestHTTP.HTTPManager.MaxConnectionIdleTime
  id: MaxConnectionIdleTime
  parent: BestHTTP.HTTPManager
  langs:
  - csharp
  - vb
  name: MaxConnectionIdleTime
  nameWithType: HTTPManager.MaxConnectionIdleTime
  fullName: BestHTTP.HTTPManager.MaxConnectionIdleTime
  type: Property
  source:
    id: MaxConnectionIdleTime
    path: ''
    startLine: 4489
  assemblies:
  - cs.temp.dll
  namespace: BestHTTP
  summary: "\nHow many time must be passed to destroy that connection after a connection finished its last request. Its default value is 20 seconds.\n"
  example: []
  syntax:
    content: public static TimeSpan MaxConnectionIdleTime { get; set; }
    parameters: []
    return:
      type: System.TimeSpan
    content.vb: Public Shared Property MaxConnectionIdleTime As TimeSpan
  overload: BestHTTP.HTTPManager.MaxConnectionIdleTime*
  modifiers.csharp:
  - public
  - static
  - get
  - set
  modifiers.vb:
  - Public
  - Shared
- uid: BestHTTP.HTTPManager.IsCookiesEnabled
  commentId: P:BestHTTP.HTTPManager.IsCookiesEnabled
  id: IsCookiesEnabled
  parent: BestHTTP.HTTPManager
  langs:
  - csharp
  - vb
  name: IsCookiesEnabled
  nameWithType: HTTPManager.IsCookiesEnabled
  fullName: BestHTTP.HTTPManager.IsCookiesEnabled
  type: Property
  source:
    id: IsCookiesEnabled
    path: ''
    startLine: 4495
  assemblies:
  - cs.temp.dll
  namespace: BestHTTP
  summary: "\nSet to false to disable all Cookie. It&apos;s default value is true.\n"
  example: []
  syntax:
    content: public static bool IsCookiesEnabled { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Shared Property IsCookiesEnabled As Boolean
  overload: BestHTTP.HTTPManager.IsCookiesEnabled*
  modifiers.csharp:
  - public
  - static
  - get
  - set
  modifiers.vb:
  - Public
  - Shared
- uid: BestHTTP.HTTPManager.CookieJarSize
  commentId: P:BestHTTP.HTTPManager.CookieJarSize
  id: CookieJarSize
  parent: BestHTTP.HTTPManager
  langs:
  - csharp
  - vb
  name: CookieJarSize
  nameWithType: HTTPManager.CookieJarSize
  fullName: BestHTTP.HTTPManager.CookieJarSize
  type: Property
  source:
    id: CookieJarSize
    path: ''
    startLine: 4501
  assemblies:
  - cs.temp.dll
  namespace: BestHTTP
  summary: "\nSize of the Cookie Jar in bytes. It&apos;s default value is 10485760 (10 MB).\n"
  example: []
  syntax:
    content: public static uint CookieJarSize { get; set; }
    parameters: []
    return:
      type: System.UInt32
    content.vb: Public Shared Property CookieJarSize As UInteger
  overload: BestHTTP.HTTPManager.CookieJarSize*
  modifiers.csharp:
  - public
  - static
  - get
  - set
  modifiers.vb:
  - Public
  - Shared
- uid: BestHTTP.HTTPManager.EnablePrivateBrowsing
  commentId: P:BestHTTP.HTTPManager.EnablePrivateBrowsing
  id: EnablePrivateBrowsing
  parent: BestHTTP.HTTPManager
  langs:
  - csharp
  - vb
  name: EnablePrivateBrowsing
  nameWithType: HTTPManager.EnablePrivateBrowsing
  fullName: BestHTTP.HTTPManager.EnablePrivateBrowsing
  type: Property
  source:
    id: EnablePrivateBrowsing
    path: ''
    startLine: 4506
  assemblies:
  - cs.temp.dll
  namespace: BestHTTP
  summary: "\nIf this property is set to true, then new cookies treated as session cookies and these cookies are not saved to disk. Its default value is false;\n"
  example: []
  syntax:
    content: public static bool EnablePrivateBrowsing { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Shared Property EnablePrivateBrowsing As Boolean
  overload: BestHTTP.HTTPManager.EnablePrivateBrowsing*
  modifiers.csharp:
  - public
  - static
  - get
  - set
  modifiers.vb:
  - Public
  - Shared
- uid: BestHTTP.HTTPManager.ConnectTimeout
  commentId: P:BestHTTP.HTTPManager.ConnectTimeout
  id: ConnectTimeout
  parent: BestHTTP.HTTPManager
  langs:
  - csharp
  - vb
  name: ConnectTimeout
  nameWithType: HTTPManager.ConnectTimeout
  fullName: BestHTTP.HTTPManager.ConnectTimeout
  type: Property
  source:
    id: ConnectTimeout
    path: ''
    startLine: 4511
  assemblies:
  - cs.temp.dll
  namespace: BestHTTP
  summary: "\nGlobal, default value of the HTTPRequest&apos;s ConnectTimeout property. If set to TimeSpan.Zero or lower, no connect timeout logic is executed. Default value is 20 seconds.\n"
  example: []
  syntax:
    content: public static TimeSpan ConnectTimeout { get; set; }
    parameters: []
    return:
      type: System.TimeSpan
    content.vb: Public Shared Property ConnectTimeout As TimeSpan
  overload: BestHTTP.HTTPManager.ConnectTimeout*
  modifiers.csharp:
  - public
  - static
  - get
  - set
  modifiers.vb:
  - Public
  - Shared
- uid: BestHTTP.HTTPManager.RequestTimeout
  commentId: P:BestHTTP.HTTPManager.RequestTimeout
  id: RequestTimeout
  parent: BestHTTP.HTTPManager
  langs:
  - csharp
  - vb
  name: RequestTimeout
  nameWithType: HTTPManager.RequestTimeout
  fullName: BestHTTP.HTTPManager.RequestTimeout
  type: Property
  source:
    id: RequestTimeout
    path: ''
    startLine: 4516
  assemblies:
  - cs.temp.dll
  namespace: BestHTTP
  summary: "\nGlobal, default value of the HTTPRequest&apos;s Timeout property. Default value is 60 seconds.\n"
  example: []
  syntax:
    content: public static TimeSpan RequestTimeout { get; set; }
    parameters: []
    return:
      type: System.TimeSpan
    content.vb: Public Shared Property RequestTimeout As TimeSpan
  overload: BestHTTP.HTTPManager.RequestTimeout*
  modifiers.csharp:
  - public
  - static
  - get
  - set
  modifiers.vb:
  - Public
  - Shared
- uid: BestHTTP.HTTPManager.RootCacheFolderProvider
  commentId: P:BestHTTP.HTTPManager.RootCacheFolderProvider
  id: RootCacheFolderProvider
  parent: BestHTTP.HTTPManager
  langs:
  - csharp
  - vb
  name: RootCacheFolderProvider
  nameWithType: HTTPManager.RootCacheFolderProvider
  fullName: BestHTTP.HTTPManager.RootCacheFolderProvider
  type: Property
  source:
    id: RootCacheFolderProvider
    path: ''
    startLine: 4524
  assemblies:
  - cs.temp.dll
  namespace: BestHTTP
  summary: "\nBy default the plugin will save all cache and cookie data under the path returned by Application.persistentDataPath.\nYou can assign a function to this delegate to return a custom root path to define a new path.\n<remarks>This delegate will be called on a non Unity thread!</remarks>\n"
  example: []
  syntax:
    content: public static Func<string> RootCacheFolderProvider { get; set; }
    parameters: []
    return:
      type: System.Func{System.String}
    content.vb: Public Shared Property RootCacheFolderProvider As Func(Of String)
  overload: BestHTTP.HTTPManager.RootCacheFolderProvider*
  modifiers.csharp:
  - public
  - static
  - get
  - set
  modifiers.vb:
  - Public
  - Shared
- uid: BestHTTP.HTTPManager.Proxy
  commentId: P:BestHTTP.HTTPManager.Proxy
  id: Proxy
  parent: BestHTTP.HTTPManager
  langs:
  - csharp
  - vb
  name: Proxy
  nameWithType: HTTPManager.Proxy
  fullName: BestHTTP.HTTPManager.Proxy
  type: Property
  source:
    id: Proxy
    path: ''
    startLine: 4531
  assemblies:
  - cs.temp.dll
  namespace: BestHTTP
  summary: "\nThe global, default proxy for all HTTPRequests. The HTTPRequest&apos;s Proxy still can be changed per-request. Default value is null.\n"
  example: []
  syntax:
    content: public static HTTPProxy Proxy { get; set; }
    parameters: []
    return:
      type: BestHTTP.HTTPProxy
    content.vb: Public Shared Property Proxy As HTTPProxy
  overload: BestHTTP.HTTPManager.Proxy*
  modifiers.csharp:
  - public
  - static
  - get
  - set
  modifiers.vb:
  - Public
  - Shared
- uid: BestHTTP.HTTPManager.Heartbeats
  commentId: P:BestHTTP.HTTPManager.Heartbeats
  id: Heartbeats
  parent: BestHTTP.HTTPManager
  langs:
  - csharp
  - vb
  name: Heartbeats
  nameWithType: HTTPManager.Heartbeats
  fullName: BestHTTP.HTTPManager.Heartbeats
  type: Property
  source:
    id: Heartbeats
    path: ''
    startLine: 4537
  assemblies:
  - cs.temp.dll
  namespace: BestHTTP
  summary: "\nHeartbeat manager to use less threads in the plugin. The heartbeat updates are called from the OnUpdate function.\n"
  example: []
  syntax:
    content: public static HeartbeatManager Heartbeats { get; }
    parameters: []
    return:
      type: HeartbeatManager
    content.vb: Public Shared ReadOnly Property Heartbeats As HeartbeatManager
  overload: BestHTTP.HTTPManager.Heartbeats*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: BestHTTP.HTTPManager.Logger
  commentId: P:BestHTTP.HTTPManager.Logger
  id: Logger
  parent: BestHTTP.HTTPManager
  langs:
  - csharp
  - vb
  name: Logger
  nameWithType: HTTPManager.Logger
  fullName: BestHTTP.HTTPManager.Logger
  type: Property
  source:
    id: Logger
    path: ''
    startLine: 4551
  assemblies:
  - cs.temp.dll
  namespace: BestHTTP
  summary: "\nA basic BestHTTP.Logger.ILogger implementation to be able to log intelligently additional informations about the plugin&apos;s internal mechanism.\n"
  example: []
  syntax:
    content: public static ILogger Logger { get; set; }
    parameters: []
    return:
      type: BestHTTP.Logger.ILogger
    content.vb: Public Shared Property Logger As ILogger
  overload: BestHTTP.HTTPManager.Logger*
  modifiers.csharp:
  - public
  - static
  - get
  - set
  modifiers.vb:
  - Public
  - Shared
- uid: BestHTTP.HTTPManager.DefaultCertificateVerifyer
  commentId: P:BestHTTP.HTTPManager.DefaultCertificateVerifyer
  id: DefaultCertificateVerifyer
  parent: BestHTTP.HTTPManager
  langs:
  - csharp
  - vb
  name: DefaultCertificateVerifyer
  nameWithType: HTTPManager.DefaultCertificateVerifyer
  fullName: BestHTTP.HTTPManager.DefaultCertificateVerifyer
  type: Property
  source:
    id: DefaultCertificateVerifyer
    path: ''
    startLine: 4573
  assemblies:
  - cs.temp.dll
  namespace: BestHTTP
  summary: "\nThe default ICertificateVerifyer implementation that the plugin will use when the request&apos;s UseAlternateSSL property is set to true.\n"
  example: []
  syntax:
    content: public static ICertificateVerifyer DefaultCertificateVerifyer { get; set; }
    parameters: []
    return:
      type: Org.BouncyCastle.Crypto.Tls.ICertificateVerifyer
    content.vb: Public Shared Property DefaultCertificateVerifyer As ICertificateVerifyer
  overload: BestHTTP.HTTPManager.DefaultCertificateVerifyer*
  modifiers.csharp:
  - public
  - static
  - get
  - set
  modifiers.vb:
  - Public
  - Shared
- uid: BestHTTP.HTTPManager.DefaultClientCredentialsProvider
  commentId: P:BestHTTP.HTTPManager.DefaultClientCredentialsProvider
  id: DefaultClientCredentialsProvider
  parent: BestHTTP.HTTPManager
  langs:
  - csharp
  - vb
  name: DefaultClientCredentialsProvider
  nameWithType: HTTPManager.DefaultClientCredentialsProvider
  fullName: BestHTTP.HTTPManager.DefaultClientCredentialsProvider
  type: Property
  source:
    id: DefaultClientCredentialsProvider
    path: ''
    startLine: 4578
  assemblies:
  - cs.temp.dll
  namespace: BestHTTP
  summary: "\nThe default IClientCredentialsProvider implementation that the plugin will use when the request&apos;s UseAlternateSSL property is set to true.\n"
  example: []
  syntax:
    content: public static IClientCredentialsProvider DefaultClientCredentialsProvider { get; set; }
    parameters: []
    return:
      type: Org.BouncyCastle.Crypto.Tls.IClientCredentialsProvider
    content.vb: Public Shared Property DefaultClientCredentialsProvider As IClientCredentialsProvider
  overload: BestHTTP.HTTPManager.DefaultClientCredentialsProvider*
  modifiers.csharp:
  - public
  - static
  - get
  - set
  modifiers.vb:
  - Public
  - Shared
- uid: BestHTTP.HTTPManager.UseAlternateSSLDefaultValue
  commentId: P:BestHTTP.HTTPManager.UseAlternateSSLDefaultValue
  id: UseAlternateSSLDefaultValue
  parent: BestHTTP.HTTPManager
  langs:
  - csharp
  - vb
  name: UseAlternateSSLDefaultValue
  nameWithType: HTTPManager.UseAlternateSSLDefaultValue
  fullName: BestHTTP.HTTPManager.UseAlternateSSLDefaultValue
  type: Property
  source:
    id: UseAlternateSSLDefaultValue
    path: ''
    startLine: 4583
  assemblies:
  - cs.temp.dll
  namespace: BestHTTP
  summary: "\nThe default value for the HTTPRequest&apos;s UseAlternateSSL property.\n"
  example: []
  syntax:
    content: public static bool UseAlternateSSLDefaultValue { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Shared Property UseAlternateSSLDefaultValue As Boolean
  overload: BestHTTP.HTTPManager.UseAlternateSSLDefaultValue*
  modifiers.csharp:
  - public
  - static
  - get
  - set
  modifiers.vb:
  - Public
  - Shared
- uid: BestHTTP.HTTPManager.Setup
  commentId: M:BestHTTP.HTTPManager.Setup
  id: Setup
  parent: BestHTTP.HTTPManager
  langs:
  - csharp
  - vb
  name: Setup()
  nameWithType: HTTPManager.Setup()
  fullName: BestHTTP.HTTPManager.Setup()
  type: Method
  source:
    id: Setup
    path: ''
    startLine: 4628
  assemblies:
  - cs.temp.dll
  namespace: BestHTTP
  syntax:
    content: public static void Setup()
    content.vb: Public Shared Sub Setup
  overload: BestHTTP.HTTPManager.Setup*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: BestHTTP.HTTPManager.SendRequest(System.String,BestHTTP.OnRequestFinishedDelegate)
  commentId: M:BestHTTP.HTTPManager.SendRequest(System.String,BestHTTP.OnRequestFinishedDelegate)
  id: SendRequest(System.String,BestHTTP.OnRequestFinishedDelegate)
  parent: BestHTTP.HTTPManager
  langs:
  - csharp
  - vb
  name: SendRequest(String, OnRequestFinishedDelegate)
  nameWithType: HTTPManager.SendRequest(String, OnRequestFinishedDelegate)
  fullName: BestHTTP.HTTPManager.SendRequest(System.String, BestHTTP.OnRequestFinishedDelegate)
  type: Method
  source:
    id: SendRequest
    path: ''
    startLine: 4641
  assemblies:
  - cs.temp.dll
  namespace: BestHTTP
  syntax:
    content: public static HTTPRequest SendRequest(string url, OnRequestFinishedDelegate callback)
    parameters:
    - id: url
      type: System.String
    - id: callback
      type: BestHTTP.OnRequestFinishedDelegate
    return:
      type: BestHTTP.HTTPRequest
    content.vb: Public Shared Function SendRequest(url As String, callback As OnRequestFinishedDelegate) As HTTPRequest
  overload: BestHTTP.HTTPManager.SendRequest*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: BestHTTP.HTTPManager.SendRequest(System.String,BestHTTP.HTTPMethods,BestHTTP.OnRequestFinishedDelegate)
  commentId: M:BestHTTP.HTTPManager.SendRequest(System.String,BestHTTP.HTTPMethods,BestHTTP.OnRequestFinishedDelegate)
  id: SendRequest(System.String,BestHTTP.HTTPMethods,BestHTTP.OnRequestFinishedDelegate)
  parent: BestHTTP.HTTPManager
  langs:
  - csharp
  - vb
  name: SendRequest(String, HTTPMethods, OnRequestFinishedDelegate)
  nameWithType: HTTPManager.SendRequest(String, HTTPMethods, OnRequestFinishedDelegate)
  fullName: BestHTTP.HTTPManager.SendRequest(System.String, BestHTTP.HTTPMethods, BestHTTP.OnRequestFinishedDelegate)
  type: Method
  source:
    id: SendRequest
    path: ''
    startLine: 4646
  assemblies:
  - cs.temp.dll
  namespace: BestHTTP
  syntax:
    content: public static HTTPRequest SendRequest(string url, HTTPMethods methodType, OnRequestFinishedDelegate callback)
    parameters:
    - id: url
      type: System.String
    - id: methodType
      type: BestHTTP.HTTPMethods
    - id: callback
      type: BestHTTP.OnRequestFinishedDelegate
    return:
      type: BestHTTP.HTTPRequest
    content.vb: Public Shared Function SendRequest(url As String, methodType As HTTPMethods, callback As OnRequestFinishedDelegate) As HTTPRequest
  overload: BestHTTP.HTTPManager.SendRequest*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: BestHTTP.HTTPManager.SendRequest(System.String,BestHTTP.HTTPMethods,System.Boolean,BestHTTP.OnRequestFinishedDelegate)
  commentId: M:BestHTTP.HTTPManager.SendRequest(System.String,BestHTTP.HTTPMethods,System.Boolean,BestHTTP.OnRequestFinishedDelegate)
  id: SendRequest(System.String,BestHTTP.HTTPMethods,System.Boolean,BestHTTP.OnRequestFinishedDelegate)
  parent: BestHTTP.HTTPManager
  langs:
  - csharp
  - vb
  name: SendRequest(String, HTTPMethods, Boolean, OnRequestFinishedDelegate)
  nameWithType: HTTPManager.SendRequest(String, HTTPMethods, Boolean, OnRequestFinishedDelegate)
  fullName: BestHTTP.HTTPManager.SendRequest(System.String, BestHTTP.HTTPMethods, System.Boolean, BestHTTP.OnRequestFinishedDelegate)
  type: Method
  source:
    id: SendRequest
    path: ''
    startLine: 4651
  assemblies:
  - cs.temp.dll
  namespace: BestHTTP
  syntax:
    content: public static HTTPRequest SendRequest(string url, HTTPMethods methodType, bool isKeepAlive, OnRequestFinishedDelegate callback)
    parameters:
    - id: url
      type: System.String
    - id: methodType
      type: BestHTTP.HTTPMethods
    - id: isKeepAlive
      type: System.Boolean
    - id: callback
      type: BestHTTP.OnRequestFinishedDelegate
    return:
      type: BestHTTP.HTTPRequest
    content.vb: Public Shared Function SendRequest(url As String, methodType As HTTPMethods, isKeepAlive As Boolean, callback As OnRequestFinishedDelegate) As HTTPRequest
  overload: BestHTTP.HTTPManager.SendRequest*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: BestHTTP.HTTPManager.SendRequest(System.String,BestHTTP.HTTPMethods,System.Boolean,System.Boolean,BestHTTP.OnRequestFinishedDelegate)
  commentId: M:BestHTTP.HTTPManager.SendRequest(System.String,BestHTTP.HTTPMethods,System.Boolean,System.Boolean,BestHTTP.OnRequestFinishedDelegate)
  id: SendRequest(System.String,BestHTTP.HTTPMethods,System.Boolean,System.Boolean,BestHTTP.OnRequestFinishedDelegate)
  parent: BestHTTP.HTTPManager
  langs:
  - csharp
  - vb
  name: SendRequest(String, HTTPMethods, Boolean, Boolean, OnRequestFinishedDelegate)
  nameWithType: HTTPManager.SendRequest(String, HTTPMethods, Boolean, Boolean, OnRequestFinishedDelegate)
  fullName: BestHTTP.HTTPManager.SendRequest(System.String, BestHTTP.HTTPMethods, System.Boolean, System.Boolean, BestHTTP.OnRequestFinishedDelegate)
  type: Method
  source:
    id: SendRequest
    path: ''
    startLine: 4656
  assemblies:
  - cs.temp.dll
  namespace: BestHTTP
  syntax:
    content: public static HTTPRequest SendRequest(string url, HTTPMethods methodType, bool isKeepAlive, bool disableCache, OnRequestFinishedDelegate callback)
    parameters:
    - id: url
      type: System.String
    - id: methodType
      type: BestHTTP.HTTPMethods
    - id: isKeepAlive
      type: System.Boolean
    - id: disableCache
      type: System.Boolean
    - id: callback
      type: BestHTTP.OnRequestFinishedDelegate
    return:
      type: BestHTTP.HTTPRequest
    content.vb: Public Shared Function SendRequest(url As String, methodType As HTTPMethods, isKeepAlive As Boolean, disableCache As Boolean, callback As OnRequestFinishedDelegate) As HTTPRequest
  overload: BestHTTP.HTTPManager.SendRequest*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: BestHTTP.HTTPManager.SendRequest(BestHTTP.HTTPRequest)
  commentId: M:BestHTTP.HTTPManager.SendRequest(BestHTTP.HTTPRequest)
  id: SendRequest(BestHTTP.HTTPRequest)
  parent: BestHTTP.HTTPManager
  langs:
  - csharp
  - vb
  name: SendRequest(HTTPRequest)
  nameWithType: HTTPManager.SendRequest(HTTPRequest)
  fullName: BestHTTP.HTTPManager.SendRequest(BestHTTP.HTTPRequest)
  type: Method
  source:
    id: SendRequest
    path: ''
    startLine: 4661
  assemblies:
  - cs.temp.dll
  namespace: BestHTTP
  syntax:
    content: public static HTTPRequest SendRequest(HTTPRequest request)
    parameters:
    - id: request
      type: BestHTTP.HTTPRequest
    return:
      type: BestHTTP.HTTPRequest
    content.vb: Public Shared Function SendRequest(request As HTTPRequest) As HTTPRequest
  overload: BestHTTP.HTTPManager.SendRequest*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: BestHTTP.HTTPManager.GetGeneralStatistics(StatisticsQueryFlags)
  commentId: M:BestHTTP.HTTPManager.GetGeneralStatistics(StatisticsQueryFlags)
  id: GetGeneralStatistics(StatisticsQueryFlags)
  parent: BestHTTP.HTTPManager
  langs:
  - csharp
  - vb
  name: GetGeneralStatistics(StatisticsQueryFlags)
  nameWithType: HTTPManager.GetGeneralStatistics(StatisticsQueryFlags)
  fullName: BestHTTP.HTTPManager.GetGeneralStatistics(StatisticsQueryFlags)
  type: Method
  source:
    id: GetGeneralStatistics
    path: ''
    startLine: 4679
  assemblies:
  - cs.temp.dll
  namespace: BestHTTP
  syntax:
    content: public static GeneralStatistics GetGeneralStatistics(StatisticsQueryFlags queryFlags)
    parameters:
    - id: queryFlags
      type: StatisticsQueryFlags
    return:
      type: GeneralStatistics
    content.vb: Public Shared Function GetGeneralStatistics(queryFlags As StatisticsQueryFlags) As GeneralStatistics
  overload: BestHTTP.HTTPManager.GetGeneralStatistics*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: BestHTTP.HTTPManager.OnUpdate
  commentId: M:BestHTTP.HTTPManager.OnUpdate
  id: OnUpdate
  parent: BestHTTP.HTTPManager
  langs:
  - csharp
  - vb
  name: OnUpdate()
  nameWithType: HTTPManager.OnUpdate()
  fullName: BestHTTP.HTTPManager.OnUpdate()
  type: Method
  source:
    id: OnUpdate
    path: ''
    startLine: 4925
  assemblies:
  - cs.temp.dll
  namespace: BestHTTP
  summary: "\nUpdate function that should be called regularly from a Unity event(Update, LateUpdate). Callbacks are dispatched from this function.\n"
  example: []
  syntax:
    content: public static void OnUpdate()
    content.vb: Public Shared Sub OnUpdate
  overload: BestHTTP.HTTPManager.OnUpdate*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: BestHTTP.HTTPManager.OnQuit
  commentId: M:BestHTTP.HTTPManager.OnQuit
  id: OnQuit
  parent: BestHTTP.HTTPManager
  langs:
  - csharp
  - vb
  name: OnQuit()
  nameWithType: HTTPManager.OnQuit()
  fullName: BestHTTP.HTTPManager.OnQuit()
  type: Method
  source:
    id: OnQuit
    path: ''
    startLine: 5133
  assemblies:
  - cs.temp.dll
  namespace: BestHTTP
  syntax:
    content: public static void OnQuit()
    content.vb: Public Shared Sub OnQuit
  overload: BestHTTP.HTTPManager.OnQuit*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: BestHTTP
  commentId: N:BestHTTP
  name: BestHTTP
  nameWithType: BestHTTP
  fullName: BestHTTP
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: BestHTTP.HTTPManager.MaxConnectionPerServer*
  commentId: Overload:BestHTTP.HTTPManager.MaxConnectionPerServer
  name: MaxConnectionPerServer
  nameWithType: HTTPManager.MaxConnectionPerServer
  fullName: BestHTTP.HTTPManager.MaxConnectionPerServer
- uid: System.Byte
  commentId: T:System.Byte
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte
- uid: BestHTTP.HTTPManager.KeepAliveDefaultValue*
  commentId: Overload:BestHTTP.HTTPManager.KeepAliveDefaultValue
  name: KeepAliveDefaultValue
  nameWithType: HTTPManager.KeepAliveDefaultValue
  fullName: BestHTTP.HTTPManager.KeepAliveDefaultValue
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: BestHTTP.HTTPManager.IsCachingDisabled*
  commentId: Overload:BestHTTP.HTTPManager.IsCachingDisabled
  name: IsCachingDisabled
  nameWithType: HTTPManager.IsCachingDisabled
  fullName: BestHTTP.HTTPManager.IsCachingDisabled
- uid: BestHTTP.HTTPManager.MaxConnectionIdleTime*
  commentId: Overload:BestHTTP.HTTPManager.MaxConnectionIdleTime
  name: MaxConnectionIdleTime
  nameWithType: HTTPManager.MaxConnectionIdleTime
  fullName: BestHTTP.HTTPManager.MaxConnectionIdleTime
- uid: System.TimeSpan
  commentId: T:System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: BestHTTP.HTTPManager.IsCookiesEnabled*
  commentId: Overload:BestHTTP.HTTPManager.IsCookiesEnabled
  name: IsCookiesEnabled
  nameWithType: HTTPManager.IsCookiesEnabled
  fullName: BestHTTP.HTTPManager.IsCookiesEnabled
- uid: BestHTTP.HTTPManager.CookieJarSize*
  commentId: Overload:BestHTTP.HTTPManager.CookieJarSize
  name: CookieJarSize
  nameWithType: HTTPManager.CookieJarSize
  fullName: BestHTTP.HTTPManager.CookieJarSize
- uid: System.UInt32
  commentId: T:System.UInt32
  parent: System
  isExternal: true
  name: UInt32
  nameWithType: UInt32
  fullName: System.UInt32
- uid: BestHTTP.HTTPManager.EnablePrivateBrowsing*
  commentId: Overload:BestHTTP.HTTPManager.EnablePrivateBrowsing
  name: EnablePrivateBrowsing
  nameWithType: HTTPManager.EnablePrivateBrowsing
  fullName: BestHTTP.HTTPManager.EnablePrivateBrowsing
- uid: BestHTTP.HTTPManager.ConnectTimeout*
  commentId: Overload:BestHTTP.HTTPManager.ConnectTimeout
  name: ConnectTimeout
  nameWithType: HTTPManager.ConnectTimeout
  fullName: BestHTTP.HTTPManager.ConnectTimeout
- uid: BestHTTP.HTTPManager.RequestTimeout*
  commentId: Overload:BestHTTP.HTTPManager.RequestTimeout
  name: RequestTimeout
  nameWithType: HTTPManager.RequestTimeout
  fullName: BestHTTP.HTTPManager.RequestTimeout
- uid: BestHTTP.HTTPManager.RootCacheFolderProvider*
  commentId: Overload:BestHTTP.HTTPManager.RootCacheFolderProvider
  name: RootCacheFolderProvider
  nameWithType: HTTPManager.RootCacheFolderProvider
  fullName: BestHTTP.HTTPManager.RootCacheFolderProvider
- uid: System.Func{System.String}
  commentId: T:System.Func{System.String}
  parent: System
  definition: System.Func`1
  name: Func<String>
  nameWithType: Func<String>
  fullName: System.Func<System.String>
  nameWithType.vb: Func(Of String)
  fullName.vb: System.Func(Of System.String)
  name.vb: Func(Of String)
  spec.csharp:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Func`1
  commentId: T:System.Func`1
  isExternal: true
  name: Func<TResult>
  nameWithType: Func<TResult>
  fullName: System.Func<TResult>
  nameWithType.vb: Func(Of TResult)
  fullName.vb: System.Func(Of TResult)
  name.vb: Func(Of TResult)
  spec.csharp:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: BestHTTP.HTTPManager.Proxy*
  commentId: Overload:BestHTTP.HTTPManager.Proxy
  name: Proxy
  nameWithType: HTTPManager.Proxy
  fullName: BestHTTP.HTTPManager.Proxy
- uid: BestHTTP.HTTPProxy
  commentId: T:BestHTTP.HTTPProxy
  parent: BestHTTP
  name: HTTPProxy
  nameWithType: HTTPProxy
  fullName: BestHTTP.HTTPProxy
- uid: BestHTTP.HTTPManager.Heartbeats*
  commentId: Overload:BestHTTP.HTTPManager.Heartbeats
  name: Heartbeats
  nameWithType: HTTPManager.Heartbeats
  fullName: BestHTTP.HTTPManager.Heartbeats
- uid: HeartbeatManager
  commentId: '!:HeartbeatManager'
  isExternal: true
  name: HeartbeatManager
  nameWithType: HeartbeatManager
  fullName: HeartbeatManager
- uid: BestHTTP.HTTPManager.Logger*
  commentId: Overload:BestHTTP.HTTPManager.Logger
  name: Logger
  nameWithType: HTTPManager.Logger
  fullName: BestHTTP.HTTPManager.Logger
- uid: BestHTTP.Logger.ILogger
  commentId: T:BestHTTP.Logger.ILogger
  parent: BestHTTP.Logger
  name: ILogger
  nameWithType: ILogger
  fullName: BestHTTP.Logger.ILogger
- uid: BestHTTP.Logger
  commentId: N:BestHTTP.Logger
  name: BestHTTP.Logger
  nameWithType: BestHTTP.Logger
  fullName: BestHTTP.Logger
- uid: BestHTTP.HTTPManager.DefaultCertificateVerifyer*
  commentId: Overload:BestHTTP.HTTPManager.DefaultCertificateVerifyer
  name: DefaultCertificateVerifyer
  nameWithType: HTTPManager.DefaultCertificateVerifyer
  fullName: BestHTTP.HTTPManager.DefaultCertificateVerifyer
- uid: Org.BouncyCastle.Crypto.Tls.ICertificateVerifyer
  commentId: T:Org.BouncyCastle.Crypto.Tls.ICertificateVerifyer
  parent: Org.BouncyCastle.Crypto.Tls
  name: ICertificateVerifyer
  nameWithType: ICertificateVerifyer
  fullName: Org.BouncyCastle.Crypto.Tls.ICertificateVerifyer
- uid: Org.BouncyCastle.Crypto.Tls
  commentId: N:Org.BouncyCastle.Crypto.Tls
  name: Org.BouncyCastle.Crypto.Tls
  nameWithType: Org.BouncyCastle.Crypto.Tls
  fullName: Org.BouncyCastle.Crypto.Tls
- uid: BestHTTP.HTTPManager.DefaultClientCredentialsProvider*
  commentId: Overload:BestHTTP.HTTPManager.DefaultClientCredentialsProvider
  name: DefaultClientCredentialsProvider
  nameWithType: HTTPManager.DefaultClientCredentialsProvider
  fullName: BestHTTP.HTTPManager.DefaultClientCredentialsProvider
- uid: Org.BouncyCastle.Crypto.Tls.IClientCredentialsProvider
  commentId: T:Org.BouncyCastle.Crypto.Tls.IClientCredentialsProvider
  parent: Org.BouncyCastle.Crypto.Tls
  name: IClientCredentialsProvider
  nameWithType: IClientCredentialsProvider
  fullName: Org.BouncyCastle.Crypto.Tls.IClientCredentialsProvider
- uid: BestHTTP.HTTPManager.UseAlternateSSLDefaultValue*
  commentId: Overload:BestHTTP.HTTPManager.UseAlternateSSLDefaultValue
  name: UseAlternateSSLDefaultValue
  nameWithType: HTTPManager.UseAlternateSSLDefaultValue
  fullName: BestHTTP.HTTPManager.UseAlternateSSLDefaultValue
- uid: BestHTTP.HTTPManager.Setup*
  commentId: Overload:BestHTTP.HTTPManager.Setup
  name: Setup
  nameWithType: HTTPManager.Setup
  fullName: BestHTTP.HTTPManager.Setup
- uid: BestHTTP.HTTPManager.SendRequest*
  commentId: Overload:BestHTTP.HTTPManager.SendRequest
  name: SendRequest
  nameWithType: HTTPManager.SendRequest
  fullName: BestHTTP.HTTPManager.SendRequest
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: BestHTTP.OnRequestFinishedDelegate
  commentId: T:BestHTTP.OnRequestFinishedDelegate
  parent: BestHTTP
  name: OnRequestFinishedDelegate
  nameWithType: OnRequestFinishedDelegate
  fullName: BestHTTP.OnRequestFinishedDelegate
- uid: BestHTTP.HTTPRequest
  commentId: T:BestHTTP.HTTPRequest
  parent: BestHTTP
  name: HTTPRequest
  nameWithType: HTTPRequest
  fullName: BestHTTP.HTTPRequest
- uid: BestHTTP.HTTPMethods
  commentId: T:BestHTTP.HTTPMethods
  parent: BestHTTP
  name: HTTPMethods
  nameWithType: HTTPMethods
  fullName: BestHTTP.HTTPMethods
- uid: BestHTTP.HTTPManager.GetGeneralStatistics*
  commentId: Overload:BestHTTP.HTTPManager.GetGeneralStatistics
  name: GetGeneralStatistics
  nameWithType: HTTPManager.GetGeneralStatistics
  fullName: BestHTTP.HTTPManager.GetGeneralStatistics
- uid: StatisticsQueryFlags
  commentId: '!:StatisticsQueryFlags'
  isExternal: true
  name: StatisticsQueryFlags
  nameWithType: StatisticsQueryFlags
  fullName: StatisticsQueryFlags
- uid: GeneralStatistics
  commentId: '!:GeneralStatistics'
  isExternal: true
  name: GeneralStatistics
  nameWithType: GeneralStatistics
  fullName: GeneralStatistics
- uid: BestHTTP.HTTPManager.OnUpdate*
  commentId: Overload:BestHTTP.HTTPManager.OnUpdate
  name: OnUpdate
  nameWithType: HTTPManager.OnUpdate
  fullName: BestHTTP.HTTPManager.OnUpdate
- uid: BestHTTP.HTTPManager.OnQuit*
  commentId: Overload:BestHTTP.HTTPManager.OnQuit
  name: OnQuit
  nameWithType: HTTPManager.OnQuit
  fullName: BestHTTP.HTTPManager.OnQuit
