### YamlMime:ManagedReference
items:
- uid: BestHTTP.HTTPMethods
  commentId: T:BestHTTP.HTTPMethods
  id: HTTPMethods
  parent: BestHTTP
  children:
  - BestHTTP.HTTPMethods.Delete
  - BestHTTP.HTTPMethods.Get
  - BestHTTP.HTTPMethods.Head
  - BestHTTP.HTTPMethods.Merge
  - BestHTTP.HTTPMethods.Patch
  - BestHTTP.HTTPMethods.Post
  - BestHTTP.HTTPMethods.Put
  langs:
  - csharp
  - vb
  name: HTTPMethods
  nameWithType: HTTPMethods
  fullName: BestHTTP.HTTPMethods
  type: Enum
  source:
    id: HTTPMethods
    path: ''
    startLine: 6046
  assemblies:
  - cs.temp.dll
  namespace: BestHTTP
  summary: "\nSome supported methods described in the rfc: http://www.w3.org/Protocols/rfc2616/rfc2616-sec9.html#sec9\n"
  example: []
  syntax:
    content: 'public enum HTTPMethods : byte'
    content.vb: Public Enum HTTPMethods As Byte
  modifiers.csharp:
  - public
  - enum
  modifiers.vb:
  - Public
  - Enum
- uid: BestHTTP.HTTPMethods.Get
  commentId: F:BestHTTP.HTTPMethods.Get
  id: Get
  parent: BestHTTP.HTTPMethods
  langs:
  - csharp
  - vb
  name: Get
  nameWithType: HTTPMethods.Get
  fullName: BestHTTP.HTTPMethods.Get
  type: Field
  source:
    id: Get
    path: ''
    startLine: 6053
  assemblies:
  - cs.temp.dll
  namespace: BestHTTP
  summary: "\nThe GET method means retrieve whatever information (in the form of an entity) is identified by the Request-URI.\nIf the Request-URI refers to a data-producing process, it is the produced data which shall be returned as the\nentity in the response and not the source text of the process, unless that text happens to be the output of the process.\n"
  example: []
  syntax:
    content: Get = 0
    return:
      type: BestHTTP.HTTPMethods
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: BestHTTP.HTTPMethods.Head
  commentId: F:BestHTTP.HTTPMethods.Head
  id: Head
  parent: BestHTTP.HTTPMethods
  langs:
  - csharp
  - vb
  name: Head
  nameWithType: HTTPMethods.Head
  fullName: BestHTTP.HTTPMethods.Head
  type: Field
  source:
    id: Head
    path: ''
    startLine: 6061
  assemblies:
  - cs.temp.dll
  namespace: BestHTTP
  summary: "\nThe HEAD method is identical to GET except that the server MUST NOT return a message-body in the response.\nThe metainformation contained in the HTTP headers in response to a HEAD request SHOULD be identical to the information sent in response to a GET request.\nThis method can be used for obtaining metainformation about the entity implied by the request without transferring the entity-body itself.\nThis method is often used for testing hypertext links for validity, accessibility, and recent modification.\n"
  example: []
  syntax:
    content: Head = 1
    return:
      type: BestHTTP.HTTPMethods
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: BestHTTP.HTTPMethods.Post
  commentId: F:BestHTTP.HTTPMethods.Post
  id: Post
  parent: BestHTTP.HTTPMethods
  langs:
  - csharp
  - vb
  name: Post
  nameWithType: HTTPMethods.Post
  fullName: BestHTTP.HTTPMethods.Post
  type: Field
  source:
    id: Post
    path: ''
    startLine: 6078
  assemblies:
  - cs.temp.dll
  namespace: BestHTTP
  summary: "\nThe POST method is used to request that the origin server accept the entity enclosed in the request as a new subordinate of the resource identified by the Request-URI in the Request-Line.\nPOST is designed to allow a uniform method to cover the following functions:\n<ul><li>Annotation of existing resources;</li><li>Posting a message to a bulletin board, newsgroup, mailing list, or similar group of articles;</li><li>Providing a block of data, such as the result of submitting a form, to a data-handling process;</li><li>Extending a database through an append operation.</li></ul>\nThe actual function performed by the POST method is determined by the server and is usually dependent on the Request-URI.\nThe posted entity is subordinate to that URI in the same way that a file is subordinate to a directory containing it,\na news article is subordinate to a newsgroup to which it is posted, or a record is subordinate to a database.\nThe action performed by the POST method might not result in a resource that can be identified by a URI. In this case,\neither 200 (OK) or 204 (No Content) is the appropriate response status, depending on whether or not the response includes an entity that describes the result.\n"
  example: []
  syntax:
    content: Post = 2
    return:
      type: BestHTTP.HTTPMethods
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: BestHTTP.HTTPMethods.Put
  commentId: F:BestHTTP.HTTPMethods.Put
  id: Put
  parent: BestHTTP.HTTPMethods
  langs:
  - csharp
  - vb
  name: Put
  nameWithType: HTTPMethods.Put
  fullName: BestHTTP.HTTPMethods.Put
  type: Field
  source:
    id: Put
    path: ''
    startLine: 6089
  assemblies:
  - cs.temp.dll
  namespace: BestHTTP
  summary: "\nThe PUT method requests that the enclosed entity be stored under the supplied Request-URI.\nIf the Request-URI refers to an already existing resource, the enclosed entity SHOULD be considered as a modified version of the one residing on the origin server.\nIf the Request-URI does not point to an existing resource, and that URI is capable of being defined as a new resource by the requesting user agent,\nthe origin server can create the resource with that URI. If a new resource is created, the origin server MUST inform the user agent via the 201 (Created) response.\nIf an existing resource is modified, either the 200 (OK) or 204 (No Content) response codes SHOULD be sent to indicate successful completion of the request.\nIf the resource could not be created or modified with the Request-URI, an appropriate error response SHOULD be given that reflects the nature of the problem.\nThe recipient of the entity MUST NOT ignore any Content-* (e.g. Content-Range) headers that it does not understand or implement and MUST return a 501 (Not Implemented) response in such cases.\n"
  example: []
  syntax:
    content: Put = 3
    return:
      type: BestHTTP.HTTPMethods
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: BestHTTP.HTTPMethods.Delete
  commentId: F:BestHTTP.HTTPMethods.Delete
  id: Delete
  parent: BestHTTP.HTTPMethods
  langs:
  - csharp
  - vb
  name: Delete
  nameWithType: HTTPMethods.Delete
  fullName: BestHTTP.HTTPMethods.Delete
  type: Field
  source:
    id: Delete
    path: ''
    startLine: 6098
  assemblies:
  - cs.temp.dll
  namespace: BestHTTP
  summary: "\nThe DELETE method requests that the origin server delete the resource identified by the Request-URI. This method MAY be overridden by human intervention (or other means) on the origin server.\nThe client cannot be guaranteed that the operation has been carried out, even if the status code returned from the origin server indicates that the action has been completed successfully.\nHowever, the server SHOULD NOT indicate success unless, at the time the response is given, it intends to delete the resource or move it to an inaccessible location.\nA successful response SHOULD be 200 (OK) if the response includes an entity describing the status, 202 (Accepted) if the action has not yet been enacted, or 204 (No Content)\nif the action has been enacted but the response does not include an entity.\n"
  example: []
  syntax:
    content: Delete = 4
    return:
      type: BestHTTP.HTTPMethods
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: BestHTTP.HTTPMethods.Patch
  commentId: F:BestHTTP.HTTPMethods.Patch
  id: Patch
  parent: BestHTTP.HTTPMethods
  langs:
  - csharp
  - vb
  name: Patch
  nameWithType: HTTPMethods.Patch
  fullName: BestHTTP.HTTPMethods.Patch
  type: Field
  source:
    id: Patch
    path: ''
    startLine: 6106
  assemblies:
  - cs.temp.dll
  namespace: BestHTTP
  summary: "\nhttp://tools.ietf.org/html/rfc5789\nThe PATCH method requests that a set of changes described in the request entity be applied to the resource identified by the Request-URI.\nThe set of changes is represented in a format called a &quot;patchdocument&quot; identified by a media type. If the Request-URI does not point to an existing resource,\nthe server MAY create a new resource, depending on the patch document type (whether it can logically modify a null resource) and permissions, etc.\n"
  example: []
  syntax:
    content: Patch = 5
    return:
      type: BestHTTP.HTTPMethods
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: BestHTTP.HTTPMethods.Merge
  commentId: F:BestHTTP.HTTPMethods.Merge
  id: Merge
  parent: BestHTTP.HTTPMethods
  langs:
  - csharp
  - vb
  name: Merge
  nameWithType: HTTPMethods.Merge
  fullName: BestHTTP.HTTPMethods.Merge
  type: Field
  source:
    id: Merge
    path: ''
    startLine: 6112
  assemblies:
  - cs.temp.dll
  namespace: BestHTTP
  summary: "\nThe HTTP methods PATCH can be used to update partial resources. For instance, when you only need to update one field of the resource, PUTting a complete resource representation might be cumbersome and utilizes more bandwidth.\n<a href=\"http://restcookbook.com/HTTP%20Methods/patch/\">http://restcookbook.com/HTTP%20Methods/patch/</a>\n"
  example: []
  syntax:
    content: Merge = 6
    return:
      type: BestHTTP.HTTPMethods
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
references:
- uid: BestHTTP
  commentId: N:BestHTTP
  name: BestHTTP
  nameWithType: BestHTTP
  fullName: BestHTTP
- uid: BestHTTP.HTTPMethods
  commentId: T:BestHTTP.HTTPMethods
  parent: BestHTTP
  name: HTTPMethods
  nameWithType: HTTPMethods
  fullName: BestHTTP.HTTPMethods
