### YamlMime:ManagedReference
items:
- uid: BestHTTP.WebSocket.WebSocket
  commentId: T:BestHTTP.WebSocket.WebSocket
  id: WebSocket
  parent: BestHTTP.WebSocket
  children:
  - BestHTTP.WebSocket.WebSocket.#ctor(System.Uri)
  - BestHTTP.WebSocket.WebSocket.#ctor(System.Uri,System.String,System.String,IExtension[])
  - BestHTTP.WebSocket.WebSocket.BufferedAmount
  - BestHTTP.WebSocket.WebSocket.Close
  - BestHTTP.WebSocket.WebSocket.Close(System.UInt16,System.String)
  - BestHTTP.WebSocket.WebSocket.EncodeCloseData(System.UInt16,System.String)
  - BestHTTP.WebSocket.WebSocket.Extensions
  - BestHTTP.WebSocket.WebSocket.InternalRequest
  - BestHTTP.WebSocket.WebSocket.IsOpen
  - BestHTTP.WebSocket.WebSocket.OnBinary
  - BestHTTP.WebSocket.WebSocket.OnClosed
  - BestHTTP.WebSocket.WebSocket.OnError
  - BestHTTP.WebSocket.WebSocket.OnErrorDesc
  - BestHTTP.WebSocket.WebSocket.OnIncompleteFrame
  - BestHTTP.WebSocket.WebSocket.OnMessage
  - BestHTTP.WebSocket.WebSocket.OnOpen
  - BestHTTP.WebSocket.WebSocket.Open
  - BestHTTP.WebSocket.WebSocket.PingFrequency
  - BestHTTP.WebSocket.WebSocket.Send(System.Byte[])
  - BestHTTP.WebSocket.WebSocket.Send(System.Byte[],System.UInt64,System.UInt64)
  - BestHTTP.WebSocket.WebSocket.Send(System.String)
  - BestHTTP.WebSocket.WebSocket.Send(WebSocketFrame)
  - BestHTTP.WebSocket.WebSocket.StartPingThread
  langs:
  - csharp
  - vb
  name: WebSocket
  nameWithType: WebSocket
  fullName: BestHTTP.WebSocket.WebSocket
  type: Class
  source:
    id: WebSocket
    path: ''
    startLine: 32110
  assemblies:
  - cs.temp.dll
  namespace: BestHTTP.WebSocket
  syntax:
    content: public sealed class WebSocket
    content.vb: Public NotInheritable Class WebSocket
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ToString
  - System.Object.ReferenceEquals(System.Object,System.Object)
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: BestHTTP.WebSocket.WebSocket.IsOpen
  commentId: P:BestHTTP.WebSocket.WebSocket.IsOpen
  id: IsOpen
  parent: BestHTTP.WebSocket.WebSocket
  langs:
  - csharp
  - vb
  name: IsOpen
  nameWithType: WebSocket.IsOpen
  fullName: BestHTTP.WebSocket.WebSocket.IsOpen
  type: Property
  source:
    id: IsOpen
    path: ''
    startLine: 32117
  assemblies:
  - cs.temp.dll
  namespace: BestHTTP.WebSocket
  summary: "\nThe connection to the WebSocket server is open.\n"
  example: []
  syntax:
    content: public bool IsOpen { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsOpen As Boolean
  overload: BestHTTP.WebSocket.WebSocket.IsOpen*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: BestHTTP.WebSocket.WebSocket.BufferedAmount
  commentId: P:BestHTTP.WebSocket.WebSocket.BufferedAmount
  id: BufferedAmount
  parent: BestHTTP.WebSocket.WebSocket
  langs:
  - csharp
  - vb
  name: BufferedAmount
  nameWithType: WebSocket.BufferedAmount
  fullName: BestHTTP.WebSocket.WebSocket.BufferedAmount
  type: Property
  source:
    id: BufferedAmount
    path: ''
    startLine: 32129
  assemblies:
  - cs.temp.dll
  namespace: BestHTTP.WebSocket
  syntax:
    content: public int BufferedAmount { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property BufferedAmount As Integer
  overload: BestHTTP.WebSocket.WebSocket.BufferedAmount*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: BestHTTP.WebSocket.WebSocket.StartPingThread
  commentId: P:BestHTTP.WebSocket.WebSocket.StartPingThread
  id: StartPingThread
  parent: BestHTTP.WebSocket.WebSocket
  langs:
  - csharp
  - vb
  name: StartPingThread
  nameWithType: WebSocket.StartPingThread
  fullName: BestHTTP.WebSocket.WebSocket.StartPingThread
  type: Property
  source:
    id: StartPingThread
    path: ''
    startLine: 32145
  assemblies:
  - cs.temp.dll
  namespace: BestHTTP.WebSocket
  summary: "\nSet to true to start a new thread to send Pings to the WebSocket server\n"
  example: []
  syntax:
    content: public bool StartPingThread { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property StartPingThread As Boolean
  overload: BestHTTP.WebSocket.WebSocket.StartPingThread*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: BestHTTP.WebSocket.WebSocket.PingFrequency
  commentId: P:BestHTTP.WebSocket.WebSocket.PingFrequency
  id: PingFrequency
  parent: BestHTTP.WebSocket.WebSocket
  langs:
  - csharp
  - vb
  name: PingFrequency
  nameWithType: WebSocket.PingFrequency
  fullName: BestHTTP.WebSocket.WebSocket.PingFrequency
  type: Property
  source:
    id: PingFrequency
    path: ''
    startLine: 32150
  assemblies:
  - cs.temp.dll
  namespace: BestHTTP.WebSocket
  summary: "\nThe delay between two Pings in millisecs. Minimum value is 100, default is 1000.\n"
  example: []
  syntax:
    content: public int PingFrequency { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property PingFrequency As Integer
  overload: BestHTTP.WebSocket.WebSocket.PingFrequency*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: BestHTTP.WebSocket.WebSocket.InternalRequest
  commentId: P:BestHTTP.WebSocket.WebSocket.InternalRequest
  id: InternalRequest
  parent: BestHTTP.WebSocket.WebSocket
  langs:
  - csharp
  - vb
  name: InternalRequest
  nameWithType: WebSocket.InternalRequest
  fullName: BestHTTP.WebSocket.WebSocket.InternalRequest
  type: Property
  source:
    id: InternalRequest
    path: ''
    startLine: 32155
  assemblies:
  - cs.temp.dll
  namespace: BestHTTP.WebSocket
  summary: "\nThe internal HTTPRequest object.\n"
  example: []
  syntax:
    content: public HTTPRequest InternalRequest { get; }
    parameters: []
    return:
      type: BestHTTP.HTTPRequest
    content.vb: Public ReadOnly Property InternalRequest As HTTPRequest
  overload: BestHTTP.WebSocket.WebSocket.InternalRequest*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: BestHTTP.WebSocket.WebSocket.Extensions
  commentId: P:BestHTTP.WebSocket.WebSocket.Extensions
  id: Extensions
  parent: BestHTTP.WebSocket.WebSocket
  langs:
  - csharp
  - vb
  name: Extensions
  nameWithType: WebSocket.Extensions
  fullName: BestHTTP.WebSocket.WebSocket.Extensions
  type: Property
  source:
    id: Extensions
    path: ''
    startLine: 32160
  assemblies:
  - cs.temp.dll
  namespace: BestHTTP.WebSocket
  summary: "\nIExtension implementations the plugin will negotiate with the server to use.\n"
  example: []
  syntax:
    content: public IExtension[] Extensions { get; }
    parameters: []
    return:
      type: IExtension[]
    content.vb: Public ReadOnly Property Extensions As IExtension()
  overload: BestHTTP.WebSocket.WebSocket.Extensions*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: BestHTTP.WebSocket.WebSocket.OnOpen
  commentId: F:BestHTTP.WebSocket.WebSocket.OnOpen
  id: OnOpen
  parent: BestHTTP.WebSocket.WebSocket
  langs:
  - csharp
  - vb
  name: OnOpen
  nameWithType: WebSocket.OnOpen
  fullName: BestHTTP.WebSocket.WebSocket.OnOpen
  type: Field
  source:
    id: OnOpen
    path: ''
    startLine: 32166
  assemblies:
  - cs.temp.dll
  namespace: BestHTTP.WebSocket
  summary: "\nCalled when the connection to the WebSocket server is established.\n"
  example: []
  syntax:
    content: public OnWebSocketOpenDelegate OnOpen
    return:
      type: BestHTTP.WebSocket.OnWebSocketOpenDelegate
    content.vb: Public OnOpen As OnWebSocketOpenDelegate
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: BestHTTP.WebSocket.WebSocket.OnMessage
  commentId: F:BestHTTP.WebSocket.WebSocket.OnMessage
  id: OnMessage
  parent: BestHTTP.WebSocket.WebSocket
  langs:
  - csharp
  - vb
  name: OnMessage
  nameWithType: WebSocket.OnMessage
  fullName: BestHTTP.WebSocket.WebSocket.OnMessage
  type: Field
  source:
    id: OnMessage
    path: ''
    startLine: 32171
  assemblies:
  - cs.temp.dll
  namespace: BestHTTP.WebSocket
  summary: "\nCalled when a new textual message is received from the server.\n"
  example: []
  syntax:
    content: public OnWebSocketMessageDelegate OnMessage
    return:
      type: BestHTTP.WebSocket.OnWebSocketMessageDelegate
    content.vb: Public OnMessage As OnWebSocketMessageDelegate
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: BestHTTP.WebSocket.WebSocket.OnBinary
  commentId: F:BestHTTP.WebSocket.WebSocket.OnBinary
  id: OnBinary
  parent: BestHTTP.WebSocket.WebSocket
  langs:
  - csharp
  - vb
  name: OnBinary
  nameWithType: WebSocket.OnBinary
  fullName: BestHTTP.WebSocket.WebSocket.OnBinary
  type: Field
  source:
    id: OnBinary
    path: ''
    startLine: 32176
  assemblies:
  - cs.temp.dll
  namespace: BestHTTP.WebSocket
  summary: "\nCalled when a new binary message is received from the server.\n"
  example: []
  syntax:
    content: public OnWebSocketBinaryDelegate OnBinary
    return:
      type: BestHTTP.WebSocket.OnWebSocketBinaryDelegate
    content.vb: Public OnBinary As OnWebSocketBinaryDelegate
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: BestHTTP.WebSocket.WebSocket.OnClosed
  commentId: F:BestHTTP.WebSocket.WebSocket.OnClosed
  id: OnClosed
  parent: BestHTTP.WebSocket.WebSocket
  langs:
  - csharp
  - vb
  name: OnClosed
  nameWithType: WebSocket.OnClosed
  fullName: BestHTTP.WebSocket.WebSocket.OnClosed
  type: Field
  source:
    id: OnClosed
    path: ''
    startLine: 32181
  assemblies:
  - cs.temp.dll
  namespace: BestHTTP.WebSocket
  summary: "\nCalled when the WebSocket connection is closed.\n"
  example: []
  syntax:
    content: public OnWebSocketClosedDelegate OnClosed
    return:
      type: BestHTTP.WebSocket.OnWebSocketClosedDelegate
    content.vb: Public OnClosed As OnWebSocketClosedDelegate
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: BestHTTP.WebSocket.WebSocket.OnError
  commentId: F:BestHTTP.WebSocket.WebSocket.OnError
  id: OnError
  parent: BestHTTP.WebSocket.WebSocket
  langs:
  - csharp
  - vb
  name: OnError
  nameWithType: WebSocket.OnError
  fullName: BestHTTP.WebSocket.WebSocket.OnError
  type: Field
  source:
    id: OnError
    path: ''
    startLine: 32186
  assemblies:
  - cs.temp.dll
  namespace: BestHTTP.WebSocket
  summary: "\nCalled when an error is encountered. The Exception parameter may be null.\n"
  example: []
  syntax:
    content: public OnWebSocketErrorDelegate OnError
    return:
      type: BestHTTP.WebSocket.OnWebSocketErrorDelegate
    content.vb: Public OnError As OnWebSocketErrorDelegate
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: BestHTTP.WebSocket.WebSocket.OnErrorDesc
  commentId: F:BestHTTP.WebSocket.WebSocket.OnErrorDesc
  id: OnErrorDesc
  parent: BestHTTP.WebSocket.WebSocket
  langs:
  - csharp
  - vb
  name: OnErrorDesc
  nameWithType: WebSocket.OnErrorDesc
  fullName: BestHTTP.WebSocket.WebSocket.OnErrorDesc
  type: Field
  source:
    id: OnErrorDesc
    path: ''
    startLine: 32191
  assemblies:
  - cs.temp.dll
  namespace: BestHTTP.WebSocket
  summary: "\nCalled when an error is encountered. The parameter will be the description of the error.\n"
  example: []
  syntax:
    content: public OnWebSocketErrorDescriptionDelegate OnErrorDesc
    return:
      type: BestHTTP.WebSocket.OnWebSocketErrorDescriptionDelegate
    content.vb: Public OnErrorDesc As OnWebSocketErrorDescriptionDelegate
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: BestHTTP.WebSocket.WebSocket.OnIncompleteFrame
  commentId: F:BestHTTP.WebSocket.WebSocket.OnIncompleteFrame
  id: OnIncompleteFrame
  parent: BestHTTP.WebSocket.WebSocket
  langs:
  - csharp
  - vb
  name: OnIncompleteFrame
  nameWithType: WebSocket.OnIncompleteFrame
  fullName: BestHTTP.WebSocket.WebSocket.OnIncompleteFrame
  type: Field
  source:
    id: OnIncompleteFrame
    path: ''
    startLine: 32197
  assemblies:
  - cs.temp.dll
  namespace: BestHTTP.WebSocket
  summary: "\nCalled when an incomplete frame received. No attempt will be made to reassemble these fragments internally, and no reference are stored after this event to this frame.\n"
  example: []
  syntax:
    content: public OnWebSocketIncompleteFrameDelegate OnIncompleteFrame
    return:
      type: BestHTTP.WebSocket.OnWebSocketIncompleteFrameDelegate
    content.vb: Public OnIncompleteFrame As OnWebSocketIncompleteFrameDelegate
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: BestHTTP.WebSocket.WebSocket.#ctor(System.Uri)
  commentId: M:BestHTTP.WebSocket.WebSocket.#ctor(System.Uri)
  id: '#ctor(System.Uri)'
  parent: BestHTTP.WebSocket.WebSocket
  langs:
  - csharp
  - vb
  name: WebSocket(Uri)
  nameWithType: WebSocket.WebSocket(Uri)
  fullName: BestHTTP.WebSocket.WebSocket.WebSocket(System.Uri)
  type: Constructor
  source:
    id: .ctor
    path: ''
    startLine: 32231
  assemblies:
  - cs.temp.dll
  namespace: BestHTTP.WebSocket
  summary: "\nCreates a WebSocket instance from the given uri.\n"
  example: []
  syntax:
    content: public WebSocket(Uri uri)
    parameters:
    - id: uri
      type: System.Uri
      description: The uri of the WebSocket server
    content.vb: Public Sub New(uri As Uri)
  overload: BestHTTP.WebSocket.WebSocket.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: BestHTTP.WebSocket.WebSocket.#ctor(System.Uri,System.String,System.String,IExtension[])
  commentId: M:BestHTTP.WebSocket.WebSocket.#ctor(System.Uri,System.String,System.String,IExtension[])
  id: '#ctor(System.Uri,System.String,System.String,IExtension[])'
  parent: BestHTTP.WebSocket.WebSocket
  langs:
  - csharp
  - vb
  name: WebSocket(Uri, String, String, IExtension[])
  nameWithType: WebSocket.WebSocket(Uri, String, String, IExtension[])
  fullName: BestHTTP.WebSocket.WebSocket.WebSocket(System.Uri, System.String, System.String, IExtension[])
  type: Constructor
  source:
    id: .ctor
    path: ''
    startLine: 32252
  assemblies:
  - cs.temp.dll
  namespace: BestHTTP.WebSocket
  summary: "\nCreates a WebSocket instance from the given uri, protocol and origin.\n"
  example: []
  syntax:
    content: public WebSocket(Uri uri, string origin, string protocol, params IExtension[] extensions)
    parameters:
    - id: uri
      type: System.Uri
      description: The uri of the WebSocket server
    - id: origin
      type: System.String
      description: >-
        Servers that are not intended to process input from any web page but only for certain sites SHOULD verify the |Origin| field is an origin they expect.

        If the origin indicated is unacceptable to the server, then it SHOULD respond to the WebSocket handshake with a reply containing HTTP 403 Forbidden status code.
    - id: protocol
      type: System.String
      description: The application-level protocol that the client want to use(eg. &quot;chat&quot;, &quot;leaderboard&quot;, etc.). Can be null or empty string if not used.
    - id: extensions
      type: IExtension[]
      description: Optional IExtensions implementations
    content.vb: Public Sub New(uri As Uri, origin As String, protocol As String, ParamArray extensions As IExtension())
  overload: BestHTTP.WebSocket.WebSocket.#ctor*
  nameWithType.vb: WebSocket.WebSocket(Uri, String, String, IExtension())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: BestHTTP.WebSocket.WebSocket.WebSocket(System.Uri, System.String, System.String, IExtension())
  name.vb: WebSocket(Uri, String, String, IExtension())
- uid: BestHTTP.WebSocket.WebSocket.Open
  commentId: M:BestHTTP.WebSocket.WebSocket.Open
  id: Open
  parent: BestHTTP.WebSocket.WebSocket
  langs:
  - csharp
  - vb
  name: Open()
  nameWithType: WebSocket.Open()
  fullName: BestHTTP.WebSocket.WebSocket.Open()
  type: Method
  source:
    id: Open
    path: ''
    startLine: 32487
  assemblies:
  - cs.temp.dll
  namespace: BestHTTP.WebSocket
  summary: "\nStart the opening process.\n"
  example: []
  syntax:
    content: public void Open()
    content.vb: Public Sub Open
  overload: BestHTTP.WebSocket.WebSocket.Open*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: BestHTTP.WebSocket.WebSocket.Send(System.String)
  commentId: M:BestHTTP.WebSocket.WebSocket.Send(System.String)
  id: Send(System.String)
  parent: BestHTTP.WebSocket.WebSocket
  langs:
  - csharp
  - vb
  name: Send(String)
  nameWithType: WebSocket.Send(String)
  fullName: BestHTTP.WebSocket.WebSocket.Send(System.String)
  type: Method
  source:
    id: Send
    path: ''
    startLine: 32528
  assemblies:
  - cs.temp.dll
  namespace: BestHTTP.WebSocket
  summary: "\nIt will send the given message to the server in one frame.\n"
  example: []
  syntax:
    content: public void Send(string message)
    parameters:
    - id: message
      type: System.String
    content.vb: Public Sub Send(message As String)
  overload: BestHTTP.WebSocket.WebSocket.Send*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: BestHTTP.WebSocket.WebSocket.Send(System.Byte[])
  commentId: M:BestHTTP.WebSocket.WebSocket.Send(System.Byte[])
  id: Send(System.Byte[])
  parent: BestHTTP.WebSocket.WebSocket
  langs:
  - csharp
  - vb
  name: Send(Byte[])
  nameWithType: WebSocket.Send(Byte[])
  fullName: BestHTTP.WebSocket.WebSocket.Send(System.Byte[])
  type: Method
  source:
    id: Send
    path: ''
    startLine: 32543
  assemblies:
  - cs.temp.dll
  namespace: BestHTTP.WebSocket
  summary: "\nIt will send the given data to the server in one frame.\n"
  example: []
  syntax:
    content: public void Send(byte[] buffer)
    parameters:
    - id: buffer
      type: System.Byte[]
    content.vb: Public Sub Send(buffer As Byte())
  overload: BestHTTP.WebSocket.WebSocket.Send*
  nameWithType.vb: WebSocket.Send(Byte())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: BestHTTP.WebSocket.WebSocket.Send(System.Byte())
  name.vb: Send(Byte())
- uid: BestHTTP.WebSocket.WebSocket.Send(System.Byte[],System.UInt64,System.UInt64)
  commentId: M:BestHTTP.WebSocket.WebSocket.Send(System.Byte[],System.UInt64,System.UInt64)
  id: Send(System.Byte[],System.UInt64,System.UInt64)
  parent: BestHTTP.WebSocket.WebSocket
  langs:
  - csharp
  - vb
  name: Send(Byte[], UInt64, UInt64)
  nameWithType: WebSocket.Send(Byte[], UInt64, UInt64)
  fullName: BestHTTP.WebSocket.WebSocket.Send(System.Byte[], System.UInt64, System.UInt64)
  type: Method
  source:
    id: Send
    path: ''
    startLine: 32557
  assemblies:
  - cs.temp.dll
  namespace: BestHTTP.WebSocket
  summary: "\nWill send count bytes from a byte array, starting from offset.\n"
  example: []
  syntax:
    content: public void Send(byte[] buffer, ulong offset, ulong count)
    parameters:
    - id: buffer
      type: System.Byte[]
    - id: offset
      type: System.UInt64
    - id: count
      type: System.UInt64
    content.vb: Public Sub Send(buffer As Byte(), offset As ULong, count As ULong)
  overload: BestHTTP.WebSocket.WebSocket.Send*
  nameWithType.vb: WebSocket.Send(Byte(), UInt64, UInt64)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: BestHTTP.WebSocket.WebSocket.Send(System.Byte(), System.UInt64, System.UInt64)
  name.vb: Send(Byte(), UInt64, UInt64)
- uid: BestHTTP.WebSocket.WebSocket.Send(WebSocketFrame)
  commentId: M:BestHTTP.WebSocket.WebSocket.Send(WebSocketFrame)
  id: Send(WebSocketFrame)
  parent: BestHTTP.WebSocket.WebSocket
  langs:
  - csharp
  - vb
  name: Send(WebSocketFrame)
  nameWithType: WebSocket.Send(WebSocketFrame)
  fullName: BestHTTP.WebSocket.WebSocket.Send(WebSocketFrame)
  type: Method
  source:
    id: Send
    path: ''
    startLine: 32572
  assemblies:
  - cs.temp.dll
  namespace: BestHTTP.WebSocket
  summary: "\nIt will send the given frame to the server.\n"
  example: []
  syntax:
    content: public void Send(WebSocketFrame frame)
    parameters:
    - id: frame
      type: WebSocketFrame
    content.vb: Public Sub Send(frame As WebSocketFrame)
  overload: BestHTTP.WebSocket.WebSocket.Send*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: BestHTTP.WebSocket.WebSocket.Close
  commentId: M:BestHTTP.WebSocket.WebSocket.Close
  id: Close
  parent: BestHTTP.WebSocket.WebSocket
  langs:
  - csharp
  - vb
  name: Close()
  nameWithType: WebSocket.Close()
  fullName: BestHTTP.WebSocket.WebSocket.Close()
  type: Method
  source:
    id: Close
    path: ''
    startLine: 32582
  assemblies:
  - cs.temp.dll
  namespace: BestHTTP.WebSocket
  summary: "\nIt will initiate the closing of the connection to the server.\n"
  example: []
  syntax:
    content: public void Close()
    content.vb: Public Sub Close
  overload: BestHTTP.WebSocket.WebSocket.Close*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: BestHTTP.WebSocket.WebSocket.Close(System.UInt16,System.String)
  commentId: M:BestHTTP.WebSocket.WebSocket.Close(System.UInt16,System.String)
  id: Close(System.UInt16,System.String)
  parent: BestHTTP.WebSocket.WebSocket
  langs:
  - csharp
  - vb
  name: Close(UInt16, String)
  nameWithType: WebSocket.Close(UInt16, String)
  fullName: BestHTTP.WebSocket.WebSocket.Close(System.UInt16, System.String)
  type: Method
  source:
    id: Close
    path: ''
    startLine: 32596
  assemblies:
  - cs.temp.dll
  namespace: BestHTTP.WebSocket
  summary: "\nIt will initiate the closing of the connection to the server sending the given code and message.\n"
  example: []
  syntax:
    content: public void Close(ushort code, string message)
    parameters:
    - id: code
      type: System.UInt16
    - id: message
      type: System.String
    content.vb: Public Sub Close(code As UShort, message As String)
  overload: BestHTTP.WebSocket.WebSocket.Close*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: BestHTTP.WebSocket.WebSocket.EncodeCloseData(System.UInt16,System.String)
  commentId: M:BestHTTP.WebSocket.WebSocket.EncodeCloseData(System.UInt16,System.String)
  id: EncodeCloseData(System.UInt16,System.String)
  parent: BestHTTP.WebSocket.WebSocket
  langs:
  - csharp
  - vb
  name: EncodeCloseData(UInt16, String)
  nameWithType: WebSocket.EncodeCloseData(UInt16, String)
  fullName: BestHTTP.WebSocket.WebSocket.EncodeCloseData(System.UInt16, System.String)
  type: Method
  source:
    id: EncodeCloseData
    path: ''
    startLine: 32607
  assemblies:
  - cs.temp.dll
  namespace: BestHTTP.WebSocket
  syntax:
    content: public static byte[] EncodeCloseData(ushort code, string message)
    parameters:
    - id: code
      type: System.UInt16
    - id: message
      type: System.String
    return:
      type: System.Byte[]
    content.vb: Public Shared Function EncodeCloseData(code As UShort, message As String) As Byte()
  overload: BestHTTP.WebSocket.WebSocket.EncodeCloseData*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: BestHTTP.WebSocket
  commentId: N:BestHTTP.WebSocket
  name: BestHTTP.WebSocket
  nameWithType: BestHTTP.WebSocket
  fullName: BestHTTP.WebSocket
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: BestHTTP.WebSocket.WebSocket.IsOpen*
  commentId: Overload:BestHTTP.WebSocket.WebSocket.IsOpen
  name: IsOpen
  nameWithType: WebSocket.IsOpen
  fullName: BestHTTP.WebSocket.WebSocket.IsOpen
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: BestHTTP.WebSocket.WebSocket.BufferedAmount*
  commentId: Overload:BestHTTP.WebSocket.WebSocket.BufferedAmount
  name: BufferedAmount
  nameWithType: WebSocket.BufferedAmount
  fullName: BestHTTP.WebSocket.WebSocket.BufferedAmount
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: BestHTTP.WebSocket.WebSocket.StartPingThread*
  commentId: Overload:BestHTTP.WebSocket.WebSocket.StartPingThread
  name: StartPingThread
  nameWithType: WebSocket.StartPingThread
  fullName: BestHTTP.WebSocket.WebSocket.StartPingThread
- uid: BestHTTP.WebSocket.WebSocket.PingFrequency*
  commentId: Overload:BestHTTP.WebSocket.WebSocket.PingFrequency
  name: PingFrequency
  nameWithType: WebSocket.PingFrequency
  fullName: BestHTTP.WebSocket.WebSocket.PingFrequency
- uid: BestHTTP.WebSocket.WebSocket.InternalRequest*
  commentId: Overload:BestHTTP.WebSocket.WebSocket.InternalRequest
  name: InternalRequest
  nameWithType: WebSocket.InternalRequest
  fullName: BestHTTP.WebSocket.WebSocket.InternalRequest
- uid: BestHTTP.HTTPRequest
  commentId: T:BestHTTP.HTTPRequest
  parent: BestHTTP
  name: HTTPRequest
  nameWithType: HTTPRequest
  fullName: BestHTTP.HTTPRequest
- uid: BestHTTP
  commentId: N:BestHTTP
  name: BestHTTP
  nameWithType: BestHTTP
  fullName: BestHTTP
- uid: BestHTTP.WebSocket.WebSocket.Extensions*
  commentId: Overload:BestHTTP.WebSocket.WebSocket.Extensions
  name: Extensions
  nameWithType: WebSocket.Extensions
  fullName: BestHTTP.WebSocket.WebSocket.Extensions
- uid: IExtension[]
  isExternal: true
  name: IExtension[]
  nameWithType: IExtension[]
  fullName: IExtension[]
  nameWithType.vb: IExtension()
  fullName.vb: IExtension()
  name.vb: IExtension()
  spec.csharp:
  - uid: IExtension
    name: IExtension
    nameWithType: IExtension
    fullName: IExtension
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: IExtension
    name: IExtension
    nameWithType: IExtension
    fullName: IExtension
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: BestHTTP.WebSocket.OnWebSocketOpenDelegate
  commentId: T:BestHTTP.WebSocket.OnWebSocketOpenDelegate
  parent: BestHTTP.WebSocket
  name: OnWebSocketOpenDelegate
  nameWithType: OnWebSocketOpenDelegate
  fullName: BestHTTP.WebSocket.OnWebSocketOpenDelegate
- uid: BestHTTP.WebSocket.OnWebSocketMessageDelegate
  commentId: T:BestHTTP.WebSocket.OnWebSocketMessageDelegate
  parent: BestHTTP.WebSocket
  name: OnWebSocketMessageDelegate
  nameWithType: OnWebSocketMessageDelegate
  fullName: BestHTTP.WebSocket.OnWebSocketMessageDelegate
- uid: BestHTTP.WebSocket.OnWebSocketBinaryDelegate
  commentId: T:BestHTTP.WebSocket.OnWebSocketBinaryDelegate
  parent: BestHTTP.WebSocket
  name: OnWebSocketBinaryDelegate
  nameWithType: OnWebSocketBinaryDelegate
  fullName: BestHTTP.WebSocket.OnWebSocketBinaryDelegate
- uid: BestHTTP.WebSocket.OnWebSocketClosedDelegate
  commentId: T:BestHTTP.WebSocket.OnWebSocketClosedDelegate
  parent: BestHTTP.WebSocket
  name: OnWebSocketClosedDelegate
  nameWithType: OnWebSocketClosedDelegate
  fullName: BestHTTP.WebSocket.OnWebSocketClosedDelegate
- uid: BestHTTP.WebSocket.OnWebSocketErrorDelegate
  commentId: T:BestHTTP.WebSocket.OnWebSocketErrorDelegate
  parent: BestHTTP.WebSocket
  name: OnWebSocketErrorDelegate
  nameWithType: OnWebSocketErrorDelegate
  fullName: BestHTTP.WebSocket.OnWebSocketErrorDelegate
- uid: BestHTTP.WebSocket.OnWebSocketErrorDescriptionDelegate
  commentId: T:BestHTTP.WebSocket.OnWebSocketErrorDescriptionDelegate
  parent: BestHTTP.WebSocket
  name: OnWebSocketErrorDescriptionDelegate
  nameWithType: OnWebSocketErrorDescriptionDelegate
  fullName: BestHTTP.WebSocket.OnWebSocketErrorDescriptionDelegate
- uid: BestHTTP.WebSocket.OnWebSocketIncompleteFrameDelegate
  commentId: T:BestHTTP.WebSocket.OnWebSocketIncompleteFrameDelegate
  parent: BestHTTP.WebSocket
  name: OnWebSocketIncompleteFrameDelegate
  nameWithType: OnWebSocketIncompleteFrameDelegate
  fullName: BestHTTP.WebSocket.OnWebSocketIncompleteFrameDelegate
- uid: BestHTTP.WebSocket.WebSocket.#ctor*
  commentId: Overload:BestHTTP.WebSocket.WebSocket.#ctor
  name: WebSocket
  nameWithType: WebSocket.WebSocket
  fullName: BestHTTP.WebSocket.WebSocket.WebSocket
- uid: System.Uri
  commentId: T:System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: BestHTTP.WebSocket.WebSocket.Open*
  commentId: Overload:BestHTTP.WebSocket.WebSocket.Open
  name: Open
  nameWithType: WebSocket.Open
  fullName: BestHTTP.WebSocket.WebSocket.Open
- uid: BestHTTP.WebSocket.WebSocket.Send*
  commentId: Overload:BestHTTP.WebSocket.WebSocket.Send
  name: Send
  nameWithType: WebSocket.Send
  fullName: BestHTTP.WebSocket.WebSocket.Send
- uid: System.Byte[]
  isExternal: true
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullName.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.UInt64
  commentId: T:System.UInt64
  parent: System
  isExternal: true
  name: UInt64
  nameWithType: UInt64
  fullName: System.UInt64
- uid: WebSocketFrame
  isExternal: true
  name: WebSocketFrame
  nameWithType: WebSocketFrame
  fullName: WebSocketFrame
- uid: BestHTTP.WebSocket.WebSocket.Close*
  commentId: Overload:BestHTTP.WebSocket.WebSocket.Close
  name: Close
  nameWithType: WebSocket.Close
  fullName: BestHTTP.WebSocket.WebSocket.Close
- uid: System.UInt16
  commentId: T:System.UInt16
  parent: System
  isExternal: true
  name: UInt16
  nameWithType: UInt16
  fullName: System.UInt16
- uid: BestHTTP.WebSocket.WebSocket.EncodeCloseData*
  commentId: Overload:BestHTTP.WebSocket.WebSocket.EncodeCloseData
  name: EncodeCloseData
  nameWithType: WebSocket.EncodeCloseData
  fullName: BestHTTP.WebSocket.WebSocket.EncodeCloseData
