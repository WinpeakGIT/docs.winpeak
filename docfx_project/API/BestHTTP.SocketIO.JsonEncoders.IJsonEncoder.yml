### YamlMime:ManagedReference
items:
- uid: BestHTTP.SocketIO.JsonEncoders.IJsonEncoder
  commentId: T:BestHTTP.SocketIO.JsonEncoders.IJsonEncoder
  id: IJsonEncoder
  parent: BestHTTP.SocketIO.JsonEncoders
  children:
  - BestHTTP.SocketIO.JsonEncoders.IJsonEncoder.Decode(System.String)
  - BestHTTP.SocketIO.JsonEncoders.IJsonEncoder.Encode(System.Collections.Generic.List{System.Object})
  langs:
  - csharp
  - vb
  name: IJsonEncoder
  nameWithType: IJsonEncoder
  fullName: BestHTTP.SocketIO.JsonEncoders.IJsonEncoder
  type: Interface
  source:
    id: IJsonEncoder
    path: ''
    startLine: 14354
  assemblies:
  - cs.temp.dll
  namespace: BestHTTP.SocketIO.JsonEncoders
  summary: "\nInterface to be able to write custom Json encoders/decoders.\n"
  example: []
  syntax:
    content: public interface IJsonEncoder
    content.vb: Public Interface IJsonEncoder
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: BestHTTP.SocketIO.JsonEncoders.IJsonEncoder.Decode(System.String)
  commentId: M:BestHTTP.SocketIO.JsonEncoders.IJsonEncoder.Decode(System.String)
  id: Decode(System.String)
  parent: BestHTTP.SocketIO.JsonEncoders.IJsonEncoder
  langs:
  - csharp
  - vb
  name: Decode(String)
  nameWithType: IJsonEncoder.Decode(String)
  fullName: BestHTTP.SocketIO.JsonEncoders.IJsonEncoder.Decode(System.String)
  type: Method
  source:
    id: Decode
    path: ''
    startLine: 14359
  assemblies:
  - cs.temp.dll
  namespace: BestHTTP.SocketIO.JsonEncoders
  summary: "\nThe Decode function must create a list of objects from the Json formatted string parameter. If the decoding fails, it should return null.\n"
  example: []
  syntax:
    content: List<object> Decode(string json)
    parameters:
    - id: json
      type: System.String
    return:
      type: System.Collections.Generic.List{System.Object}
    content.vb: Function Decode(json As String) As List(Of Object)
  overload: BestHTTP.SocketIO.JsonEncoders.IJsonEncoder.Decode*
- uid: BestHTTP.SocketIO.JsonEncoders.IJsonEncoder.Encode(System.Collections.Generic.List{System.Object})
  commentId: M:BestHTTP.SocketIO.JsonEncoders.IJsonEncoder.Encode(System.Collections.Generic.List{System.Object})
  id: Encode(System.Collections.Generic.List{System.Object})
  parent: BestHTTP.SocketIO.JsonEncoders.IJsonEncoder
  langs:
  - csharp
  - vb
  name: Encode(List<Object>)
  nameWithType: IJsonEncoder.Encode(List<Object>)
  fullName: BestHTTP.SocketIO.JsonEncoders.IJsonEncoder.Encode(System.Collections.Generic.List<System.Object>)
  type: Method
  source:
    id: Encode
    path: ''
    startLine: 14364
  assemblies:
  - cs.temp.dll
  namespace: BestHTTP.SocketIO.JsonEncoders
  summary: "\nThe Encode function must create a json formatted string from the parameter. If the encoding fails, it should return null.\n"
  example: []
  syntax:
    content: string Encode(List<object> obj)
    parameters:
    - id: obj
      type: System.Collections.Generic.List{System.Object}
    return:
      type: System.String
    content.vb: Function Encode(obj As List(Of Object)) As String
  overload: BestHTTP.SocketIO.JsonEncoders.IJsonEncoder.Encode*
  nameWithType.vb: IJsonEncoder.Encode(List(Of Object))
  fullName.vb: BestHTTP.SocketIO.JsonEncoders.IJsonEncoder.Encode(System.Collections.Generic.List(Of System.Object))
  name.vb: Encode(List(Of Object))
references:
- uid: BestHTTP.SocketIO.JsonEncoders
  commentId: N:BestHTTP.SocketIO.JsonEncoders
  name: BestHTTP.SocketIO.JsonEncoders
  nameWithType: BestHTTP.SocketIO.JsonEncoders
  fullName: BestHTTP.SocketIO.JsonEncoders
- uid: BestHTTP.SocketIO.JsonEncoders.IJsonEncoder.Decode*
  commentId: Overload:BestHTTP.SocketIO.JsonEncoders.IJsonEncoder.Decode
  name: Decode
  nameWithType: IJsonEncoder.Decode
  fullName: BestHTTP.SocketIO.JsonEncoders.IJsonEncoder.Decode
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Collections.Generic.List{System.Object}
  commentId: T:System.Collections.Generic.List{System.Object}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<Object>
  nameWithType: List<Object>
  fullName: System.Collections.Generic.List<System.Object>
  nameWithType.vb: List(Of Object)
  fullName.vb: System.Collections.Generic.List(Of System.Object)
  name.vb: List(Of Object)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: BestHTTP.SocketIO.JsonEncoders.IJsonEncoder.Encode*
  commentId: Overload:BestHTTP.SocketIO.JsonEncoders.IJsonEncoder.Encode
  name: Encode
  nameWithType: IJsonEncoder.Encode
  fullName: BestHTTP.SocketIO.JsonEncoders.IJsonEncoder.Encode
