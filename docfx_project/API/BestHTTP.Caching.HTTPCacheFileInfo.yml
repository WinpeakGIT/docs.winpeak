### YamlMime:ManagedReference
items:
- uid: BestHTTP.Caching.HTTPCacheFileInfo
  commentId: T:BestHTTP.Caching.HTTPCacheFileInfo
  id: HTTPCacheFileInfo
  parent: BestHTTP.Caching
  children:
  - BestHTTP.Caching.HTTPCacheFileInfo.BodyLength
  - BestHTTP.Caching.HTTPCacheFileInfo.CompareTo(BestHTTP.Caching.HTTPCacheFileInfo)
  - BestHTTP.Caching.HTTPCacheFileInfo.GetBodyStream(System.Int32@)
  - BestHTTP.Caching.HTTPCacheFileInfo.GetPath
  - BestHTTP.Caching.HTTPCacheFileInfo.IsExists
  langs:
  - csharp
  - vb
  name: HTTPCacheFileInfo
  nameWithType: HTTPCacheFileInfo
  fullName: BestHTTP.Caching.HTTPCacheFileInfo
  type: Class
  source:
    id: HTTPCacheFileInfo
    path: ''
    startLine: 164216
  assemblies:
  - cs.temp.dll
  namespace: BestHTTP.Caching
  summary: "\nHolds all metadata that need for efficient caching, so we don&apos;t need to touch the disk to load headers.\n"
  example: []
  syntax:
    content: 'public class HTTPCacheFileInfo : IComparable<HTTPCacheFileInfo>'
    content.vb: >-
      Public Class HTTPCacheFileInfo
          Implements IComparable(Of HTTPCacheFileInfo)
  inheritance:
  - System.Object
  implements:
  - System.IComparable{BestHTTP.Caching.HTTPCacheFileInfo}
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ToString
  - System.Object.ReferenceEquals(System.Object,System.Object)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: BestHTTP.Caching.HTTPCacheFileInfo.BodyLength
  commentId: P:BestHTTP.Caching.HTTPCacheFileInfo.BodyLength
  id: BodyLength
  parent: BestHTTP.Caching.HTTPCacheFileInfo
  langs:
  - csharp
  - vb
  name: BodyLength
  nameWithType: HTTPCacheFileInfo.BodyLength
  fullName: BestHTTP.Caching.HTTPCacheFileInfo.BodyLength
  type: Property
  source:
    id: BodyLength
    path: ''
    startLine: 164233
  assemblies:
  - cs.temp.dll
  namespace: BestHTTP.Caching
  summary: "\nThe length of the cache entity&apos;s body.\n"
  example: []
  syntax:
    content: public int BodyLength { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property BodyLength As Integer
  overload: BestHTTP.Caching.HTTPCacheFileInfo.BodyLength*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: BestHTTP.Caching.HTTPCacheFileInfo.GetPath
  commentId: M:BestHTTP.Caching.HTTPCacheFileInfo.GetPath
  id: GetPath
  parent: BestHTTP.Caching.HTTPCacheFileInfo
  langs:
  - csharp
  - vb
  name: GetPath()
  nameWithType: HTTPCacheFileInfo.GetPath()
  fullName: BestHTTP.Caching.HTTPCacheFileInfo.GetPath()
  type: Method
  source:
    id: GetPath
    path: ''
    startLine: 164350
  assemblies:
  - cs.temp.dll
  namespace: BestHTTP.Caching
  syntax:
    content: public string GetPath()
    return:
      type: System.String
    content.vb: Public Function GetPath As String
  overload: BestHTTP.Caching.HTTPCacheFileInfo.GetPath*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: BestHTTP.Caching.HTTPCacheFileInfo.IsExists
  commentId: M:BestHTTP.Caching.HTTPCacheFileInfo.IsExists
  id: IsExists
  parent: BestHTTP.Caching.HTTPCacheFileInfo
  langs:
  - csharp
  - vb
  name: IsExists()
  nameWithType: HTTPCacheFileInfo.IsExists()
  fullName: BestHTTP.Caching.HTTPCacheFileInfo.IsExists()
  type: Method
  source:
    id: IsExists
    path: ''
    startLine: 164358
  assemblies:
  - cs.temp.dll
  namespace: BestHTTP.Caching
  syntax:
    content: public bool IsExists()
    return:
      type: System.Boolean
    content.vb: Public Function IsExists As Boolean
  overload: BestHTTP.Caching.HTTPCacheFileInfo.IsExists*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: BestHTTP.Caching.HTTPCacheFileInfo.GetBodyStream(System.Int32@)
  commentId: M:BestHTTP.Caching.HTTPCacheFileInfo.GetBodyStream(System.Int32@)
  id: GetBodyStream(System.Int32@)
  parent: BestHTTP.Caching.HTTPCacheFileInfo
  langs:
  - csharp
  - vb
  name: GetBodyStream(out Int32)
  nameWithType: HTTPCacheFileInfo.GetBodyStream(out Int32)
  fullName: BestHTTP.Caching.HTTPCacheFileInfo.GetBodyStream(out System.Int32)
  type: Method
  source:
    id: GetBodyStream
    path: ''
    startLine: 164474
  assemblies:
  - cs.temp.dll
  namespace: BestHTTP.Caching
  syntax:
    content: public Stream GetBodyStream(out int length)
    parameters:
    - id: length
      type: System.Int32
    return:
      type: System.IO.Stream
    content.vb: Public Function GetBodyStream(ByRef length As Integer) As Stream
  overload: BestHTTP.Caching.HTTPCacheFileInfo.GetBodyStream*
  nameWithType.vb: HTTPCacheFileInfo.GetBodyStream(ByRef Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: BestHTTP.Caching.HTTPCacheFileInfo.GetBodyStream(ByRef System.Int32)
  name.vb: GetBodyStream(ByRef Int32)
- uid: BestHTTP.Caching.HTTPCacheFileInfo.CompareTo(BestHTTP.Caching.HTTPCacheFileInfo)
  commentId: M:BestHTTP.Caching.HTTPCacheFileInfo.CompareTo(BestHTTP.Caching.HTTPCacheFileInfo)
  id: CompareTo(BestHTTP.Caching.HTTPCacheFileInfo)
  parent: BestHTTP.Caching.HTTPCacheFileInfo
  langs:
  - csharp
  - vb
  name: CompareTo(HTTPCacheFileInfo)
  nameWithType: HTTPCacheFileInfo.CompareTo(HTTPCacheFileInfo)
  fullName: BestHTTP.Caching.HTTPCacheFileInfo.CompareTo(BestHTTP.Caching.HTTPCacheFileInfo)
  type: Method
  source:
    id: CompareTo
    path: ''
    startLine: 164585
  assemblies:
  - cs.temp.dll
  namespace: BestHTTP.Caching
  syntax:
    content: public int CompareTo(HTTPCacheFileInfo other)
    parameters:
    - id: other
      type: BestHTTP.Caching.HTTPCacheFileInfo
    return:
      type: System.Int32
    content.vb: Public Function CompareTo(other As HTTPCacheFileInfo) As Integer
  overload: BestHTTP.Caching.HTTPCacheFileInfo.CompareTo*
  implements:
  - System.IComparable{BestHTTP.Caching.HTTPCacheFileInfo}.CompareTo(BestHTTP.Caching.HTTPCacheFileInfo)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: BestHTTP.Caching
  commentId: N:BestHTTP.Caching
  name: BestHTTP.Caching
  nameWithType: BestHTTP.Caching
  fullName: BestHTTP.Caching
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.IComparable{BestHTTP.Caching.HTTPCacheFileInfo}
  commentId: T:System.IComparable{BestHTTP.Caching.HTTPCacheFileInfo}
  parent: System
  definition: System.IComparable`1
  name: IComparable<HTTPCacheFileInfo>
  nameWithType: IComparable<HTTPCacheFileInfo>
  fullName: System.IComparable<BestHTTP.Caching.HTTPCacheFileInfo>
  nameWithType.vb: IComparable(Of HTTPCacheFileInfo)
  fullName.vb: System.IComparable(Of BestHTTP.Caching.HTTPCacheFileInfo)
  name.vb: IComparable(Of HTTPCacheFileInfo)
  spec.csharp:
  - uid: System.IComparable`1
    name: IComparable
    nameWithType: IComparable
    fullName: System.IComparable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: BestHTTP.Caching.HTTPCacheFileInfo
    name: HTTPCacheFileInfo
    nameWithType: HTTPCacheFileInfo
    fullName: BestHTTP.Caching.HTTPCacheFileInfo
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IComparable`1
    name: IComparable
    nameWithType: IComparable
    fullName: System.IComparable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: BestHTTP.Caching.HTTPCacheFileInfo
    name: HTTPCacheFileInfo
    nameWithType: HTTPCacheFileInfo
    fullName: BestHTTP.Caching.HTTPCacheFileInfo
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.IComparable`1
  commentId: T:System.IComparable`1
  isExternal: true
  name: IComparable<T>
  nameWithType: IComparable<T>
  fullName: System.IComparable<T>
  nameWithType.vb: IComparable(Of T)
  fullName.vb: System.IComparable(Of T)
  name.vb: IComparable(Of T)
  spec.csharp:
  - uid: System.IComparable`1
    name: IComparable
    nameWithType: IComparable
    fullName: System.IComparable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IComparable`1
    name: IComparable
    nameWithType: IComparable
    fullName: System.IComparable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: BestHTTP.Caching.HTTPCacheFileInfo.BodyLength*
  commentId: Overload:BestHTTP.Caching.HTTPCacheFileInfo.BodyLength
  name: BodyLength
  nameWithType: HTTPCacheFileInfo.BodyLength
  fullName: BestHTTP.Caching.HTTPCacheFileInfo.BodyLength
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: BestHTTP.Caching.HTTPCacheFileInfo.GetPath*
  commentId: Overload:BestHTTP.Caching.HTTPCacheFileInfo.GetPath
  name: GetPath
  nameWithType: HTTPCacheFileInfo.GetPath
  fullName: BestHTTP.Caching.HTTPCacheFileInfo.GetPath
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: BestHTTP.Caching.HTTPCacheFileInfo.IsExists*
  commentId: Overload:BestHTTP.Caching.HTTPCacheFileInfo.IsExists
  name: IsExists
  nameWithType: HTTPCacheFileInfo.IsExists
  fullName: BestHTTP.Caching.HTTPCacheFileInfo.IsExists
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: BestHTTP.Caching.HTTPCacheFileInfo.GetBodyStream*
  commentId: Overload:BestHTTP.Caching.HTTPCacheFileInfo.GetBodyStream
  name: GetBodyStream
  nameWithType: HTTPCacheFileInfo.GetBodyStream
  fullName: BestHTTP.Caching.HTTPCacheFileInfo.GetBodyStream
- uid: System.IO.Stream
  commentId: T:System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.IO
  commentId: N:System.IO
  isExternal: true
  name: System.IO
  nameWithType: System.IO
  fullName: System.IO
- uid: BestHTTP.Caching.HTTPCacheFileInfo.CompareTo*
  commentId: Overload:BestHTTP.Caching.HTTPCacheFileInfo.CompareTo
  name: CompareTo
  nameWithType: HTTPCacheFileInfo.CompareTo
  fullName: BestHTTP.Caching.HTTPCacheFileInfo.CompareTo
- uid: System.IComparable{BestHTTP.Caching.HTTPCacheFileInfo}.CompareTo(BestHTTP.Caching.HTTPCacheFileInfo)
  commentId: M:System.IComparable{BestHTTP.Caching.HTTPCacheFileInfo}.CompareTo(BestHTTP.Caching.HTTPCacheFileInfo)
  parent: System.IComparable{BestHTTP.Caching.HTTPCacheFileInfo}
  definition: System.IComparable`1.CompareTo(`0)
  name: CompareTo(HTTPCacheFileInfo)
  nameWithType: IComparable<HTTPCacheFileInfo>.CompareTo(HTTPCacheFileInfo)
  fullName: System.IComparable<BestHTTP.Caching.HTTPCacheFileInfo>.CompareTo(BestHTTP.Caching.HTTPCacheFileInfo)
  nameWithType.vb: IComparable(Of HTTPCacheFileInfo).CompareTo(HTTPCacheFileInfo)
  fullName.vb: System.IComparable(Of BestHTTP.Caching.HTTPCacheFileInfo).CompareTo(BestHTTP.Caching.HTTPCacheFileInfo)
  spec.csharp:
  - uid: System.IComparable`1.CompareTo(`0)
    name: CompareTo
    nameWithType: IComparable<HTTPCacheFileInfo>.CompareTo
    fullName: System.IComparable<BestHTTP.Caching.HTTPCacheFileInfo>.CompareTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: BestHTTP.Caching.HTTPCacheFileInfo
    name: HTTPCacheFileInfo
    nameWithType: HTTPCacheFileInfo
    fullName: BestHTTP.Caching.HTTPCacheFileInfo
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IComparable`1.CompareTo(`0)
    name: CompareTo
    nameWithType: IComparable(Of HTTPCacheFileInfo).CompareTo
    fullName: System.IComparable(Of BestHTTP.Caching.HTTPCacheFileInfo).CompareTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: BestHTTP.Caching.HTTPCacheFileInfo
    name: HTTPCacheFileInfo
    nameWithType: HTTPCacheFileInfo
    fullName: BestHTTP.Caching.HTTPCacheFileInfo
  - name: )
    nameWithType: )
    fullName: )
- uid: BestHTTP.Caching.HTTPCacheFileInfo
  commentId: T:BestHTTP.Caching.HTTPCacheFileInfo
  parent: BestHTTP.Caching
  name: HTTPCacheFileInfo
  nameWithType: HTTPCacheFileInfo
  fullName: BestHTTP.Caching.HTTPCacheFileInfo
- uid: System.IComparable`1.CompareTo(`0)
  commentId: M:System.IComparable`1.CompareTo(`0)
  isExternal: true
  name: CompareTo(T)
  nameWithType: IComparable<T>.CompareTo(T)
  fullName: System.IComparable<T>.CompareTo(T)
  nameWithType.vb: IComparable(Of T).CompareTo(T)
  fullName.vb: System.IComparable(Of T).CompareTo(T)
  spec.csharp:
  - uid: System.IComparable`1.CompareTo(`0)
    name: CompareTo
    nameWithType: IComparable<T>.CompareTo
    fullName: System.IComparable<T>.CompareTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IComparable`1.CompareTo(`0)
    name: CompareTo
    nameWithType: IComparable(Of T).CompareTo
    fullName: System.IComparable(Of T).CompareTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
