### YamlMime:ManagedReference
items:
- uid: Org.BouncyCastle.Math.EC.F2mFieldElement
  commentId: T:Org.BouncyCastle.Math.EC.F2mFieldElement
  id: F2mFieldElement
  parent: Org.BouncyCastle.Math.EC
  children:
  - Org.BouncyCastle.Math.EC.F2mFieldElement.#ctor(System.Int32,System.Int32,Org.BouncyCastle.Math.BigInteger)
  - Org.BouncyCastle.Math.EC.F2mFieldElement.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,Org.BouncyCastle.Math.BigInteger)
  - Org.BouncyCastle.Math.EC.F2mFieldElement.Add(Org.BouncyCastle.Math.EC.ECFieldElement)
  - Org.BouncyCastle.Math.EC.F2mFieldElement.AddOne
  - Org.BouncyCastle.Math.EC.F2mFieldElement.BitLength
  - Org.BouncyCastle.Math.EC.F2mFieldElement.CheckFieldElements(Org.BouncyCastle.Math.EC.ECFieldElement,Org.BouncyCastle.Math.EC.ECFieldElement)
  - Org.BouncyCastle.Math.EC.F2mFieldElement.Divide(Org.BouncyCastle.Math.EC.ECFieldElement)
  - Org.BouncyCastle.Math.EC.F2mFieldElement.Equals(Org.BouncyCastle.Math.EC.F2mFieldElement)
  - Org.BouncyCastle.Math.EC.F2mFieldElement.Equals(System.Object)
  - Org.BouncyCastle.Math.EC.F2mFieldElement.FieldName
  - Org.BouncyCastle.Math.EC.F2mFieldElement.FieldSize
  - Org.BouncyCastle.Math.EC.F2mFieldElement.GetHashCode
  - Org.BouncyCastle.Math.EC.F2mFieldElement.Gnb
  - Org.BouncyCastle.Math.EC.F2mFieldElement.Invert
  - Org.BouncyCastle.Math.EC.F2mFieldElement.IsOne
  - Org.BouncyCastle.Math.EC.F2mFieldElement.IsZero
  - Org.BouncyCastle.Math.EC.F2mFieldElement.K1
  - Org.BouncyCastle.Math.EC.F2mFieldElement.K2
  - Org.BouncyCastle.Math.EC.F2mFieldElement.K3
  - Org.BouncyCastle.Math.EC.F2mFieldElement.M
  - Org.BouncyCastle.Math.EC.F2mFieldElement.Multiply(Org.BouncyCastle.Math.EC.ECFieldElement)
  - Org.BouncyCastle.Math.EC.F2mFieldElement.MultiplyMinusProduct(Org.BouncyCastle.Math.EC.ECFieldElement,Org.BouncyCastle.Math.EC.ECFieldElement,Org.BouncyCastle.Math.EC.ECFieldElement)
  - Org.BouncyCastle.Math.EC.F2mFieldElement.MultiplyPlusProduct(Org.BouncyCastle.Math.EC.ECFieldElement,Org.BouncyCastle.Math.EC.ECFieldElement,Org.BouncyCastle.Math.EC.ECFieldElement)
  - Org.BouncyCastle.Math.EC.F2mFieldElement.Negate
  - Org.BouncyCastle.Math.EC.F2mFieldElement.Ppb
  - Org.BouncyCastle.Math.EC.F2mFieldElement.Representation
  - Org.BouncyCastle.Math.EC.F2mFieldElement.Sqrt
  - Org.BouncyCastle.Math.EC.F2mFieldElement.Square
  - Org.BouncyCastle.Math.EC.F2mFieldElement.SquareMinusProduct(Org.BouncyCastle.Math.EC.ECFieldElement,Org.BouncyCastle.Math.EC.ECFieldElement)
  - Org.BouncyCastle.Math.EC.F2mFieldElement.SquarePlusProduct(Org.BouncyCastle.Math.EC.ECFieldElement,Org.BouncyCastle.Math.EC.ECFieldElement)
  - Org.BouncyCastle.Math.EC.F2mFieldElement.SquarePow(System.Int32)
  - Org.BouncyCastle.Math.EC.F2mFieldElement.Subtract(Org.BouncyCastle.Math.EC.ECFieldElement)
  - Org.BouncyCastle.Math.EC.F2mFieldElement.TestBitZero
  - Org.BouncyCastle.Math.EC.F2mFieldElement.ToBigInteger
  - Org.BouncyCastle.Math.EC.F2mFieldElement.Tpb
  langs:
  - csharp
  - vb
  name: F2mFieldElement
  nameWithType: F2mFieldElement
  fullName: Org.BouncyCastle.Math.EC.F2mFieldElement
  type: Class
  source:
    id: F2mFieldElement
    path: ''
    startLine: 58784
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Math.EC
  example: []
  syntax:
    content: 'public class F2mFieldElement : ECFieldElement'
    content.vb: >-
      Public Class F2mFieldElement
          Inherits ECFieldElement
  inheritance:
  - System.Object
  - Org.BouncyCastle.Math.EC.ECFieldElement
  inheritedMembers:
  - Org.BouncyCastle.Math.EC.ECFieldElement.Equals(Org.BouncyCastle.Math.EC.ECFieldElement)
  - Org.BouncyCastle.Math.EC.ECFieldElement.ToString
  - Org.BouncyCastle.Math.EC.ECFieldElement.GetEncoded
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Org.BouncyCastle.Math.EC.F2mFieldElement.Gnb
  commentId: F:Org.BouncyCastle.Math.EC.F2mFieldElement.Gnb
  id: Gnb
  parent: Org.BouncyCastle.Math.EC.F2mFieldElement
  langs:
  - csharp
  - vb
  name: Gnb
  nameWithType: F2mFieldElement.Gnb
  fullName: Org.BouncyCastle.Math.EC.F2mFieldElement.Gnb
  type: Field
  source:
    id: Gnb
    path: ''
    startLine: 58791
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Math.EC
  example: []
  syntax:
    content: public const int Gnb = 1
    return:
      type: System.Int32
    content.vb: Public Const Gnb As Integer = 1
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Org.BouncyCastle.Math.EC.F2mFieldElement.Tpb
  commentId: F:Org.BouncyCastle.Math.EC.F2mFieldElement.Tpb
  id: Tpb
  parent: Org.BouncyCastle.Math.EC.F2mFieldElement
  langs:
  - csharp
  - vb
  name: Tpb
  nameWithType: F2mFieldElement.Tpb
  fullName: Org.BouncyCastle.Math.EC.F2mFieldElement.Tpb
  type: Field
  source:
    id: Tpb
    path: ''
    startLine: 58797
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Math.EC
  example: []
  syntax:
    content: public const int Tpb = 2
    return:
      type: System.Int32
    content.vb: Public Const Tpb As Integer = 2
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Org.BouncyCastle.Math.EC.F2mFieldElement.Ppb
  commentId: F:Org.BouncyCastle.Math.EC.F2mFieldElement.Ppb
  id: Ppb
  parent: Org.BouncyCastle.Math.EC.F2mFieldElement
  langs:
  - csharp
  - vb
  name: Ppb
  nameWithType: F2mFieldElement.Ppb
  fullName: Org.BouncyCastle.Math.EC.F2mFieldElement.Ppb
  type: Field
  source:
    id: Ppb
    path: ''
    startLine: 58803
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Math.EC
  example: []
  syntax:
    content: public const int Ppb = 3
    return:
      type: System.Int32
    content.vb: Public Const Ppb As Integer = 3
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Org.BouncyCastle.Math.EC.F2mFieldElement.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,Org.BouncyCastle.Math.BigInteger)
  commentId: M:Org.BouncyCastle.Math.EC.F2mFieldElement.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,Org.BouncyCastle.Math.BigInteger)
  id: '#ctor(System.Int32,System.Int32,System.Int32,System.Int32,Org.BouncyCastle.Math.BigInteger)'
  parent: Org.BouncyCastle.Math.EC.F2mFieldElement
  langs:
  - csharp
  - vb
  name: F2mFieldElement(Int32, Int32, Int32, Int32, BigInteger)
  nameWithType: F2mFieldElement.F2mFieldElement(Int32, Int32, Int32, Int32, BigInteger)
  fullName: Org.BouncyCastle.Math.EC.F2mFieldElement.F2mFieldElement(System.Int32, System.Int32, System.Int32, System.Int32, Org.BouncyCastle.Math.BigInteger)
  type: Constructor
  source:
    id: .ctor
    path: ''
    startLine: 58837
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Math.EC
  example: []
  syntax:
    content: public F2mFieldElement(int m, int k1, int k2, int k3, BigInteger x)
    parameters:
    - id: m
      type: System.Int32
    - id: k1
      type: System.Int32
    - id: k2
      type: System.Int32
    - id: k3
      type: System.Int32
    - id: x
      type: Org.BouncyCastle.Math.BigInteger
    content.vb: Public Sub New(m As Integer, k1 As Integer, k2 As Integer, k3 As Integer, x As BigInteger)
  overload: Org.BouncyCastle.Math.EC.F2mFieldElement.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Org.BouncyCastle.Math.EC.F2mFieldElement.#ctor(System.Int32,System.Int32,Org.BouncyCastle.Math.BigInteger)
  commentId: M:Org.BouncyCastle.Math.EC.F2mFieldElement.#ctor(System.Int32,System.Int32,Org.BouncyCastle.Math.BigInteger)
  id: '#ctor(System.Int32,System.Int32,Org.BouncyCastle.Math.BigInteger)'
  parent: Org.BouncyCastle.Math.EC.F2mFieldElement
  langs:
  - csharp
  - vb
  name: F2mFieldElement(Int32, Int32, BigInteger)
  nameWithType: F2mFieldElement.F2mFieldElement(Int32, Int32, BigInteger)
  fullName: Org.BouncyCastle.Math.EC.F2mFieldElement.F2mFieldElement(System.Int32, System.Int32, Org.BouncyCastle.Math.BigInteger)
  type: Constructor
  source:
    id: .ctor
    path: ''
    startLine: 58876
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Math.EC
  example: []
  syntax:
    content: public F2mFieldElement(int m, int k, BigInteger x)
    parameters:
    - id: m
      type: System.Int32
    - id: k
      type: System.Int32
    - id: x
      type: Org.BouncyCastle.Math.BigInteger
    content.vb: Public Sub New(m As Integer, k As Integer, x As BigInteger)
  overload: Org.BouncyCastle.Math.EC.F2mFieldElement.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Org.BouncyCastle.Math.EC.F2mFieldElement.BitLength
  commentId: P:Org.BouncyCastle.Math.EC.F2mFieldElement.BitLength
  id: BitLength
  parent: Org.BouncyCastle.Math.EC.F2mFieldElement
  langs:
  - csharp
  - vb
  name: BitLength
  nameWithType: F2mFieldElement.BitLength
  fullName: Org.BouncyCastle.Math.EC.F2mFieldElement.BitLength
  type: Property
  source:
    id: BitLength
    path: ''
    startLine: 58893
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Math.EC
  syntax:
    content: public override int BitLength { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Overrides ReadOnly Property BitLength As Integer
  overridden: Org.BouncyCastle.Math.EC.ECFieldElement.BitLength
  overload: Org.BouncyCastle.Math.EC.F2mFieldElement.BitLength*
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: Org.BouncyCastle.Math.EC.F2mFieldElement.IsOne
  commentId: P:Org.BouncyCastle.Math.EC.F2mFieldElement.IsOne
  id: IsOne
  parent: Org.BouncyCastle.Math.EC.F2mFieldElement
  langs:
  - csharp
  - vb
  name: IsOne
  nameWithType: F2mFieldElement.IsOne
  fullName: Org.BouncyCastle.Math.EC.F2mFieldElement.IsOne
  type: Property
  source:
    id: IsOne
    path: ''
    startLine: 58898
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Math.EC
  syntax:
    content: public override bool IsOne { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Overrides ReadOnly Property IsOne As Boolean
  overridden: Org.BouncyCastle.Math.EC.ECFieldElement.IsOne
  overload: Org.BouncyCastle.Math.EC.F2mFieldElement.IsOne*
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: Org.BouncyCastle.Math.EC.F2mFieldElement.IsZero
  commentId: P:Org.BouncyCastle.Math.EC.F2mFieldElement.IsZero
  id: IsZero
  parent: Org.BouncyCastle.Math.EC.F2mFieldElement
  langs:
  - csharp
  - vb
  name: IsZero
  nameWithType: F2mFieldElement.IsZero
  fullName: Org.BouncyCastle.Math.EC.F2mFieldElement.IsZero
  type: Property
  source:
    id: IsZero
    path: ''
    startLine: 58903
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Math.EC
  syntax:
    content: public override bool IsZero { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Overrides ReadOnly Property IsZero As Boolean
  overridden: Org.BouncyCastle.Math.EC.ECFieldElement.IsZero
  overload: Org.BouncyCastle.Math.EC.F2mFieldElement.IsZero*
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: Org.BouncyCastle.Math.EC.F2mFieldElement.TestBitZero
  commentId: M:Org.BouncyCastle.Math.EC.F2mFieldElement.TestBitZero
  id: TestBitZero
  parent: Org.BouncyCastle.Math.EC.F2mFieldElement
  langs:
  - csharp
  - vb
  name: TestBitZero()
  nameWithType: F2mFieldElement.TestBitZero()
  fullName: Org.BouncyCastle.Math.EC.F2mFieldElement.TestBitZero()
  type: Method
  source:
    id: TestBitZero
    path: ''
    startLine: 58908
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Math.EC
  syntax:
    content: public override bool TestBitZero()
    return:
      type: System.Boolean
    content.vb: Public Overrides Function TestBitZero As Boolean
  overridden: Org.BouncyCastle.Math.EC.ECFieldElement.TestBitZero
  overload: Org.BouncyCastle.Math.EC.F2mFieldElement.TestBitZero*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Org.BouncyCastle.Math.EC.F2mFieldElement.ToBigInteger
  commentId: M:Org.BouncyCastle.Math.EC.F2mFieldElement.ToBigInteger
  id: ToBigInteger
  parent: Org.BouncyCastle.Math.EC.F2mFieldElement
  langs:
  - csharp
  - vb
  name: ToBigInteger()
  nameWithType: F2mFieldElement.ToBigInteger()
  fullName: Org.BouncyCastle.Math.EC.F2mFieldElement.ToBigInteger()
  type: Method
  source:
    id: ToBigInteger
    path: ''
    startLine: 58913
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Math.EC
  syntax:
    content: public override BigInteger ToBigInteger()
    return:
      type: Org.BouncyCastle.Math.BigInteger
    content.vb: Public Overrides Function ToBigInteger As BigInteger
  overridden: Org.BouncyCastle.Math.EC.ECFieldElement.ToBigInteger
  overload: Org.BouncyCastle.Math.EC.F2mFieldElement.ToBigInteger*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Org.BouncyCastle.Math.EC.F2mFieldElement.FieldName
  commentId: P:Org.BouncyCastle.Math.EC.F2mFieldElement.FieldName
  id: FieldName
  parent: Org.BouncyCastle.Math.EC.F2mFieldElement
  langs:
  - csharp
  - vb
  name: FieldName
  nameWithType: F2mFieldElement.FieldName
  fullName: Org.BouncyCastle.Math.EC.F2mFieldElement.FieldName
  type: Property
  source:
    id: FieldName
    path: ''
    startLine: 58918
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Math.EC
  syntax:
    content: public override string FieldName { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Overrides ReadOnly Property FieldName As String
  overridden: Org.BouncyCastle.Math.EC.ECFieldElement.FieldName
  overload: Org.BouncyCastle.Math.EC.F2mFieldElement.FieldName*
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: Org.BouncyCastle.Math.EC.F2mFieldElement.FieldSize
  commentId: P:Org.BouncyCastle.Math.EC.F2mFieldElement.FieldSize
  id: FieldSize
  parent: Org.BouncyCastle.Math.EC.F2mFieldElement
  langs:
  - csharp
  - vb
  name: FieldSize
  nameWithType: F2mFieldElement.FieldSize
  fullName: Org.BouncyCastle.Math.EC.F2mFieldElement.FieldSize
  type: Property
  source:
    id: FieldSize
    path: ''
    startLine: 58923
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Math.EC
  syntax:
    content: public override int FieldSize { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Overrides ReadOnly Property FieldSize As Integer
  overridden: Org.BouncyCastle.Math.EC.ECFieldElement.FieldSize
  overload: Org.BouncyCastle.Math.EC.F2mFieldElement.FieldSize*
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: Org.BouncyCastle.Math.EC.F2mFieldElement.CheckFieldElements(Org.BouncyCastle.Math.EC.ECFieldElement,Org.BouncyCastle.Math.EC.ECFieldElement)
  commentId: M:Org.BouncyCastle.Math.EC.F2mFieldElement.CheckFieldElements(Org.BouncyCastle.Math.EC.ECFieldElement,Org.BouncyCastle.Math.EC.ECFieldElement)
  id: CheckFieldElements(Org.BouncyCastle.Math.EC.ECFieldElement,Org.BouncyCastle.Math.EC.ECFieldElement)
  parent: Org.BouncyCastle.Math.EC.F2mFieldElement
  langs:
  - csharp
  - vb
  name: CheckFieldElements(ECFieldElement, ECFieldElement)
  nameWithType: F2mFieldElement.CheckFieldElements(ECFieldElement, ECFieldElement)
  fullName: Org.BouncyCastle.Math.EC.F2mFieldElement.CheckFieldElements(Org.BouncyCastle.Math.EC.ECFieldElement, Org.BouncyCastle.Math.EC.ECFieldElement)
  type: Method
  source:
    id: CheckFieldElements
    path: ''
    startLine: 58939
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Math.EC
  example: []
  syntax:
    content: public static void CheckFieldElements(ECFieldElement a, ECFieldElement b)
    parameters:
    - id: a
      type: Org.BouncyCastle.Math.EC.ECFieldElement
    - id: b
      type: Org.BouncyCastle.Math.EC.ECFieldElement
    content.vb: Public Shared Sub CheckFieldElements(a As ECFieldElement, b As ECFieldElement)
  overload: Org.BouncyCastle.Math.EC.F2mFieldElement.CheckFieldElements*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Org.BouncyCastle.Math.EC.F2mFieldElement.Add(Org.BouncyCastle.Math.EC.ECFieldElement)
  commentId: M:Org.BouncyCastle.Math.EC.F2mFieldElement.Add(Org.BouncyCastle.Math.EC.ECFieldElement)
  id: Add(Org.BouncyCastle.Math.EC.ECFieldElement)
  parent: Org.BouncyCastle.Math.EC.F2mFieldElement
  langs:
  - csharp
  - vb
  name: Add(ECFieldElement)
  nameWithType: F2mFieldElement.Add(ECFieldElement)
  fullName: Org.BouncyCastle.Math.EC.F2mFieldElement.Add(Org.BouncyCastle.Math.EC.ECFieldElement)
  type: Method
  source:
    id: Add
    path: ''
    startLine: 58964
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Math.EC
  syntax:
    content: public override ECFieldElement Add(ECFieldElement b)
    parameters:
    - id: b
      type: Org.BouncyCastle.Math.EC.ECFieldElement
    return:
      type: Org.BouncyCastle.Math.EC.ECFieldElement
    content.vb: Public Overrides Function Add(b As ECFieldElement) As ECFieldElement
  overridden: Org.BouncyCastle.Math.EC.ECFieldElement.Add(Org.BouncyCastle.Math.EC.ECFieldElement)
  overload: Org.BouncyCastle.Math.EC.F2mFieldElement.Add*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Org.BouncyCastle.Math.EC.F2mFieldElement.AddOne
  commentId: M:Org.BouncyCastle.Math.EC.F2mFieldElement.AddOne
  id: AddOne
  parent: Org.BouncyCastle.Math.EC.F2mFieldElement
  langs:
  - csharp
  - vb
  name: AddOne()
  nameWithType: F2mFieldElement.AddOne()
  fullName: Org.BouncyCastle.Math.EC.F2mFieldElement.AddOne()
  type: Method
  source:
    id: AddOne
    path: ''
    startLine: 58976
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Math.EC
  syntax:
    content: public override ECFieldElement AddOne()
    return:
      type: Org.BouncyCastle.Math.EC.ECFieldElement
    content.vb: Public Overrides Function AddOne As ECFieldElement
  overridden: Org.BouncyCastle.Math.EC.ECFieldElement.AddOne
  overload: Org.BouncyCastle.Math.EC.F2mFieldElement.AddOne*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Org.BouncyCastle.Math.EC.F2mFieldElement.Subtract(Org.BouncyCastle.Math.EC.ECFieldElement)
  commentId: M:Org.BouncyCastle.Math.EC.F2mFieldElement.Subtract(Org.BouncyCastle.Math.EC.ECFieldElement)
  id: Subtract(Org.BouncyCastle.Math.EC.ECFieldElement)
  parent: Org.BouncyCastle.Math.EC.F2mFieldElement
  langs:
  - csharp
  - vb
  name: Subtract(ECFieldElement)
  nameWithType: F2mFieldElement.Subtract(ECFieldElement)
  fullName: Org.BouncyCastle.Math.EC.F2mFieldElement.Subtract(Org.BouncyCastle.Math.EC.ECFieldElement)
  type: Method
  source:
    id: Subtract
    path: ''
    startLine: 58981
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Math.EC
  syntax:
    content: public override ECFieldElement Subtract(ECFieldElement b)
    parameters:
    - id: b
      type: Org.BouncyCastle.Math.EC.ECFieldElement
    return:
      type: Org.BouncyCastle.Math.EC.ECFieldElement
    content.vb: Public Overrides Function Subtract(b As ECFieldElement) As ECFieldElement
  overridden: Org.BouncyCastle.Math.EC.ECFieldElement.Subtract(Org.BouncyCastle.Math.EC.ECFieldElement)
  overload: Org.BouncyCastle.Math.EC.F2mFieldElement.Subtract*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Org.BouncyCastle.Math.EC.F2mFieldElement.Multiply(Org.BouncyCastle.Math.EC.ECFieldElement)
  commentId: M:Org.BouncyCastle.Math.EC.F2mFieldElement.Multiply(Org.BouncyCastle.Math.EC.ECFieldElement)
  id: Multiply(Org.BouncyCastle.Math.EC.ECFieldElement)
  parent: Org.BouncyCastle.Math.EC.F2mFieldElement
  langs:
  - csharp
  - vb
  name: Multiply(ECFieldElement)
  nameWithType: F2mFieldElement.Multiply(ECFieldElement)
  fullName: Org.BouncyCastle.Math.EC.F2mFieldElement.Multiply(Org.BouncyCastle.Math.EC.ECFieldElement)
  type: Method
  source:
    id: Multiply
    path: ''
    startLine: 58988
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Math.EC
  syntax:
    content: public override ECFieldElement Multiply(ECFieldElement b)
    parameters:
    - id: b
      type: Org.BouncyCastle.Math.EC.ECFieldElement
    return:
      type: Org.BouncyCastle.Math.EC.ECFieldElement
    content.vb: Public Overrides Function Multiply(b As ECFieldElement) As ECFieldElement
  overridden: Org.BouncyCastle.Math.EC.ECFieldElement.Multiply(Org.BouncyCastle.Math.EC.ECFieldElement)
  overload: Org.BouncyCastle.Math.EC.F2mFieldElement.Multiply*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Org.BouncyCastle.Math.EC.F2mFieldElement.MultiplyMinusProduct(Org.BouncyCastle.Math.EC.ECFieldElement,Org.BouncyCastle.Math.EC.ECFieldElement,Org.BouncyCastle.Math.EC.ECFieldElement)
  commentId: M:Org.BouncyCastle.Math.EC.F2mFieldElement.MultiplyMinusProduct(Org.BouncyCastle.Math.EC.ECFieldElement,Org.BouncyCastle.Math.EC.ECFieldElement,Org.BouncyCastle.Math.EC.ECFieldElement)
  id: MultiplyMinusProduct(Org.BouncyCastle.Math.EC.ECFieldElement,Org.BouncyCastle.Math.EC.ECFieldElement,Org.BouncyCastle.Math.EC.ECFieldElement)
  parent: Org.BouncyCastle.Math.EC.F2mFieldElement
  langs:
  - csharp
  - vb
  name: MultiplyMinusProduct(ECFieldElement, ECFieldElement, ECFieldElement)
  nameWithType: F2mFieldElement.MultiplyMinusProduct(ECFieldElement, ECFieldElement, ECFieldElement)
  fullName: Org.BouncyCastle.Math.EC.F2mFieldElement.MultiplyMinusProduct(Org.BouncyCastle.Math.EC.ECFieldElement, Org.BouncyCastle.Math.EC.ECFieldElement, Org.BouncyCastle.Math.EC.ECFieldElement)
  type: Method
  source:
    id: MultiplyMinusProduct
    path: ''
    startLine: 59001
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Math.EC
  syntax:
    content: public override ECFieldElement MultiplyMinusProduct(ECFieldElement b, ECFieldElement x, ECFieldElement y)
    parameters:
    - id: b
      type: Org.BouncyCastle.Math.EC.ECFieldElement
    - id: x
      type: Org.BouncyCastle.Math.EC.ECFieldElement
    - id: y
      type: Org.BouncyCastle.Math.EC.ECFieldElement
    return:
      type: Org.BouncyCastle.Math.EC.ECFieldElement
    content.vb: Public Overrides Function MultiplyMinusProduct(b As ECFieldElement, x As ECFieldElement, y As ECFieldElement) As ECFieldElement
  overridden: Org.BouncyCastle.Math.EC.ECFieldElement.MultiplyMinusProduct(Org.BouncyCastle.Math.EC.ECFieldElement,Org.BouncyCastle.Math.EC.ECFieldElement,Org.BouncyCastle.Math.EC.ECFieldElement)
  overload: Org.BouncyCastle.Math.EC.F2mFieldElement.MultiplyMinusProduct*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Org.BouncyCastle.Math.EC.F2mFieldElement.MultiplyPlusProduct(Org.BouncyCastle.Math.EC.ECFieldElement,Org.BouncyCastle.Math.EC.ECFieldElement,Org.BouncyCastle.Math.EC.ECFieldElement)
  commentId: M:Org.BouncyCastle.Math.EC.F2mFieldElement.MultiplyPlusProduct(Org.BouncyCastle.Math.EC.ECFieldElement,Org.BouncyCastle.Math.EC.ECFieldElement,Org.BouncyCastle.Math.EC.ECFieldElement)
  id: MultiplyPlusProduct(Org.BouncyCastle.Math.EC.ECFieldElement,Org.BouncyCastle.Math.EC.ECFieldElement,Org.BouncyCastle.Math.EC.ECFieldElement)
  parent: Org.BouncyCastle.Math.EC.F2mFieldElement
  langs:
  - csharp
  - vb
  name: MultiplyPlusProduct(ECFieldElement, ECFieldElement, ECFieldElement)
  nameWithType: F2mFieldElement.MultiplyPlusProduct(ECFieldElement, ECFieldElement, ECFieldElement)
  fullName: Org.BouncyCastle.Math.EC.F2mFieldElement.MultiplyPlusProduct(Org.BouncyCastle.Math.EC.ECFieldElement, Org.BouncyCastle.Math.EC.ECFieldElement, Org.BouncyCastle.Math.EC.ECFieldElement)
  type: Method
  source:
    id: MultiplyPlusProduct
    path: ''
    startLine: 59006
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Math.EC
  syntax:
    content: public override ECFieldElement MultiplyPlusProduct(ECFieldElement b, ECFieldElement x, ECFieldElement y)
    parameters:
    - id: b
      type: Org.BouncyCastle.Math.EC.ECFieldElement
    - id: x
      type: Org.BouncyCastle.Math.EC.ECFieldElement
    - id: y
      type: Org.BouncyCastle.Math.EC.ECFieldElement
    return:
      type: Org.BouncyCastle.Math.EC.ECFieldElement
    content.vb: Public Overrides Function MultiplyPlusProduct(b As ECFieldElement, x As ECFieldElement, y As ECFieldElement) As ECFieldElement
  overridden: Org.BouncyCastle.Math.EC.ECFieldElement.MultiplyPlusProduct(Org.BouncyCastle.Math.EC.ECFieldElement,Org.BouncyCastle.Math.EC.ECFieldElement,Org.BouncyCastle.Math.EC.ECFieldElement)
  overload: Org.BouncyCastle.Math.EC.F2mFieldElement.MultiplyPlusProduct*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Org.BouncyCastle.Math.EC.F2mFieldElement.Divide(Org.BouncyCastle.Math.EC.ECFieldElement)
  commentId: M:Org.BouncyCastle.Math.EC.F2mFieldElement.Divide(Org.BouncyCastle.Math.EC.ECFieldElement)
  id: Divide(Org.BouncyCastle.Math.EC.ECFieldElement)
  parent: Org.BouncyCastle.Math.EC.F2mFieldElement
  langs:
  - csharp
  - vb
  name: Divide(ECFieldElement)
  nameWithType: F2mFieldElement.Divide(ECFieldElement)
  fullName: Org.BouncyCastle.Math.EC.F2mFieldElement.Divide(Org.BouncyCastle.Math.EC.ECFieldElement)
  type: Method
  source:
    id: Divide
    path: ''
    startLine: 59024
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Math.EC
  syntax:
    content: public override ECFieldElement Divide(ECFieldElement b)
    parameters:
    - id: b
      type: Org.BouncyCastle.Math.EC.ECFieldElement
    return:
      type: Org.BouncyCastle.Math.EC.ECFieldElement
    content.vb: Public Overrides Function Divide(b As ECFieldElement) As ECFieldElement
  overridden: Org.BouncyCastle.Math.EC.ECFieldElement.Divide(Org.BouncyCastle.Math.EC.ECFieldElement)
  overload: Org.BouncyCastle.Math.EC.F2mFieldElement.Divide*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Org.BouncyCastle.Math.EC.F2mFieldElement.Negate
  commentId: M:Org.BouncyCastle.Math.EC.F2mFieldElement.Negate
  id: Negate
  parent: Org.BouncyCastle.Math.EC.F2mFieldElement
  langs:
  - csharp
  - vb
  name: Negate()
  nameWithType: F2mFieldElement.Negate()
  fullName: Org.BouncyCastle.Math.EC.F2mFieldElement.Negate()
  type: Method
  source:
    id: Negate
    path: ''
    startLine: 59032
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Math.EC
  syntax:
    content: public override ECFieldElement Negate()
    return:
      type: Org.BouncyCastle.Math.EC.ECFieldElement
    content.vb: Public Overrides Function Negate As ECFieldElement
  overridden: Org.BouncyCastle.Math.EC.ECFieldElement.Negate
  overload: Org.BouncyCastle.Math.EC.F2mFieldElement.Negate*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Org.BouncyCastle.Math.EC.F2mFieldElement.Square
  commentId: M:Org.BouncyCastle.Math.EC.F2mFieldElement.Square
  id: Square
  parent: Org.BouncyCastle.Math.EC.F2mFieldElement
  langs:
  - csharp
  - vb
  name: Square()
  nameWithType: F2mFieldElement.Square()
  fullName: Org.BouncyCastle.Math.EC.F2mFieldElement.Square()
  type: Method
  source:
    id: Square
    path: ''
    startLine: 59038
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Math.EC
  syntax:
    content: public override ECFieldElement Square()
    return:
      type: Org.BouncyCastle.Math.EC.ECFieldElement
    content.vb: Public Overrides Function Square As ECFieldElement
  overridden: Org.BouncyCastle.Math.EC.ECFieldElement.Square
  overload: Org.BouncyCastle.Math.EC.F2mFieldElement.Square*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Org.BouncyCastle.Math.EC.F2mFieldElement.SquareMinusProduct(Org.BouncyCastle.Math.EC.ECFieldElement,Org.BouncyCastle.Math.EC.ECFieldElement)
  commentId: M:Org.BouncyCastle.Math.EC.F2mFieldElement.SquareMinusProduct(Org.BouncyCastle.Math.EC.ECFieldElement,Org.BouncyCastle.Math.EC.ECFieldElement)
  id: SquareMinusProduct(Org.BouncyCastle.Math.EC.ECFieldElement,Org.BouncyCastle.Math.EC.ECFieldElement)
  parent: Org.BouncyCastle.Math.EC.F2mFieldElement
  langs:
  - csharp
  - vb
  name: SquareMinusProduct(ECFieldElement, ECFieldElement)
  nameWithType: F2mFieldElement.SquareMinusProduct(ECFieldElement, ECFieldElement)
  fullName: Org.BouncyCastle.Math.EC.F2mFieldElement.SquareMinusProduct(Org.BouncyCastle.Math.EC.ECFieldElement, Org.BouncyCastle.Math.EC.ECFieldElement)
  type: Method
  source:
    id: SquareMinusProduct
    path: ''
    startLine: 59043
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Math.EC
  syntax:
    content: public override ECFieldElement SquareMinusProduct(ECFieldElement x, ECFieldElement y)
    parameters:
    - id: x
      type: Org.BouncyCastle.Math.EC.ECFieldElement
    - id: y
      type: Org.BouncyCastle.Math.EC.ECFieldElement
    return:
      type: Org.BouncyCastle.Math.EC.ECFieldElement
    content.vb: Public Overrides Function SquareMinusProduct(x As ECFieldElement, y As ECFieldElement) As ECFieldElement
  overridden: Org.BouncyCastle.Math.EC.ECFieldElement.SquareMinusProduct(Org.BouncyCastle.Math.EC.ECFieldElement,Org.BouncyCastle.Math.EC.ECFieldElement)
  overload: Org.BouncyCastle.Math.EC.F2mFieldElement.SquareMinusProduct*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Org.BouncyCastle.Math.EC.F2mFieldElement.SquarePlusProduct(Org.BouncyCastle.Math.EC.ECFieldElement,Org.BouncyCastle.Math.EC.ECFieldElement)
  commentId: M:Org.BouncyCastle.Math.EC.F2mFieldElement.SquarePlusProduct(Org.BouncyCastle.Math.EC.ECFieldElement,Org.BouncyCastle.Math.EC.ECFieldElement)
  id: SquarePlusProduct(Org.BouncyCastle.Math.EC.ECFieldElement,Org.BouncyCastle.Math.EC.ECFieldElement)
  parent: Org.BouncyCastle.Math.EC.F2mFieldElement
  langs:
  - csharp
  - vb
  name: SquarePlusProduct(ECFieldElement, ECFieldElement)
  nameWithType: F2mFieldElement.SquarePlusProduct(ECFieldElement, ECFieldElement)
  fullName: Org.BouncyCastle.Math.EC.F2mFieldElement.SquarePlusProduct(Org.BouncyCastle.Math.EC.ECFieldElement, Org.BouncyCastle.Math.EC.ECFieldElement)
  type: Method
  source:
    id: SquarePlusProduct
    path: ''
    startLine: 59048
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Math.EC
  syntax:
    content: public override ECFieldElement SquarePlusProduct(ECFieldElement x, ECFieldElement y)
    parameters:
    - id: x
      type: Org.BouncyCastle.Math.EC.ECFieldElement
    - id: y
      type: Org.BouncyCastle.Math.EC.ECFieldElement
    return:
      type: Org.BouncyCastle.Math.EC.ECFieldElement
    content.vb: Public Overrides Function SquarePlusProduct(x As ECFieldElement, y As ECFieldElement) As ECFieldElement
  overridden: Org.BouncyCastle.Math.EC.ECFieldElement.SquarePlusProduct(Org.BouncyCastle.Math.EC.ECFieldElement,Org.BouncyCastle.Math.EC.ECFieldElement)
  overload: Org.BouncyCastle.Math.EC.F2mFieldElement.SquarePlusProduct*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Org.BouncyCastle.Math.EC.F2mFieldElement.SquarePow(System.Int32)
  commentId: M:Org.BouncyCastle.Math.EC.F2mFieldElement.SquarePow(System.Int32)
  id: SquarePow(System.Int32)
  parent: Org.BouncyCastle.Math.EC.F2mFieldElement
  langs:
  - csharp
  - vb
  name: SquarePow(Int32)
  nameWithType: F2mFieldElement.SquarePow(Int32)
  fullName: Org.BouncyCastle.Math.EC.F2mFieldElement.SquarePow(System.Int32)
  type: Method
  source:
    id: SquarePow
    path: ''
    startLine: 59066
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Math.EC
  syntax:
    content: public override ECFieldElement SquarePow(int pow)
    parameters:
    - id: pow
      type: System.Int32
    return:
      type: Org.BouncyCastle.Math.EC.ECFieldElement
    content.vb: Public Overrides Function SquarePow(pow As Integer) As ECFieldElement
  overridden: Org.BouncyCastle.Math.EC.ECFieldElement.SquarePow(System.Int32)
  overload: Org.BouncyCastle.Math.EC.F2mFieldElement.SquarePow*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Org.BouncyCastle.Math.EC.F2mFieldElement.Invert
  commentId: M:Org.BouncyCastle.Math.EC.F2mFieldElement.Invert
  id: Invert
  parent: Org.BouncyCastle.Math.EC.F2mFieldElement
  langs:
  - csharp
  - vb
  name: Invert()
  nameWithType: F2mFieldElement.Invert()
  fullName: Org.BouncyCastle.Math.EC.F2mFieldElement.Invert()
  type: Method
  source:
    id: Invert
    path: ''
    startLine: 59071
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Math.EC
  syntax:
    content: public override ECFieldElement Invert()
    return:
      type: Org.BouncyCastle.Math.EC.ECFieldElement
    content.vb: Public Overrides Function Invert As ECFieldElement
  overridden: Org.BouncyCastle.Math.EC.ECFieldElement.Invert
  overload: Org.BouncyCastle.Math.EC.F2mFieldElement.Invert*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Org.BouncyCastle.Math.EC.F2mFieldElement.Sqrt
  commentId: M:Org.BouncyCastle.Math.EC.F2mFieldElement.Sqrt
  id: Sqrt
  parent: Org.BouncyCastle.Math.EC.F2mFieldElement
  langs:
  - csharp
  - vb
  name: Sqrt()
  nameWithType: F2mFieldElement.Sqrt()
  fullName: Org.BouncyCastle.Math.EC.F2mFieldElement.Sqrt()
  type: Method
  source:
    id: Sqrt
    path: ''
    startLine: 59076
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Math.EC
  syntax:
    content: public override ECFieldElement Sqrt()
    return:
      type: Org.BouncyCastle.Math.EC.ECFieldElement
    content.vb: Public Overrides Function Sqrt As ECFieldElement
  overridden: Org.BouncyCastle.Math.EC.ECFieldElement.Sqrt
  overload: Org.BouncyCastle.Math.EC.F2mFieldElement.Sqrt*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Org.BouncyCastle.Math.EC.F2mFieldElement.Representation
  commentId: P:Org.BouncyCastle.Math.EC.F2mFieldElement.Representation
  id: Representation
  parent: Org.BouncyCastle.Math.EC.F2mFieldElement
  langs:
  - csharp
  - vb
  name: Representation
  nameWithType: F2mFieldElement.Representation
  fullName: Org.BouncyCastle.Math.EC.F2mFieldElement.Representation
  type: Property
  source:
    id: Representation
    path: ''
    startLine: 59089
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Math.EC
  example: []
  syntax:
    content: public int Representation { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property Representation As Integer
  overload: Org.BouncyCastle.Math.EC.F2mFieldElement.Representation*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Org.BouncyCastle.Math.EC.F2mFieldElement.M
  commentId: P:Org.BouncyCastle.Math.EC.F2mFieldElement.M
  id: M
  parent: Org.BouncyCastle.Math.EC.F2mFieldElement
  langs:
  - csharp
  - vb
  name: M
  nameWithType: F2mFieldElement.M
  fullName: Org.BouncyCastle.Math.EC.F2mFieldElement.M
  type: Property
  source:
    id: M
    path: ''
    startLine: 59098
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Math.EC
  example: []
  syntax:
    content: public int M { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property M As Integer
  overload: Org.BouncyCastle.Math.EC.F2mFieldElement.M*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Org.BouncyCastle.Math.EC.F2mFieldElement.K1
  commentId: P:Org.BouncyCastle.Math.EC.F2mFieldElement.K1
  id: K1
  parent: Org.BouncyCastle.Math.EC.F2mFieldElement
  langs:
  - csharp
  - vb
  name: K1
  nameWithType: F2mFieldElement.K1
  fullName: Org.BouncyCastle.Math.EC.F2mFieldElement.K1
  type: Property
  source:
    id: K1
    path: ''
    startLine: 59111
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Math.EC
  example: []
  syntax:
    content: public int K1 { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property K1 As Integer
  overload: Org.BouncyCastle.Math.EC.F2mFieldElement.K1*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Org.BouncyCastle.Math.EC.F2mFieldElement.K2
  commentId: P:Org.BouncyCastle.Math.EC.F2mFieldElement.K2
  id: K2
  parent: Org.BouncyCastle.Math.EC.F2mFieldElement
  langs:
  - csharp
  - vb
  name: K2
  nameWithType: F2mFieldElement.K2
  fullName: Org.BouncyCastle.Math.EC.F2mFieldElement.K2
  type: Property
  source:
    id: K2
    path: ''
    startLine: 59122
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Math.EC
  example: []
  syntax:
    content: public int K2 { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property K2 As Integer
  overload: Org.BouncyCastle.Math.EC.F2mFieldElement.K2*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Org.BouncyCastle.Math.EC.F2mFieldElement.K3
  commentId: P:Org.BouncyCastle.Math.EC.F2mFieldElement.K3
  id: K3
  parent: Org.BouncyCastle.Math.EC.F2mFieldElement
  langs:
  - csharp
  - vb
  name: K3
  nameWithType: F2mFieldElement.K3
  fullName: Org.BouncyCastle.Math.EC.F2mFieldElement.K3
  type: Property
  source:
    id: K3
    path: ''
    startLine: 59133
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Math.EC
  example: []
  syntax:
    content: public int K3 { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property K3 As Integer
  overload: Org.BouncyCastle.Math.EC.F2mFieldElement.K3*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Org.BouncyCastle.Math.EC.F2mFieldElement.Equals(System.Object)
  commentId: M:Org.BouncyCastle.Math.EC.F2mFieldElement.Equals(System.Object)
  id: Equals(System.Object)
  parent: Org.BouncyCastle.Math.EC.F2mFieldElement
  langs:
  - csharp
  - vb
  name: Equals(Object)
  nameWithType: F2mFieldElement.Equals(Object)
  fullName: Org.BouncyCastle.Math.EC.F2mFieldElement.Equals(System.Object)
  type: Method
  source:
    id: Equals
    path: ''
    startLine: 59138
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Math.EC
  syntax:
    content: public override bool Equals(object obj)
    parameters:
    - id: obj
      type: System.Object
    return:
      type: System.Boolean
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
  overridden: Org.BouncyCastle.Math.EC.ECFieldElement.Equals(System.Object)
  overload: Org.BouncyCastle.Math.EC.F2mFieldElement.Equals*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Org.BouncyCastle.Math.EC.F2mFieldElement.Equals(Org.BouncyCastle.Math.EC.F2mFieldElement)
  commentId: M:Org.BouncyCastle.Math.EC.F2mFieldElement.Equals(Org.BouncyCastle.Math.EC.F2mFieldElement)
  id: Equals(Org.BouncyCastle.Math.EC.F2mFieldElement)
  parent: Org.BouncyCastle.Math.EC.F2mFieldElement
  langs:
  - csharp
  - vb
  name: Equals(F2mFieldElement)
  nameWithType: F2mFieldElement.Equals(F2mFieldElement)
  fullName: Org.BouncyCastle.Math.EC.F2mFieldElement.Equals(Org.BouncyCastle.Math.EC.F2mFieldElement)
  type: Method
  source:
    id: Equals
    path: ''
    startLine: 59152
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Math.EC
  syntax:
    content: public virtual bool Equals(F2mFieldElement other)
    parameters:
    - id: other
      type: Org.BouncyCastle.Math.EC.F2mFieldElement
    return:
      type: System.Boolean
    content.vb: Public Overridable Function Equals(other As F2mFieldElement) As Boolean
  overload: Org.BouncyCastle.Math.EC.F2mFieldElement.Equals*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Org.BouncyCastle.Math.EC.F2mFieldElement.GetHashCode
  commentId: M:Org.BouncyCastle.Math.EC.F2mFieldElement.GetHashCode
  id: GetHashCode
  parent: Org.BouncyCastle.Math.EC.F2mFieldElement
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: F2mFieldElement.GetHashCode()
  fullName: Org.BouncyCastle.Math.EC.F2mFieldElement.GetHashCode()
  type: Method
  source:
    id: GetHashCode
    path: ''
    startLine: 59161
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Math.EC
  syntax:
    content: public override int GetHashCode()
    return:
      type: System.Int32
    content.vb: Public Overrides Function GetHashCode As Integer
  overridden: Org.BouncyCastle.Math.EC.ECFieldElement.GetHashCode
  overload: Org.BouncyCastle.Math.EC.F2mFieldElement.GetHashCode*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: Org.BouncyCastle.Math.EC
  commentId: N:Org.BouncyCastle.Math.EC
  name: Org.BouncyCastle.Math.EC
  nameWithType: Org.BouncyCastle.Math.EC
  fullName: Org.BouncyCastle.Math.EC
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Org.BouncyCastle.Math.EC.ECFieldElement
  commentId: T:Org.BouncyCastle.Math.EC.ECFieldElement
  parent: Org.BouncyCastle.Math.EC
  name: ECFieldElement
  nameWithType: ECFieldElement
  fullName: Org.BouncyCastle.Math.EC.ECFieldElement
- uid: Org.BouncyCastle.Math.EC.ECFieldElement.Equals(Org.BouncyCastle.Math.EC.ECFieldElement)
  commentId: M:Org.BouncyCastle.Math.EC.ECFieldElement.Equals(Org.BouncyCastle.Math.EC.ECFieldElement)
  parent: Org.BouncyCastle.Math.EC.ECFieldElement
  name: Equals(ECFieldElement)
  nameWithType: ECFieldElement.Equals(ECFieldElement)
  fullName: Org.BouncyCastle.Math.EC.ECFieldElement.Equals(Org.BouncyCastle.Math.EC.ECFieldElement)
  spec.csharp:
  - uid: Org.BouncyCastle.Math.EC.ECFieldElement.Equals(Org.BouncyCastle.Math.EC.ECFieldElement)
    name: Equals
    nameWithType: ECFieldElement.Equals
    fullName: Org.BouncyCastle.Math.EC.ECFieldElement.Equals
  - name: (
    nameWithType: (
    fullName: (
  - uid: Org.BouncyCastle.Math.EC.ECFieldElement
    name: ECFieldElement
    nameWithType: ECFieldElement
    fullName: Org.BouncyCastle.Math.EC.ECFieldElement
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Org.BouncyCastle.Math.EC.ECFieldElement.Equals(Org.BouncyCastle.Math.EC.ECFieldElement)
    name: Equals
    nameWithType: ECFieldElement.Equals
    fullName: Org.BouncyCastle.Math.EC.ECFieldElement.Equals
  - name: (
    nameWithType: (
    fullName: (
  - uid: Org.BouncyCastle.Math.EC.ECFieldElement
    name: ECFieldElement
    nameWithType: ECFieldElement
    fullName: Org.BouncyCastle.Math.EC.ECFieldElement
  - name: )
    nameWithType: )
    fullName: )
- uid: Org.BouncyCastle.Math.EC.ECFieldElement.ToString
  commentId: M:Org.BouncyCastle.Math.EC.ECFieldElement.ToString
  parent: Org.BouncyCastle.Math.EC.ECFieldElement
  name: ToString()
  nameWithType: ECFieldElement.ToString()
  fullName: Org.BouncyCastle.Math.EC.ECFieldElement.ToString()
  spec.csharp:
  - uid: Org.BouncyCastle.Math.EC.ECFieldElement.ToString
    name: ToString
    nameWithType: ECFieldElement.ToString
    fullName: Org.BouncyCastle.Math.EC.ECFieldElement.ToString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Org.BouncyCastle.Math.EC.ECFieldElement.ToString
    name: ToString
    nameWithType: ECFieldElement.ToString
    fullName: Org.BouncyCastle.Math.EC.ECFieldElement.ToString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Org.BouncyCastle.Math.EC.ECFieldElement.GetEncoded
  commentId: M:Org.BouncyCastle.Math.EC.ECFieldElement.GetEncoded
  parent: Org.BouncyCastle.Math.EC.ECFieldElement
  name: GetEncoded()
  nameWithType: ECFieldElement.GetEncoded()
  fullName: Org.BouncyCastle.Math.EC.ECFieldElement.GetEncoded()
  spec.csharp:
  - uid: Org.BouncyCastle.Math.EC.ECFieldElement.GetEncoded
    name: GetEncoded
    nameWithType: ECFieldElement.GetEncoded
    fullName: Org.BouncyCastle.Math.EC.ECFieldElement.GetEncoded
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Org.BouncyCastle.Math.EC.ECFieldElement.GetEncoded
    name: GetEncoded
    nameWithType: ECFieldElement.GetEncoded
    fullName: Org.BouncyCastle.Math.EC.ECFieldElement.GetEncoded
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Org.BouncyCastle.Math.EC.F2mFieldElement.#ctor*
  commentId: Overload:Org.BouncyCastle.Math.EC.F2mFieldElement.#ctor
  name: F2mFieldElement
  nameWithType: F2mFieldElement.F2mFieldElement
  fullName: Org.BouncyCastle.Math.EC.F2mFieldElement.F2mFieldElement
- uid: Org.BouncyCastle.Math.BigInteger
  commentId: T:Org.BouncyCastle.Math.BigInteger
  parent: Org.BouncyCastle.Math
  name: BigInteger
  nameWithType: BigInteger
  fullName: Org.BouncyCastle.Math.BigInteger
- uid: Org.BouncyCastle.Math
  commentId: N:Org.BouncyCastle.Math
  name: Org.BouncyCastle.Math
  nameWithType: Org.BouncyCastle.Math
  fullName: Org.BouncyCastle.Math
- uid: Org.BouncyCastle.Math.EC.ECFieldElement.BitLength
  commentId: P:Org.BouncyCastle.Math.EC.ECFieldElement.BitLength
  parent: Org.BouncyCastle.Math.EC.ECFieldElement
  name: BitLength
  nameWithType: ECFieldElement.BitLength
  fullName: Org.BouncyCastle.Math.EC.ECFieldElement.BitLength
- uid: Org.BouncyCastle.Math.EC.F2mFieldElement.BitLength*
  commentId: Overload:Org.BouncyCastle.Math.EC.F2mFieldElement.BitLength
  name: BitLength
  nameWithType: F2mFieldElement.BitLength
  fullName: Org.BouncyCastle.Math.EC.F2mFieldElement.BitLength
- uid: Org.BouncyCastle.Math.EC.ECFieldElement.IsOne
  commentId: P:Org.BouncyCastle.Math.EC.ECFieldElement.IsOne
  parent: Org.BouncyCastle.Math.EC.ECFieldElement
  name: IsOne
  nameWithType: ECFieldElement.IsOne
  fullName: Org.BouncyCastle.Math.EC.ECFieldElement.IsOne
- uid: Org.BouncyCastle.Math.EC.F2mFieldElement.IsOne*
  commentId: Overload:Org.BouncyCastle.Math.EC.F2mFieldElement.IsOne
  name: IsOne
  nameWithType: F2mFieldElement.IsOne
  fullName: Org.BouncyCastle.Math.EC.F2mFieldElement.IsOne
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Org.BouncyCastle.Math.EC.ECFieldElement.IsZero
  commentId: P:Org.BouncyCastle.Math.EC.ECFieldElement.IsZero
  parent: Org.BouncyCastle.Math.EC.ECFieldElement
  name: IsZero
  nameWithType: ECFieldElement.IsZero
  fullName: Org.BouncyCastle.Math.EC.ECFieldElement.IsZero
- uid: Org.BouncyCastle.Math.EC.F2mFieldElement.IsZero*
  commentId: Overload:Org.BouncyCastle.Math.EC.F2mFieldElement.IsZero
  name: IsZero
  nameWithType: F2mFieldElement.IsZero
  fullName: Org.BouncyCastle.Math.EC.F2mFieldElement.IsZero
- uid: Org.BouncyCastle.Math.EC.ECFieldElement.TestBitZero
  commentId: M:Org.BouncyCastle.Math.EC.ECFieldElement.TestBitZero
  parent: Org.BouncyCastle.Math.EC.ECFieldElement
  name: TestBitZero()
  nameWithType: ECFieldElement.TestBitZero()
  fullName: Org.BouncyCastle.Math.EC.ECFieldElement.TestBitZero()
  spec.csharp:
  - uid: Org.BouncyCastle.Math.EC.ECFieldElement.TestBitZero
    name: TestBitZero
    nameWithType: ECFieldElement.TestBitZero
    fullName: Org.BouncyCastle.Math.EC.ECFieldElement.TestBitZero
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Org.BouncyCastle.Math.EC.ECFieldElement.TestBitZero
    name: TestBitZero
    nameWithType: ECFieldElement.TestBitZero
    fullName: Org.BouncyCastle.Math.EC.ECFieldElement.TestBitZero
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Org.BouncyCastle.Math.EC.F2mFieldElement.TestBitZero*
  commentId: Overload:Org.BouncyCastle.Math.EC.F2mFieldElement.TestBitZero
  name: TestBitZero
  nameWithType: F2mFieldElement.TestBitZero
  fullName: Org.BouncyCastle.Math.EC.F2mFieldElement.TestBitZero
- uid: Org.BouncyCastle.Math.EC.ECFieldElement.ToBigInteger
  commentId: M:Org.BouncyCastle.Math.EC.ECFieldElement.ToBigInteger
  parent: Org.BouncyCastle.Math.EC.ECFieldElement
  name: ToBigInteger()
  nameWithType: ECFieldElement.ToBigInteger()
  fullName: Org.BouncyCastle.Math.EC.ECFieldElement.ToBigInteger()
  spec.csharp:
  - uid: Org.BouncyCastle.Math.EC.ECFieldElement.ToBigInteger
    name: ToBigInteger
    nameWithType: ECFieldElement.ToBigInteger
    fullName: Org.BouncyCastle.Math.EC.ECFieldElement.ToBigInteger
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Org.BouncyCastle.Math.EC.ECFieldElement.ToBigInteger
    name: ToBigInteger
    nameWithType: ECFieldElement.ToBigInteger
    fullName: Org.BouncyCastle.Math.EC.ECFieldElement.ToBigInteger
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Org.BouncyCastle.Math.EC.F2mFieldElement.ToBigInteger*
  commentId: Overload:Org.BouncyCastle.Math.EC.F2mFieldElement.ToBigInteger
  name: ToBigInteger
  nameWithType: F2mFieldElement.ToBigInteger
  fullName: Org.BouncyCastle.Math.EC.F2mFieldElement.ToBigInteger
- uid: Org.BouncyCastle.Math.EC.ECFieldElement.FieldName
  commentId: P:Org.BouncyCastle.Math.EC.ECFieldElement.FieldName
  parent: Org.BouncyCastle.Math.EC.ECFieldElement
  name: FieldName
  nameWithType: ECFieldElement.FieldName
  fullName: Org.BouncyCastle.Math.EC.ECFieldElement.FieldName
- uid: Org.BouncyCastle.Math.EC.F2mFieldElement.FieldName*
  commentId: Overload:Org.BouncyCastle.Math.EC.F2mFieldElement.FieldName
  name: FieldName
  nameWithType: F2mFieldElement.FieldName
  fullName: Org.BouncyCastle.Math.EC.F2mFieldElement.FieldName
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Org.BouncyCastle.Math.EC.ECFieldElement.FieldSize
  commentId: P:Org.BouncyCastle.Math.EC.ECFieldElement.FieldSize
  parent: Org.BouncyCastle.Math.EC.ECFieldElement
  name: FieldSize
  nameWithType: ECFieldElement.FieldSize
  fullName: Org.BouncyCastle.Math.EC.ECFieldElement.FieldSize
- uid: Org.BouncyCastle.Math.EC.F2mFieldElement.FieldSize*
  commentId: Overload:Org.BouncyCastle.Math.EC.F2mFieldElement.FieldSize
  name: FieldSize
  nameWithType: F2mFieldElement.FieldSize
  fullName: Org.BouncyCastle.Math.EC.F2mFieldElement.FieldSize
- uid: Org.BouncyCastle.Math.EC.F2mFieldElement.CheckFieldElements*
  commentId: Overload:Org.BouncyCastle.Math.EC.F2mFieldElement.CheckFieldElements
  name: CheckFieldElements
  nameWithType: F2mFieldElement.CheckFieldElements
  fullName: Org.BouncyCastle.Math.EC.F2mFieldElement.CheckFieldElements
- uid: Org.BouncyCastle.Math.EC.ECFieldElement.Add(Org.BouncyCastle.Math.EC.ECFieldElement)
  commentId: M:Org.BouncyCastle.Math.EC.ECFieldElement.Add(Org.BouncyCastle.Math.EC.ECFieldElement)
  parent: Org.BouncyCastle.Math.EC.ECFieldElement
  name: Add(ECFieldElement)
  nameWithType: ECFieldElement.Add(ECFieldElement)
  fullName: Org.BouncyCastle.Math.EC.ECFieldElement.Add(Org.BouncyCastle.Math.EC.ECFieldElement)
  spec.csharp:
  - uid: Org.BouncyCastle.Math.EC.ECFieldElement.Add(Org.BouncyCastle.Math.EC.ECFieldElement)
    name: Add
    nameWithType: ECFieldElement.Add
    fullName: Org.BouncyCastle.Math.EC.ECFieldElement.Add
  - name: (
    nameWithType: (
    fullName: (
  - uid: Org.BouncyCastle.Math.EC.ECFieldElement
    name: ECFieldElement
    nameWithType: ECFieldElement
    fullName: Org.BouncyCastle.Math.EC.ECFieldElement
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Org.BouncyCastle.Math.EC.ECFieldElement.Add(Org.BouncyCastle.Math.EC.ECFieldElement)
    name: Add
    nameWithType: ECFieldElement.Add
    fullName: Org.BouncyCastle.Math.EC.ECFieldElement.Add
  - name: (
    nameWithType: (
    fullName: (
  - uid: Org.BouncyCastle.Math.EC.ECFieldElement
    name: ECFieldElement
    nameWithType: ECFieldElement
    fullName: Org.BouncyCastle.Math.EC.ECFieldElement
  - name: )
    nameWithType: )
    fullName: )
- uid: Org.BouncyCastle.Math.EC.F2mFieldElement.Add*
  commentId: Overload:Org.BouncyCastle.Math.EC.F2mFieldElement.Add
  name: Add
  nameWithType: F2mFieldElement.Add
  fullName: Org.BouncyCastle.Math.EC.F2mFieldElement.Add
- uid: Org.BouncyCastle.Math.EC.ECFieldElement.AddOne
  commentId: M:Org.BouncyCastle.Math.EC.ECFieldElement.AddOne
  parent: Org.BouncyCastle.Math.EC.ECFieldElement
  name: AddOne()
  nameWithType: ECFieldElement.AddOne()
  fullName: Org.BouncyCastle.Math.EC.ECFieldElement.AddOne()
  spec.csharp:
  - uid: Org.BouncyCastle.Math.EC.ECFieldElement.AddOne
    name: AddOne
    nameWithType: ECFieldElement.AddOne
    fullName: Org.BouncyCastle.Math.EC.ECFieldElement.AddOne
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Org.BouncyCastle.Math.EC.ECFieldElement.AddOne
    name: AddOne
    nameWithType: ECFieldElement.AddOne
    fullName: Org.BouncyCastle.Math.EC.ECFieldElement.AddOne
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Org.BouncyCastle.Math.EC.F2mFieldElement.AddOne*
  commentId: Overload:Org.BouncyCastle.Math.EC.F2mFieldElement.AddOne
  name: AddOne
  nameWithType: F2mFieldElement.AddOne
  fullName: Org.BouncyCastle.Math.EC.F2mFieldElement.AddOne
- uid: Org.BouncyCastle.Math.EC.ECFieldElement.Subtract(Org.BouncyCastle.Math.EC.ECFieldElement)
  commentId: M:Org.BouncyCastle.Math.EC.ECFieldElement.Subtract(Org.BouncyCastle.Math.EC.ECFieldElement)
  parent: Org.BouncyCastle.Math.EC.ECFieldElement
  name: Subtract(ECFieldElement)
  nameWithType: ECFieldElement.Subtract(ECFieldElement)
  fullName: Org.BouncyCastle.Math.EC.ECFieldElement.Subtract(Org.BouncyCastle.Math.EC.ECFieldElement)
  spec.csharp:
  - uid: Org.BouncyCastle.Math.EC.ECFieldElement.Subtract(Org.BouncyCastle.Math.EC.ECFieldElement)
    name: Subtract
    nameWithType: ECFieldElement.Subtract
    fullName: Org.BouncyCastle.Math.EC.ECFieldElement.Subtract
  - name: (
    nameWithType: (
    fullName: (
  - uid: Org.BouncyCastle.Math.EC.ECFieldElement
    name: ECFieldElement
    nameWithType: ECFieldElement
    fullName: Org.BouncyCastle.Math.EC.ECFieldElement
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Org.BouncyCastle.Math.EC.ECFieldElement.Subtract(Org.BouncyCastle.Math.EC.ECFieldElement)
    name: Subtract
    nameWithType: ECFieldElement.Subtract
    fullName: Org.BouncyCastle.Math.EC.ECFieldElement.Subtract
  - name: (
    nameWithType: (
    fullName: (
  - uid: Org.BouncyCastle.Math.EC.ECFieldElement
    name: ECFieldElement
    nameWithType: ECFieldElement
    fullName: Org.BouncyCastle.Math.EC.ECFieldElement
  - name: )
    nameWithType: )
    fullName: )
- uid: Org.BouncyCastle.Math.EC.F2mFieldElement.Subtract*
  commentId: Overload:Org.BouncyCastle.Math.EC.F2mFieldElement.Subtract
  name: Subtract
  nameWithType: F2mFieldElement.Subtract
  fullName: Org.BouncyCastle.Math.EC.F2mFieldElement.Subtract
- uid: Org.BouncyCastle.Math.EC.ECFieldElement.Multiply(Org.BouncyCastle.Math.EC.ECFieldElement)
  commentId: M:Org.BouncyCastle.Math.EC.ECFieldElement.Multiply(Org.BouncyCastle.Math.EC.ECFieldElement)
  parent: Org.BouncyCastle.Math.EC.ECFieldElement
  name: Multiply(ECFieldElement)
  nameWithType: ECFieldElement.Multiply(ECFieldElement)
  fullName: Org.BouncyCastle.Math.EC.ECFieldElement.Multiply(Org.BouncyCastle.Math.EC.ECFieldElement)
  spec.csharp:
  - uid: Org.BouncyCastle.Math.EC.ECFieldElement.Multiply(Org.BouncyCastle.Math.EC.ECFieldElement)
    name: Multiply
    nameWithType: ECFieldElement.Multiply
    fullName: Org.BouncyCastle.Math.EC.ECFieldElement.Multiply
  - name: (
    nameWithType: (
    fullName: (
  - uid: Org.BouncyCastle.Math.EC.ECFieldElement
    name: ECFieldElement
    nameWithType: ECFieldElement
    fullName: Org.BouncyCastle.Math.EC.ECFieldElement
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Org.BouncyCastle.Math.EC.ECFieldElement.Multiply(Org.BouncyCastle.Math.EC.ECFieldElement)
    name: Multiply
    nameWithType: ECFieldElement.Multiply
    fullName: Org.BouncyCastle.Math.EC.ECFieldElement.Multiply
  - name: (
    nameWithType: (
    fullName: (
  - uid: Org.BouncyCastle.Math.EC.ECFieldElement
    name: ECFieldElement
    nameWithType: ECFieldElement
    fullName: Org.BouncyCastle.Math.EC.ECFieldElement
  - name: )
    nameWithType: )
    fullName: )
- uid: Org.BouncyCastle.Math.EC.F2mFieldElement.Multiply*
  commentId: Overload:Org.BouncyCastle.Math.EC.F2mFieldElement.Multiply
  name: Multiply
  nameWithType: F2mFieldElement.Multiply
  fullName: Org.BouncyCastle.Math.EC.F2mFieldElement.Multiply
- uid: Org.BouncyCastle.Math.EC.ECFieldElement.MultiplyMinusProduct(Org.BouncyCastle.Math.EC.ECFieldElement,Org.BouncyCastle.Math.EC.ECFieldElement,Org.BouncyCastle.Math.EC.ECFieldElement)
  commentId: M:Org.BouncyCastle.Math.EC.ECFieldElement.MultiplyMinusProduct(Org.BouncyCastle.Math.EC.ECFieldElement,Org.BouncyCastle.Math.EC.ECFieldElement,Org.BouncyCastle.Math.EC.ECFieldElement)
  parent: Org.BouncyCastle.Math.EC.ECFieldElement
  name: MultiplyMinusProduct(ECFieldElement, ECFieldElement, ECFieldElement)
  nameWithType: ECFieldElement.MultiplyMinusProduct(ECFieldElement, ECFieldElement, ECFieldElement)
  fullName: Org.BouncyCastle.Math.EC.ECFieldElement.MultiplyMinusProduct(Org.BouncyCastle.Math.EC.ECFieldElement, Org.BouncyCastle.Math.EC.ECFieldElement, Org.BouncyCastle.Math.EC.ECFieldElement)
  spec.csharp:
  - uid: Org.BouncyCastle.Math.EC.ECFieldElement.MultiplyMinusProduct(Org.BouncyCastle.Math.EC.ECFieldElement,Org.BouncyCastle.Math.EC.ECFieldElement,Org.BouncyCastle.Math.EC.ECFieldElement)
    name: MultiplyMinusProduct
    nameWithType: ECFieldElement.MultiplyMinusProduct
    fullName: Org.BouncyCastle.Math.EC.ECFieldElement.MultiplyMinusProduct
  - name: (
    nameWithType: (
    fullName: (
  - uid: Org.BouncyCastle.Math.EC.ECFieldElement
    name: ECFieldElement
    nameWithType: ECFieldElement
    fullName: Org.BouncyCastle.Math.EC.ECFieldElement
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Org.BouncyCastle.Math.EC.ECFieldElement
    name: ECFieldElement
    nameWithType: ECFieldElement
    fullName: Org.BouncyCastle.Math.EC.ECFieldElement
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Org.BouncyCastle.Math.EC.ECFieldElement
    name: ECFieldElement
    nameWithType: ECFieldElement
    fullName: Org.BouncyCastle.Math.EC.ECFieldElement
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Org.BouncyCastle.Math.EC.ECFieldElement.MultiplyMinusProduct(Org.BouncyCastle.Math.EC.ECFieldElement,Org.BouncyCastle.Math.EC.ECFieldElement,Org.BouncyCastle.Math.EC.ECFieldElement)
    name: MultiplyMinusProduct
    nameWithType: ECFieldElement.MultiplyMinusProduct
    fullName: Org.BouncyCastle.Math.EC.ECFieldElement.MultiplyMinusProduct
  - name: (
    nameWithType: (
    fullName: (
  - uid: Org.BouncyCastle.Math.EC.ECFieldElement
    name: ECFieldElement
    nameWithType: ECFieldElement
    fullName: Org.BouncyCastle.Math.EC.ECFieldElement
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Org.BouncyCastle.Math.EC.ECFieldElement
    name: ECFieldElement
    nameWithType: ECFieldElement
    fullName: Org.BouncyCastle.Math.EC.ECFieldElement
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Org.BouncyCastle.Math.EC.ECFieldElement
    name: ECFieldElement
    nameWithType: ECFieldElement
    fullName: Org.BouncyCastle.Math.EC.ECFieldElement
  - name: )
    nameWithType: )
    fullName: )
- uid: Org.BouncyCastle.Math.EC.F2mFieldElement.MultiplyMinusProduct*
  commentId: Overload:Org.BouncyCastle.Math.EC.F2mFieldElement.MultiplyMinusProduct
  name: MultiplyMinusProduct
  nameWithType: F2mFieldElement.MultiplyMinusProduct
  fullName: Org.BouncyCastle.Math.EC.F2mFieldElement.MultiplyMinusProduct
- uid: Org.BouncyCastle.Math.EC.ECFieldElement.MultiplyPlusProduct(Org.BouncyCastle.Math.EC.ECFieldElement,Org.BouncyCastle.Math.EC.ECFieldElement,Org.BouncyCastle.Math.EC.ECFieldElement)
  commentId: M:Org.BouncyCastle.Math.EC.ECFieldElement.MultiplyPlusProduct(Org.BouncyCastle.Math.EC.ECFieldElement,Org.BouncyCastle.Math.EC.ECFieldElement,Org.BouncyCastle.Math.EC.ECFieldElement)
  parent: Org.BouncyCastle.Math.EC.ECFieldElement
  name: MultiplyPlusProduct(ECFieldElement, ECFieldElement, ECFieldElement)
  nameWithType: ECFieldElement.MultiplyPlusProduct(ECFieldElement, ECFieldElement, ECFieldElement)
  fullName: Org.BouncyCastle.Math.EC.ECFieldElement.MultiplyPlusProduct(Org.BouncyCastle.Math.EC.ECFieldElement, Org.BouncyCastle.Math.EC.ECFieldElement, Org.BouncyCastle.Math.EC.ECFieldElement)
  spec.csharp:
  - uid: Org.BouncyCastle.Math.EC.ECFieldElement.MultiplyPlusProduct(Org.BouncyCastle.Math.EC.ECFieldElement,Org.BouncyCastle.Math.EC.ECFieldElement,Org.BouncyCastle.Math.EC.ECFieldElement)
    name: MultiplyPlusProduct
    nameWithType: ECFieldElement.MultiplyPlusProduct
    fullName: Org.BouncyCastle.Math.EC.ECFieldElement.MultiplyPlusProduct
  - name: (
    nameWithType: (
    fullName: (
  - uid: Org.BouncyCastle.Math.EC.ECFieldElement
    name: ECFieldElement
    nameWithType: ECFieldElement
    fullName: Org.BouncyCastle.Math.EC.ECFieldElement
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Org.BouncyCastle.Math.EC.ECFieldElement
    name: ECFieldElement
    nameWithType: ECFieldElement
    fullName: Org.BouncyCastle.Math.EC.ECFieldElement
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Org.BouncyCastle.Math.EC.ECFieldElement
    name: ECFieldElement
    nameWithType: ECFieldElement
    fullName: Org.BouncyCastle.Math.EC.ECFieldElement
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Org.BouncyCastle.Math.EC.ECFieldElement.MultiplyPlusProduct(Org.BouncyCastle.Math.EC.ECFieldElement,Org.BouncyCastle.Math.EC.ECFieldElement,Org.BouncyCastle.Math.EC.ECFieldElement)
    name: MultiplyPlusProduct
    nameWithType: ECFieldElement.MultiplyPlusProduct
    fullName: Org.BouncyCastle.Math.EC.ECFieldElement.MultiplyPlusProduct
  - name: (
    nameWithType: (
    fullName: (
  - uid: Org.BouncyCastle.Math.EC.ECFieldElement
    name: ECFieldElement
    nameWithType: ECFieldElement
    fullName: Org.BouncyCastle.Math.EC.ECFieldElement
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Org.BouncyCastle.Math.EC.ECFieldElement
    name: ECFieldElement
    nameWithType: ECFieldElement
    fullName: Org.BouncyCastle.Math.EC.ECFieldElement
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Org.BouncyCastle.Math.EC.ECFieldElement
    name: ECFieldElement
    nameWithType: ECFieldElement
    fullName: Org.BouncyCastle.Math.EC.ECFieldElement
  - name: )
    nameWithType: )
    fullName: )
- uid: Org.BouncyCastle.Math.EC.F2mFieldElement.MultiplyPlusProduct*
  commentId: Overload:Org.BouncyCastle.Math.EC.F2mFieldElement.MultiplyPlusProduct
  name: MultiplyPlusProduct
  nameWithType: F2mFieldElement.MultiplyPlusProduct
  fullName: Org.BouncyCastle.Math.EC.F2mFieldElement.MultiplyPlusProduct
- uid: Org.BouncyCastle.Math.EC.ECFieldElement.Divide(Org.BouncyCastle.Math.EC.ECFieldElement)
  commentId: M:Org.BouncyCastle.Math.EC.ECFieldElement.Divide(Org.BouncyCastle.Math.EC.ECFieldElement)
  parent: Org.BouncyCastle.Math.EC.ECFieldElement
  name: Divide(ECFieldElement)
  nameWithType: ECFieldElement.Divide(ECFieldElement)
  fullName: Org.BouncyCastle.Math.EC.ECFieldElement.Divide(Org.BouncyCastle.Math.EC.ECFieldElement)
  spec.csharp:
  - uid: Org.BouncyCastle.Math.EC.ECFieldElement.Divide(Org.BouncyCastle.Math.EC.ECFieldElement)
    name: Divide
    nameWithType: ECFieldElement.Divide
    fullName: Org.BouncyCastle.Math.EC.ECFieldElement.Divide
  - name: (
    nameWithType: (
    fullName: (
  - uid: Org.BouncyCastle.Math.EC.ECFieldElement
    name: ECFieldElement
    nameWithType: ECFieldElement
    fullName: Org.BouncyCastle.Math.EC.ECFieldElement
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Org.BouncyCastle.Math.EC.ECFieldElement.Divide(Org.BouncyCastle.Math.EC.ECFieldElement)
    name: Divide
    nameWithType: ECFieldElement.Divide
    fullName: Org.BouncyCastle.Math.EC.ECFieldElement.Divide
  - name: (
    nameWithType: (
    fullName: (
  - uid: Org.BouncyCastle.Math.EC.ECFieldElement
    name: ECFieldElement
    nameWithType: ECFieldElement
    fullName: Org.BouncyCastle.Math.EC.ECFieldElement
  - name: )
    nameWithType: )
    fullName: )
- uid: Org.BouncyCastle.Math.EC.F2mFieldElement.Divide*
  commentId: Overload:Org.BouncyCastle.Math.EC.F2mFieldElement.Divide
  name: Divide
  nameWithType: F2mFieldElement.Divide
  fullName: Org.BouncyCastle.Math.EC.F2mFieldElement.Divide
- uid: Org.BouncyCastle.Math.EC.ECFieldElement.Negate
  commentId: M:Org.BouncyCastle.Math.EC.ECFieldElement.Negate
  parent: Org.BouncyCastle.Math.EC.ECFieldElement
  name: Negate()
  nameWithType: ECFieldElement.Negate()
  fullName: Org.BouncyCastle.Math.EC.ECFieldElement.Negate()
  spec.csharp:
  - uid: Org.BouncyCastle.Math.EC.ECFieldElement.Negate
    name: Negate
    nameWithType: ECFieldElement.Negate
    fullName: Org.BouncyCastle.Math.EC.ECFieldElement.Negate
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Org.BouncyCastle.Math.EC.ECFieldElement.Negate
    name: Negate
    nameWithType: ECFieldElement.Negate
    fullName: Org.BouncyCastle.Math.EC.ECFieldElement.Negate
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Org.BouncyCastle.Math.EC.F2mFieldElement.Negate*
  commentId: Overload:Org.BouncyCastle.Math.EC.F2mFieldElement.Negate
  name: Negate
  nameWithType: F2mFieldElement.Negate
  fullName: Org.BouncyCastle.Math.EC.F2mFieldElement.Negate
- uid: Org.BouncyCastle.Math.EC.ECFieldElement.Square
  commentId: M:Org.BouncyCastle.Math.EC.ECFieldElement.Square
  parent: Org.BouncyCastle.Math.EC.ECFieldElement
  name: Square()
  nameWithType: ECFieldElement.Square()
  fullName: Org.BouncyCastle.Math.EC.ECFieldElement.Square()
  spec.csharp:
  - uid: Org.BouncyCastle.Math.EC.ECFieldElement.Square
    name: Square
    nameWithType: ECFieldElement.Square
    fullName: Org.BouncyCastle.Math.EC.ECFieldElement.Square
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Org.BouncyCastle.Math.EC.ECFieldElement.Square
    name: Square
    nameWithType: ECFieldElement.Square
    fullName: Org.BouncyCastle.Math.EC.ECFieldElement.Square
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Org.BouncyCastle.Math.EC.F2mFieldElement.Square*
  commentId: Overload:Org.BouncyCastle.Math.EC.F2mFieldElement.Square
  name: Square
  nameWithType: F2mFieldElement.Square
  fullName: Org.BouncyCastle.Math.EC.F2mFieldElement.Square
- uid: Org.BouncyCastle.Math.EC.ECFieldElement.SquareMinusProduct(Org.BouncyCastle.Math.EC.ECFieldElement,Org.BouncyCastle.Math.EC.ECFieldElement)
  commentId: M:Org.BouncyCastle.Math.EC.ECFieldElement.SquareMinusProduct(Org.BouncyCastle.Math.EC.ECFieldElement,Org.BouncyCastle.Math.EC.ECFieldElement)
  parent: Org.BouncyCastle.Math.EC.ECFieldElement
  name: SquareMinusProduct(ECFieldElement, ECFieldElement)
  nameWithType: ECFieldElement.SquareMinusProduct(ECFieldElement, ECFieldElement)
  fullName: Org.BouncyCastle.Math.EC.ECFieldElement.SquareMinusProduct(Org.BouncyCastle.Math.EC.ECFieldElement, Org.BouncyCastle.Math.EC.ECFieldElement)
  spec.csharp:
  - uid: Org.BouncyCastle.Math.EC.ECFieldElement.SquareMinusProduct(Org.BouncyCastle.Math.EC.ECFieldElement,Org.BouncyCastle.Math.EC.ECFieldElement)
    name: SquareMinusProduct
    nameWithType: ECFieldElement.SquareMinusProduct
    fullName: Org.BouncyCastle.Math.EC.ECFieldElement.SquareMinusProduct
  - name: (
    nameWithType: (
    fullName: (
  - uid: Org.BouncyCastle.Math.EC.ECFieldElement
    name: ECFieldElement
    nameWithType: ECFieldElement
    fullName: Org.BouncyCastle.Math.EC.ECFieldElement
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Org.BouncyCastle.Math.EC.ECFieldElement
    name: ECFieldElement
    nameWithType: ECFieldElement
    fullName: Org.BouncyCastle.Math.EC.ECFieldElement
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Org.BouncyCastle.Math.EC.ECFieldElement.SquareMinusProduct(Org.BouncyCastle.Math.EC.ECFieldElement,Org.BouncyCastle.Math.EC.ECFieldElement)
    name: SquareMinusProduct
    nameWithType: ECFieldElement.SquareMinusProduct
    fullName: Org.BouncyCastle.Math.EC.ECFieldElement.SquareMinusProduct
  - name: (
    nameWithType: (
    fullName: (
  - uid: Org.BouncyCastle.Math.EC.ECFieldElement
    name: ECFieldElement
    nameWithType: ECFieldElement
    fullName: Org.BouncyCastle.Math.EC.ECFieldElement
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Org.BouncyCastle.Math.EC.ECFieldElement
    name: ECFieldElement
    nameWithType: ECFieldElement
    fullName: Org.BouncyCastle.Math.EC.ECFieldElement
  - name: )
    nameWithType: )
    fullName: )
- uid: Org.BouncyCastle.Math.EC.F2mFieldElement.SquareMinusProduct*
  commentId: Overload:Org.BouncyCastle.Math.EC.F2mFieldElement.SquareMinusProduct
  name: SquareMinusProduct
  nameWithType: F2mFieldElement.SquareMinusProduct
  fullName: Org.BouncyCastle.Math.EC.F2mFieldElement.SquareMinusProduct
- uid: Org.BouncyCastle.Math.EC.ECFieldElement.SquarePlusProduct(Org.BouncyCastle.Math.EC.ECFieldElement,Org.BouncyCastle.Math.EC.ECFieldElement)
  commentId: M:Org.BouncyCastle.Math.EC.ECFieldElement.SquarePlusProduct(Org.BouncyCastle.Math.EC.ECFieldElement,Org.BouncyCastle.Math.EC.ECFieldElement)
  parent: Org.BouncyCastle.Math.EC.ECFieldElement
  name: SquarePlusProduct(ECFieldElement, ECFieldElement)
  nameWithType: ECFieldElement.SquarePlusProduct(ECFieldElement, ECFieldElement)
  fullName: Org.BouncyCastle.Math.EC.ECFieldElement.SquarePlusProduct(Org.BouncyCastle.Math.EC.ECFieldElement, Org.BouncyCastle.Math.EC.ECFieldElement)
  spec.csharp:
  - uid: Org.BouncyCastle.Math.EC.ECFieldElement.SquarePlusProduct(Org.BouncyCastle.Math.EC.ECFieldElement,Org.BouncyCastle.Math.EC.ECFieldElement)
    name: SquarePlusProduct
    nameWithType: ECFieldElement.SquarePlusProduct
    fullName: Org.BouncyCastle.Math.EC.ECFieldElement.SquarePlusProduct
  - name: (
    nameWithType: (
    fullName: (
  - uid: Org.BouncyCastle.Math.EC.ECFieldElement
    name: ECFieldElement
    nameWithType: ECFieldElement
    fullName: Org.BouncyCastle.Math.EC.ECFieldElement
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Org.BouncyCastle.Math.EC.ECFieldElement
    name: ECFieldElement
    nameWithType: ECFieldElement
    fullName: Org.BouncyCastle.Math.EC.ECFieldElement
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Org.BouncyCastle.Math.EC.ECFieldElement.SquarePlusProduct(Org.BouncyCastle.Math.EC.ECFieldElement,Org.BouncyCastle.Math.EC.ECFieldElement)
    name: SquarePlusProduct
    nameWithType: ECFieldElement.SquarePlusProduct
    fullName: Org.BouncyCastle.Math.EC.ECFieldElement.SquarePlusProduct
  - name: (
    nameWithType: (
    fullName: (
  - uid: Org.BouncyCastle.Math.EC.ECFieldElement
    name: ECFieldElement
    nameWithType: ECFieldElement
    fullName: Org.BouncyCastle.Math.EC.ECFieldElement
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Org.BouncyCastle.Math.EC.ECFieldElement
    name: ECFieldElement
    nameWithType: ECFieldElement
    fullName: Org.BouncyCastle.Math.EC.ECFieldElement
  - name: )
    nameWithType: )
    fullName: )
- uid: Org.BouncyCastle.Math.EC.F2mFieldElement.SquarePlusProduct*
  commentId: Overload:Org.BouncyCastle.Math.EC.F2mFieldElement.SquarePlusProduct
  name: SquarePlusProduct
  nameWithType: F2mFieldElement.SquarePlusProduct
  fullName: Org.BouncyCastle.Math.EC.F2mFieldElement.SquarePlusProduct
- uid: Org.BouncyCastle.Math.EC.ECFieldElement.SquarePow(System.Int32)
  commentId: M:Org.BouncyCastle.Math.EC.ECFieldElement.SquarePow(System.Int32)
  parent: Org.BouncyCastle.Math.EC.ECFieldElement
  isExternal: true
  name: SquarePow(Int32)
  nameWithType: ECFieldElement.SquarePow(Int32)
  fullName: Org.BouncyCastle.Math.EC.ECFieldElement.SquarePow(System.Int32)
  spec.csharp:
  - uid: Org.BouncyCastle.Math.EC.ECFieldElement.SquarePow(System.Int32)
    name: SquarePow
    nameWithType: ECFieldElement.SquarePow
    fullName: Org.BouncyCastle.Math.EC.ECFieldElement.SquarePow
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Org.BouncyCastle.Math.EC.ECFieldElement.SquarePow(System.Int32)
    name: SquarePow
    nameWithType: ECFieldElement.SquarePow
    fullName: Org.BouncyCastle.Math.EC.ECFieldElement.SquarePow
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Org.BouncyCastle.Math.EC.F2mFieldElement.SquarePow*
  commentId: Overload:Org.BouncyCastle.Math.EC.F2mFieldElement.SquarePow
  name: SquarePow
  nameWithType: F2mFieldElement.SquarePow
  fullName: Org.BouncyCastle.Math.EC.F2mFieldElement.SquarePow
- uid: Org.BouncyCastle.Math.EC.ECFieldElement.Invert
  commentId: M:Org.BouncyCastle.Math.EC.ECFieldElement.Invert
  parent: Org.BouncyCastle.Math.EC.ECFieldElement
  name: Invert()
  nameWithType: ECFieldElement.Invert()
  fullName: Org.BouncyCastle.Math.EC.ECFieldElement.Invert()
  spec.csharp:
  - uid: Org.BouncyCastle.Math.EC.ECFieldElement.Invert
    name: Invert
    nameWithType: ECFieldElement.Invert
    fullName: Org.BouncyCastle.Math.EC.ECFieldElement.Invert
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Org.BouncyCastle.Math.EC.ECFieldElement.Invert
    name: Invert
    nameWithType: ECFieldElement.Invert
    fullName: Org.BouncyCastle.Math.EC.ECFieldElement.Invert
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Org.BouncyCastle.Math.EC.F2mFieldElement.Invert*
  commentId: Overload:Org.BouncyCastle.Math.EC.F2mFieldElement.Invert
  name: Invert
  nameWithType: F2mFieldElement.Invert
  fullName: Org.BouncyCastle.Math.EC.F2mFieldElement.Invert
- uid: Org.BouncyCastle.Math.EC.ECFieldElement.Sqrt
  commentId: M:Org.BouncyCastle.Math.EC.ECFieldElement.Sqrt
  parent: Org.BouncyCastle.Math.EC.ECFieldElement
  name: Sqrt()
  nameWithType: ECFieldElement.Sqrt()
  fullName: Org.BouncyCastle.Math.EC.ECFieldElement.Sqrt()
  spec.csharp:
  - uid: Org.BouncyCastle.Math.EC.ECFieldElement.Sqrt
    name: Sqrt
    nameWithType: ECFieldElement.Sqrt
    fullName: Org.BouncyCastle.Math.EC.ECFieldElement.Sqrt
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Org.BouncyCastle.Math.EC.ECFieldElement.Sqrt
    name: Sqrt
    nameWithType: ECFieldElement.Sqrt
    fullName: Org.BouncyCastle.Math.EC.ECFieldElement.Sqrt
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Org.BouncyCastle.Math.EC.F2mFieldElement.Sqrt*
  commentId: Overload:Org.BouncyCastle.Math.EC.F2mFieldElement.Sqrt
  name: Sqrt
  nameWithType: F2mFieldElement.Sqrt
  fullName: Org.BouncyCastle.Math.EC.F2mFieldElement.Sqrt
- uid: Org.BouncyCastle.Math.EC.F2mFieldElement.Representation*
  commentId: Overload:Org.BouncyCastle.Math.EC.F2mFieldElement.Representation
  name: Representation
  nameWithType: F2mFieldElement.Representation
  fullName: Org.BouncyCastle.Math.EC.F2mFieldElement.Representation
- uid: Org.BouncyCastle.Math.EC.F2mFieldElement.M*
  commentId: Overload:Org.BouncyCastle.Math.EC.F2mFieldElement.M
  name: M
  nameWithType: F2mFieldElement.M
  fullName: Org.BouncyCastle.Math.EC.F2mFieldElement.M
- uid: Org.BouncyCastle.Math.EC.F2mFieldElement.K1*
  commentId: Overload:Org.BouncyCastle.Math.EC.F2mFieldElement.K1
  name: K1
  nameWithType: F2mFieldElement.K1
  fullName: Org.BouncyCastle.Math.EC.F2mFieldElement.K1
- uid: Org.BouncyCastle.Math.EC.F2mFieldElement.K2*
  commentId: Overload:Org.BouncyCastle.Math.EC.F2mFieldElement.K2
  name: K2
  nameWithType: F2mFieldElement.K2
  fullName: Org.BouncyCastle.Math.EC.F2mFieldElement.K2
- uid: Org.BouncyCastle.Math.EC.F2mFieldElement.K3*
  commentId: Overload:Org.BouncyCastle.Math.EC.F2mFieldElement.K3
  name: K3
  nameWithType: F2mFieldElement.K3
  fullName: Org.BouncyCastle.Math.EC.F2mFieldElement.K3
- uid: Org.BouncyCastle.Math.EC.ECFieldElement.Equals(System.Object)
  commentId: M:Org.BouncyCastle.Math.EC.ECFieldElement.Equals(System.Object)
  parent: Org.BouncyCastle.Math.EC.ECFieldElement
  isExternal: true
  name: Equals(Object)
  nameWithType: ECFieldElement.Equals(Object)
  fullName: Org.BouncyCastle.Math.EC.ECFieldElement.Equals(System.Object)
  spec.csharp:
  - uid: Org.BouncyCastle.Math.EC.ECFieldElement.Equals(System.Object)
    name: Equals
    nameWithType: ECFieldElement.Equals
    fullName: Org.BouncyCastle.Math.EC.ECFieldElement.Equals
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Org.BouncyCastle.Math.EC.ECFieldElement.Equals(System.Object)
    name: Equals
    nameWithType: ECFieldElement.Equals
    fullName: Org.BouncyCastle.Math.EC.ECFieldElement.Equals
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Org.BouncyCastle.Math.EC.F2mFieldElement.Equals*
  commentId: Overload:Org.BouncyCastle.Math.EC.F2mFieldElement.Equals
  name: Equals
  nameWithType: F2mFieldElement.Equals
  fullName: Org.BouncyCastle.Math.EC.F2mFieldElement.Equals
- uid: Org.BouncyCastle.Math.EC.F2mFieldElement
  commentId: T:Org.BouncyCastle.Math.EC.F2mFieldElement
  parent: Org.BouncyCastle.Math.EC
  name: F2mFieldElement
  nameWithType: F2mFieldElement
  fullName: Org.BouncyCastle.Math.EC.F2mFieldElement
- uid: Org.BouncyCastle.Math.EC.ECFieldElement.GetHashCode
  commentId: M:Org.BouncyCastle.Math.EC.ECFieldElement.GetHashCode
  parent: Org.BouncyCastle.Math.EC.ECFieldElement
  name: GetHashCode()
  nameWithType: ECFieldElement.GetHashCode()
  fullName: Org.BouncyCastle.Math.EC.ECFieldElement.GetHashCode()
  spec.csharp:
  - uid: Org.BouncyCastle.Math.EC.ECFieldElement.GetHashCode
    name: GetHashCode
    nameWithType: ECFieldElement.GetHashCode
    fullName: Org.BouncyCastle.Math.EC.ECFieldElement.GetHashCode
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Org.BouncyCastle.Math.EC.ECFieldElement.GetHashCode
    name: GetHashCode
    nameWithType: ECFieldElement.GetHashCode
    fullName: Org.BouncyCastle.Math.EC.ECFieldElement.GetHashCode
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Org.BouncyCastle.Math.EC.F2mFieldElement.GetHashCode*
  commentId: Overload:Org.BouncyCastle.Math.EC.F2mFieldElement.GetHashCode
  name: GetHashCode
  nameWithType: F2mFieldElement.GetHashCode
  fullName: Org.BouncyCastle.Math.EC.F2mFieldElement.GetHashCode
