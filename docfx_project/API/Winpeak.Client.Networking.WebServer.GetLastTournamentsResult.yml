### YamlMime:ManagedReference
items:
- uid: Winpeak.Client.Networking.WebServer.GetLastTournamentsResult
  commentId: T:Winpeak.Client.Networking.WebServer.GetLastTournamentsResult
  id: GetLastTournamentsResult
  parent: Winpeak.Client.Networking.WebServer
  children:
  - Winpeak.Client.Networking.WebServer.GetLastTournamentsResult.HandleResponse(HTTPResponse)
  - Winpeak.Client.Networking.WebServer.GetLastTournamentsResult.LastTournamentsList
  - Winpeak.Client.Networking.WebServer.GetLastTournamentsResult.TotalItems
  langs:
  - csharp
  - vb
  name: GetLastTournamentsResult
  nameWithType: GetLastTournamentsResult
  fullName: Winpeak.Client.Networking.WebServer.GetLastTournamentsResult
  type: Class
  source:
    id: GetLastTournamentsResult
    path: ''
    startLine: 8180
  assemblies:
  - cs.temp.dll
  namespace: Winpeak.Client.Networking.WebServer
  syntax:
    content: 'public class GetLastTournamentsResult : WebResult'
    content.vb: >-
      Public Class GetLastTournamentsResult
          Inherits WebResult
  inheritance:
  - System.Object
  - Winpeak.Client.Networking.WebServer.WebResult
  inheritedMembers:
  - Winpeak.Client.Networking.WebServer.WebResult.Error
  - Winpeak.Client.Networking.WebServer.WebResult.m_state
  - Winpeak.Client.Networking.WebServer.WebResult.SetResponse(HTTPResponse)
  - Winpeak.Client.Networking.WebServer.WebResult.HasError
  - Winpeak.Client.Networking.WebServer.WebResult.State
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ToString
  - System.Object.ReferenceEquals(System.Object,System.Object)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Winpeak.Client.Networking.WebServer.GetLastTournamentsResult.TotalItems
  commentId: P:Winpeak.Client.Networking.WebServer.GetLastTournamentsResult.TotalItems
  id: TotalItems
  parent: Winpeak.Client.Networking.WebServer.GetLastTournamentsResult
  langs:
  - csharp
  - vb
  name: TotalItems
  nameWithType: GetLastTournamentsResult.TotalItems
  fullName: Winpeak.Client.Networking.WebServer.GetLastTournamentsResult.TotalItems
  type: Property
  source:
    id: TotalItems
    path: ''
    startLine: 8186
  assemblies:
  - cs.temp.dll
  namespace: Winpeak.Client.Networking.WebServer
  syntax:
    content: public long TotalItems { get; }
    parameters: []
    return:
      type: System.Int64
    content.vb: Public ReadOnly Property TotalItems As Long
  overload: Winpeak.Client.Networking.WebServer.GetLastTournamentsResult.TotalItems*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Winpeak.Client.Networking.WebServer.GetLastTournamentsResult.LastTournamentsList
  commentId: P:Winpeak.Client.Networking.WebServer.GetLastTournamentsResult.LastTournamentsList
  id: LastTournamentsList
  parent: Winpeak.Client.Networking.WebServer.GetLastTournamentsResult
  langs:
  - csharp
  - vb
  name: LastTournamentsList
  nameWithType: GetLastTournamentsResult.LastTournamentsList
  fullName: Winpeak.Client.Networking.WebServer.GetLastTournamentsResult.LastTournamentsList
  type: Property
  source:
    id: LastTournamentsList
    path: ''
    startLine: 8188
  assemblies:
  - cs.temp.dll
  namespace: Winpeak.Client.Networking.WebServer
  syntax:
    content: public List<GetLastTournamentsResult.TournamentInfo> LastTournamentsList { get; }
    parameters: []
    return:
      type: System.Collections.Generic.List{Winpeak.Client.Networking.WebServer.GetLastTournamentsResult.TournamentInfo}
    content.vb: Public ReadOnly Property LastTournamentsList As List(Of GetLastTournamentsResult.TournamentInfo)
  overload: Winpeak.Client.Networking.WebServer.GetLastTournamentsResult.LastTournamentsList*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Winpeak.Client.Networking.WebServer.GetLastTournamentsResult.HandleResponse(HTTPResponse)
  commentId: M:Winpeak.Client.Networking.WebServer.GetLastTournamentsResult.HandleResponse(HTTPResponse)
  id: HandleResponse(HTTPResponse)
  parent: Winpeak.Client.Networking.WebServer.GetLastTournamentsResult
  langs:
  - csharp
  - vb
  name: HandleResponse(HTTPResponse)
  nameWithType: GetLastTournamentsResult.HandleResponse(HTTPResponse)
  fullName: Winpeak.Client.Networking.WebServer.GetLastTournamentsResult.HandleResponse(HTTPResponse)
  type: Method
  source:
    id: HandleResponse
    path: ''
    startLine: 8190
  assemblies:
  - cs.temp.dll
  namespace: Winpeak.Client.Networking.WebServer
  syntax:
    content: protected override void HandleResponse(HTTPResponse response)
    parameters:
    - id: response
      type: HTTPResponse
    content.vb: Protected Overrides Sub HandleResponse(response As HTTPResponse)
  overridden: Winpeak.Client.Networking.WebServer.WebResult.HandleResponse(HTTPResponse)
  overload: Winpeak.Client.Networking.WebServer.GetLastTournamentsResult.HandleResponse*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
references:
- uid: Winpeak.Client.Networking.WebServer
  commentId: N:Winpeak.Client.Networking.WebServer
  name: Winpeak.Client.Networking.WebServer
  nameWithType: Winpeak.Client.Networking.WebServer
  fullName: Winpeak.Client.Networking.WebServer
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Winpeak.Client.Networking.WebServer.WebResult
  commentId: T:Winpeak.Client.Networking.WebServer.WebResult
  parent: Winpeak.Client.Networking.WebServer
  name: WebResult
  nameWithType: WebResult
  fullName: Winpeak.Client.Networking.WebServer.WebResult
- uid: Winpeak.Client.Networking.WebServer.WebResult.Error
  commentId: F:Winpeak.Client.Networking.WebServer.WebResult.Error
  parent: Winpeak.Client.Networking.WebServer.WebResult
  name: Error
  nameWithType: WebResult.Error
  fullName: Winpeak.Client.Networking.WebServer.WebResult.Error
- uid: Winpeak.Client.Networking.WebServer.WebResult.m_state
  commentId: F:Winpeak.Client.Networking.WebServer.WebResult.m_state
  parent: Winpeak.Client.Networking.WebServer.WebResult
  name: m_state
  nameWithType: WebResult.m_state
  fullName: Winpeak.Client.Networking.WebServer.WebResult.m_state
- uid: Winpeak.Client.Networking.WebServer.WebResult.SetResponse(HTTPResponse)
  commentId: M:Winpeak.Client.Networking.WebServer.WebResult.SetResponse(HTTPResponse)
  parent: Winpeak.Client.Networking.WebServer.WebResult
  isExternal: true
  name: SetResponse(HTTPResponse)
  nameWithType: WebResult.SetResponse(HTTPResponse)
  fullName: Winpeak.Client.Networking.WebServer.WebResult.SetResponse(HTTPResponse)
  spec.csharp:
  - uid: Winpeak.Client.Networking.WebServer.WebResult.SetResponse(HTTPResponse)
    name: SetResponse
    nameWithType: WebResult.SetResponse
    fullName: Winpeak.Client.Networking.WebServer.WebResult.SetResponse
  - name: (
    nameWithType: (
    fullName: (
  - uid: HTTPResponse
    name: HTTPResponse
    nameWithType: HTTPResponse
    fullName: HTTPResponse
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Winpeak.Client.Networking.WebServer.WebResult.SetResponse(HTTPResponse)
    name: SetResponse
    nameWithType: WebResult.SetResponse
    fullName: Winpeak.Client.Networking.WebServer.WebResult.SetResponse
  - name: (
    nameWithType: (
    fullName: (
  - uid: HTTPResponse
    name: HTTPResponse
    nameWithType: HTTPResponse
    fullName: HTTPResponse
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Winpeak.Client.Networking.WebServer.WebResult.HasError
  commentId: P:Winpeak.Client.Networking.WebServer.WebResult.HasError
  parent: Winpeak.Client.Networking.WebServer.WebResult
  name: HasError
  nameWithType: WebResult.HasError
  fullName: Winpeak.Client.Networking.WebServer.WebResult.HasError
- uid: Winpeak.Client.Networking.WebServer.WebResult.State
  commentId: P:Winpeak.Client.Networking.WebServer.WebResult.State
  parent: Winpeak.Client.Networking.WebServer.WebResult
  name: State
  nameWithType: WebResult.State
  fullName: Winpeak.Client.Networking.WebServer.WebResult.State
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Winpeak.Client.Networking.WebServer.GetLastTournamentsResult.TotalItems*
  commentId: Overload:Winpeak.Client.Networking.WebServer.GetLastTournamentsResult.TotalItems
  name: TotalItems
  nameWithType: GetLastTournamentsResult.TotalItems
  fullName: Winpeak.Client.Networking.WebServer.GetLastTournamentsResult.TotalItems
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: Winpeak.Client.Networking.WebServer.GetLastTournamentsResult.LastTournamentsList*
  commentId: Overload:Winpeak.Client.Networking.WebServer.GetLastTournamentsResult.LastTournamentsList
  name: LastTournamentsList
  nameWithType: GetLastTournamentsResult.LastTournamentsList
  fullName: Winpeak.Client.Networking.WebServer.GetLastTournamentsResult.LastTournamentsList
- uid: System.Collections.Generic.List{Winpeak.Client.Networking.WebServer.GetLastTournamentsResult.TournamentInfo}
  commentId: T:System.Collections.Generic.List{Winpeak.Client.Networking.WebServer.GetLastTournamentsResult.TournamentInfo}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<GetLastTournamentsResult.TournamentInfo>
  nameWithType: List<GetLastTournamentsResult.TournamentInfo>
  fullName: System.Collections.Generic.List<Winpeak.Client.Networking.WebServer.GetLastTournamentsResult.TournamentInfo>
  nameWithType.vb: List(Of GetLastTournamentsResult.TournamentInfo)
  fullName.vb: System.Collections.Generic.List(Of Winpeak.Client.Networking.WebServer.GetLastTournamentsResult.TournamentInfo)
  name.vb: List(Of GetLastTournamentsResult.TournamentInfo)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Winpeak.Client.Networking.WebServer.GetLastTournamentsResult.TournamentInfo
    name: GetLastTournamentsResult.TournamentInfo
    nameWithType: GetLastTournamentsResult.TournamentInfo
    fullName: Winpeak.Client.Networking.WebServer.GetLastTournamentsResult.TournamentInfo
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Winpeak.Client.Networking.WebServer.GetLastTournamentsResult.TournamentInfo
    name: GetLastTournamentsResult.TournamentInfo
    nameWithType: GetLastTournamentsResult.TournamentInfo
    fullName: Winpeak.Client.Networking.WebServer.GetLastTournamentsResult.TournamentInfo
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Winpeak.Client.Networking.WebServer.WebResult.HandleResponse(HTTPResponse)
  commentId: M:Winpeak.Client.Networking.WebServer.WebResult.HandleResponse(HTTPResponse)
  parent: Winpeak.Client.Networking.WebServer.WebResult
  isExternal: true
  name: HandleResponse(HTTPResponse)
  nameWithType: WebResult.HandleResponse(HTTPResponse)
  fullName: Winpeak.Client.Networking.WebServer.WebResult.HandleResponse(HTTPResponse)
  spec.csharp:
  - uid: Winpeak.Client.Networking.WebServer.WebResult.HandleResponse(HTTPResponse)
    name: HandleResponse
    nameWithType: WebResult.HandleResponse
    fullName: Winpeak.Client.Networking.WebServer.WebResult.HandleResponse
  - name: (
    nameWithType: (
    fullName: (
  - uid: HTTPResponse
    name: HTTPResponse
    nameWithType: HTTPResponse
    fullName: HTTPResponse
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Winpeak.Client.Networking.WebServer.WebResult.HandleResponse(HTTPResponse)
    name: HandleResponse
    nameWithType: WebResult.HandleResponse
    fullName: Winpeak.Client.Networking.WebServer.WebResult.HandleResponse
  - name: (
    nameWithType: (
    fullName: (
  - uid: HTTPResponse
    name: HTTPResponse
    nameWithType: HTTPResponse
    fullName: HTTPResponse
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Winpeak.Client.Networking.WebServer.GetLastTournamentsResult.HandleResponse*
  commentId: Overload:Winpeak.Client.Networking.WebServer.GetLastTournamentsResult.HandleResponse
  name: HandleResponse
  nameWithType: GetLastTournamentsResult.HandleResponse
  fullName: Winpeak.Client.Networking.WebServer.GetLastTournamentsResult.HandleResponse
- uid: HTTPResponse
  isExternal: true
  name: HTTPResponse
  nameWithType: HTTPResponse
  fullName: HTTPResponse
