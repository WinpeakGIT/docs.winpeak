### YamlMime:ManagedReference
items:
- uid: Winpeak.Client.Modules.LocalStorage
  commentId: T:Winpeak.Client.Modules.LocalStorage
  id: LocalStorage
  parent: Winpeak.Client.Modules
  children:
  - Winpeak.Client.Modules.LocalStorage.DeleteAll
  - Winpeak.Client.Modules.LocalStorage.DeleteKey(System.String)
  - Winpeak.Client.Modules.LocalStorage.GetFloat(System.String)
  - Winpeak.Client.Modules.LocalStorage.GetInt(System.String)
  - Winpeak.Client.Modules.LocalStorage.GetString(System.String)
  - Winpeak.Client.Modules.LocalStorage.HasKey(System.String)
  - Winpeak.Client.Modules.LocalStorage.SetFloat(System.String,System.Single)
  - Winpeak.Client.Modules.LocalStorage.SetInt(System.String,System.Int32)
  - Winpeak.Client.Modules.LocalStorage.SetString(System.String,System.String)
  langs:
  - csharp
  - vb
  name: LocalStorage
  nameWithType: LocalStorage
  fullName: Winpeak.Client.Modules.LocalStorage
  type: Class
  source:
    id: LocalStorage
    path: ''
    startLine: 169080
  assemblies:
  - cs.temp.dll
  namespace: Winpeak.Client.Modules
  syntax:
    content: 'public class LocalStorage : ILocalStorage'
    content.vb: >-
      Public Class LocalStorage
          Implements ILocalStorage
  inheritance:
  - System.Object
  implements:
  - Winpeak.Client.Modules.ILocalStorage
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ToString
  - System.Object.ReferenceEquals(System.Object,System.Object)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Winpeak.Client.Modules.LocalStorage.HasKey(System.String)
  commentId: M:Winpeak.Client.Modules.LocalStorage.HasKey(System.String)
  id: HasKey(System.String)
  parent: Winpeak.Client.Modules.LocalStorage
  langs:
  - csharp
  - vb
  name: HasKey(String)
  nameWithType: LocalStorage.HasKey(String)
  fullName: Winpeak.Client.Modules.LocalStorage.HasKey(System.String)
  type: Method
  source:
    id: HasKey
    path: ''
    startLine: 169082
  assemblies:
  - cs.temp.dll
  namespace: Winpeak.Client.Modules
  syntax:
    content: public bool HasKey(string value)
    parameters:
    - id: value
      type: System.String
    return:
      type: System.Boolean
    content.vb: Public Function HasKey(value As String) As Boolean
  overload: Winpeak.Client.Modules.LocalStorage.HasKey*
  implements:
  - Winpeak.Client.Modules.ILocalStorage.HasKey(System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Winpeak.Client.Modules.LocalStorage.GetInt(System.String)
  commentId: M:Winpeak.Client.Modules.LocalStorage.GetInt(System.String)
  id: GetInt(System.String)
  parent: Winpeak.Client.Modules.LocalStorage
  langs:
  - csharp
  - vb
  name: GetInt(String)
  nameWithType: LocalStorage.GetInt(String)
  fullName: Winpeak.Client.Modules.LocalStorage.GetInt(System.String)
  type: Method
  source:
    id: GetInt
    path: ''
    startLine: 169086
  assemblies:
  - cs.temp.dll
  namespace: Winpeak.Client.Modules
  syntax:
    content: public int GetInt(string key)
    parameters:
    - id: key
      type: System.String
    return:
      type: System.Int32
    content.vb: Public Function GetInt(key As String) As Integer
  overload: Winpeak.Client.Modules.LocalStorage.GetInt*
  implements:
  - Winpeak.Client.Modules.ILocalStorage.GetInt(System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Winpeak.Client.Modules.LocalStorage.SetInt(System.String,System.Int32)
  commentId: M:Winpeak.Client.Modules.LocalStorage.SetInt(System.String,System.Int32)
  id: SetInt(System.String,System.Int32)
  parent: Winpeak.Client.Modules.LocalStorage
  langs:
  - csharp
  - vb
  name: SetInt(String, Int32)
  nameWithType: LocalStorage.SetInt(String, Int32)
  fullName: Winpeak.Client.Modules.LocalStorage.SetInt(System.String, System.Int32)
  type: Method
  source:
    id: SetInt
    path: ''
    startLine: 169090
  assemblies:
  - cs.temp.dll
  namespace: Winpeak.Client.Modules
  syntax:
    content: public void SetInt(string key, int value)
    parameters:
    - id: key
      type: System.String
    - id: value
      type: System.Int32
    content.vb: Public Sub SetInt(key As String, value As Integer)
  overload: Winpeak.Client.Modules.LocalStorage.SetInt*
  implements:
  - Winpeak.Client.Modules.ILocalStorage.SetInt(System.String,System.Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Winpeak.Client.Modules.LocalStorage.GetString(System.String)
  commentId: M:Winpeak.Client.Modules.LocalStorage.GetString(System.String)
  id: GetString(System.String)
  parent: Winpeak.Client.Modules.LocalStorage
  langs:
  - csharp
  - vb
  name: GetString(String)
  nameWithType: LocalStorage.GetString(String)
  fullName: Winpeak.Client.Modules.LocalStorage.GetString(System.String)
  type: Method
  source:
    id: GetString
    path: ''
    startLine: 169094
  assemblies:
  - cs.temp.dll
  namespace: Winpeak.Client.Modules
  syntax:
    content: public string GetString(string key)
    parameters:
    - id: key
      type: System.String
    return:
      type: System.String
    content.vb: Public Function GetString(key As String) As String
  overload: Winpeak.Client.Modules.LocalStorage.GetString*
  implements:
  - Winpeak.Client.Modules.ILocalStorage.GetString(System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Winpeak.Client.Modules.LocalStorage.SetString(System.String,System.String)
  commentId: M:Winpeak.Client.Modules.LocalStorage.SetString(System.String,System.String)
  id: SetString(System.String,System.String)
  parent: Winpeak.Client.Modules.LocalStorage
  langs:
  - csharp
  - vb
  name: SetString(String, String)
  nameWithType: LocalStorage.SetString(String, String)
  fullName: Winpeak.Client.Modules.LocalStorage.SetString(System.String, System.String)
  type: Method
  source:
    id: SetString
    path: ''
    startLine: 169098
  assemblies:
  - cs.temp.dll
  namespace: Winpeak.Client.Modules
  syntax:
    content: public void SetString(string key, string value)
    parameters:
    - id: key
      type: System.String
    - id: value
      type: System.String
    content.vb: Public Sub SetString(key As String, value As String)
  overload: Winpeak.Client.Modules.LocalStorage.SetString*
  implements:
  - Winpeak.Client.Modules.ILocalStorage.SetString(System.String,System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Winpeak.Client.Modules.LocalStorage.GetFloat(System.String)
  commentId: M:Winpeak.Client.Modules.LocalStorage.GetFloat(System.String)
  id: GetFloat(System.String)
  parent: Winpeak.Client.Modules.LocalStorage
  langs:
  - csharp
  - vb
  name: GetFloat(String)
  nameWithType: LocalStorage.GetFloat(String)
  fullName: Winpeak.Client.Modules.LocalStorage.GetFloat(System.String)
  type: Method
  source:
    id: GetFloat
    path: ''
    startLine: 169102
  assemblies:
  - cs.temp.dll
  namespace: Winpeak.Client.Modules
  syntax:
    content: public float GetFloat(string key)
    parameters:
    - id: key
      type: System.String
    return:
      type: System.Single
    content.vb: Public Function GetFloat(key As String) As Single
  overload: Winpeak.Client.Modules.LocalStorage.GetFloat*
  implements:
  - Winpeak.Client.Modules.ILocalStorage.GetFloat(System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Winpeak.Client.Modules.LocalStorage.SetFloat(System.String,System.Single)
  commentId: M:Winpeak.Client.Modules.LocalStorage.SetFloat(System.String,System.Single)
  id: SetFloat(System.String,System.Single)
  parent: Winpeak.Client.Modules.LocalStorage
  langs:
  - csharp
  - vb
  name: SetFloat(String, Single)
  nameWithType: LocalStorage.SetFloat(String, Single)
  fullName: Winpeak.Client.Modules.LocalStorage.SetFloat(System.String, System.Single)
  type: Method
  source:
    id: SetFloat
    path: ''
    startLine: 169106
  assemblies:
  - cs.temp.dll
  namespace: Winpeak.Client.Modules
  syntax:
    content: public void SetFloat(string key, float value)
    parameters:
    - id: key
      type: System.String
    - id: value
      type: System.Single
    content.vb: Public Sub SetFloat(key As String, value As Single)
  overload: Winpeak.Client.Modules.LocalStorage.SetFloat*
  implements:
  - Winpeak.Client.Modules.ILocalStorage.SetFloat(System.String,System.Single)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Winpeak.Client.Modules.LocalStorage.DeleteKey(System.String)
  commentId: M:Winpeak.Client.Modules.LocalStorage.DeleteKey(System.String)
  id: DeleteKey(System.String)
  parent: Winpeak.Client.Modules.LocalStorage
  langs:
  - csharp
  - vb
  name: DeleteKey(String)
  nameWithType: LocalStorage.DeleteKey(String)
  fullName: Winpeak.Client.Modules.LocalStorage.DeleteKey(System.String)
  type: Method
  source:
    id: DeleteKey
    path: ''
    startLine: 169110
  assemblies:
  - cs.temp.dll
  namespace: Winpeak.Client.Modules
  syntax:
    content: public void DeleteKey(string key)
    parameters:
    - id: key
      type: System.String
    content.vb: Public Sub DeleteKey(key As String)
  overload: Winpeak.Client.Modules.LocalStorage.DeleteKey*
  implements:
  - Winpeak.Client.Modules.ILocalStorage.DeleteKey(System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Winpeak.Client.Modules.LocalStorage.DeleteAll
  commentId: M:Winpeak.Client.Modules.LocalStorage.DeleteAll
  id: DeleteAll
  parent: Winpeak.Client.Modules.LocalStorage
  langs:
  - csharp
  - vb
  name: DeleteAll()
  nameWithType: LocalStorage.DeleteAll()
  fullName: Winpeak.Client.Modules.LocalStorage.DeleteAll()
  type: Method
  source:
    id: DeleteAll
    path: ''
    startLine: 169114
  assemblies:
  - cs.temp.dll
  namespace: Winpeak.Client.Modules
  syntax:
    content: public void DeleteAll()
    content.vb: Public Sub DeleteAll
  overload: Winpeak.Client.Modules.LocalStorage.DeleteAll*
  implements:
  - Winpeak.Client.Modules.ILocalStorage.DeleteAll
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Winpeak.Client.Modules
  commentId: N:Winpeak.Client.Modules
  name: Winpeak.Client.Modules
  nameWithType: Winpeak.Client.Modules
  fullName: Winpeak.Client.Modules
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Winpeak.Client.Modules.ILocalStorage
  commentId: T:Winpeak.Client.Modules.ILocalStorage
  parent: Winpeak.Client.Modules
  name: ILocalStorage
  nameWithType: ILocalStorage
  fullName: Winpeak.Client.Modules.ILocalStorage
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Winpeak.Client.Modules.LocalStorage.HasKey*
  commentId: Overload:Winpeak.Client.Modules.LocalStorage.HasKey
  name: HasKey
  nameWithType: LocalStorage.HasKey
  fullName: Winpeak.Client.Modules.LocalStorage.HasKey
- uid: Winpeak.Client.Modules.ILocalStorage.HasKey(System.String)
  commentId: M:Winpeak.Client.Modules.ILocalStorage.HasKey(System.String)
  parent: Winpeak.Client.Modules.ILocalStorage
  isExternal: true
  name: HasKey(String)
  nameWithType: ILocalStorage.HasKey(String)
  fullName: Winpeak.Client.Modules.ILocalStorage.HasKey(System.String)
  spec.csharp:
  - uid: Winpeak.Client.Modules.ILocalStorage.HasKey(System.String)
    name: HasKey
    nameWithType: ILocalStorage.HasKey
    fullName: Winpeak.Client.Modules.ILocalStorage.HasKey
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Winpeak.Client.Modules.ILocalStorage.HasKey(System.String)
    name: HasKey
    nameWithType: ILocalStorage.HasKey
    fullName: Winpeak.Client.Modules.ILocalStorage.HasKey
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Winpeak.Client.Modules.LocalStorage.GetInt*
  commentId: Overload:Winpeak.Client.Modules.LocalStorage.GetInt
  name: GetInt
  nameWithType: LocalStorage.GetInt
  fullName: Winpeak.Client.Modules.LocalStorage.GetInt
- uid: Winpeak.Client.Modules.ILocalStorage.GetInt(System.String)
  commentId: M:Winpeak.Client.Modules.ILocalStorage.GetInt(System.String)
  parent: Winpeak.Client.Modules.ILocalStorage
  isExternal: true
  name: GetInt(String)
  nameWithType: ILocalStorage.GetInt(String)
  fullName: Winpeak.Client.Modules.ILocalStorage.GetInt(System.String)
  spec.csharp:
  - uid: Winpeak.Client.Modules.ILocalStorage.GetInt(System.String)
    name: GetInt
    nameWithType: ILocalStorage.GetInt
    fullName: Winpeak.Client.Modules.ILocalStorage.GetInt
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Winpeak.Client.Modules.ILocalStorage.GetInt(System.String)
    name: GetInt
    nameWithType: ILocalStorage.GetInt
    fullName: Winpeak.Client.Modules.ILocalStorage.GetInt
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Winpeak.Client.Modules.LocalStorage.SetInt*
  commentId: Overload:Winpeak.Client.Modules.LocalStorage.SetInt
  name: SetInt
  nameWithType: LocalStorage.SetInt
  fullName: Winpeak.Client.Modules.LocalStorage.SetInt
- uid: Winpeak.Client.Modules.ILocalStorage.SetInt(System.String,System.Int32)
  commentId: M:Winpeak.Client.Modules.ILocalStorage.SetInt(System.String,System.Int32)
  parent: Winpeak.Client.Modules.ILocalStorage
  isExternal: true
  name: SetInt(String, Int32)
  nameWithType: ILocalStorage.SetInt(String, Int32)
  fullName: Winpeak.Client.Modules.ILocalStorage.SetInt(System.String, System.Int32)
  spec.csharp:
  - uid: Winpeak.Client.Modules.ILocalStorage.SetInt(System.String,System.Int32)
    name: SetInt
    nameWithType: ILocalStorage.SetInt
    fullName: Winpeak.Client.Modules.ILocalStorage.SetInt
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Winpeak.Client.Modules.ILocalStorage.SetInt(System.String,System.Int32)
    name: SetInt
    nameWithType: ILocalStorage.SetInt
    fullName: Winpeak.Client.Modules.ILocalStorage.SetInt
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Winpeak.Client.Modules.LocalStorage.GetString*
  commentId: Overload:Winpeak.Client.Modules.LocalStorage.GetString
  name: GetString
  nameWithType: LocalStorage.GetString
  fullName: Winpeak.Client.Modules.LocalStorage.GetString
- uid: Winpeak.Client.Modules.ILocalStorage.GetString(System.String)
  commentId: M:Winpeak.Client.Modules.ILocalStorage.GetString(System.String)
  parent: Winpeak.Client.Modules.ILocalStorage
  isExternal: true
  name: GetString(String)
  nameWithType: ILocalStorage.GetString(String)
  fullName: Winpeak.Client.Modules.ILocalStorage.GetString(System.String)
  spec.csharp:
  - uid: Winpeak.Client.Modules.ILocalStorage.GetString(System.String)
    name: GetString
    nameWithType: ILocalStorage.GetString
    fullName: Winpeak.Client.Modules.ILocalStorage.GetString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Winpeak.Client.Modules.ILocalStorage.GetString(System.String)
    name: GetString
    nameWithType: ILocalStorage.GetString
    fullName: Winpeak.Client.Modules.ILocalStorage.GetString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Winpeak.Client.Modules.LocalStorage.SetString*
  commentId: Overload:Winpeak.Client.Modules.LocalStorage.SetString
  name: SetString
  nameWithType: LocalStorage.SetString
  fullName: Winpeak.Client.Modules.LocalStorage.SetString
- uid: Winpeak.Client.Modules.ILocalStorage.SetString(System.String,System.String)
  commentId: M:Winpeak.Client.Modules.ILocalStorage.SetString(System.String,System.String)
  parent: Winpeak.Client.Modules.ILocalStorage
  isExternal: true
  name: SetString(String, String)
  nameWithType: ILocalStorage.SetString(String, String)
  fullName: Winpeak.Client.Modules.ILocalStorage.SetString(System.String, System.String)
  spec.csharp:
  - uid: Winpeak.Client.Modules.ILocalStorage.SetString(System.String,System.String)
    name: SetString
    nameWithType: ILocalStorage.SetString
    fullName: Winpeak.Client.Modules.ILocalStorage.SetString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Winpeak.Client.Modules.ILocalStorage.SetString(System.String,System.String)
    name: SetString
    nameWithType: ILocalStorage.SetString
    fullName: Winpeak.Client.Modules.ILocalStorage.SetString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Winpeak.Client.Modules.LocalStorage.GetFloat*
  commentId: Overload:Winpeak.Client.Modules.LocalStorage.GetFloat
  name: GetFloat
  nameWithType: LocalStorage.GetFloat
  fullName: Winpeak.Client.Modules.LocalStorage.GetFloat
- uid: Winpeak.Client.Modules.ILocalStorage.GetFloat(System.String)
  commentId: M:Winpeak.Client.Modules.ILocalStorage.GetFloat(System.String)
  parent: Winpeak.Client.Modules.ILocalStorage
  isExternal: true
  name: GetFloat(String)
  nameWithType: ILocalStorage.GetFloat(String)
  fullName: Winpeak.Client.Modules.ILocalStorage.GetFloat(System.String)
  spec.csharp:
  - uid: Winpeak.Client.Modules.ILocalStorage.GetFloat(System.String)
    name: GetFloat
    nameWithType: ILocalStorage.GetFloat
    fullName: Winpeak.Client.Modules.ILocalStorage.GetFloat
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Winpeak.Client.Modules.ILocalStorage.GetFloat(System.String)
    name: GetFloat
    nameWithType: ILocalStorage.GetFloat
    fullName: Winpeak.Client.Modules.ILocalStorage.GetFloat
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: Winpeak.Client.Modules.LocalStorage.SetFloat*
  commentId: Overload:Winpeak.Client.Modules.LocalStorage.SetFloat
  name: SetFloat
  nameWithType: LocalStorage.SetFloat
  fullName: Winpeak.Client.Modules.LocalStorage.SetFloat
- uid: Winpeak.Client.Modules.ILocalStorage.SetFloat(System.String,System.Single)
  commentId: M:Winpeak.Client.Modules.ILocalStorage.SetFloat(System.String,System.Single)
  parent: Winpeak.Client.Modules.ILocalStorage
  isExternal: true
  name: SetFloat(String, Single)
  nameWithType: ILocalStorage.SetFloat(String, Single)
  fullName: Winpeak.Client.Modules.ILocalStorage.SetFloat(System.String, System.Single)
  spec.csharp:
  - uid: Winpeak.Client.Modules.ILocalStorage.SetFloat(System.String,System.Single)
    name: SetFloat
    nameWithType: ILocalStorage.SetFloat
    fullName: Winpeak.Client.Modules.ILocalStorage.SetFloat
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Winpeak.Client.Modules.ILocalStorage.SetFloat(System.String,System.Single)
    name: SetFloat
    nameWithType: ILocalStorage.SetFloat
    fullName: Winpeak.Client.Modules.ILocalStorage.SetFloat
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Winpeak.Client.Modules.LocalStorage.DeleteKey*
  commentId: Overload:Winpeak.Client.Modules.LocalStorage.DeleteKey
  name: DeleteKey
  nameWithType: LocalStorage.DeleteKey
  fullName: Winpeak.Client.Modules.LocalStorage.DeleteKey
- uid: Winpeak.Client.Modules.ILocalStorage.DeleteKey(System.String)
  commentId: M:Winpeak.Client.Modules.ILocalStorage.DeleteKey(System.String)
  parent: Winpeak.Client.Modules.ILocalStorage
  isExternal: true
  name: DeleteKey(String)
  nameWithType: ILocalStorage.DeleteKey(String)
  fullName: Winpeak.Client.Modules.ILocalStorage.DeleteKey(System.String)
  spec.csharp:
  - uid: Winpeak.Client.Modules.ILocalStorage.DeleteKey(System.String)
    name: DeleteKey
    nameWithType: ILocalStorage.DeleteKey
    fullName: Winpeak.Client.Modules.ILocalStorage.DeleteKey
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Winpeak.Client.Modules.ILocalStorage.DeleteKey(System.String)
    name: DeleteKey
    nameWithType: ILocalStorage.DeleteKey
    fullName: Winpeak.Client.Modules.ILocalStorage.DeleteKey
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Winpeak.Client.Modules.LocalStorage.DeleteAll*
  commentId: Overload:Winpeak.Client.Modules.LocalStorage.DeleteAll
  name: DeleteAll
  nameWithType: LocalStorage.DeleteAll
  fullName: Winpeak.Client.Modules.LocalStorage.DeleteAll
- uid: Winpeak.Client.Modules.ILocalStorage.DeleteAll
  commentId: M:Winpeak.Client.Modules.ILocalStorage.DeleteAll
  parent: Winpeak.Client.Modules.ILocalStorage
  name: DeleteAll()
  nameWithType: ILocalStorage.DeleteAll()
  fullName: Winpeak.Client.Modules.ILocalStorage.DeleteAll()
  spec.csharp:
  - uid: Winpeak.Client.Modules.ILocalStorage.DeleteAll
    name: DeleteAll
    nameWithType: ILocalStorage.DeleteAll
    fullName: Winpeak.Client.Modules.ILocalStorage.DeleteAll
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Winpeak.Client.Modules.ILocalStorage.DeleteAll
    name: DeleteAll
    nameWithType: ILocalStorage.DeleteAll
    fullName: Winpeak.Client.Modules.ILocalStorage.DeleteAll
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
