### YamlMime:ManagedReference
items:
- uid: Winpeak.Client.Networking.WebServer.IPaginatedDataSource`1
  commentId: T:Winpeak.Client.Networking.WebServer.IPaginatedDataSource`1
  id: IPaginatedDataSource`1
  parent: Winpeak.Client.Networking.WebServer
  children:
  - Winpeak.Client.Networking.WebServer.IPaginatedDataSource`1.GetItems(System.Int32,System.Int32,System.Action{System.Collections.Generic.List{`0}})
  - Winpeak.Client.Networking.WebServer.IPaginatedDataSource`1.HasReceivedAllItems
  - Winpeak.Client.Networking.WebServer.IPaginatedDataSource`1.ReceivedData
  langs:
  - csharp
  - vb
  name: IPaginatedDataSource<T>
  nameWithType: IPaginatedDataSource<T>
  fullName: Winpeak.Client.Networking.WebServer.IPaginatedDataSource<T>
  type: Interface
  source:
    id: IPaginatedDataSource
    path: ''
    startLine: 6233
  assemblies:
  - cs.temp.dll
  namespace: Winpeak.Client.Networking.WebServer
  syntax:
    content: >-
      public interface IPaginatedDataSource<T>
          where T : ITemplate
    typeParameters:
    - id: T
    content.vb: Public Interface IPaginatedDataSource(Of T As ITemplate)
  nameWithType.vb: IPaginatedDataSource(Of T)
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
  fullName.vb: Winpeak.Client.Networking.WebServer.IPaginatedDataSource(Of T)
  name.vb: IPaginatedDataSource(Of T)
- uid: Winpeak.Client.Networking.WebServer.IPaginatedDataSource`1.GetItems(System.Int32,System.Int32,System.Action{System.Collections.Generic.List{`0}})
  commentId: M:Winpeak.Client.Networking.WebServer.IPaginatedDataSource`1.GetItems(System.Int32,System.Int32,System.Action{System.Collections.Generic.List{`0}})
  id: GetItems(System.Int32,System.Int32,System.Action{System.Collections.Generic.List{`0}})
  parent: Winpeak.Client.Networking.WebServer.IPaginatedDataSource`1
  langs:
  - csharp
  - vb
  name: GetItems(Int32, Int32, Action<List<T>>)
  nameWithType: IPaginatedDataSource<T>.GetItems(Int32, Int32, Action<List<T>>)
  fullName: Winpeak.Client.Networking.WebServer.IPaginatedDataSource<T>.GetItems(System.Int32, System.Int32, System.Action<System.Collections.Generic.List<T>>)
  type: Method
  source:
    id: GetItems
    path: ''
    startLine: 6235
  assemblies:
  - cs.temp.dll
  namespace: Winpeak.Client.Networking.WebServer
  syntax:
    content: void GetItems(int offset, int size, Action<List<T>> callback)
    parameters:
    - id: offset
      type: System.Int32
    - id: size
      type: System.Int32
    - id: callback
      type: System.Action{System.Collections.Generic.List{{T}}}
    content.vb: Sub GetItems(offset As Integer, size As Integer, callback As Action(Of List(Of T)))
  overload: Winpeak.Client.Networking.WebServer.IPaginatedDataSource`1.GetItems*
  nameWithType.vb: IPaginatedDataSource(Of T).GetItems(Int32, Int32, Action(Of List(Of T)))
  fullName.vb: Winpeak.Client.Networking.WebServer.IPaginatedDataSource(Of T).GetItems(System.Int32, System.Int32, System.Action(Of System.Collections.Generic.List(Of T)))
  name.vb: GetItems(Int32, Int32, Action(Of List(Of T)))
- uid: Winpeak.Client.Networking.WebServer.IPaginatedDataSource`1.HasReceivedAllItems
  commentId: P:Winpeak.Client.Networking.WebServer.IPaginatedDataSource`1.HasReceivedAllItems
  id: HasReceivedAllItems
  parent: Winpeak.Client.Networking.WebServer.IPaginatedDataSource`1
  langs:
  - csharp
  - vb
  name: HasReceivedAllItems
  nameWithType: IPaginatedDataSource<T>.HasReceivedAllItems
  fullName: Winpeak.Client.Networking.WebServer.IPaginatedDataSource<T>.HasReceivedAllItems
  type: Property
  source:
    id: HasReceivedAllItems
    path: ''
    startLine: 6236
  assemblies:
  - cs.temp.dll
  namespace: Winpeak.Client.Networking.WebServer
  syntax:
    content: bool HasReceivedAllItems { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: ReadOnly Property HasReceivedAllItems As Boolean
  overload: Winpeak.Client.Networking.WebServer.IPaginatedDataSource`1.HasReceivedAllItems*
  nameWithType.vb: IPaginatedDataSource(Of T).HasReceivedAllItems
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
  fullName.vb: Winpeak.Client.Networking.WebServer.IPaginatedDataSource(Of T).HasReceivedAllItems
- uid: Winpeak.Client.Networking.WebServer.IPaginatedDataSource`1.ReceivedData
  commentId: P:Winpeak.Client.Networking.WebServer.IPaginatedDataSource`1.ReceivedData
  id: ReceivedData
  parent: Winpeak.Client.Networking.WebServer.IPaginatedDataSource`1
  langs:
  - csharp
  - vb
  name: ReceivedData
  nameWithType: IPaginatedDataSource<T>.ReceivedData
  fullName: Winpeak.Client.Networking.WebServer.IPaginatedDataSource<T>.ReceivedData
  type: Property
  source:
    id: ReceivedData
    path: ''
    startLine: 6237
  assemblies:
  - cs.temp.dll
  namespace: Winpeak.Client.Networking.WebServer
  syntax:
    content: bool ReceivedData { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: ReadOnly Property ReceivedData As Boolean
  overload: Winpeak.Client.Networking.WebServer.IPaginatedDataSource`1.ReceivedData*
  nameWithType.vb: IPaginatedDataSource(Of T).ReceivedData
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
  fullName.vb: Winpeak.Client.Networking.WebServer.IPaginatedDataSource(Of T).ReceivedData
references:
- uid: Winpeak.Client.Networking.WebServer
  commentId: N:Winpeak.Client.Networking.WebServer
  name: Winpeak.Client.Networking.WebServer
  nameWithType: Winpeak.Client.Networking.WebServer
  fullName: Winpeak.Client.Networking.WebServer
- uid: Winpeak.Client.Networking.WebServer.IPaginatedDataSource`1.GetItems*
  commentId: Overload:Winpeak.Client.Networking.WebServer.IPaginatedDataSource`1.GetItems
  name: GetItems
  nameWithType: IPaginatedDataSource<T>.GetItems
  fullName: Winpeak.Client.Networking.WebServer.IPaginatedDataSource<T>.GetItems
  nameWithType.vb: IPaginatedDataSource(Of T).GetItems
  fullName.vb: Winpeak.Client.Networking.WebServer.IPaginatedDataSource(Of T).GetItems
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Action{System.Collections.Generic.List{{T}}}
  commentId: T:System.Action{System.Collections.Generic.List{`0}}
  parent: System
  definition: System.Action`1
  name: Action<List<T>>
  nameWithType: Action<List<T>>
  fullName: System.Action<System.Collections.Generic.List<T>>
  nameWithType.vb: Action(Of List(Of T))
  fullName.vb: System.Action(Of System.Collections.Generic.List(Of T))
  name.vb: Action(Of List(Of T))
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Action`1
  commentId: T:System.Action`1
  isExternal: true
  name: Action<T>
  nameWithType: Action<T>
  fullName: System.Action<T>
  nameWithType.vb: Action(Of T)
  fullName.vb: System.Action(Of T)
  name.vb: Action(Of T)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Winpeak.Client.Networking.WebServer.IPaginatedDataSource`1.HasReceivedAllItems*
  commentId: Overload:Winpeak.Client.Networking.WebServer.IPaginatedDataSource`1.HasReceivedAllItems
  name: HasReceivedAllItems
  nameWithType: IPaginatedDataSource<T>.HasReceivedAllItems
  fullName: Winpeak.Client.Networking.WebServer.IPaginatedDataSource<T>.HasReceivedAllItems
  nameWithType.vb: IPaginatedDataSource(Of T).HasReceivedAllItems
  fullName.vb: Winpeak.Client.Networking.WebServer.IPaginatedDataSource(Of T).HasReceivedAllItems
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Winpeak.Client.Networking.WebServer.IPaginatedDataSource`1.ReceivedData*
  commentId: Overload:Winpeak.Client.Networking.WebServer.IPaginatedDataSource`1.ReceivedData
  name: ReceivedData
  nameWithType: IPaginatedDataSource<T>.ReceivedData
  fullName: Winpeak.Client.Networking.WebServer.IPaginatedDataSource<T>.ReceivedData
  nameWithType.vb: IPaginatedDataSource(Of T).ReceivedData
  fullName.vb: Winpeak.Client.Networking.WebServer.IPaginatedDataSource(Of T).ReceivedData
