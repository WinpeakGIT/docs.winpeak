### YamlMime:ManagedReference
items:
- uid: Org.BouncyCastle.Crypto.Tls.TlsClientProtocol
  commentId: T:Org.BouncyCastle.Crypto.Tls.TlsClientProtocol
  id: TlsClientProtocol
  parent: Org.BouncyCastle.Crypto.Tls
  children:
  - Org.BouncyCastle.Crypto.Tls.TlsClientProtocol.#ctor(SecureRandom)
  - Org.BouncyCastle.Crypto.Tls.TlsClientProtocol.#ctor(Stream,SecureRandom)
  - Org.BouncyCastle.Crypto.Tls.TlsClientProtocol.#ctor(Stream,Stream,SecureRandom)
  - Org.BouncyCastle.Crypto.Tls.TlsClientProtocol.CleanupHandshake
  - Org.BouncyCastle.Crypto.Tls.TlsClientProtocol.Connect(Org.BouncyCastle.Crypto.Tls.TlsClient)
  - Org.BouncyCastle.Crypto.Tls.TlsClientProtocol.Context
  - Org.BouncyCastle.Crypto.Tls.TlsClientProtocol.HandleHandshakeMessage(System.Byte,System.Byte[])
  - Org.BouncyCastle.Crypto.Tls.TlsClientProtocol.HandleSupplementalData(System.Collections.IList)
  - Org.BouncyCastle.Crypto.Tls.TlsClientProtocol.mAuthentication
  - Org.BouncyCastle.Crypto.Tls.TlsClientProtocol.mCertificateRequest
  - Org.BouncyCastle.Crypto.Tls.TlsClientProtocol.mCertificateStatus
  - Org.BouncyCastle.Crypto.Tls.TlsClientProtocol.mKeyExchange
  - Org.BouncyCastle.Crypto.Tls.TlsClientProtocol.mSelectedSessionID
  - Org.BouncyCastle.Crypto.Tls.TlsClientProtocol.mTlsClient
  - Org.BouncyCastle.Crypto.Tls.TlsClientProtocol.Peer
  - Org.BouncyCastle.Crypto.Tls.TlsClientProtocol.ReceiveNewSessionTicketMessage(MemoryStream)
  - Org.BouncyCastle.Crypto.Tls.TlsClientProtocol.ReceiveServerHelloMessage(MemoryStream)
  - Org.BouncyCastle.Crypto.Tls.TlsClientProtocol.SendCertificateVerifyMessage(Org.BouncyCastle.Crypto.Tls.DigitallySigned)
  - Org.BouncyCastle.Crypto.Tls.TlsClientProtocol.SendClientHelloMessage
  - Org.BouncyCastle.Crypto.Tls.TlsClientProtocol.SendClientKeyExchangeMessage
  langs:
  - csharp
  - vb
  name: TlsClientProtocol
  nameWithType: TlsClientProtocol
  fullName: Org.BouncyCastle.Crypto.Tls.TlsClientProtocol
  type: Class
  source:
    id: TlsClientProtocol
    path: ''
    startLine: 66938
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Tls
  syntax:
    content: 'public class TlsClientProtocol : TlsProtocol'
    content.vb: >-
      Public Class TlsClientProtocol
          Inherits TlsProtocol
  inheritance:
  - System.Object
  - Org.BouncyCastle.Crypto.Tls.TlsProtocol
  inheritedMembers:
  - Org.BouncyCastle.Crypto.Tls.TlsProtocol.CS_START
  - Org.BouncyCastle.Crypto.Tls.TlsProtocol.CS_CLIENT_HELLO
  - Org.BouncyCastle.Crypto.Tls.TlsProtocol.CS_SERVER_HELLO
  - Org.BouncyCastle.Crypto.Tls.TlsProtocol.CS_SERVER_SUPPLEMENTAL_DATA
  - Org.BouncyCastle.Crypto.Tls.TlsProtocol.CS_SERVER_CERTIFICATE
  - Org.BouncyCastle.Crypto.Tls.TlsProtocol.CS_CERTIFICATE_STATUS
  - Org.BouncyCastle.Crypto.Tls.TlsProtocol.CS_SERVER_KEY_EXCHANGE
  - Org.BouncyCastle.Crypto.Tls.TlsProtocol.CS_CERTIFICATE_REQUEST
  - Org.BouncyCastle.Crypto.Tls.TlsProtocol.CS_SERVER_HELLO_DONE
  - Org.BouncyCastle.Crypto.Tls.TlsProtocol.CS_CLIENT_SUPPLEMENTAL_DATA
  - Org.BouncyCastle.Crypto.Tls.TlsProtocol.CS_CLIENT_CERTIFICATE
  - Org.BouncyCastle.Crypto.Tls.TlsProtocol.CS_CLIENT_KEY_EXCHANGE
  - Org.BouncyCastle.Crypto.Tls.TlsProtocol.CS_CERTIFICATE_VERIFY
  - Org.BouncyCastle.Crypto.Tls.TlsProtocol.CS_CLIENT_FINISHED
  - Org.BouncyCastle.Crypto.Tls.TlsProtocol.CS_SERVER_SESSION_TICKET
  - Org.BouncyCastle.Crypto.Tls.TlsProtocol.CS_SERVER_FINISHED
  - Org.BouncyCastle.Crypto.Tls.TlsProtocol.CS_END
  - Org.BouncyCastle.Crypto.Tls.TlsProtocol.ADS_MODE_1_Nsub1
  - Org.BouncyCastle.Crypto.Tls.TlsProtocol.ADS_MODE_0_N
  - Org.BouncyCastle.Crypto.Tls.TlsProtocol.ADS_MODE_0_N_FIRSTONLY
  - Org.BouncyCastle.Crypto.Tls.TlsProtocol.mSecureRandom
  - Org.BouncyCastle.Crypto.Tls.TlsProtocol.mTlsSession
  - Org.BouncyCastle.Crypto.Tls.TlsProtocol.mSessionParameters
  - Org.BouncyCastle.Crypto.Tls.TlsProtocol.mSecurityParameters
  - Org.BouncyCastle.Crypto.Tls.TlsProtocol.mPeerCertificate
  - Org.BouncyCastle.Crypto.Tls.TlsProtocol.mOfferedCipherSuites
  - Org.BouncyCastle.Crypto.Tls.TlsProtocol.mOfferedCompressionMethods
  - Org.BouncyCastle.Crypto.Tls.TlsProtocol.mClientExtensions
  - Org.BouncyCastle.Crypto.Tls.TlsProtocol.mServerExtensions
  - Org.BouncyCastle.Crypto.Tls.TlsProtocol.mConnectionState
  - Org.BouncyCastle.Crypto.Tls.TlsProtocol.mResumedSession
  - Org.BouncyCastle.Crypto.Tls.TlsProtocol.mReceivedChangeCipherSpec
  - Org.BouncyCastle.Crypto.Tls.TlsProtocol.mSecureRenegotiation
  - Org.BouncyCastle.Crypto.Tls.TlsProtocol.mAllowCertificateStatus
  - Org.BouncyCastle.Crypto.Tls.TlsProtocol.mExpectSessionTicket
  - Org.BouncyCastle.Crypto.Tls.TlsProtocol.mBlocking
  - Org.BouncyCastle.Crypto.Tls.TlsProtocol.mInputBuffers
  - Org.BouncyCastle.Crypto.Tls.TlsProtocol.mOutputBuffer
  - Org.BouncyCastle.Crypto.Tls.TlsProtocol.HandleChangeCipherSpecMessage
  - Org.BouncyCastle.Crypto.Tls.TlsProtocol.HandleWarningMessage(System.Byte)
  - Org.BouncyCastle.Crypto.Tls.TlsProtocol.ApplyMaxFragmentLengthExtension
  - Org.BouncyCastle.Crypto.Tls.TlsProtocol.CheckReceivedChangeCipherSpec(System.Boolean)
  - Org.BouncyCastle.Crypto.Tls.TlsProtocol.BlockForHandshake
  - Org.BouncyCastle.Crypto.Tls.TlsProtocol.CompleteHandshake
  - Org.BouncyCastle.Crypto.Tls.TlsProtocol.ProcessRecord(System.Byte,System.Byte[],System.Int32,System.Int32)
  - Org.BouncyCastle.Crypto.Tls.TlsProtocol.ApplicationDataAvailable
  - Org.BouncyCastle.Crypto.Tls.TlsProtocol.ReadApplicationData(System.Byte[],System.Int32,System.Int32)
  - Org.BouncyCastle.Crypto.Tls.TlsProtocol.SafeReadRecord
  - Org.BouncyCastle.Crypto.Tls.TlsProtocol.SafeWriteRecord(System.Byte,System.Byte[],System.Int32,System.Int32)
  - Org.BouncyCastle.Crypto.Tls.TlsProtocol.WriteData(System.Byte[],System.Int32,System.Int32)
  - Org.BouncyCastle.Crypto.Tls.TlsProtocol.SetAppDataSplitMode(System.Int32)
  - Org.BouncyCastle.Crypto.Tls.TlsProtocol.WriteHandshakeMessage(System.Byte[],System.Int32,System.Int32)
  - Org.BouncyCastle.Crypto.Tls.TlsProtocol.Stream
  - Org.BouncyCastle.Crypto.Tls.TlsProtocol.OfferInput(System.Byte[])
  - Org.BouncyCastle.Crypto.Tls.TlsProtocol.GetAvailableInputBytes
  - Org.BouncyCastle.Crypto.Tls.TlsProtocol.ReadInput(System.Byte[],System.Int32,System.Int32)
  - Org.BouncyCastle.Crypto.Tls.TlsProtocol.OfferOutput(System.Byte[],System.Int32,System.Int32)
  - Org.BouncyCastle.Crypto.Tls.TlsProtocol.GetAvailableOutputBytes
  - Org.BouncyCastle.Crypto.Tls.TlsProtocol.ReadOutput(System.Byte[],System.Int32,System.Int32)
  - Org.BouncyCastle.Crypto.Tls.TlsProtocol.FailWithError(System.Byte,System.Byte,System.String,System.Exception)
  - Org.BouncyCastle.Crypto.Tls.TlsProtocol.InvalidateSession
  - Org.BouncyCastle.Crypto.Tls.TlsProtocol.ProcessFinishedMessage(MemoryStream)
  - Org.BouncyCastle.Crypto.Tls.TlsProtocol.RaiseAlert(System.Byte,System.Byte,System.String,System.Exception)
  - Org.BouncyCastle.Crypto.Tls.TlsProtocol.RaiseWarning(System.Byte,System.String)
  - Org.BouncyCastle.Crypto.Tls.TlsProtocol.SendCertificateMessage(Org.BouncyCastle.Crypto.Tls.Certificate)
  - Org.BouncyCastle.Crypto.Tls.TlsProtocol.SendChangeCipherSpecMessage
  - Org.BouncyCastle.Crypto.Tls.TlsProtocol.SendFinishedMessage
  - Org.BouncyCastle.Crypto.Tls.TlsProtocol.SendSupplementalDataMessage(System.Collections.IList)
  - Org.BouncyCastle.Crypto.Tls.TlsProtocol.CreateVerifyData(System.Boolean)
  - Org.BouncyCastle.Crypto.Tls.TlsProtocol.Close
  - Org.BouncyCastle.Crypto.Tls.TlsProtocol.HandleClose(System.Boolean)
  - Org.BouncyCastle.Crypto.Tls.TlsProtocol.Flush
  - Org.BouncyCastle.Crypto.Tls.TlsProtocol.IsClosed
  - Org.BouncyCastle.Crypto.Tls.TlsProtocol.ProcessMaxFragmentLengthExtension(System.Collections.IDictionary,System.Collections.IDictionary,System.Byte)
  - Org.BouncyCastle.Crypto.Tls.TlsProtocol.RefuseRenegotiation
  - Org.BouncyCastle.Crypto.Tls.TlsProtocol.AssertEmpty(MemoryStream)
  - Org.BouncyCastle.Crypto.Tls.TlsProtocol.CreateRandomBlock(System.Boolean,IRandomGenerator)
  - Org.BouncyCastle.Crypto.Tls.TlsProtocol.CreateRenegotiationInfo(System.Byte[])
  - Org.BouncyCastle.Crypto.Tls.TlsProtocol.EstablishMasterSecret(Org.BouncyCastle.Crypto.Tls.TlsContext,Org.BouncyCastle.Crypto.Tls.TlsKeyExchange)
  - Org.BouncyCastle.Crypto.Tls.TlsProtocol.GetCurrentPrfHash(Org.BouncyCastle.Crypto.Tls.TlsContext,Org.BouncyCastle.Crypto.Tls.TlsHandshakeHash,System.Byte[])
  - Org.BouncyCastle.Crypto.Tls.TlsProtocol.ReadExtensions(MemoryStream)
  - Org.BouncyCastle.Crypto.Tls.TlsProtocol.ReadSupplementalDataMessage(MemoryStream)
  - Org.BouncyCastle.Crypto.Tls.TlsProtocol.WriteExtensions(Stream,System.Collections.IDictionary)
  - Org.BouncyCastle.Crypto.Tls.TlsProtocol.WriteSelectedExtensions(Stream,System.Collections.IDictionary,System.Boolean)
  - Org.BouncyCastle.Crypto.Tls.TlsProtocol.WriteSupplementalData(Stream,System.Collections.IList)
  - Org.BouncyCastle.Crypto.Tls.TlsProtocol.GetPrfAlgorithm(Org.BouncyCastle.Crypto.Tls.TlsContext,System.Int32)
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ToString
  - System.Object.ReferenceEquals(System.Object,System.Object)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Org.BouncyCastle.Crypto.Tls.TlsClientProtocol.mTlsClient
  commentId: F:Org.BouncyCastle.Crypto.Tls.TlsClientProtocol.mTlsClient
  id: mTlsClient
  parent: Org.BouncyCastle.Crypto.Tls.TlsClientProtocol
  langs:
  - csharp
  - vb
  name: mTlsClient
  nameWithType: TlsClientProtocol.mTlsClient
  fullName: Org.BouncyCastle.Crypto.Tls.TlsClientProtocol.mTlsClient
  type: Field
  source:
    id: mTlsClient
    path: ''
    startLine: 66941
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Tls
  syntax:
    content: protected TlsClient mTlsClient
    return:
      type: Org.BouncyCastle.Crypto.Tls.TlsClient
    content.vb: Protected mTlsClient As TlsClient
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Org.BouncyCastle.Crypto.Tls.TlsClientProtocol.mSelectedSessionID
  commentId: F:Org.BouncyCastle.Crypto.Tls.TlsClientProtocol.mSelectedSessionID
  id: mSelectedSessionID
  parent: Org.BouncyCastle.Crypto.Tls.TlsClientProtocol
  langs:
  - csharp
  - vb
  name: mSelectedSessionID
  nameWithType: TlsClientProtocol.mSelectedSessionID
  fullName: Org.BouncyCastle.Crypto.Tls.TlsClientProtocol.mSelectedSessionID
  type: Field
  source:
    id: mSelectedSessionID
    path: ''
    startLine: 66944
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Tls
  syntax:
    content: protected byte[] mSelectedSessionID
    return:
      type: System.Byte[]
    content.vb: Protected mSelectedSessionID As Byte()
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Org.BouncyCastle.Crypto.Tls.TlsClientProtocol.mKeyExchange
  commentId: F:Org.BouncyCastle.Crypto.Tls.TlsClientProtocol.mKeyExchange
  id: mKeyExchange
  parent: Org.BouncyCastle.Crypto.Tls.TlsClientProtocol
  langs:
  - csharp
  - vb
  name: mKeyExchange
  nameWithType: TlsClientProtocol.mKeyExchange
  fullName: Org.BouncyCastle.Crypto.Tls.TlsClientProtocol.mKeyExchange
  type: Field
  source:
    id: mKeyExchange
    path: ''
    startLine: 66946
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Tls
  syntax:
    content: protected TlsKeyExchange mKeyExchange
    return:
      type: Org.BouncyCastle.Crypto.Tls.TlsKeyExchange
    content.vb: Protected mKeyExchange As TlsKeyExchange
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Org.BouncyCastle.Crypto.Tls.TlsClientProtocol.mAuthentication
  commentId: F:Org.BouncyCastle.Crypto.Tls.TlsClientProtocol.mAuthentication
  id: mAuthentication
  parent: Org.BouncyCastle.Crypto.Tls.TlsClientProtocol
  langs:
  - csharp
  - vb
  name: mAuthentication
  nameWithType: TlsClientProtocol.mAuthentication
  fullName: Org.BouncyCastle.Crypto.Tls.TlsClientProtocol.mAuthentication
  type: Field
  source:
    id: mAuthentication
    path: ''
    startLine: 66947
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Tls
  syntax:
    content: protected TlsAuthentication mAuthentication
    return:
      type: Org.BouncyCastle.Crypto.Tls.TlsAuthentication
    content.vb: Protected mAuthentication As TlsAuthentication
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Org.BouncyCastle.Crypto.Tls.TlsClientProtocol.mCertificateStatus
  commentId: F:Org.BouncyCastle.Crypto.Tls.TlsClientProtocol.mCertificateStatus
  id: mCertificateStatus
  parent: Org.BouncyCastle.Crypto.Tls.TlsClientProtocol
  langs:
  - csharp
  - vb
  name: mCertificateStatus
  nameWithType: TlsClientProtocol.mCertificateStatus
  fullName: Org.BouncyCastle.Crypto.Tls.TlsClientProtocol.mCertificateStatus
  type: Field
  source:
    id: mCertificateStatus
    path: ''
    startLine: 66949
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Tls
  syntax:
    content: protected CertificateStatus mCertificateStatus
    return:
      type: Org.BouncyCastle.Crypto.Tls.CertificateStatus
    content.vb: Protected mCertificateStatus As CertificateStatus
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Org.BouncyCastle.Crypto.Tls.TlsClientProtocol.mCertificateRequest
  commentId: F:Org.BouncyCastle.Crypto.Tls.TlsClientProtocol.mCertificateRequest
  id: mCertificateRequest
  parent: Org.BouncyCastle.Crypto.Tls.TlsClientProtocol
  langs:
  - csharp
  - vb
  name: mCertificateRequest
  nameWithType: TlsClientProtocol.mCertificateRequest
  fullName: Org.BouncyCastle.Crypto.Tls.TlsClientProtocol.mCertificateRequest
  type: Field
  source:
    id: mCertificateRequest
    path: ''
    startLine: 66950
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Tls
  syntax:
    content: protected CertificateRequest mCertificateRequest
    return:
      type: Org.BouncyCastle.Crypto.Tls.CertificateRequest
    content.vb: Protected mCertificateRequest As CertificateRequest
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Org.BouncyCastle.Crypto.Tls.TlsClientProtocol.#ctor(Stream,SecureRandom)
  commentId: M:Org.BouncyCastle.Crypto.Tls.TlsClientProtocol.#ctor(Stream,SecureRandom)
  id: '#ctor(Stream,SecureRandom)'
  parent: Org.BouncyCastle.Crypto.Tls.TlsClientProtocol
  langs:
  - csharp
  - vb
  name: TlsClientProtocol(Stream, SecureRandom)
  nameWithType: TlsClientProtocol.TlsClientProtocol(Stream, SecureRandom)
  fullName: Org.BouncyCastle.Crypto.Tls.TlsClientProtocol.TlsClientProtocol(Stream, SecureRandom)
  type: Constructor
  source:
    id: .ctor
    path: ''
    startLine: 66957
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Tls
  example: []
  syntax:
    content: public TlsClientProtocol(Stream stream, SecureRandom secureRandom)
    parameters:
    - id: stream
      type: Stream
    - id: secureRandom
      type: SecureRandom
    content.vb: Public Sub New(stream As Stream, secureRandom As SecureRandom)
  overload: Org.BouncyCastle.Crypto.Tls.TlsClientProtocol.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Org.BouncyCastle.Crypto.Tls.TlsClientProtocol.#ctor(Stream,Stream,SecureRandom)
  commentId: M:Org.BouncyCastle.Crypto.Tls.TlsClientProtocol.#ctor(Stream,Stream,SecureRandom)
  id: '#ctor(Stream,Stream,SecureRandom)'
  parent: Org.BouncyCastle.Crypto.Tls.TlsClientProtocol
  langs:
  - csharp
  - vb
  name: TlsClientProtocol(Stream, Stream, SecureRandom)
  nameWithType: TlsClientProtocol.TlsClientProtocol(Stream, Stream, SecureRandom)
  fullName: Org.BouncyCastle.Crypto.Tls.TlsClientProtocol.TlsClientProtocol(Stream, Stream, SecureRandom)
  type: Constructor
  source:
    id: .ctor
    path: ''
    startLine: 66968
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Tls
  example: []
  syntax:
    content: public TlsClientProtocol(Stream input, Stream output, SecureRandom secureRandom)
    parameters:
    - id: input
      type: Stream
    - id: output
      type: Stream
    - id: secureRandom
      type: SecureRandom
    content.vb: Public Sub New(input As Stream, output As Stream, secureRandom As SecureRandom)
  overload: Org.BouncyCastle.Crypto.Tls.TlsClientProtocol.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Org.BouncyCastle.Crypto.Tls.TlsClientProtocol.#ctor(SecureRandom)
  commentId: M:Org.BouncyCastle.Crypto.Tls.TlsClientProtocol.#ctor(SecureRandom)
  id: '#ctor(SecureRandom)'
  parent: Org.BouncyCastle.Crypto.Tls.TlsClientProtocol
  langs:
  - csharp
  - vb
  name: TlsClientProtocol(SecureRandom)
  nameWithType: TlsClientProtocol.TlsClientProtocol(SecureRandom)
  fullName: Org.BouncyCastle.Crypto.Tls.TlsClientProtocol.TlsClientProtocol(SecureRandom)
  type: Constructor
  source:
    id: .ctor
    path: ''
    startLine: 66988
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Tls
  example: []
  syntax:
    content: public TlsClientProtocol(SecureRandom secureRandom)
    parameters:
    - id: secureRandom
      type: SecureRandom
    content.vb: Public Sub New(secureRandom As SecureRandom)
  overload: Org.BouncyCastle.Crypto.Tls.TlsClientProtocol.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Org.BouncyCastle.Crypto.Tls.TlsClientProtocol.Connect(Org.BouncyCastle.Crypto.Tls.TlsClient)
  commentId: M:Org.BouncyCastle.Crypto.Tls.TlsClientProtocol.Connect(Org.BouncyCastle.Crypto.Tls.TlsClient)
  id: Connect(Org.BouncyCastle.Crypto.Tls.TlsClient)
  parent: Org.BouncyCastle.Crypto.Tls.TlsClientProtocol
  langs:
  - csharp
  - vb
  name: Connect(TlsClient)
  nameWithType: TlsClientProtocol.Connect(TlsClient)
  fullName: Org.BouncyCastle.Crypto.Tls.TlsClientProtocol.Connect(Org.BouncyCastle.Crypto.Tls.TlsClient)
  type: Method
  source:
    id: Connect
    path: ''
    startLine: 67003
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Tls
  example: []
  syntax:
    content: public virtual void Connect(TlsClient tlsClient)
    parameters:
    - id: tlsClient
      type: Org.BouncyCastle.Crypto.Tls.TlsClient
    content.vb: Public Overridable Sub Connect(tlsClient As TlsClient)
  overload: Org.BouncyCastle.Crypto.Tls.TlsClientProtocol.Connect*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Org.BouncyCastle.Crypto.Tls.TlsClientProtocol.CleanupHandshake
  commentId: M:Org.BouncyCastle.Crypto.Tls.TlsClientProtocol.CleanupHandshake
  id: CleanupHandshake
  parent: Org.BouncyCastle.Crypto.Tls.TlsClientProtocol
  langs:
  - csharp
  - vb
  name: CleanupHandshake()
  nameWithType: TlsClientProtocol.CleanupHandshake()
  fullName: Org.BouncyCastle.Crypto.Tls.TlsClientProtocol.CleanupHandshake()
  type: Method
  source:
    id: CleanupHandshake
    path: ''
    startLine: 67040
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Tls
  syntax:
    content: protected override void CleanupHandshake()
    content.vb: Protected Overrides Sub CleanupHandshake
  overridden: Org.BouncyCastle.Crypto.Tls.TlsProtocol.CleanupHandshake
  overload: Org.BouncyCastle.Crypto.Tls.TlsClientProtocol.CleanupHandshake*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: Org.BouncyCastle.Crypto.Tls.TlsClientProtocol.Context
  commentId: P:Org.BouncyCastle.Crypto.Tls.TlsClientProtocol.Context
  id: Context
  parent: Org.BouncyCastle.Crypto.Tls.TlsClientProtocol
  langs:
  - csharp
  - vb
  name: Context
  nameWithType: TlsClientProtocol.Context
  fullName: Org.BouncyCastle.Crypto.Tls.TlsClientProtocol.Context
  type: Property
  source:
    id: Context
    path: ''
    startLine: 67051
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Tls
  syntax:
    content: protected override TlsContext Context { get; }
    parameters: []
    return:
      type: Org.BouncyCastle.Crypto.Tls.TlsContext
    content.vb: Protected Overrides ReadOnly Property Context As TlsContext
  overridden: Org.BouncyCastle.Crypto.Tls.TlsProtocol.Context
  overload: Org.BouncyCastle.Crypto.Tls.TlsClientProtocol.Context*
  modifiers.csharp:
  - protected
  - override
  - get
  modifiers.vb:
  - Protected
  - Overrides
  - ReadOnly
- uid: Org.BouncyCastle.Crypto.Tls.TlsClientProtocol.Peer
  commentId: P:Org.BouncyCastle.Crypto.Tls.TlsClientProtocol.Peer
  id: Peer
  parent: Org.BouncyCastle.Crypto.Tls.TlsClientProtocol
  langs:
  - csharp
  - vb
  name: Peer
  nameWithType: TlsClientProtocol.Peer
  fullName: Org.BouncyCastle.Crypto.Tls.TlsClientProtocol.Peer
  type: Property
  source:
    id: Peer
    path: ''
    startLine: 67061
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Tls
  syntax:
    content: protected override TlsPeer Peer { get; }
    parameters: []
    return:
      type: Org.BouncyCastle.Crypto.Tls.TlsPeer
    content.vb: Protected Overrides ReadOnly Property Peer As TlsPeer
  overridden: Org.BouncyCastle.Crypto.Tls.TlsProtocol.Peer
  overload: Org.BouncyCastle.Crypto.Tls.TlsClientProtocol.Peer*
  modifiers.csharp:
  - protected
  - override
  - get
  modifiers.vb:
  - Protected
  - Overrides
  - ReadOnly
- uid: Org.BouncyCastle.Crypto.Tls.TlsClientProtocol.HandleHandshakeMessage(System.Byte,System.Byte[])
  commentId: M:Org.BouncyCastle.Crypto.Tls.TlsClientProtocol.HandleHandshakeMessage(System.Byte,System.Byte[])
  id: HandleHandshakeMessage(System.Byte,System.Byte[])
  parent: Org.BouncyCastle.Crypto.Tls.TlsClientProtocol
  langs:
  - csharp
  - vb
  name: HandleHandshakeMessage(Byte, Byte[])
  nameWithType: TlsClientProtocol.HandleHandshakeMessage(Byte, Byte[])
  fullName: Org.BouncyCastle.Crypto.Tls.TlsClientProtocol.HandleHandshakeMessage(System.Byte, System.Byte[])
  type: Method
  source:
    id: HandleHandshakeMessage
    path: ''
    startLine: 67066
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Tls
  syntax:
    content: protected override void HandleHandshakeMessage(byte type, byte[] data)
    parameters:
    - id: type
      type: System.Byte
    - id: data
      type: System.Byte[]
    content.vb: Protected Overrides Sub HandleHandshakeMessage(type As Byte, data As Byte())
  overridden: Org.BouncyCastle.Crypto.Tls.TlsProtocol.HandleHandshakeMessage(System.Byte,System.Byte[])
  overload: Org.BouncyCastle.Crypto.Tls.TlsClientProtocol.HandleHandshakeMessage*
  nameWithType.vb: TlsClientProtocol.HandleHandshakeMessage(Byte, Byte())
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
  fullName.vb: Org.BouncyCastle.Crypto.Tls.TlsClientProtocol.HandleHandshakeMessage(System.Byte, System.Byte())
  name.vb: HandleHandshakeMessage(Byte, Byte())
- uid: Org.BouncyCastle.Crypto.Tls.TlsClientProtocol.HandleSupplementalData(System.Collections.IList)
  commentId: M:Org.BouncyCastle.Crypto.Tls.TlsClientProtocol.HandleSupplementalData(System.Collections.IList)
  id: HandleSupplementalData(System.Collections.IList)
  parent: Org.BouncyCastle.Crypto.Tls.TlsClientProtocol
  langs:
  - csharp
  - vb
  name: HandleSupplementalData(IList)
  nameWithType: TlsClientProtocol.HandleSupplementalData(IList)
  fullName: Org.BouncyCastle.Crypto.Tls.TlsClientProtocol.HandleSupplementalData(System.Collections.IList)
  type: Method
  source:
    id: HandleSupplementalData
    path: ''
    startLine: 67493
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Tls
  syntax:
    content: protected virtual void HandleSupplementalData(IList serverSupplementalData)
    parameters:
    - id: serverSupplementalData
      type: System.Collections.IList
    content.vb: Protected Overridable Sub HandleSupplementalData(serverSupplementalData As IList)
  overload: Org.BouncyCastle.Crypto.Tls.TlsClientProtocol.HandleSupplementalData*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: Org.BouncyCastle.Crypto.Tls.TlsClientProtocol.ReceiveNewSessionTicketMessage(MemoryStream)
  commentId: M:Org.BouncyCastle.Crypto.Tls.TlsClientProtocol.ReceiveNewSessionTicketMessage(MemoryStream)
  id: ReceiveNewSessionTicketMessage(MemoryStream)
  parent: Org.BouncyCastle.Crypto.Tls.TlsClientProtocol
  langs:
  - csharp
  - vb
  name: ReceiveNewSessionTicketMessage(MemoryStream)
  nameWithType: TlsClientProtocol.ReceiveNewSessionTicketMessage(MemoryStream)
  fullName: Org.BouncyCastle.Crypto.Tls.TlsClientProtocol.ReceiveNewSessionTicketMessage(MemoryStream)
  type: Method
  source:
    id: ReceiveNewSessionTicketMessage
    path: ''
    startLine: 67502
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Tls
  syntax:
    content: protected virtual void ReceiveNewSessionTicketMessage(MemoryStream buf)
    parameters:
    - id: buf
      type: MemoryStream
    content.vb: Protected Overridable Sub ReceiveNewSessionTicketMessage(buf As MemoryStream)
  overload: Org.BouncyCastle.Crypto.Tls.TlsClientProtocol.ReceiveNewSessionTicketMessage*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: Org.BouncyCastle.Crypto.Tls.TlsClientProtocol.ReceiveServerHelloMessage(MemoryStream)
  commentId: M:Org.BouncyCastle.Crypto.Tls.TlsClientProtocol.ReceiveServerHelloMessage(MemoryStream)
  id: ReceiveServerHelloMessage(MemoryStream)
  parent: Org.BouncyCastle.Crypto.Tls.TlsClientProtocol
  langs:
  - csharp
  - vb
  name: ReceiveServerHelloMessage(MemoryStream)
  nameWithType: TlsClientProtocol.ReceiveServerHelloMessage(MemoryStream)
  fullName: Org.BouncyCastle.Crypto.Tls.TlsClientProtocol.ReceiveServerHelloMessage(MemoryStream)
  type: Method
  source:
    id: ReceiveServerHelloMessage
    path: ''
    startLine: 67511
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Tls
  syntax:
    content: protected virtual void ReceiveServerHelloMessage(MemoryStream buf)
    parameters:
    - id: buf
      type: MemoryStream
    content.vb: Protected Overridable Sub ReceiveServerHelloMessage(buf As MemoryStream)
  overload: Org.BouncyCastle.Crypto.Tls.TlsClientProtocol.ReceiveServerHelloMessage*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: Org.BouncyCastle.Crypto.Tls.TlsClientProtocol.SendCertificateVerifyMessage(Org.BouncyCastle.Crypto.Tls.DigitallySigned)
  commentId: M:Org.BouncyCastle.Crypto.Tls.TlsClientProtocol.SendCertificateVerifyMessage(Org.BouncyCastle.Crypto.Tls.DigitallySigned)
  id: SendCertificateVerifyMessage(Org.BouncyCastle.Crypto.Tls.DigitallySigned)
  parent: Org.BouncyCastle.Crypto.Tls.TlsClientProtocol
  langs:
  - csharp
  - vb
  name: SendCertificateVerifyMessage(DigitallySigned)
  nameWithType: TlsClientProtocol.SendCertificateVerifyMessage(DigitallySigned)
  fullName: Org.BouncyCastle.Crypto.Tls.TlsClientProtocol.SendCertificateVerifyMessage(Org.BouncyCastle.Crypto.Tls.DigitallySigned)
  type: Method
  source:
    id: SendCertificateVerifyMessage
    path: ''
    startLine: 67723
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Tls
  syntax:
    content: protected virtual void SendCertificateVerifyMessage(DigitallySigned certificateVerify)
    parameters:
    - id: certificateVerify
      type: Org.BouncyCastle.Crypto.Tls.DigitallySigned
    content.vb: Protected Overridable Sub SendCertificateVerifyMessage(certificateVerify As DigitallySigned)
  overload: Org.BouncyCastle.Crypto.Tls.TlsClientProtocol.SendCertificateVerifyMessage*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: Org.BouncyCastle.Crypto.Tls.TlsClientProtocol.SendClientHelloMessage
  commentId: M:Org.BouncyCastle.Crypto.Tls.TlsClientProtocol.SendClientHelloMessage
  id: SendClientHelloMessage
  parent: Org.BouncyCastle.Crypto.Tls.TlsClientProtocol
  langs:
  - csharp
  - vb
  name: SendClientHelloMessage()
  nameWithType: TlsClientProtocol.SendClientHelloMessage()
  fullName: Org.BouncyCastle.Crypto.Tls.TlsClientProtocol.SendClientHelloMessage()
  type: Method
  source:
    id: SendClientHelloMessage
    path: ''
    startLine: 67732
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Tls
  syntax:
    content: protected virtual void SendClientHelloMessage()
    content.vb: Protected Overridable Sub SendClientHelloMessage
  overload: Org.BouncyCastle.Crypto.Tls.TlsClientProtocol.SendClientHelloMessage*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: Org.BouncyCastle.Crypto.Tls.TlsClientProtocol.SendClientKeyExchangeMessage
  commentId: M:Org.BouncyCastle.Crypto.Tls.TlsClientProtocol.SendClientKeyExchangeMessage
  id: SendClientKeyExchangeMessage
  parent: Org.BouncyCastle.Crypto.Tls.TlsClientProtocol
  langs:
  - csharp
  - vb
  name: SendClientKeyExchangeMessage()
  nameWithType: TlsClientProtocol.SendClientKeyExchangeMessage()
  fullName: Org.BouncyCastle.Crypto.Tls.TlsClientProtocol.SendClientKeyExchangeMessage()
  type: Method
  source:
    id: SendClientKeyExchangeMessage
    path: ''
    startLine: 67826
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Tls
  syntax:
    content: protected virtual void SendClientKeyExchangeMessage()
    content.vb: Protected Overridable Sub SendClientKeyExchangeMessage
  overload: Org.BouncyCastle.Crypto.Tls.TlsClientProtocol.SendClientKeyExchangeMessage*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
references:
- uid: Org.BouncyCastle.Crypto.Tls
  commentId: N:Org.BouncyCastle.Crypto.Tls
  name: Org.BouncyCastle.Crypto.Tls
  nameWithType: Org.BouncyCastle.Crypto.Tls
  fullName: Org.BouncyCastle.Crypto.Tls
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Org.BouncyCastle.Crypto.Tls.TlsProtocol
  commentId: T:Org.BouncyCastle.Crypto.Tls.TlsProtocol
  parent: Org.BouncyCastle.Crypto.Tls
  name: TlsProtocol
  nameWithType: TlsProtocol
  fullName: Org.BouncyCastle.Crypto.Tls.TlsProtocol
- uid: Org.BouncyCastle.Crypto.Tls.TlsProtocol.CS_START
  commentId: F:Org.BouncyCastle.Crypto.Tls.TlsProtocol.CS_START
  parent: Org.BouncyCastle.Crypto.Tls.TlsProtocol
  name: CS_START
  nameWithType: TlsProtocol.CS_START
  fullName: Org.BouncyCastle.Crypto.Tls.TlsProtocol.CS_START
- uid: Org.BouncyCastle.Crypto.Tls.TlsProtocol.CS_CLIENT_HELLO
  commentId: F:Org.BouncyCastle.Crypto.Tls.TlsProtocol.CS_CLIENT_HELLO
  parent: Org.BouncyCastle.Crypto.Tls.TlsProtocol
  name: CS_CLIENT_HELLO
  nameWithType: TlsProtocol.CS_CLIENT_HELLO
  fullName: Org.BouncyCastle.Crypto.Tls.TlsProtocol.CS_CLIENT_HELLO
- uid: Org.BouncyCastle.Crypto.Tls.TlsProtocol.CS_SERVER_HELLO
  commentId: F:Org.BouncyCastle.Crypto.Tls.TlsProtocol.CS_SERVER_HELLO
  parent: Org.BouncyCastle.Crypto.Tls.TlsProtocol
  name: CS_SERVER_HELLO
  nameWithType: TlsProtocol.CS_SERVER_HELLO
  fullName: Org.BouncyCastle.Crypto.Tls.TlsProtocol.CS_SERVER_HELLO
- uid: Org.BouncyCastle.Crypto.Tls.TlsProtocol.CS_SERVER_SUPPLEMENTAL_DATA
  commentId: F:Org.BouncyCastle.Crypto.Tls.TlsProtocol.CS_SERVER_SUPPLEMENTAL_DATA
  parent: Org.BouncyCastle.Crypto.Tls.TlsProtocol
  name: CS_SERVER_SUPPLEMENTAL_DATA
  nameWithType: TlsProtocol.CS_SERVER_SUPPLEMENTAL_DATA
  fullName: Org.BouncyCastle.Crypto.Tls.TlsProtocol.CS_SERVER_SUPPLEMENTAL_DATA
- uid: Org.BouncyCastle.Crypto.Tls.TlsProtocol.CS_SERVER_CERTIFICATE
  commentId: F:Org.BouncyCastle.Crypto.Tls.TlsProtocol.CS_SERVER_CERTIFICATE
  parent: Org.BouncyCastle.Crypto.Tls.TlsProtocol
  name: CS_SERVER_CERTIFICATE
  nameWithType: TlsProtocol.CS_SERVER_CERTIFICATE
  fullName: Org.BouncyCastle.Crypto.Tls.TlsProtocol.CS_SERVER_CERTIFICATE
- uid: Org.BouncyCastle.Crypto.Tls.TlsProtocol.CS_CERTIFICATE_STATUS
  commentId: F:Org.BouncyCastle.Crypto.Tls.TlsProtocol.CS_CERTIFICATE_STATUS
  parent: Org.BouncyCastle.Crypto.Tls.TlsProtocol
  name: CS_CERTIFICATE_STATUS
  nameWithType: TlsProtocol.CS_CERTIFICATE_STATUS
  fullName: Org.BouncyCastle.Crypto.Tls.TlsProtocol.CS_CERTIFICATE_STATUS
- uid: Org.BouncyCastle.Crypto.Tls.TlsProtocol.CS_SERVER_KEY_EXCHANGE
  commentId: F:Org.BouncyCastle.Crypto.Tls.TlsProtocol.CS_SERVER_KEY_EXCHANGE
  parent: Org.BouncyCastle.Crypto.Tls.TlsProtocol
  name: CS_SERVER_KEY_EXCHANGE
  nameWithType: TlsProtocol.CS_SERVER_KEY_EXCHANGE
  fullName: Org.BouncyCastle.Crypto.Tls.TlsProtocol.CS_SERVER_KEY_EXCHANGE
- uid: Org.BouncyCastle.Crypto.Tls.TlsProtocol.CS_CERTIFICATE_REQUEST
  commentId: F:Org.BouncyCastle.Crypto.Tls.TlsProtocol.CS_CERTIFICATE_REQUEST
  parent: Org.BouncyCastle.Crypto.Tls.TlsProtocol
  name: CS_CERTIFICATE_REQUEST
  nameWithType: TlsProtocol.CS_CERTIFICATE_REQUEST
  fullName: Org.BouncyCastle.Crypto.Tls.TlsProtocol.CS_CERTIFICATE_REQUEST
- uid: Org.BouncyCastle.Crypto.Tls.TlsProtocol.CS_SERVER_HELLO_DONE
  commentId: F:Org.BouncyCastle.Crypto.Tls.TlsProtocol.CS_SERVER_HELLO_DONE
  parent: Org.BouncyCastle.Crypto.Tls.TlsProtocol
  name: CS_SERVER_HELLO_DONE
  nameWithType: TlsProtocol.CS_SERVER_HELLO_DONE
  fullName: Org.BouncyCastle.Crypto.Tls.TlsProtocol.CS_SERVER_HELLO_DONE
- uid: Org.BouncyCastle.Crypto.Tls.TlsProtocol.CS_CLIENT_SUPPLEMENTAL_DATA
  commentId: F:Org.BouncyCastle.Crypto.Tls.TlsProtocol.CS_CLIENT_SUPPLEMENTAL_DATA
  parent: Org.BouncyCastle.Crypto.Tls.TlsProtocol
  name: CS_CLIENT_SUPPLEMENTAL_DATA
  nameWithType: TlsProtocol.CS_CLIENT_SUPPLEMENTAL_DATA
  fullName: Org.BouncyCastle.Crypto.Tls.TlsProtocol.CS_CLIENT_SUPPLEMENTAL_DATA
- uid: Org.BouncyCastle.Crypto.Tls.TlsProtocol.CS_CLIENT_CERTIFICATE
  commentId: F:Org.BouncyCastle.Crypto.Tls.TlsProtocol.CS_CLIENT_CERTIFICATE
  parent: Org.BouncyCastle.Crypto.Tls.TlsProtocol
  name: CS_CLIENT_CERTIFICATE
  nameWithType: TlsProtocol.CS_CLIENT_CERTIFICATE
  fullName: Org.BouncyCastle.Crypto.Tls.TlsProtocol.CS_CLIENT_CERTIFICATE
- uid: Org.BouncyCastle.Crypto.Tls.TlsProtocol.CS_CLIENT_KEY_EXCHANGE
  commentId: F:Org.BouncyCastle.Crypto.Tls.TlsProtocol.CS_CLIENT_KEY_EXCHANGE
  parent: Org.BouncyCastle.Crypto.Tls.TlsProtocol
  name: CS_CLIENT_KEY_EXCHANGE
  nameWithType: TlsProtocol.CS_CLIENT_KEY_EXCHANGE
  fullName: Org.BouncyCastle.Crypto.Tls.TlsProtocol.CS_CLIENT_KEY_EXCHANGE
- uid: Org.BouncyCastle.Crypto.Tls.TlsProtocol.CS_CERTIFICATE_VERIFY
  commentId: F:Org.BouncyCastle.Crypto.Tls.TlsProtocol.CS_CERTIFICATE_VERIFY
  parent: Org.BouncyCastle.Crypto.Tls.TlsProtocol
  name: CS_CERTIFICATE_VERIFY
  nameWithType: TlsProtocol.CS_CERTIFICATE_VERIFY
  fullName: Org.BouncyCastle.Crypto.Tls.TlsProtocol.CS_CERTIFICATE_VERIFY
- uid: Org.BouncyCastle.Crypto.Tls.TlsProtocol.CS_CLIENT_FINISHED
  commentId: F:Org.BouncyCastle.Crypto.Tls.TlsProtocol.CS_CLIENT_FINISHED
  parent: Org.BouncyCastle.Crypto.Tls.TlsProtocol
  name: CS_CLIENT_FINISHED
  nameWithType: TlsProtocol.CS_CLIENT_FINISHED
  fullName: Org.BouncyCastle.Crypto.Tls.TlsProtocol.CS_CLIENT_FINISHED
- uid: Org.BouncyCastle.Crypto.Tls.TlsProtocol.CS_SERVER_SESSION_TICKET
  commentId: F:Org.BouncyCastle.Crypto.Tls.TlsProtocol.CS_SERVER_SESSION_TICKET
  parent: Org.BouncyCastle.Crypto.Tls.TlsProtocol
  name: CS_SERVER_SESSION_TICKET
  nameWithType: TlsProtocol.CS_SERVER_SESSION_TICKET
  fullName: Org.BouncyCastle.Crypto.Tls.TlsProtocol.CS_SERVER_SESSION_TICKET
- uid: Org.BouncyCastle.Crypto.Tls.TlsProtocol.CS_SERVER_FINISHED
  commentId: F:Org.BouncyCastle.Crypto.Tls.TlsProtocol.CS_SERVER_FINISHED
  parent: Org.BouncyCastle.Crypto.Tls.TlsProtocol
  name: CS_SERVER_FINISHED
  nameWithType: TlsProtocol.CS_SERVER_FINISHED
  fullName: Org.BouncyCastle.Crypto.Tls.TlsProtocol.CS_SERVER_FINISHED
- uid: Org.BouncyCastle.Crypto.Tls.TlsProtocol.CS_END
  commentId: F:Org.BouncyCastle.Crypto.Tls.TlsProtocol.CS_END
  parent: Org.BouncyCastle.Crypto.Tls.TlsProtocol
  name: CS_END
  nameWithType: TlsProtocol.CS_END
  fullName: Org.BouncyCastle.Crypto.Tls.TlsProtocol.CS_END
- uid: Org.BouncyCastle.Crypto.Tls.TlsProtocol.ADS_MODE_1_Nsub1
  commentId: F:Org.BouncyCastle.Crypto.Tls.TlsProtocol.ADS_MODE_1_Nsub1
  parent: Org.BouncyCastle.Crypto.Tls.TlsProtocol
  name: ADS_MODE_1_Nsub1
  nameWithType: TlsProtocol.ADS_MODE_1_Nsub1
  fullName: Org.BouncyCastle.Crypto.Tls.TlsProtocol.ADS_MODE_1_Nsub1
- uid: Org.BouncyCastle.Crypto.Tls.TlsProtocol.ADS_MODE_0_N
  commentId: F:Org.BouncyCastle.Crypto.Tls.TlsProtocol.ADS_MODE_0_N
  parent: Org.BouncyCastle.Crypto.Tls.TlsProtocol
  name: ADS_MODE_0_N
  nameWithType: TlsProtocol.ADS_MODE_0_N
  fullName: Org.BouncyCastle.Crypto.Tls.TlsProtocol.ADS_MODE_0_N
- uid: Org.BouncyCastle.Crypto.Tls.TlsProtocol.ADS_MODE_0_N_FIRSTONLY
  commentId: F:Org.BouncyCastle.Crypto.Tls.TlsProtocol.ADS_MODE_0_N_FIRSTONLY
  parent: Org.BouncyCastle.Crypto.Tls.TlsProtocol
  name: ADS_MODE_0_N_FIRSTONLY
  nameWithType: TlsProtocol.ADS_MODE_0_N_FIRSTONLY
  fullName: Org.BouncyCastle.Crypto.Tls.TlsProtocol.ADS_MODE_0_N_FIRSTONLY
- uid: Org.BouncyCastle.Crypto.Tls.TlsProtocol.mSecureRandom
  commentId: F:Org.BouncyCastle.Crypto.Tls.TlsProtocol.mSecureRandom
  parent: Org.BouncyCastle.Crypto.Tls.TlsProtocol
  name: mSecureRandom
  nameWithType: TlsProtocol.mSecureRandom
  fullName: Org.BouncyCastle.Crypto.Tls.TlsProtocol.mSecureRandom
- uid: Org.BouncyCastle.Crypto.Tls.TlsProtocol.mTlsSession
  commentId: F:Org.BouncyCastle.Crypto.Tls.TlsProtocol.mTlsSession
  parent: Org.BouncyCastle.Crypto.Tls.TlsProtocol
  name: mTlsSession
  nameWithType: TlsProtocol.mTlsSession
  fullName: Org.BouncyCastle.Crypto.Tls.TlsProtocol.mTlsSession
- uid: Org.BouncyCastle.Crypto.Tls.TlsProtocol.mSessionParameters
  commentId: F:Org.BouncyCastle.Crypto.Tls.TlsProtocol.mSessionParameters
  parent: Org.BouncyCastle.Crypto.Tls.TlsProtocol
  name: mSessionParameters
  nameWithType: TlsProtocol.mSessionParameters
  fullName: Org.BouncyCastle.Crypto.Tls.TlsProtocol.mSessionParameters
- uid: Org.BouncyCastle.Crypto.Tls.TlsProtocol.mSecurityParameters
  commentId: F:Org.BouncyCastle.Crypto.Tls.TlsProtocol.mSecurityParameters
  parent: Org.BouncyCastle.Crypto.Tls.TlsProtocol
  name: mSecurityParameters
  nameWithType: TlsProtocol.mSecurityParameters
  fullName: Org.BouncyCastle.Crypto.Tls.TlsProtocol.mSecurityParameters
- uid: Org.BouncyCastle.Crypto.Tls.TlsProtocol.mPeerCertificate
  commentId: F:Org.BouncyCastle.Crypto.Tls.TlsProtocol.mPeerCertificate
  parent: Org.BouncyCastle.Crypto.Tls.TlsProtocol
  name: mPeerCertificate
  nameWithType: TlsProtocol.mPeerCertificate
  fullName: Org.BouncyCastle.Crypto.Tls.TlsProtocol.mPeerCertificate
- uid: Org.BouncyCastle.Crypto.Tls.TlsProtocol.mOfferedCipherSuites
  commentId: F:Org.BouncyCastle.Crypto.Tls.TlsProtocol.mOfferedCipherSuites
  parent: Org.BouncyCastle.Crypto.Tls.TlsProtocol
  name: mOfferedCipherSuites
  nameWithType: TlsProtocol.mOfferedCipherSuites
  fullName: Org.BouncyCastle.Crypto.Tls.TlsProtocol.mOfferedCipherSuites
- uid: Org.BouncyCastle.Crypto.Tls.TlsProtocol.mOfferedCompressionMethods
  commentId: F:Org.BouncyCastle.Crypto.Tls.TlsProtocol.mOfferedCompressionMethods
  parent: Org.BouncyCastle.Crypto.Tls.TlsProtocol
  name: mOfferedCompressionMethods
  nameWithType: TlsProtocol.mOfferedCompressionMethods
  fullName: Org.BouncyCastle.Crypto.Tls.TlsProtocol.mOfferedCompressionMethods
- uid: Org.BouncyCastle.Crypto.Tls.TlsProtocol.mClientExtensions
  commentId: F:Org.BouncyCastle.Crypto.Tls.TlsProtocol.mClientExtensions
  parent: Org.BouncyCastle.Crypto.Tls.TlsProtocol
  name: mClientExtensions
  nameWithType: TlsProtocol.mClientExtensions
  fullName: Org.BouncyCastle.Crypto.Tls.TlsProtocol.mClientExtensions
- uid: Org.BouncyCastle.Crypto.Tls.TlsProtocol.mServerExtensions
  commentId: F:Org.BouncyCastle.Crypto.Tls.TlsProtocol.mServerExtensions
  parent: Org.BouncyCastle.Crypto.Tls.TlsProtocol
  name: mServerExtensions
  nameWithType: TlsProtocol.mServerExtensions
  fullName: Org.BouncyCastle.Crypto.Tls.TlsProtocol.mServerExtensions
- uid: Org.BouncyCastle.Crypto.Tls.TlsProtocol.mConnectionState
  commentId: F:Org.BouncyCastle.Crypto.Tls.TlsProtocol.mConnectionState
  parent: Org.BouncyCastle.Crypto.Tls.TlsProtocol
  name: mConnectionState
  nameWithType: TlsProtocol.mConnectionState
  fullName: Org.BouncyCastle.Crypto.Tls.TlsProtocol.mConnectionState
- uid: Org.BouncyCastle.Crypto.Tls.TlsProtocol.mResumedSession
  commentId: F:Org.BouncyCastle.Crypto.Tls.TlsProtocol.mResumedSession
  parent: Org.BouncyCastle.Crypto.Tls.TlsProtocol
  name: mResumedSession
  nameWithType: TlsProtocol.mResumedSession
  fullName: Org.BouncyCastle.Crypto.Tls.TlsProtocol.mResumedSession
- uid: Org.BouncyCastle.Crypto.Tls.TlsProtocol.mReceivedChangeCipherSpec
  commentId: F:Org.BouncyCastle.Crypto.Tls.TlsProtocol.mReceivedChangeCipherSpec
  parent: Org.BouncyCastle.Crypto.Tls.TlsProtocol
  name: mReceivedChangeCipherSpec
  nameWithType: TlsProtocol.mReceivedChangeCipherSpec
  fullName: Org.BouncyCastle.Crypto.Tls.TlsProtocol.mReceivedChangeCipherSpec
- uid: Org.BouncyCastle.Crypto.Tls.TlsProtocol.mSecureRenegotiation
  commentId: F:Org.BouncyCastle.Crypto.Tls.TlsProtocol.mSecureRenegotiation
  parent: Org.BouncyCastle.Crypto.Tls.TlsProtocol
  name: mSecureRenegotiation
  nameWithType: TlsProtocol.mSecureRenegotiation
  fullName: Org.BouncyCastle.Crypto.Tls.TlsProtocol.mSecureRenegotiation
- uid: Org.BouncyCastle.Crypto.Tls.TlsProtocol.mAllowCertificateStatus
  commentId: F:Org.BouncyCastle.Crypto.Tls.TlsProtocol.mAllowCertificateStatus
  parent: Org.BouncyCastle.Crypto.Tls.TlsProtocol
  name: mAllowCertificateStatus
  nameWithType: TlsProtocol.mAllowCertificateStatus
  fullName: Org.BouncyCastle.Crypto.Tls.TlsProtocol.mAllowCertificateStatus
- uid: Org.BouncyCastle.Crypto.Tls.TlsProtocol.mExpectSessionTicket
  commentId: F:Org.BouncyCastle.Crypto.Tls.TlsProtocol.mExpectSessionTicket
  parent: Org.BouncyCastle.Crypto.Tls.TlsProtocol
  name: mExpectSessionTicket
  nameWithType: TlsProtocol.mExpectSessionTicket
  fullName: Org.BouncyCastle.Crypto.Tls.TlsProtocol.mExpectSessionTicket
- uid: Org.BouncyCastle.Crypto.Tls.TlsProtocol.mBlocking
  commentId: F:Org.BouncyCastle.Crypto.Tls.TlsProtocol.mBlocking
  parent: Org.BouncyCastle.Crypto.Tls.TlsProtocol
  name: mBlocking
  nameWithType: TlsProtocol.mBlocking
  fullName: Org.BouncyCastle.Crypto.Tls.TlsProtocol.mBlocking
- uid: Org.BouncyCastle.Crypto.Tls.TlsProtocol.mInputBuffers
  commentId: F:Org.BouncyCastle.Crypto.Tls.TlsProtocol.mInputBuffers
  parent: Org.BouncyCastle.Crypto.Tls.TlsProtocol
  name: mInputBuffers
  nameWithType: TlsProtocol.mInputBuffers
  fullName: Org.BouncyCastle.Crypto.Tls.TlsProtocol.mInputBuffers
- uid: Org.BouncyCastle.Crypto.Tls.TlsProtocol.mOutputBuffer
  commentId: F:Org.BouncyCastle.Crypto.Tls.TlsProtocol.mOutputBuffer
  parent: Org.BouncyCastle.Crypto.Tls.TlsProtocol
  name: mOutputBuffer
  nameWithType: TlsProtocol.mOutputBuffer
  fullName: Org.BouncyCastle.Crypto.Tls.TlsProtocol.mOutputBuffer
- uid: Org.BouncyCastle.Crypto.Tls.TlsProtocol.HandleChangeCipherSpecMessage
  commentId: M:Org.BouncyCastle.Crypto.Tls.TlsProtocol.HandleChangeCipherSpecMessage
  parent: Org.BouncyCastle.Crypto.Tls.TlsProtocol
  name: HandleChangeCipherSpecMessage()
  nameWithType: TlsProtocol.HandleChangeCipherSpecMessage()
  fullName: Org.BouncyCastle.Crypto.Tls.TlsProtocol.HandleChangeCipherSpecMessage()
  spec.csharp:
  - uid: Org.BouncyCastle.Crypto.Tls.TlsProtocol.HandleChangeCipherSpecMessage
    name: HandleChangeCipherSpecMessage
    nameWithType: TlsProtocol.HandleChangeCipherSpecMessage
    fullName: Org.BouncyCastle.Crypto.Tls.TlsProtocol.HandleChangeCipherSpecMessage
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Org.BouncyCastle.Crypto.Tls.TlsProtocol.HandleChangeCipherSpecMessage
    name: HandleChangeCipherSpecMessage
    nameWithType: TlsProtocol.HandleChangeCipherSpecMessage
    fullName: Org.BouncyCastle.Crypto.Tls.TlsProtocol.HandleChangeCipherSpecMessage
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Org.BouncyCastle.Crypto.Tls.TlsProtocol.HandleWarningMessage(System.Byte)
  commentId: M:Org.BouncyCastle.Crypto.Tls.TlsProtocol.HandleWarningMessage(System.Byte)
  parent: Org.BouncyCastle.Crypto.Tls.TlsProtocol
  isExternal: true
  name: HandleWarningMessage(Byte)
  nameWithType: TlsProtocol.HandleWarningMessage(Byte)
  fullName: Org.BouncyCastle.Crypto.Tls.TlsProtocol.HandleWarningMessage(System.Byte)
  spec.csharp:
  - uid: Org.BouncyCastle.Crypto.Tls.TlsProtocol.HandleWarningMessage(System.Byte)
    name: HandleWarningMessage
    nameWithType: TlsProtocol.HandleWarningMessage
    fullName: Org.BouncyCastle.Crypto.Tls.TlsProtocol.HandleWarningMessage
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Org.BouncyCastle.Crypto.Tls.TlsProtocol.HandleWarningMessage(System.Byte)
    name: HandleWarningMessage
    nameWithType: TlsProtocol.HandleWarningMessage
    fullName: Org.BouncyCastle.Crypto.Tls.TlsProtocol.HandleWarningMessage
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Org.BouncyCastle.Crypto.Tls.TlsProtocol.ApplyMaxFragmentLengthExtension
  commentId: M:Org.BouncyCastle.Crypto.Tls.TlsProtocol.ApplyMaxFragmentLengthExtension
  parent: Org.BouncyCastle.Crypto.Tls.TlsProtocol
  name: ApplyMaxFragmentLengthExtension()
  nameWithType: TlsProtocol.ApplyMaxFragmentLengthExtension()
  fullName: Org.BouncyCastle.Crypto.Tls.TlsProtocol.ApplyMaxFragmentLengthExtension()
  spec.csharp:
  - uid: Org.BouncyCastle.Crypto.Tls.TlsProtocol.ApplyMaxFragmentLengthExtension
    name: ApplyMaxFragmentLengthExtension
    nameWithType: TlsProtocol.ApplyMaxFragmentLengthExtension
    fullName: Org.BouncyCastle.Crypto.Tls.TlsProtocol.ApplyMaxFragmentLengthExtension
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Org.BouncyCastle.Crypto.Tls.TlsProtocol.ApplyMaxFragmentLengthExtension
    name: ApplyMaxFragmentLengthExtension
    nameWithType: TlsProtocol.ApplyMaxFragmentLengthExtension
    fullName: Org.BouncyCastle.Crypto.Tls.TlsProtocol.ApplyMaxFragmentLengthExtension
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Org.BouncyCastle.Crypto.Tls.TlsProtocol.CheckReceivedChangeCipherSpec(System.Boolean)
  commentId: M:Org.BouncyCastle.Crypto.Tls.TlsProtocol.CheckReceivedChangeCipherSpec(System.Boolean)
  parent: Org.BouncyCastle.Crypto.Tls.TlsProtocol
  isExternal: true
  name: CheckReceivedChangeCipherSpec(Boolean)
  nameWithType: TlsProtocol.CheckReceivedChangeCipherSpec(Boolean)
  fullName: Org.BouncyCastle.Crypto.Tls.TlsProtocol.CheckReceivedChangeCipherSpec(System.Boolean)
  spec.csharp:
  - uid: Org.BouncyCastle.Crypto.Tls.TlsProtocol.CheckReceivedChangeCipherSpec(System.Boolean)
    name: CheckReceivedChangeCipherSpec
    nameWithType: TlsProtocol.CheckReceivedChangeCipherSpec
    fullName: Org.BouncyCastle.Crypto.Tls.TlsProtocol.CheckReceivedChangeCipherSpec
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Org.BouncyCastle.Crypto.Tls.TlsProtocol.CheckReceivedChangeCipherSpec(System.Boolean)
    name: CheckReceivedChangeCipherSpec
    nameWithType: TlsProtocol.CheckReceivedChangeCipherSpec
    fullName: Org.BouncyCastle.Crypto.Tls.TlsProtocol.CheckReceivedChangeCipherSpec
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Org.BouncyCastle.Crypto.Tls.TlsProtocol.BlockForHandshake
  commentId: M:Org.BouncyCastle.Crypto.Tls.TlsProtocol.BlockForHandshake
  parent: Org.BouncyCastle.Crypto.Tls.TlsProtocol
  name: BlockForHandshake()
  nameWithType: TlsProtocol.BlockForHandshake()
  fullName: Org.BouncyCastle.Crypto.Tls.TlsProtocol.BlockForHandshake()
  spec.csharp:
  - uid: Org.BouncyCastle.Crypto.Tls.TlsProtocol.BlockForHandshake
    name: BlockForHandshake
    nameWithType: TlsProtocol.BlockForHandshake
    fullName: Org.BouncyCastle.Crypto.Tls.TlsProtocol.BlockForHandshake
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Org.BouncyCastle.Crypto.Tls.TlsProtocol.BlockForHandshake
    name: BlockForHandshake
    nameWithType: TlsProtocol.BlockForHandshake
    fullName: Org.BouncyCastle.Crypto.Tls.TlsProtocol.BlockForHandshake
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Org.BouncyCastle.Crypto.Tls.TlsProtocol.CompleteHandshake
  commentId: M:Org.BouncyCastle.Crypto.Tls.TlsProtocol.CompleteHandshake
  parent: Org.BouncyCastle.Crypto.Tls.TlsProtocol
  name: CompleteHandshake()
  nameWithType: TlsProtocol.CompleteHandshake()
  fullName: Org.BouncyCastle.Crypto.Tls.TlsProtocol.CompleteHandshake()
  spec.csharp:
  - uid: Org.BouncyCastle.Crypto.Tls.TlsProtocol.CompleteHandshake
    name: CompleteHandshake
    nameWithType: TlsProtocol.CompleteHandshake
    fullName: Org.BouncyCastle.Crypto.Tls.TlsProtocol.CompleteHandshake
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Org.BouncyCastle.Crypto.Tls.TlsProtocol.CompleteHandshake
    name: CompleteHandshake
    nameWithType: TlsProtocol.CompleteHandshake
    fullName: Org.BouncyCastle.Crypto.Tls.TlsProtocol.CompleteHandshake
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Org.BouncyCastle.Crypto.Tls.TlsProtocol.ProcessRecord(System.Byte,System.Byte[],System.Int32,System.Int32)
  commentId: M:Org.BouncyCastle.Crypto.Tls.TlsProtocol.ProcessRecord(System.Byte,System.Byte[],System.Int32,System.Int32)
  parent: Org.BouncyCastle.Crypto.Tls.TlsProtocol
  isExternal: true
  name: ProcessRecord(Byte, Byte[], Int32, Int32)
  nameWithType: TlsProtocol.ProcessRecord(Byte, Byte[], Int32, Int32)
  fullName: Org.BouncyCastle.Crypto.Tls.TlsProtocol.ProcessRecord(System.Byte, System.Byte[], System.Int32, System.Int32)
  nameWithType.vb: TlsProtocol.ProcessRecord(Byte, Byte(), Int32, Int32)
  fullName.vb: Org.BouncyCastle.Crypto.Tls.TlsProtocol.ProcessRecord(System.Byte, System.Byte(), System.Int32, System.Int32)
  name.vb: ProcessRecord(Byte, Byte(), Int32, Int32)
  spec.csharp:
  - uid: Org.BouncyCastle.Crypto.Tls.TlsProtocol.ProcessRecord(System.Byte,System.Byte[],System.Int32,System.Int32)
    name: ProcessRecord
    nameWithType: TlsProtocol.ProcessRecord
    fullName: Org.BouncyCastle.Crypto.Tls.TlsProtocol.ProcessRecord
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Org.BouncyCastle.Crypto.Tls.TlsProtocol.ProcessRecord(System.Byte,System.Byte[],System.Int32,System.Int32)
    name: ProcessRecord
    nameWithType: TlsProtocol.ProcessRecord
    fullName: Org.BouncyCastle.Crypto.Tls.TlsProtocol.ProcessRecord
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Org.BouncyCastle.Crypto.Tls.TlsProtocol.ApplicationDataAvailable
  commentId: M:Org.BouncyCastle.Crypto.Tls.TlsProtocol.ApplicationDataAvailable
  parent: Org.BouncyCastle.Crypto.Tls.TlsProtocol
  name: ApplicationDataAvailable()
  nameWithType: TlsProtocol.ApplicationDataAvailable()
  fullName: Org.BouncyCastle.Crypto.Tls.TlsProtocol.ApplicationDataAvailable()
  spec.csharp:
  - uid: Org.BouncyCastle.Crypto.Tls.TlsProtocol.ApplicationDataAvailable
    name: ApplicationDataAvailable
    nameWithType: TlsProtocol.ApplicationDataAvailable
    fullName: Org.BouncyCastle.Crypto.Tls.TlsProtocol.ApplicationDataAvailable
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Org.BouncyCastle.Crypto.Tls.TlsProtocol.ApplicationDataAvailable
    name: ApplicationDataAvailable
    nameWithType: TlsProtocol.ApplicationDataAvailable
    fullName: Org.BouncyCastle.Crypto.Tls.TlsProtocol.ApplicationDataAvailable
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Org.BouncyCastle.Crypto.Tls.TlsProtocol.ReadApplicationData(System.Byte[],System.Int32,System.Int32)
  commentId: M:Org.BouncyCastle.Crypto.Tls.TlsProtocol.ReadApplicationData(System.Byte[],System.Int32,System.Int32)
  parent: Org.BouncyCastle.Crypto.Tls.TlsProtocol
  isExternal: true
  name: ReadApplicationData(Byte[], Int32, Int32)
  nameWithType: TlsProtocol.ReadApplicationData(Byte[], Int32, Int32)
  fullName: Org.BouncyCastle.Crypto.Tls.TlsProtocol.ReadApplicationData(System.Byte[], System.Int32, System.Int32)
  nameWithType.vb: TlsProtocol.ReadApplicationData(Byte(), Int32, Int32)
  fullName.vb: Org.BouncyCastle.Crypto.Tls.TlsProtocol.ReadApplicationData(System.Byte(), System.Int32, System.Int32)
  name.vb: ReadApplicationData(Byte(), Int32, Int32)
  spec.csharp:
  - uid: Org.BouncyCastle.Crypto.Tls.TlsProtocol.ReadApplicationData(System.Byte[],System.Int32,System.Int32)
    name: ReadApplicationData
    nameWithType: TlsProtocol.ReadApplicationData
    fullName: Org.BouncyCastle.Crypto.Tls.TlsProtocol.ReadApplicationData
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Org.BouncyCastle.Crypto.Tls.TlsProtocol.ReadApplicationData(System.Byte[],System.Int32,System.Int32)
    name: ReadApplicationData
    nameWithType: TlsProtocol.ReadApplicationData
    fullName: Org.BouncyCastle.Crypto.Tls.TlsProtocol.ReadApplicationData
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Org.BouncyCastle.Crypto.Tls.TlsProtocol.SafeReadRecord
  commentId: M:Org.BouncyCastle.Crypto.Tls.TlsProtocol.SafeReadRecord
  parent: Org.BouncyCastle.Crypto.Tls.TlsProtocol
  name: SafeReadRecord()
  nameWithType: TlsProtocol.SafeReadRecord()
  fullName: Org.BouncyCastle.Crypto.Tls.TlsProtocol.SafeReadRecord()
  spec.csharp:
  - uid: Org.BouncyCastle.Crypto.Tls.TlsProtocol.SafeReadRecord
    name: SafeReadRecord
    nameWithType: TlsProtocol.SafeReadRecord
    fullName: Org.BouncyCastle.Crypto.Tls.TlsProtocol.SafeReadRecord
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Org.BouncyCastle.Crypto.Tls.TlsProtocol.SafeReadRecord
    name: SafeReadRecord
    nameWithType: TlsProtocol.SafeReadRecord
    fullName: Org.BouncyCastle.Crypto.Tls.TlsProtocol.SafeReadRecord
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Org.BouncyCastle.Crypto.Tls.TlsProtocol.SafeWriteRecord(System.Byte,System.Byte[],System.Int32,System.Int32)
  commentId: M:Org.BouncyCastle.Crypto.Tls.TlsProtocol.SafeWriteRecord(System.Byte,System.Byte[],System.Int32,System.Int32)
  parent: Org.BouncyCastle.Crypto.Tls.TlsProtocol
  isExternal: true
  name: SafeWriteRecord(Byte, Byte[], Int32, Int32)
  nameWithType: TlsProtocol.SafeWriteRecord(Byte, Byte[], Int32, Int32)
  fullName: Org.BouncyCastle.Crypto.Tls.TlsProtocol.SafeWriteRecord(System.Byte, System.Byte[], System.Int32, System.Int32)
  nameWithType.vb: TlsProtocol.SafeWriteRecord(Byte, Byte(), Int32, Int32)
  fullName.vb: Org.BouncyCastle.Crypto.Tls.TlsProtocol.SafeWriteRecord(System.Byte, System.Byte(), System.Int32, System.Int32)
  name.vb: SafeWriteRecord(Byte, Byte(), Int32, Int32)
  spec.csharp:
  - uid: Org.BouncyCastle.Crypto.Tls.TlsProtocol.SafeWriteRecord(System.Byte,System.Byte[],System.Int32,System.Int32)
    name: SafeWriteRecord
    nameWithType: TlsProtocol.SafeWriteRecord
    fullName: Org.BouncyCastle.Crypto.Tls.TlsProtocol.SafeWriteRecord
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Org.BouncyCastle.Crypto.Tls.TlsProtocol.SafeWriteRecord(System.Byte,System.Byte[],System.Int32,System.Int32)
    name: SafeWriteRecord
    nameWithType: TlsProtocol.SafeWriteRecord
    fullName: Org.BouncyCastle.Crypto.Tls.TlsProtocol.SafeWriteRecord
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Org.BouncyCastle.Crypto.Tls.TlsProtocol.WriteData(System.Byte[],System.Int32,System.Int32)
  commentId: M:Org.BouncyCastle.Crypto.Tls.TlsProtocol.WriteData(System.Byte[],System.Int32,System.Int32)
  parent: Org.BouncyCastle.Crypto.Tls.TlsProtocol
  isExternal: true
  name: WriteData(Byte[], Int32, Int32)
  nameWithType: TlsProtocol.WriteData(Byte[], Int32, Int32)
  fullName: Org.BouncyCastle.Crypto.Tls.TlsProtocol.WriteData(System.Byte[], System.Int32, System.Int32)
  nameWithType.vb: TlsProtocol.WriteData(Byte(), Int32, Int32)
  fullName.vb: Org.BouncyCastle.Crypto.Tls.TlsProtocol.WriteData(System.Byte(), System.Int32, System.Int32)
  name.vb: WriteData(Byte(), Int32, Int32)
  spec.csharp:
  - uid: Org.BouncyCastle.Crypto.Tls.TlsProtocol.WriteData(System.Byte[],System.Int32,System.Int32)
    name: WriteData
    nameWithType: TlsProtocol.WriteData
    fullName: Org.BouncyCastle.Crypto.Tls.TlsProtocol.WriteData
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Org.BouncyCastle.Crypto.Tls.TlsProtocol.WriteData(System.Byte[],System.Int32,System.Int32)
    name: WriteData
    nameWithType: TlsProtocol.WriteData
    fullName: Org.BouncyCastle.Crypto.Tls.TlsProtocol.WriteData
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Org.BouncyCastle.Crypto.Tls.TlsProtocol.SetAppDataSplitMode(System.Int32)
  commentId: M:Org.BouncyCastle.Crypto.Tls.TlsProtocol.SetAppDataSplitMode(System.Int32)
  parent: Org.BouncyCastle.Crypto.Tls.TlsProtocol
  isExternal: true
  name: SetAppDataSplitMode(Int32)
  nameWithType: TlsProtocol.SetAppDataSplitMode(Int32)
  fullName: Org.BouncyCastle.Crypto.Tls.TlsProtocol.SetAppDataSplitMode(System.Int32)
  spec.csharp:
  - uid: Org.BouncyCastle.Crypto.Tls.TlsProtocol.SetAppDataSplitMode(System.Int32)
    name: SetAppDataSplitMode
    nameWithType: TlsProtocol.SetAppDataSplitMode
    fullName: Org.BouncyCastle.Crypto.Tls.TlsProtocol.SetAppDataSplitMode
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Org.BouncyCastle.Crypto.Tls.TlsProtocol.SetAppDataSplitMode(System.Int32)
    name: SetAppDataSplitMode
    nameWithType: TlsProtocol.SetAppDataSplitMode
    fullName: Org.BouncyCastle.Crypto.Tls.TlsProtocol.SetAppDataSplitMode
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Org.BouncyCastle.Crypto.Tls.TlsProtocol.WriteHandshakeMessage(System.Byte[],System.Int32,System.Int32)
  commentId: M:Org.BouncyCastle.Crypto.Tls.TlsProtocol.WriteHandshakeMessage(System.Byte[],System.Int32,System.Int32)
  parent: Org.BouncyCastle.Crypto.Tls.TlsProtocol
  isExternal: true
  name: WriteHandshakeMessage(Byte[], Int32, Int32)
  nameWithType: TlsProtocol.WriteHandshakeMessage(Byte[], Int32, Int32)
  fullName: Org.BouncyCastle.Crypto.Tls.TlsProtocol.WriteHandshakeMessage(System.Byte[], System.Int32, System.Int32)
  nameWithType.vb: TlsProtocol.WriteHandshakeMessage(Byte(), Int32, Int32)
  fullName.vb: Org.BouncyCastle.Crypto.Tls.TlsProtocol.WriteHandshakeMessage(System.Byte(), System.Int32, System.Int32)
  name.vb: WriteHandshakeMessage(Byte(), Int32, Int32)
  spec.csharp:
  - uid: Org.BouncyCastle.Crypto.Tls.TlsProtocol.WriteHandshakeMessage(System.Byte[],System.Int32,System.Int32)
    name: WriteHandshakeMessage
    nameWithType: TlsProtocol.WriteHandshakeMessage
    fullName: Org.BouncyCastle.Crypto.Tls.TlsProtocol.WriteHandshakeMessage
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Org.BouncyCastle.Crypto.Tls.TlsProtocol.WriteHandshakeMessage(System.Byte[],System.Int32,System.Int32)
    name: WriteHandshakeMessage
    nameWithType: TlsProtocol.WriteHandshakeMessage
    fullName: Org.BouncyCastle.Crypto.Tls.TlsProtocol.WriteHandshakeMessage
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Org.BouncyCastle.Crypto.Tls.TlsProtocol.Stream
  commentId: P:Org.BouncyCastle.Crypto.Tls.TlsProtocol.Stream
  parent: Org.BouncyCastle.Crypto.Tls.TlsProtocol
  name: Stream
  nameWithType: TlsProtocol.Stream
  fullName: Org.BouncyCastle.Crypto.Tls.TlsProtocol.Stream
- uid: Org.BouncyCastle.Crypto.Tls.TlsProtocol.OfferInput(System.Byte[])
  commentId: M:Org.BouncyCastle.Crypto.Tls.TlsProtocol.OfferInput(System.Byte[])
  parent: Org.BouncyCastle.Crypto.Tls.TlsProtocol
  isExternal: true
  name: OfferInput(Byte[])
  nameWithType: TlsProtocol.OfferInput(Byte[])
  fullName: Org.BouncyCastle.Crypto.Tls.TlsProtocol.OfferInput(System.Byte[])
  nameWithType.vb: TlsProtocol.OfferInput(Byte())
  fullName.vb: Org.BouncyCastle.Crypto.Tls.TlsProtocol.OfferInput(System.Byte())
  name.vb: OfferInput(Byte())
  spec.csharp:
  - uid: Org.BouncyCastle.Crypto.Tls.TlsProtocol.OfferInput(System.Byte[])
    name: OfferInput
    nameWithType: TlsProtocol.OfferInput
    fullName: Org.BouncyCastle.Crypto.Tls.TlsProtocol.OfferInput
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Org.BouncyCastle.Crypto.Tls.TlsProtocol.OfferInput(System.Byte[])
    name: OfferInput
    nameWithType: TlsProtocol.OfferInput
    fullName: Org.BouncyCastle.Crypto.Tls.TlsProtocol.OfferInput
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Org.BouncyCastle.Crypto.Tls.TlsProtocol.GetAvailableInputBytes
  commentId: M:Org.BouncyCastle.Crypto.Tls.TlsProtocol.GetAvailableInputBytes
  parent: Org.BouncyCastle.Crypto.Tls.TlsProtocol
  name: GetAvailableInputBytes()
  nameWithType: TlsProtocol.GetAvailableInputBytes()
  fullName: Org.BouncyCastle.Crypto.Tls.TlsProtocol.GetAvailableInputBytes()
  spec.csharp:
  - uid: Org.BouncyCastle.Crypto.Tls.TlsProtocol.GetAvailableInputBytes
    name: GetAvailableInputBytes
    nameWithType: TlsProtocol.GetAvailableInputBytes
    fullName: Org.BouncyCastle.Crypto.Tls.TlsProtocol.GetAvailableInputBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Org.BouncyCastle.Crypto.Tls.TlsProtocol.GetAvailableInputBytes
    name: GetAvailableInputBytes
    nameWithType: TlsProtocol.GetAvailableInputBytes
    fullName: Org.BouncyCastle.Crypto.Tls.TlsProtocol.GetAvailableInputBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Org.BouncyCastle.Crypto.Tls.TlsProtocol.ReadInput(System.Byte[],System.Int32,System.Int32)
  commentId: M:Org.BouncyCastle.Crypto.Tls.TlsProtocol.ReadInput(System.Byte[],System.Int32,System.Int32)
  parent: Org.BouncyCastle.Crypto.Tls.TlsProtocol
  isExternal: true
  name: ReadInput(Byte[], Int32, Int32)
  nameWithType: TlsProtocol.ReadInput(Byte[], Int32, Int32)
  fullName: Org.BouncyCastle.Crypto.Tls.TlsProtocol.ReadInput(System.Byte[], System.Int32, System.Int32)
  nameWithType.vb: TlsProtocol.ReadInput(Byte(), Int32, Int32)
  fullName.vb: Org.BouncyCastle.Crypto.Tls.TlsProtocol.ReadInput(System.Byte(), System.Int32, System.Int32)
  name.vb: ReadInput(Byte(), Int32, Int32)
  spec.csharp:
  - uid: Org.BouncyCastle.Crypto.Tls.TlsProtocol.ReadInput(System.Byte[],System.Int32,System.Int32)
    name: ReadInput
    nameWithType: TlsProtocol.ReadInput
    fullName: Org.BouncyCastle.Crypto.Tls.TlsProtocol.ReadInput
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Org.BouncyCastle.Crypto.Tls.TlsProtocol.ReadInput(System.Byte[],System.Int32,System.Int32)
    name: ReadInput
    nameWithType: TlsProtocol.ReadInput
    fullName: Org.BouncyCastle.Crypto.Tls.TlsProtocol.ReadInput
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Org.BouncyCastle.Crypto.Tls.TlsProtocol.OfferOutput(System.Byte[],System.Int32,System.Int32)
  commentId: M:Org.BouncyCastle.Crypto.Tls.TlsProtocol.OfferOutput(System.Byte[],System.Int32,System.Int32)
  parent: Org.BouncyCastle.Crypto.Tls.TlsProtocol
  isExternal: true
  name: OfferOutput(Byte[], Int32, Int32)
  nameWithType: TlsProtocol.OfferOutput(Byte[], Int32, Int32)
  fullName: Org.BouncyCastle.Crypto.Tls.TlsProtocol.OfferOutput(System.Byte[], System.Int32, System.Int32)
  nameWithType.vb: TlsProtocol.OfferOutput(Byte(), Int32, Int32)
  fullName.vb: Org.BouncyCastle.Crypto.Tls.TlsProtocol.OfferOutput(System.Byte(), System.Int32, System.Int32)
  name.vb: OfferOutput(Byte(), Int32, Int32)
  spec.csharp:
  - uid: Org.BouncyCastle.Crypto.Tls.TlsProtocol.OfferOutput(System.Byte[],System.Int32,System.Int32)
    name: OfferOutput
    nameWithType: TlsProtocol.OfferOutput
    fullName: Org.BouncyCastle.Crypto.Tls.TlsProtocol.OfferOutput
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Org.BouncyCastle.Crypto.Tls.TlsProtocol.OfferOutput(System.Byte[],System.Int32,System.Int32)
    name: OfferOutput
    nameWithType: TlsProtocol.OfferOutput
    fullName: Org.BouncyCastle.Crypto.Tls.TlsProtocol.OfferOutput
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Org.BouncyCastle.Crypto.Tls.TlsProtocol.GetAvailableOutputBytes
  commentId: M:Org.BouncyCastle.Crypto.Tls.TlsProtocol.GetAvailableOutputBytes
  parent: Org.BouncyCastle.Crypto.Tls.TlsProtocol
  name: GetAvailableOutputBytes()
  nameWithType: TlsProtocol.GetAvailableOutputBytes()
  fullName: Org.BouncyCastle.Crypto.Tls.TlsProtocol.GetAvailableOutputBytes()
  spec.csharp:
  - uid: Org.BouncyCastle.Crypto.Tls.TlsProtocol.GetAvailableOutputBytes
    name: GetAvailableOutputBytes
    nameWithType: TlsProtocol.GetAvailableOutputBytes
    fullName: Org.BouncyCastle.Crypto.Tls.TlsProtocol.GetAvailableOutputBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Org.BouncyCastle.Crypto.Tls.TlsProtocol.GetAvailableOutputBytes
    name: GetAvailableOutputBytes
    nameWithType: TlsProtocol.GetAvailableOutputBytes
    fullName: Org.BouncyCastle.Crypto.Tls.TlsProtocol.GetAvailableOutputBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Org.BouncyCastle.Crypto.Tls.TlsProtocol.ReadOutput(System.Byte[],System.Int32,System.Int32)
  commentId: M:Org.BouncyCastle.Crypto.Tls.TlsProtocol.ReadOutput(System.Byte[],System.Int32,System.Int32)
  parent: Org.BouncyCastle.Crypto.Tls.TlsProtocol
  isExternal: true
  name: ReadOutput(Byte[], Int32, Int32)
  nameWithType: TlsProtocol.ReadOutput(Byte[], Int32, Int32)
  fullName: Org.BouncyCastle.Crypto.Tls.TlsProtocol.ReadOutput(System.Byte[], System.Int32, System.Int32)
  nameWithType.vb: TlsProtocol.ReadOutput(Byte(), Int32, Int32)
  fullName.vb: Org.BouncyCastle.Crypto.Tls.TlsProtocol.ReadOutput(System.Byte(), System.Int32, System.Int32)
  name.vb: ReadOutput(Byte(), Int32, Int32)
  spec.csharp:
  - uid: Org.BouncyCastle.Crypto.Tls.TlsProtocol.ReadOutput(System.Byte[],System.Int32,System.Int32)
    name: ReadOutput
    nameWithType: TlsProtocol.ReadOutput
    fullName: Org.BouncyCastle.Crypto.Tls.TlsProtocol.ReadOutput
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Org.BouncyCastle.Crypto.Tls.TlsProtocol.ReadOutput(System.Byte[],System.Int32,System.Int32)
    name: ReadOutput
    nameWithType: TlsProtocol.ReadOutput
    fullName: Org.BouncyCastle.Crypto.Tls.TlsProtocol.ReadOutput
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Org.BouncyCastle.Crypto.Tls.TlsProtocol.FailWithError(System.Byte,System.Byte,System.String,System.Exception)
  commentId: M:Org.BouncyCastle.Crypto.Tls.TlsProtocol.FailWithError(System.Byte,System.Byte,System.String,System.Exception)
  parent: Org.BouncyCastle.Crypto.Tls.TlsProtocol
  isExternal: true
  name: FailWithError(Byte, Byte, String, Exception)
  nameWithType: TlsProtocol.FailWithError(Byte, Byte, String, Exception)
  fullName: Org.BouncyCastle.Crypto.Tls.TlsProtocol.FailWithError(System.Byte, System.Byte, System.String, System.Exception)
  spec.csharp:
  - uid: Org.BouncyCastle.Crypto.Tls.TlsProtocol.FailWithError(System.Byte,System.Byte,System.String,System.Exception)
    name: FailWithError
    nameWithType: TlsProtocol.FailWithError
    fullName: Org.BouncyCastle.Crypto.Tls.TlsProtocol.FailWithError
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Org.BouncyCastle.Crypto.Tls.TlsProtocol.FailWithError(System.Byte,System.Byte,System.String,System.Exception)
    name: FailWithError
    nameWithType: TlsProtocol.FailWithError
    fullName: Org.BouncyCastle.Crypto.Tls.TlsProtocol.FailWithError
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Org.BouncyCastle.Crypto.Tls.TlsProtocol.InvalidateSession
  commentId: M:Org.BouncyCastle.Crypto.Tls.TlsProtocol.InvalidateSession
  parent: Org.BouncyCastle.Crypto.Tls.TlsProtocol
  name: InvalidateSession()
  nameWithType: TlsProtocol.InvalidateSession()
  fullName: Org.BouncyCastle.Crypto.Tls.TlsProtocol.InvalidateSession()
  spec.csharp:
  - uid: Org.BouncyCastle.Crypto.Tls.TlsProtocol.InvalidateSession
    name: InvalidateSession
    nameWithType: TlsProtocol.InvalidateSession
    fullName: Org.BouncyCastle.Crypto.Tls.TlsProtocol.InvalidateSession
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Org.BouncyCastle.Crypto.Tls.TlsProtocol.InvalidateSession
    name: InvalidateSession
    nameWithType: TlsProtocol.InvalidateSession
    fullName: Org.BouncyCastle.Crypto.Tls.TlsProtocol.InvalidateSession
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Org.BouncyCastle.Crypto.Tls.TlsProtocol.ProcessFinishedMessage(MemoryStream)
  commentId: M:Org.BouncyCastle.Crypto.Tls.TlsProtocol.ProcessFinishedMessage(MemoryStream)
  parent: Org.BouncyCastle.Crypto.Tls.TlsProtocol
  isExternal: true
  name: ProcessFinishedMessage(MemoryStream)
  nameWithType: TlsProtocol.ProcessFinishedMessage(MemoryStream)
  fullName: Org.BouncyCastle.Crypto.Tls.TlsProtocol.ProcessFinishedMessage(MemoryStream)
  spec.csharp:
  - uid: Org.BouncyCastle.Crypto.Tls.TlsProtocol.ProcessFinishedMessage(MemoryStream)
    name: ProcessFinishedMessage
    nameWithType: TlsProtocol.ProcessFinishedMessage
    fullName: Org.BouncyCastle.Crypto.Tls.TlsProtocol.ProcessFinishedMessage
  - name: (
    nameWithType: (
    fullName: (
  - uid: MemoryStream
    name: MemoryStream
    nameWithType: MemoryStream
    fullName: MemoryStream
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Org.BouncyCastle.Crypto.Tls.TlsProtocol.ProcessFinishedMessage(MemoryStream)
    name: ProcessFinishedMessage
    nameWithType: TlsProtocol.ProcessFinishedMessage
    fullName: Org.BouncyCastle.Crypto.Tls.TlsProtocol.ProcessFinishedMessage
  - name: (
    nameWithType: (
    fullName: (
  - uid: MemoryStream
    name: MemoryStream
    nameWithType: MemoryStream
    fullName: MemoryStream
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Org.BouncyCastle.Crypto.Tls.TlsProtocol.RaiseAlert(System.Byte,System.Byte,System.String,System.Exception)
  commentId: M:Org.BouncyCastle.Crypto.Tls.TlsProtocol.RaiseAlert(System.Byte,System.Byte,System.String,System.Exception)
  parent: Org.BouncyCastle.Crypto.Tls.TlsProtocol
  isExternal: true
  name: RaiseAlert(Byte, Byte, String, Exception)
  nameWithType: TlsProtocol.RaiseAlert(Byte, Byte, String, Exception)
  fullName: Org.BouncyCastle.Crypto.Tls.TlsProtocol.RaiseAlert(System.Byte, System.Byte, System.String, System.Exception)
  spec.csharp:
  - uid: Org.BouncyCastle.Crypto.Tls.TlsProtocol.RaiseAlert(System.Byte,System.Byte,System.String,System.Exception)
    name: RaiseAlert
    nameWithType: TlsProtocol.RaiseAlert
    fullName: Org.BouncyCastle.Crypto.Tls.TlsProtocol.RaiseAlert
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Org.BouncyCastle.Crypto.Tls.TlsProtocol.RaiseAlert(System.Byte,System.Byte,System.String,System.Exception)
    name: RaiseAlert
    nameWithType: TlsProtocol.RaiseAlert
    fullName: Org.BouncyCastle.Crypto.Tls.TlsProtocol.RaiseAlert
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Org.BouncyCastle.Crypto.Tls.TlsProtocol.RaiseWarning(System.Byte,System.String)
  commentId: M:Org.BouncyCastle.Crypto.Tls.TlsProtocol.RaiseWarning(System.Byte,System.String)
  parent: Org.BouncyCastle.Crypto.Tls.TlsProtocol
  isExternal: true
  name: RaiseWarning(Byte, String)
  nameWithType: TlsProtocol.RaiseWarning(Byte, String)
  fullName: Org.BouncyCastle.Crypto.Tls.TlsProtocol.RaiseWarning(System.Byte, System.String)
  spec.csharp:
  - uid: Org.BouncyCastle.Crypto.Tls.TlsProtocol.RaiseWarning(System.Byte,System.String)
    name: RaiseWarning
    nameWithType: TlsProtocol.RaiseWarning
    fullName: Org.BouncyCastle.Crypto.Tls.TlsProtocol.RaiseWarning
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Org.BouncyCastle.Crypto.Tls.TlsProtocol.RaiseWarning(System.Byte,System.String)
    name: RaiseWarning
    nameWithType: TlsProtocol.RaiseWarning
    fullName: Org.BouncyCastle.Crypto.Tls.TlsProtocol.RaiseWarning
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Org.BouncyCastle.Crypto.Tls.TlsProtocol.SendCertificateMessage(Org.BouncyCastle.Crypto.Tls.Certificate)
  commentId: M:Org.BouncyCastle.Crypto.Tls.TlsProtocol.SendCertificateMessage(Org.BouncyCastle.Crypto.Tls.Certificate)
  parent: Org.BouncyCastle.Crypto.Tls.TlsProtocol
  name: SendCertificateMessage(Certificate)
  nameWithType: TlsProtocol.SendCertificateMessage(Certificate)
  fullName: Org.BouncyCastle.Crypto.Tls.TlsProtocol.SendCertificateMessage(Org.BouncyCastle.Crypto.Tls.Certificate)
  spec.csharp:
  - uid: Org.BouncyCastle.Crypto.Tls.TlsProtocol.SendCertificateMessage(Org.BouncyCastle.Crypto.Tls.Certificate)
    name: SendCertificateMessage
    nameWithType: TlsProtocol.SendCertificateMessage
    fullName: Org.BouncyCastle.Crypto.Tls.TlsProtocol.SendCertificateMessage
  - name: (
    nameWithType: (
    fullName: (
  - uid: Org.BouncyCastle.Crypto.Tls.Certificate
    name: Certificate
    nameWithType: Certificate
    fullName: Org.BouncyCastle.Crypto.Tls.Certificate
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Org.BouncyCastle.Crypto.Tls.TlsProtocol.SendCertificateMessage(Org.BouncyCastle.Crypto.Tls.Certificate)
    name: SendCertificateMessage
    nameWithType: TlsProtocol.SendCertificateMessage
    fullName: Org.BouncyCastle.Crypto.Tls.TlsProtocol.SendCertificateMessage
  - name: (
    nameWithType: (
    fullName: (
  - uid: Org.BouncyCastle.Crypto.Tls.Certificate
    name: Certificate
    nameWithType: Certificate
    fullName: Org.BouncyCastle.Crypto.Tls.Certificate
  - name: )
    nameWithType: )
    fullName: )
- uid: Org.BouncyCastle.Crypto.Tls.TlsProtocol.SendChangeCipherSpecMessage
  commentId: M:Org.BouncyCastle.Crypto.Tls.TlsProtocol.SendChangeCipherSpecMessage
  parent: Org.BouncyCastle.Crypto.Tls.TlsProtocol
  name: SendChangeCipherSpecMessage()
  nameWithType: TlsProtocol.SendChangeCipherSpecMessage()
  fullName: Org.BouncyCastle.Crypto.Tls.TlsProtocol.SendChangeCipherSpecMessage()
  spec.csharp:
  - uid: Org.BouncyCastle.Crypto.Tls.TlsProtocol.SendChangeCipherSpecMessage
    name: SendChangeCipherSpecMessage
    nameWithType: TlsProtocol.SendChangeCipherSpecMessage
    fullName: Org.BouncyCastle.Crypto.Tls.TlsProtocol.SendChangeCipherSpecMessage
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Org.BouncyCastle.Crypto.Tls.TlsProtocol.SendChangeCipherSpecMessage
    name: SendChangeCipherSpecMessage
    nameWithType: TlsProtocol.SendChangeCipherSpecMessage
    fullName: Org.BouncyCastle.Crypto.Tls.TlsProtocol.SendChangeCipherSpecMessage
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Org.BouncyCastle.Crypto.Tls.TlsProtocol.SendFinishedMessage
  commentId: M:Org.BouncyCastle.Crypto.Tls.TlsProtocol.SendFinishedMessage
  parent: Org.BouncyCastle.Crypto.Tls.TlsProtocol
  name: SendFinishedMessage()
  nameWithType: TlsProtocol.SendFinishedMessage()
  fullName: Org.BouncyCastle.Crypto.Tls.TlsProtocol.SendFinishedMessage()
  spec.csharp:
  - uid: Org.BouncyCastle.Crypto.Tls.TlsProtocol.SendFinishedMessage
    name: SendFinishedMessage
    nameWithType: TlsProtocol.SendFinishedMessage
    fullName: Org.BouncyCastle.Crypto.Tls.TlsProtocol.SendFinishedMessage
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Org.BouncyCastle.Crypto.Tls.TlsProtocol.SendFinishedMessage
    name: SendFinishedMessage
    nameWithType: TlsProtocol.SendFinishedMessage
    fullName: Org.BouncyCastle.Crypto.Tls.TlsProtocol.SendFinishedMessage
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Org.BouncyCastle.Crypto.Tls.TlsProtocol.SendSupplementalDataMessage(System.Collections.IList)
  commentId: M:Org.BouncyCastle.Crypto.Tls.TlsProtocol.SendSupplementalDataMessage(System.Collections.IList)
  parent: Org.BouncyCastle.Crypto.Tls.TlsProtocol
  isExternal: true
  name: SendSupplementalDataMessage(IList)
  nameWithType: TlsProtocol.SendSupplementalDataMessage(IList)
  fullName: Org.BouncyCastle.Crypto.Tls.TlsProtocol.SendSupplementalDataMessage(System.Collections.IList)
  spec.csharp:
  - uid: Org.BouncyCastle.Crypto.Tls.TlsProtocol.SendSupplementalDataMessage(System.Collections.IList)
    name: SendSupplementalDataMessage
    nameWithType: TlsProtocol.SendSupplementalDataMessage
    fullName: Org.BouncyCastle.Crypto.Tls.TlsProtocol.SendSupplementalDataMessage
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.IList
    name: IList
    nameWithType: IList
    fullName: System.Collections.IList
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Org.BouncyCastle.Crypto.Tls.TlsProtocol.SendSupplementalDataMessage(System.Collections.IList)
    name: SendSupplementalDataMessage
    nameWithType: TlsProtocol.SendSupplementalDataMessage
    fullName: Org.BouncyCastle.Crypto.Tls.TlsProtocol.SendSupplementalDataMessage
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.IList
    name: IList
    nameWithType: IList
    fullName: System.Collections.IList
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Org.BouncyCastle.Crypto.Tls.TlsProtocol.CreateVerifyData(System.Boolean)
  commentId: M:Org.BouncyCastle.Crypto.Tls.TlsProtocol.CreateVerifyData(System.Boolean)
  parent: Org.BouncyCastle.Crypto.Tls.TlsProtocol
  isExternal: true
  name: CreateVerifyData(Boolean)
  nameWithType: TlsProtocol.CreateVerifyData(Boolean)
  fullName: Org.BouncyCastle.Crypto.Tls.TlsProtocol.CreateVerifyData(System.Boolean)
  spec.csharp:
  - uid: Org.BouncyCastle.Crypto.Tls.TlsProtocol.CreateVerifyData(System.Boolean)
    name: CreateVerifyData
    nameWithType: TlsProtocol.CreateVerifyData
    fullName: Org.BouncyCastle.Crypto.Tls.TlsProtocol.CreateVerifyData
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Org.BouncyCastle.Crypto.Tls.TlsProtocol.CreateVerifyData(System.Boolean)
    name: CreateVerifyData
    nameWithType: TlsProtocol.CreateVerifyData
    fullName: Org.BouncyCastle.Crypto.Tls.TlsProtocol.CreateVerifyData
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Org.BouncyCastle.Crypto.Tls.TlsProtocol.Close
  commentId: M:Org.BouncyCastle.Crypto.Tls.TlsProtocol.Close
  parent: Org.BouncyCastle.Crypto.Tls.TlsProtocol
  name: Close()
  nameWithType: TlsProtocol.Close()
  fullName: Org.BouncyCastle.Crypto.Tls.TlsProtocol.Close()
  spec.csharp:
  - uid: Org.BouncyCastle.Crypto.Tls.TlsProtocol.Close
    name: Close
    nameWithType: TlsProtocol.Close
    fullName: Org.BouncyCastle.Crypto.Tls.TlsProtocol.Close
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Org.BouncyCastle.Crypto.Tls.TlsProtocol.Close
    name: Close
    nameWithType: TlsProtocol.Close
    fullName: Org.BouncyCastle.Crypto.Tls.TlsProtocol.Close
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Org.BouncyCastle.Crypto.Tls.TlsProtocol.HandleClose(System.Boolean)
  commentId: M:Org.BouncyCastle.Crypto.Tls.TlsProtocol.HandleClose(System.Boolean)
  parent: Org.BouncyCastle.Crypto.Tls.TlsProtocol
  isExternal: true
  name: HandleClose(Boolean)
  nameWithType: TlsProtocol.HandleClose(Boolean)
  fullName: Org.BouncyCastle.Crypto.Tls.TlsProtocol.HandleClose(System.Boolean)
  spec.csharp:
  - uid: Org.BouncyCastle.Crypto.Tls.TlsProtocol.HandleClose(System.Boolean)
    name: HandleClose
    nameWithType: TlsProtocol.HandleClose
    fullName: Org.BouncyCastle.Crypto.Tls.TlsProtocol.HandleClose
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Org.BouncyCastle.Crypto.Tls.TlsProtocol.HandleClose(System.Boolean)
    name: HandleClose
    nameWithType: TlsProtocol.HandleClose
    fullName: Org.BouncyCastle.Crypto.Tls.TlsProtocol.HandleClose
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Org.BouncyCastle.Crypto.Tls.TlsProtocol.Flush
  commentId: M:Org.BouncyCastle.Crypto.Tls.TlsProtocol.Flush
  parent: Org.BouncyCastle.Crypto.Tls.TlsProtocol
  name: Flush()
  nameWithType: TlsProtocol.Flush()
  fullName: Org.BouncyCastle.Crypto.Tls.TlsProtocol.Flush()
  spec.csharp:
  - uid: Org.BouncyCastle.Crypto.Tls.TlsProtocol.Flush
    name: Flush
    nameWithType: TlsProtocol.Flush
    fullName: Org.BouncyCastle.Crypto.Tls.TlsProtocol.Flush
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Org.BouncyCastle.Crypto.Tls.TlsProtocol.Flush
    name: Flush
    nameWithType: TlsProtocol.Flush
    fullName: Org.BouncyCastle.Crypto.Tls.TlsProtocol.Flush
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Org.BouncyCastle.Crypto.Tls.TlsProtocol.IsClosed
  commentId: P:Org.BouncyCastle.Crypto.Tls.TlsProtocol.IsClosed
  parent: Org.BouncyCastle.Crypto.Tls.TlsProtocol
  name: IsClosed
  nameWithType: TlsProtocol.IsClosed
  fullName: Org.BouncyCastle.Crypto.Tls.TlsProtocol.IsClosed
- uid: Org.BouncyCastle.Crypto.Tls.TlsProtocol.ProcessMaxFragmentLengthExtension(System.Collections.IDictionary,System.Collections.IDictionary,System.Byte)
  commentId: M:Org.BouncyCastle.Crypto.Tls.TlsProtocol.ProcessMaxFragmentLengthExtension(System.Collections.IDictionary,System.Collections.IDictionary,System.Byte)
  parent: Org.BouncyCastle.Crypto.Tls.TlsProtocol
  isExternal: true
  name: ProcessMaxFragmentLengthExtension(IDictionary, IDictionary, Byte)
  nameWithType: TlsProtocol.ProcessMaxFragmentLengthExtension(IDictionary, IDictionary, Byte)
  fullName: Org.BouncyCastle.Crypto.Tls.TlsProtocol.ProcessMaxFragmentLengthExtension(System.Collections.IDictionary, System.Collections.IDictionary, System.Byte)
  spec.csharp:
  - uid: Org.BouncyCastle.Crypto.Tls.TlsProtocol.ProcessMaxFragmentLengthExtension(System.Collections.IDictionary,System.Collections.IDictionary,System.Byte)
    name: ProcessMaxFragmentLengthExtension
    nameWithType: TlsProtocol.ProcessMaxFragmentLengthExtension
    fullName: Org.BouncyCastle.Crypto.Tls.TlsProtocol.ProcessMaxFragmentLengthExtension
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.IDictionary
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.IDictionary
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.IDictionary
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.IDictionary
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Org.BouncyCastle.Crypto.Tls.TlsProtocol.ProcessMaxFragmentLengthExtension(System.Collections.IDictionary,System.Collections.IDictionary,System.Byte)
    name: ProcessMaxFragmentLengthExtension
    nameWithType: TlsProtocol.ProcessMaxFragmentLengthExtension
    fullName: Org.BouncyCastle.Crypto.Tls.TlsProtocol.ProcessMaxFragmentLengthExtension
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.IDictionary
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.IDictionary
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.IDictionary
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.IDictionary
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Org.BouncyCastle.Crypto.Tls.TlsProtocol.RefuseRenegotiation
  commentId: M:Org.BouncyCastle.Crypto.Tls.TlsProtocol.RefuseRenegotiation
  parent: Org.BouncyCastle.Crypto.Tls.TlsProtocol
  name: RefuseRenegotiation()
  nameWithType: TlsProtocol.RefuseRenegotiation()
  fullName: Org.BouncyCastle.Crypto.Tls.TlsProtocol.RefuseRenegotiation()
  spec.csharp:
  - uid: Org.BouncyCastle.Crypto.Tls.TlsProtocol.RefuseRenegotiation
    name: RefuseRenegotiation
    nameWithType: TlsProtocol.RefuseRenegotiation
    fullName: Org.BouncyCastle.Crypto.Tls.TlsProtocol.RefuseRenegotiation
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Org.BouncyCastle.Crypto.Tls.TlsProtocol.RefuseRenegotiation
    name: RefuseRenegotiation
    nameWithType: TlsProtocol.RefuseRenegotiation
    fullName: Org.BouncyCastle.Crypto.Tls.TlsProtocol.RefuseRenegotiation
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Org.BouncyCastle.Crypto.Tls.TlsProtocol.AssertEmpty(MemoryStream)
  commentId: M:Org.BouncyCastle.Crypto.Tls.TlsProtocol.AssertEmpty(MemoryStream)
  parent: Org.BouncyCastle.Crypto.Tls.TlsProtocol
  isExternal: true
  name: AssertEmpty(MemoryStream)
  nameWithType: TlsProtocol.AssertEmpty(MemoryStream)
  fullName: Org.BouncyCastle.Crypto.Tls.TlsProtocol.AssertEmpty(MemoryStream)
  spec.csharp:
  - uid: Org.BouncyCastle.Crypto.Tls.TlsProtocol.AssertEmpty(MemoryStream)
    name: AssertEmpty
    nameWithType: TlsProtocol.AssertEmpty
    fullName: Org.BouncyCastle.Crypto.Tls.TlsProtocol.AssertEmpty
  - name: (
    nameWithType: (
    fullName: (
  - uid: MemoryStream
    name: MemoryStream
    nameWithType: MemoryStream
    fullName: MemoryStream
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Org.BouncyCastle.Crypto.Tls.TlsProtocol.AssertEmpty(MemoryStream)
    name: AssertEmpty
    nameWithType: TlsProtocol.AssertEmpty
    fullName: Org.BouncyCastle.Crypto.Tls.TlsProtocol.AssertEmpty
  - name: (
    nameWithType: (
    fullName: (
  - uid: MemoryStream
    name: MemoryStream
    nameWithType: MemoryStream
    fullName: MemoryStream
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Org.BouncyCastle.Crypto.Tls.TlsProtocol.CreateRandomBlock(System.Boolean,IRandomGenerator)
  commentId: M:Org.BouncyCastle.Crypto.Tls.TlsProtocol.CreateRandomBlock(System.Boolean,IRandomGenerator)
  parent: Org.BouncyCastle.Crypto.Tls.TlsProtocol
  isExternal: true
  name: CreateRandomBlock(Boolean, IRandomGenerator)
  nameWithType: TlsProtocol.CreateRandomBlock(Boolean, IRandomGenerator)
  fullName: Org.BouncyCastle.Crypto.Tls.TlsProtocol.CreateRandomBlock(System.Boolean, IRandomGenerator)
  spec.csharp:
  - uid: Org.BouncyCastle.Crypto.Tls.TlsProtocol.CreateRandomBlock(System.Boolean,IRandomGenerator)
    name: CreateRandomBlock
    nameWithType: TlsProtocol.CreateRandomBlock
    fullName: Org.BouncyCastle.Crypto.Tls.TlsProtocol.CreateRandomBlock
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: IRandomGenerator
    name: IRandomGenerator
    nameWithType: IRandomGenerator
    fullName: IRandomGenerator
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Org.BouncyCastle.Crypto.Tls.TlsProtocol.CreateRandomBlock(System.Boolean,IRandomGenerator)
    name: CreateRandomBlock
    nameWithType: TlsProtocol.CreateRandomBlock
    fullName: Org.BouncyCastle.Crypto.Tls.TlsProtocol.CreateRandomBlock
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: IRandomGenerator
    name: IRandomGenerator
    nameWithType: IRandomGenerator
    fullName: IRandomGenerator
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Org.BouncyCastle.Crypto.Tls.TlsProtocol.CreateRenegotiationInfo(System.Byte[])
  commentId: M:Org.BouncyCastle.Crypto.Tls.TlsProtocol.CreateRenegotiationInfo(System.Byte[])
  parent: Org.BouncyCastle.Crypto.Tls.TlsProtocol
  isExternal: true
  name: CreateRenegotiationInfo(Byte[])
  nameWithType: TlsProtocol.CreateRenegotiationInfo(Byte[])
  fullName: Org.BouncyCastle.Crypto.Tls.TlsProtocol.CreateRenegotiationInfo(System.Byte[])
  nameWithType.vb: TlsProtocol.CreateRenegotiationInfo(Byte())
  fullName.vb: Org.BouncyCastle.Crypto.Tls.TlsProtocol.CreateRenegotiationInfo(System.Byte())
  name.vb: CreateRenegotiationInfo(Byte())
  spec.csharp:
  - uid: Org.BouncyCastle.Crypto.Tls.TlsProtocol.CreateRenegotiationInfo(System.Byte[])
    name: CreateRenegotiationInfo
    nameWithType: TlsProtocol.CreateRenegotiationInfo
    fullName: Org.BouncyCastle.Crypto.Tls.TlsProtocol.CreateRenegotiationInfo
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Org.BouncyCastle.Crypto.Tls.TlsProtocol.CreateRenegotiationInfo(System.Byte[])
    name: CreateRenegotiationInfo
    nameWithType: TlsProtocol.CreateRenegotiationInfo
    fullName: Org.BouncyCastle.Crypto.Tls.TlsProtocol.CreateRenegotiationInfo
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Org.BouncyCastle.Crypto.Tls.TlsProtocol.EstablishMasterSecret(Org.BouncyCastle.Crypto.Tls.TlsContext,Org.BouncyCastle.Crypto.Tls.TlsKeyExchange)
  commentId: M:Org.BouncyCastle.Crypto.Tls.TlsProtocol.EstablishMasterSecret(Org.BouncyCastle.Crypto.Tls.TlsContext,Org.BouncyCastle.Crypto.Tls.TlsKeyExchange)
  parent: Org.BouncyCastle.Crypto.Tls.TlsProtocol
  name: EstablishMasterSecret(TlsContext, TlsKeyExchange)
  nameWithType: TlsProtocol.EstablishMasterSecret(TlsContext, TlsKeyExchange)
  fullName: Org.BouncyCastle.Crypto.Tls.TlsProtocol.EstablishMasterSecret(Org.BouncyCastle.Crypto.Tls.TlsContext, Org.BouncyCastle.Crypto.Tls.TlsKeyExchange)
  spec.csharp:
  - uid: Org.BouncyCastle.Crypto.Tls.TlsProtocol.EstablishMasterSecret(Org.BouncyCastle.Crypto.Tls.TlsContext,Org.BouncyCastle.Crypto.Tls.TlsKeyExchange)
    name: EstablishMasterSecret
    nameWithType: TlsProtocol.EstablishMasterSecret
    fullName: Org.BouncyCastle.Crypto.Tls.TlsProtocol.EstablishMasterSecret
  - name: (
    nameWithType: (
    fullName: (
  - uid: Org.BouncyCastle.Crypto.Tls.TlsContext
    name: TlsContext
    nameWithType: TlsContext
    fullName: Org.BouncyCastle.Crypto.Tls.TlsContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Org.BouncyCastle.Crypto.Tls.TlsKeyExchange
    name: TlsKeyExchange
    nameWithType: TlsKeyExchange
    fullName: Org.BouncyCastle.Crypto.Tls.TlsKeyExchange
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Org.BouncyCastle.Crypto.Tls.TlsProtocol.EstablishMasterSecret(Org.BouncyCastle.Crypto.Tls.TlsContext,Org.BouncyCastle.Crypto.Tls.TlsKeyExchange)
    name: EstablishMasterSecret
    nameWithType: TlsProtocol.EstablishMasterSecret
    fullName: Org.BouncyCastle.Crypto.Tls.TlsProtocol.EstablishMasterSecret
  - name: (
    nameWithType: (
    fullName: (
  - uid: Org.BouncyCastle.Crypto.Tls.TlsContext
    name: TlsContext
    nameWithType: TlsContext
    fullName: Org.BouncyCastle.Crypto.Tls.TlsContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Org.BouncyCastle.Crypto.Tls.TlsKeyExchange
    name: TlsKeyExchange
    nameWithType: TlsKeyExchange
    fullName: Org.BouncyCastle.Crypto.Tls.TlsKeyExchange
  - name: )
    nameWithType: )
    fullName: )
- uid: Org.BouncyCastle.Crypto.Tls.TlsProtocol.GetCurrentPrfHash(Org.BouncyCastle.Crypto.Tls.TlsContext,Org.BouncyCastle.Crypto.Tls.TlsHandshakeHash,System.Byte[])
  commentId: M:Org.BouncyCastle.Crypto.Tls.TlsProtocol.GetCurrentPrfHash(Org.BouncyCastle.Crypto.Tls.TlsContext,Org.BouncyCastle.Crypto.Tls.TlsHandshakeHash,System.Byte[])
  parent: Org.BouncyCastle.Crypto.Tls.TlsProtocol
  isExternal: true
  name: GetCurrentPrfHash(TlsContext, TlsHandshakeHash, Byte[])
  nameWithType: TlsProtocol.GetCurrentPrfHash(TlsContext, TlsHandshakeHash, Byte[])
  fullName: Org.BouncyCastle.Crypto.Tls.TlsProtocol.GetCurrentPrfHash(Org.BouncyCastle.Crypto.Tls.TlsContext, Org.BouncyCastle.Crypto.Tls.TlsHandshakeHash, System.Byte[])
  nameWithType.vb: TlsProtocol.GetCurrentPrfHash(TlsContext, TlsHandshakeHash, Byte())
  fullName.vb: Org.BouncyCastle.Crypto.Tls.TlsProtocol.GetCurrentPrfHash(Org.BouncyCastle.Crypto.Tls.TlsContext, Org.BouncyCastle.Crypto.Tls.TlsHandshakeHash, System.Byte())
  name.vb: GetCurrentPrfHash(TlsContext, TlsHandshakeHash, Byte())
  spec.csharp:
  - uid: Org.BouncyCastle.Crypto.Tls.TlsProtocol.GetCurrentPrfHash(Org.BouncyCastle.Crypto.Tls.TlsContext,Org.BouncyCastle.Crypto.Tls.TlsHandshakeHash,System.Byte[])
    name: GetCurrentPrfHash
    nameWithType: TlsProtocol.GetCurrentPrfHash
    fullName: Org.BouncyCastle.Crypto.Tls.TlsProtocol.GetCurrentPrfHash
  - name: (
    nameWithType: (
    fullName: (
  - uid: Org.BouncyCastle.Crypto.Tls.TlsContext
    name: TlsContext
    nameWithType: TlsContext
    fullName: Org.BouncyCastle.Crypto.Tls.TlsContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Org.BouncyCastle.Crypto.Tls.TlsHandshakeHash
    name: TlsHandshakeHash
    nameWithType: TlsHandshakeHash
    fullName: Org.BouncyCastle.Crypto.Tls.TlsHandshakeHash
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Org.BouncyCastle.Crypto.Tls.TlsProtocol.GetCurrentPrfHash(Org.BouncyCastle.Crypto.Tls.TlsContext,Org.BouncyCastle.Crypto.Tls.TlsHandshakeHash,System.Byte[])
    name: GetCurrentPrfHash
    nameWithType: TlsProtocol.GetCurrentPrfHash
    fullName: Org.BouncyCastle.Crypto.Tls.TlsProtocol.GetCurrentPrfHash
  - name: (
    nameWithType: (
    fullName: (
  - uid: Org.BouncyCastle.Crypto.Tls.TlsContext
    name: TlsContext
    nameWithType: TlsContext
    fullName: Org.BouncyCastle.Crypto.Tls.TlsContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Org.BouncyCastle.Crypto.Tls.TlsHandshakeHash
    name: TlsHandshakeHash
    nameWithType: TlsHandshakeHash
    fullName: Org.BouncyCastle.Crypto.Tls.TlsHandshakeHash
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Org.BouncyCastle.Crypto.Tls.TlsProtocol.ReadExtensions(MemoryStream)
  commentId: M:Org.BouncyCastle.Crypto.Tls.TlsProtocol.ReadExtensions(MemoryStream)
  parent: Org.BouncyCastle.Crypto.Tls.TlsProtocol
  isExternal: true
  name: ReadExtensions(MemoryStream)
  nameWithType: TlsProtocol.ReadExtensions(MemoryStream)
  fullName: Org.BouncyCastle.Crypto.Tls.TlsProtocol.ReadExtensions(MemoryStream)
  spec.csharp:
  - uid: Org.BouncyCastle.Crypto.Tls.TlsProtocol.ReadExtensions(MemoryStream)
    name: ReadExtensions
    nameWithType: TlsProtocol.ReadExtensions
    fullName: Org.BouncyCastle.Crypto.Tls.TlsProtocol.ReadExtensions
  - name: (
    nameWithType: (
    fullName: (
  - uid: MemoryStream
    name: MemoryStream
    nameWithType: MemoryStream
    fullName: MemoryStream
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Org.BouncyCastle.Crypto.Tls.TlsProtocol.ReadExtensions(MemoryStream)
    name: ReadExtensions
    nameWithType: TlsProtocol.ReadExtensions
    fullName: Org.BouncyCastle.Crypto.Tls.TlsProtocol.ReadExtensions
  - name: (
    nameWithType: (
    fullName: (
  - uid: MemoryStream
    name: MemoryStream
    nameWithType: MemoryStream
    fullName: MemoryStream
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Org.BouncyCastle.Crypto.Tls.TlsProtocol.ReadSupplementalDataMessage(MemoryStream)
  commentId: M:Org.BouncyCastle.Crypto.Tls.TlsProtocol.ReadSupplementalDataMessage(MemoryStream)
  parent: Org.BouncyCastle.Crypto.Tls.TlsProtocol
  isExternal: true
  name: ReadSupplementalDataMessage(MemoryStream)
  nameWithType: TlsProtocol.ReadSupplementalDataMessage(MemoryStream)
  fullName: Org.BouncyCastle.Crypto.Tls.TlsProtocol.ReadSupplementalDataMessage(MemoryStream)
  spec.csharp:
  - uid: Org.BouncyCastle.Crypto.Tls.TlsProtocol.ReadSupplementalDataMessage(MemoryStream)
    name: ReadSupplementalDataMessage
    nameWithType: TlsProtocol.ReadSupplementalDataMessage
    fullName: Org.BouncyCastle.Crypto.Tls.TlsProtocol.ReadSupplementalDataMessage
  - name: (
    nameWithType: (
    fullName: (
  - uid: MemoryStream
    name: MemoryStream
    nameWithType: MemoryStream
    fullName: MemoryStream
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Org.BouncyCastle.Crypto.Tls.TlsProtocol.ReadSupplementalDataMessage(MemoryStream)
    name: ReadSupplementalDataMessage
    nameWithType: TlsProtocol.ReadSupplementalDataMessage
    fullName: Org.BouncyCastle.Crypto.Tls.TlsProtocol.ReadSupplementalDataMessage
  - name: (
    nameWithType: (
    fullName: (
  - uid: MemoryStream
    name: MemoryStream
    nameWithType: MemoryStream
    fullName: MemoryStream
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Org.BouncyCastle.Crypto.Tls.TlsProtocol.WriteExtensions(Stream,System.Collections.IDictionary)
  commentId: M:Org.BouncyCastle.Crypto.Tls.TlsProtocol.WriteExtensions(Stream,System.Collections.IDictionary)
  parent: Org.BouncyCastle.Crypto.Tls.TlsProtocol
  isExternal: true
  name: WriteExtensions(Stream, IDictionary)
  nameWithType: TlsProtocol.WriteExtensions(Stream, IDictionary)
  fullName: Org.BouncyCastle.Crypto.Tls.TlsProtocol.WriteExtensions(Stream, System.Collections.IDictionary)
  spec.csharp:
  - uid: Org.BouncyCastle.Crypto.Tls.TlsProtocol.WriteExtensions(Stream,System.Collections.IDictionary)
    name: WriteExtensions
    nameWithType: TlsProtocol.WriteExtensions
    fullName: Org.BouncyCastle.Crypto.Tls.TlsProtocol.WriteExtensions
  - name: (
    nameWithType: (
    fullName: (
  - uid: Stream
    name: Stream
    nameWithType: Stream
    fullName: Stream
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.IDictionary
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.IDictionary
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Org.BouncyCastle.Crypto.Tls.TlsProtocol.WriteExtensions(Stream,System.Collections.IDictionary)
    name: WriteExtensions
    nameWithType: TlsProtocol.WriteExtensions
    fullName: Org.BouncyCastle.Crypto.Tls.TlsProtocol.WriteExtensions
  - name: (
    nameWithType: (
    fullName: (
  - uid: Stream
    name: Stream
    nameWithType: Stream
    fullName: Stream
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.IDictionary
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.IDictionary
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Org.BouncyCastle.Crypto.Tls.TlsProtocol.WriteSelectedExtensions(Stream,System.Collections.IDictionary,System.Boolean)
  commentId: M:Org.BouncyCastle.Crypto.Tls.TlsProtocol.WriteSelectedExtensions(Stream,System.Collections.IDictionary,System.Boolean)
  parent: Org.BouncyCastle.Crypto.Tls.TlsProtocol
  isExternal: true
  name: WriteSelectedExtensions(Stream, IDictionary, Boolean)
  nameWithType: TlsProtocol.WriteSelectedExtensions(Stream, IDictionary, Boolean)
  fullName: Org.BouncyCastle.Crypto.Tls.TlsProtocol.WriteSelectedExtensions(Stream, System.Collections.IDictionary, System.Boolean)
  spec.csharp:
  - uid: Org.BouncyCastle.Crypto.Tls.TlsProtocol.WriteSelectedExtensions(Stream,System.Collections.IDictionary,System.Boolean)
    name: WriteSelectedExtensions
    nameWithType: TlsProtocol.WriteSelectedExtensions
    fullName: Org.BouncyCastle.Crypto.Tls.TlsProtocol.WriteSelectedExtensions
  - name: (
    nameWithType: (
    fullName: (
  - uid: Stream
    name: Stream
    nameWithType: Stream
    fullName: Stream
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.IDictionary
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.IDictionary
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Org.BouncyCastle.Crypto.Tls.TlsProtocol.WriteSelectedExtensions(Stream,System.Collections.IDictionary,System.Boolean)
    name: WriteSelectedExtensions
    nameWithType: TlsProtocol.WriteSelectedExtensions
    fullName: Org.BouncyCastle.Crypto.Tls.TlsProtocol.WriteSelectedExtensions
  - name: (
    nameWithType: (
    fullName: (
  - uid: Stream
    name: Stream
    nameWithType: Stream
    fullName: Stream
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.IDictionary
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.IDictionary
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Org.BouncyCastle.Crypto.Tls.TlsProtocol.WriteSupplementalData(Stream,System.Collections.IList)
  commentId: M:Org.BouncyCastle.Crypto.Tls.TlsProtocol.WriteSupplementalData(Stream,System.Collections.IList)
  parent: Org.BouncyCastle.Crypto.Tls.TlsProtocol
  isExternal: true
  name: WriteSupplementalData(Stream, IList)
  nameWithType: TlsProtocol.WriteSupplementalData(Stream, IList)
  fullName: Org.BouncyCastle.Crypto.Tls.TlsProtocol.WriteSupplementalData(Stream, System.Collections.IList)
  spec.csharp:
  - uid: Org.BouncyCastle.Crypto.Tls.TlsProtocol.WriteSupplementalData(Stream,System.Collections.IList)
    name: WriteSupplementalData
    nameWithType: TlsProtocol.WriteSupplementalData
    fullName: Org.BouncyCastle.Crypto.Tls.TlsProtocol.WriteSupplementalData
  - name: (
    nameWithType: (
    fullName: (
  - uid: Stream
    name: Stream
    nameWithType: Stream
    fullName: Stream
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.IList
    name: IList
    nameWithType: IList
    fullName: System.Collections.IList
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Org.BouncyCastle.Crypto.Tls.TlsProtocol.WriteSupplementalData(Stream,System.Collections.IList)
    name: WriteSupplementalData
    nameWithType: TlsProtocol.WriteSupplementalData
    fullName: Org.BouncyCastle.Crypto.Tls.TlsProtocol.WriteSupplementalData
  - name: (
    nameWithType: (
    fullName: (
  - uid: Stream
    name: Stream
    nameWithType: Stream
    fullName: Stream
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.IList
    name: IList
    nameWithType: IList
    fullName: System.Collections.IList
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Org.BouncyCastle.Crypto.Tls.TlsProtocol.GetPrfAlgorithm(Org.BouncyCastle.Crypto.Tls.TlsContext,System.Int32)
  commentId: M:Org.BouncyCastle.Crypto.Tls.TlsProtocol.GetPrfAlgorithm(Org.BouncyCastle.Crypto.Tls.TlsContext,System.Int32)
  parent: Org.BouncyCastle.Crypto.Tls.TlsProtocol
  isExternal: true
  name: GetPrfAlgorithm(TlsContext, Int32)
  nameWithType: TlsProtocol.GetPrfAlgorithm(TlsContext, Int32)
  fullName: Org.BouncyCastle.Crypto.Tls.TlsProtocol.GetPrfAlgorithm(Org.BouncyCastle.Crypto.Tls.TlsContext, System.Int32)
  spec.csharp:
  - uid: Org.BouncyCastle.Crypto.Tls.TlsProtocol.GetPrfAlgorithm(Org.BouncyCastle.Crypto.Tls.TlsContext,System.Int32)
    name: GetPrfAlgorithm
    nameWithType: TlsProtocol.GetPrfAlgorithm
    fullName: Org.BouncyCastle.Crypto.Tls.TlsProtocol.GetPrfAlgorithm
  - name: (
    nameWithType: (
    fullName: (
  - uid: Org.BouncyCastle.Crypto.Tls.TlsContext
    name: TlsContext
    nameWithType: TlsContext
    fullName: Org.BouncyCastle.Crypto.Tls.TlsContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Org.BouncyCastle.Crypto.Tls.TlsProtocol.GetPrfAlgorithm(Org.BouncyCastle.Crypto.Tls.TlsContext,System.Int32)
    name: GetPrfAlgorithm
    nameWithType: TlsProtocol.GetPrfAlgorithm
    fullName: Org.BouncyCastle.Crypto.Tls.TlsProtocol.GetPrfAlgorithm
  - name: (
    nameWithType: (
    fullName: (
  - uid: Org.BouncyCastle.Crypto.Tls.TlsContext
    name: TlsContext
    nameWithType: TlsContext
    fullName: Org.BouncyCastle.Crypto.Tls.TlsContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Org.BouncyCastle.Crypto.Tls.TlsClient
  commentId: T:Org.BouncyCastle.Crypto.Tls.TlsClient
  parent: Org.BouncyCastle.Crypto.Tls
  name: TlsClient
  nameWithType: TlsClient
  fullName: Org.BouncyCastle.Crypto.Tls.TlsClient
- uid: System.Byte[]
  isExternal: true
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullName.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Org.BouncyCastle.Crypto.Tls.TlsKeyExchange
  commentId: T:Org.BouncyCastle.Crypto.Tls.TlsKeyExchange
  parent: Org.BouncyCastle.Crypto.Tls
  name: TlsKeyExchange
  nameWithType: TlsKeyExchange
  fullName: Org.BouncyCastle.Crypto.Tls.TlsKeyExchange
- uid: Org.BouncyCastle.Crypto.Tls.TlsAuthentication
  commentId: T:Org.BouncyCastle.Crypto.Tls.TlsAuthentication
  parent: Org.BouncyCastle.Crypto.Tls
  name: TlsAuthentication
  nameWithType: TlsAuthentication
  fullName: Org.BouncyCastle.Crypto.Tls.TlsAuthentication
- uid: Org.BouncyCastle.Crypto.Tls.CertificateStatus
  commentId: T:Org.BouncyCastle.Crypto.Tls.CertificateStatus
  parent: Org.BouncyCastle.Crypto.Tls
  name: CertificateStatus
  nameWithType: CertificateStatus
  fullName: Org.BouncyCastle.Crypto.Tls.CertificateStatus
- uid: Org.BouncyCastle.Crypto.Tls.CertificateRequest
  commentId: T:Org.BouncyCastle.Crypto.Tls.CertificateRequest
  parent: Org.BouncyCastle.Crypto.Tls
  name: CertificateRequest
  nameWithType: CertificateRequest
  fullName: Org.BouncyCastle.Crypto.Tls.CertificateRequest
- uid: Org.BouncyCastle.Crypto.Tls.TlsClientProtocol.#ctor*
  commentId: Overload:Org.BouncyCastle.Crypto.Tls.TlsClientProtocol.#ctor
  name: TlsClientProtocol
  nameWithType: TlsClientProtocol.TlsClientProtocol
  fullName: Org.BouncyCastle.Crypto.Tls.TlsClientProtocol.TlsClientProtocol
- uid: Stream
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: Stream
- uid: SecureRandom
  isExternal: true
  name: SecureRandom
  nameWithType: SecureRandom
  fullName: SecureRandom
- uid: Org.BouncyCastle.Crypto.Tls.TlsClientProtocol.Connect*
  commentId: Overload:Org.BouncyCastle.Crypto.Tls.TlsClientProtocol.Connect
  name: Connect
  nameWithType: TlsClientProtocol.Connect
  fullName: Org.BouncyCastle.Crypto.Tls.TlsClientProtocol.Connect
- uid: Org.BouncyCastle.Crypto.Tls.TlsProtocol.CleanupHandshake
  commentId: M:Org.BouncyCastle.Crypto.Tls.TlsProtocol.CleanupHandshake
  parent: Org.BouncyCastle.Crypto.Tls.TlsProtocol
  name: CleanupHandshake()
  nameWithType: TlsProtocol.CleanupHandshake()
  fullName: Org.BouncyCastle.Crypto.Tls.TlsProtocol.CleanupHandshake()
  spec.csharp:
  - uid: Org.BouncyCastle.Crypto.Tls.TlsProtocol.CleanupHandshake
    name: CleanupHandshake
    nameWithType: TlsProtocol.CleanupHandshake
    fullName: Org.BouncyCastle.Crypto.Tls.TlsProtocol.CleanupHandshake
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Org.BouncyCastle.Crypto.Tls.TlsProtocol.CleanupHandshake
    name: CleanupHandshake
    nameWithType: TlsProtocol.CleanupHandshake
    fullName: Org.BouncyCastle.Crypto.Tls.TlsProtocol.CleanupHandshake
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Org.BouncyCastle.Crypto.Tls.TlsClientProtocol.CleanupHandshake*
  commentId: Overload:Org.BouncyCastle.Crypto.Tls.TlsClientProtocol.CleanupHandshake
  name: CleanupHandshake
  nameWithType: TlsClientProtocol.CleanupHandshake
  fullName: Org.BouncyCastle.Crypto.Tls.TlsClientProtocol.CleanupHandshake
- uid: Org.BouncyCastle.Crypto.Tls.TlsProtocol.Context
  commentId: P:Org.BouncyCastle.Crypto.Tls.TlsProtocol.Context
  parent: Org.BouncyCastle.Crypto.Tls.TlsProtocol
  name: Context
  nameWithType: TlsProtocol.Context
  fullName: Org.BouncyCastle.Crypto.Tls.TlsProtocol.Context
- uid: Org.BouncyCastle.Crypto.Tls.TlsClientProtocol.Context*
  commentId: Overload:Org.BouncyCastle.Crypto.Tls.TlsClientProtocol.Context
  name: Context
  nameWithType: TlsClientProtocol.Context
  fullName: Org.BouncyCastle.Crypto.Tls.TlsClientProtocol.Context
- uid: Org.BouncyCastle.Crypto.Tls.TlsContext
  commentId: T:Org.BouncyCastle.Crypto.Tls.TlsContext
  parent: Org.BouncyCastle.Crypto.Tls
  name: TlsContext
  nameWithType: TlsContext
  fullName: Org.BouncyCastle.Crypto.Tls.TlsContext
- uid: Org.BouncyCastle.Crypto.Tls.TlsProtocol.Peer
  commentId: P:Org.BouncyCastle.Crypto.Tls.TlsProtocol.Peer
  parent: Org.BouncyCastle.Crypto.Tls.TlsProtocol
  name: Peer
  nameWithType: TlsProtocol.Peer
  fullName: Org.BouncyCastle.Crypto.Tls.TlsProtocol.Peer
- uid: Org.BouncyCastle.Crypto.Tls.TlsClientProtocol.Peer*
  commentId: Overload:Org.BouncyCastle.Crypto.Tls.TlsClientProtocol.Peer
  name: Peer
  nameWithType: TlsClientProtocol.Peer
  fullName: Org.BouncyCastle.Crypto.Tls.TlsClientProtocol.Peer
- uid: Org.BouncyCastle.Crypto.Tls.TlsPeer
  commentId: T:Org.BouncyCastle.Crypto.Tls.TlsPeer
  parent: Org.BouncyCastle.Crypto.Tls
  name: TlsPeer
  nameWithType: TlsPeer
  fullName: Org.BouncyCastle.Crypto.Tls.TlsPeer
- uid: Org.BouncyCastle.Crypto.Tls.TlsProtocol.HandleHandshakeMessage(System.Byte,System.Byte[])
  commentId: M:Org.BouncyCastle.Crypto.Tls.TlsProtocol.HandleHandshakeMessage(System.Byte,System.Byte[])
  parent: Org.BouncyCastle.Crypto.Tls.TlsProtocol
  isExternal: true
  name: HandleHandshakeMessage(Byte, Byte[])
  nameWithType: TlsProtocol.HandleHandshakeMessage(Byte, Byte[])
  fullName: Org.BouncyCastle.Crypto.Tls.TlsProtocol.HandleHandshakeMessage(System.Byte, System.Byte[])
  nameWithType.vb: TlsProtocol.HandleHandshakeMessage(Byte, Byte())
  fullName.vb: Org.BouncyCastle.Crypto.Tls.TlsProtocol.HandleHandshakeMessage(System.Byte, System.Byte())
  name.vb: HandleHandshakeMessage(Byte, Byte())
  spec.csharp:
  - uid: Org.BouncyCastle.Crypto.Tls.TlsProtocol.HandleHandshakeMessage(System.Byte,System.Byte[])
    name: HandleHandshakeMessage
    nameWithType: TlsProtocol.HandleHandshakeMessage
    fullName: Org.BouncyCastle.Crypto.Tls.TlsProtocol.HandleHandshakeMessage
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Org.BouncyCastle.Crypto.Tls.TlsProtocol.HandleHandshakeMessage(System.Byte,System.Byte[])
    name: HandleHandshakeMessage
    nameWithType: TlsProtocol.HandleHandshakeMessage
    fullName: Org.BouncyCastle.Crypto.Tls.TlsProtocol.HandleHandshakeMessage
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Org.BouncyCastle.Crypto.Tls.TlsClientProtocol.HandleHandshakeMessage*
  commentId: Overload:Org.BouncyCastle.Crypto.Tls.TlsClientProtocol.HandleHandshakeMessage
  name: HandleHandshakeMessage
  nameWithType: TlsClientProtocol.HandleHandshakeMessage
  fullName: Org.BouncyCastle.Crypto.Tls.TlsClientProtocol.HandleHandshakeMessage
- uid: System.Byte
  commentId: T:System.Byte
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte
- uid: Org.BouncyCastle.Crypto.Tls.TlsClientProtocol.HandleSupplementalData*
  commentId: Overload:Org.BouncyCastle.Crypto.Tls.TlsClientProtocol.HandleSupplementalData
  name: HandleSupplementalData
  nameWithType: TlsClientProtocol.HandleSupplementalData
  fullName: Org.BouncyCastle.Crypto.Tls.TlsClientProtocol.HandleSupplementalData
- uid: System.Collections.IList
  commentId: T:System.Collections.IList
  parent: System.Collections
  isExternal: true
  name: IList
  nameWithType: IList
  fullName: System.Collections.IList
- uid: System.Collections
  commentId: N:System.Collections
  isExternal: true
  name: System.Collections
  nameWithType: System.Collections
  fullName: System.Collections
- uid: Org.BouncyCastle.Crypto.Tls.TlsClientProtocol.ReceiveNewSessionTicketMessage*
  commentId: Overload:Org.BouncyCastle.Crypto.Tls.TlsClientProtocol.ReceiveNewSessionTicketMessage
  name: ReceiveNewSessionTicketMessage
  nameWithType: TlsClientProtocol.ReceiveNewSessionTicketMessage
  fullName: Org.BouncyCastle.Crypto.Tls.TlsClientProtocol.ReceiveNewSessionTicketMessage
- uid: MemoryStream
  isExternal: true
  name: MemoryStream
  nameWithType: MemoryStream
  fullName: MemoryStream
- uid: Org.BouncyCastle.Crypto.Tls.TlsClientProtocol.ReceiveServerHelloMessage*
  commentId: Overload:Org.BouncyCastle.Crypto.Tls.TlsClientProtocol.ReceiveServerHelloMessage
  name: ReceiveServerHelloMessage
  nameWithType: TlsClientProtocol.ReceiveServerHelloMessage
  fullName: Org.BouncyCastle.Crypto.Tls.TlsClientProtocol.ReceiveServerHelloMessage
- uid: Org.BouncyCastle.Crypto.Tls.TlsClientProtocol.SendCertificateVerifyMessage*
  commentId: Overload:Org.BouncyCastle.Crypto.Tls.TlsClientProtocol.SendCertificateVerifyMessage
  name: SendCertificateVerifyMessage
  nameWithType: TlsClientProtocol.SendCertificateVerifyMessage
  fullName: Org.BouncyCastle.Crypto.Tls.TlsClientProtocol.SendCertificateVerifyMessage
- uid: Org.BouncyCastle.Crypto.Tls.DigitallySigned
  commentId: T:Org.BouncyCastle.Crypto.Tls.DigitallySigned
  parent: Org.BouncyCastle.Crypto.Tls
  name: DigitallySigned
  nameWithType: DigitallySigned
  fullName: Org.BouncyCastle.Crypto.Tls.DigitallySigned
- uid: Org.BouncyCastle.Crypto.Tls.TlsClientProtocol.SendClientHelloMessage*
  commentId: Overload:Org.BouncyCastle.Crypto.Tls.TlsClientProtocol.SendClientHelloMessage
  name: SendClientHelloMessage
  nameWithType: TlsClientProtocol.SendClientHelloMessage
  fullName: Org.BouncyCastle.Crypto.Tls.TlsClientProtocol.SendClientHelloMessage
- uid: Org.BouncyCastle.Crypto.Tls.TlsClientProtocol.SendClientKeyExchangeMessage*
  commentId: Overload:Org.BouncyCastle.Crypto.Tls.TlsClientProtocol.SendClientKeyExchangeMessage
  name: SendClientKeyExchangeMessage
  nameWithType: TlsClientProtocol.SendClientKeyExchangeMessage
  fullName: Org.BouncyCastle.Crypto.Tls.TlsClientProtocol.SendClientKeyExchangeMessage
