### YamlMime:ManagedReference
items:
- uid: Org.BouncyCastle.Utilities.Collections.ISet
  commentId: T:Org.BouncyCastle.Utilities.Collections.ISet
  id: ISet
  parent: Org.BouncyCastle.Utilities.Collections
  children:
  - Org.BouncyCastle.Utilities.Collections.ISet.Add(System.Object)
  - Org.BouncyCastle.Utilities.Collections.ISet.AddAll(System.Collections.IEnumerable)
  - Org.BouncyCastle.Utilities.Collections.ISet.Clear
  - Org.BouncyCastle.Utilities.Collections.ISet.Contains(System.Object)
  - Org.BouncyCastle.Utilities.Collections.ISet.IsEmpty
  - Org.BouncyCastle.Utilities.Collections.ISet.IsFixedSize
  - Org.BouncyCastle.Utilities.Collections.ISet.IsReadOnly
  - Org.BouncyCastle.Utilities.Collections.ISet.Remove(System.Object)
  - Org.BouncyCastle.Utilities.Collections.ISet.RemoveAll(System.Collections.IEnumerable)
  langs:
  - csharp
  - vb
  name: ISet
  nameWithType: ISet
  fullName: Org.BouncyCastle.Utilities.Collections.ISet
  type: Interface
  source:
    id: ISet
    path: ''
    startLine: 48970
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Utilities.Collections
  syntax:
    content: 'public interface ISet : ICollection, IEnumerable'
    content.vb: >-
      Public Interface ISet
          Inherits ICollection
  inheritedMembers:
  - System.Collections.ICollection.CopyTo(System.Array,System.Int32)
  - System.Collections.ICollection.Count
  - System.Collections.ICollection.SyncRoot
  - System.Collections.ICollection.IsSynchronized
  - System.Collections.IEnumerable.GetEnumerator
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Org.BouncyCastle.Utilities.Collections.ISet.Add(System.Object)
  commentId: M:Org.BouncyCastle.Utilities.Collections.ISet.Add(System.Object)
  id: Add(System.Object)
  parent: Org.BouncyCastle.Utilities.Collections.ISet
  langs:
  - csharp
  - vb
  name: Add(Object)
  nameWithType: ISet.Add(Object)
  fullName: Org.BouncyCastle.Utilities.Collections.ISet.Add(System.Object)
  type: Method
  source:
    id: Add
    path: ''
    startLine: 48973
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Utilities.Collections
  syntax:
    content: void Add(object o)
    parameters:
    - id: o
      type: System.Object
    content.vb: Sub Add(o As Object)
  overload: Org.BouncyCastle.Utilities.Collections.ISet.Add*
- uid: Org.BouncyCastle.Utilities.Collections.ISet.AddAll(System.Collections.IEnumerable)
  commentId: M:Org.BouncyCastle.Utilities.Collections.ISet.AddAll(System.Collections.IEnumerable)
  id: AddAll(System.Collections.IEnumerable)
  parent: Org.BouncyCastle.Utilities.Collections.ISet
  langs:
  - csharp
  - vb
  name: AddAll(IEnumerable)
  nameWithType: ISet.AddAll(IEnumerable)
  fullName: Org.BouncyCastle.Utilities.Collections.ISet.AddAll(System.Collections.IEnumerable)
  type: Method
  source:
    id: AddAll
    path: ''
    startLine: 48974
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Utilities.Collections
  syntax:
    content: void AddAll(IEnumerable e)
    parameters:
    - id: e
      type: System.Collections.IEnumerable
    content.vb: Sub AddAll(e As IEnumerable)
  overload: Org.BouncyCastle.Utilities.Collections.ISet.AddAll*
- uid: Org.BouncyCastle.Utilities.Collections.ISet.Clear
  commentId: M:Org.BouncyCastle.Utilities.Collections.ISet.Clear
  id: Clear
  parent: Org.BouncyCastle.Utilities.Collections.ISet
  langs:
  - csharp
  - vb
  name: Clear()
  nameWithType: ISet.Clear()
  fullName: Org.BouncyCastle.Utilities.Collections.ISet.Clear()
  type: Method
  source:
    id: Clear
    path: ''
    startLine: 48975
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Utilities.Collections
  syntax:
    content: void Clear()
    content.vb: Sub Clear
  overload: Org.BouncyCastle.Utilities.Collections.ISet.Clear*
- uid: Org.BouncyCastle.Utilities.Collections.ISet.Contains(System.Object)
  commentId: M:Org.BouncyCastle.Utilities.Collections.ISet.Contains(System.Object)
  id: Contains(System.Object)
  parent: Org.BouncyCastle.Utilities.Collections.ISet
  langs:
  - csharp
  - vb
  name: Contains(Object)
  nameWithType: ISet.Contains(Object)
  fullName: Org.BouncyCastle.Utilities.Collections.ISet.Contains(System.Object)
  type: Method
  source:
    id: Contains
    path: ''
    startLine: 48976
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Utilities.Collections
  syntax:
    content: bool Contains(object o)
    parameters:
    - id: o
      type: System.Object
    return:
      type: System.Boolean
    content.vb: Function Contains(o As Object) As Boolean
  overload: Org.BouncyCastle.Utilities.Collections.ISet.Contains*
- uid: Org.BouncyCastle.Utilities.Collections.ISet.IsEmpty
  commentId: P:Org.BouncyCastle.Utilities.Collections.ISet.IsEmpty
  id: IsEmpty
  parent: Org.BouncyCastle.Utilities.Collections.ISet
  langs:
  - csharp
  - vb
  name: IsEmpty
  nameWithType: ISet.IsEmpty
  fullName: Org.BouncyCastle.Utilities.Collections.ISet.IsEmpty
  type: Property
  source:
    id: IsEmpty
    path: ''
    startLine: 48977
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Utilities.Collections
  syntax:
    content: bool IsEmpty { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: ReadOnly Property IsEmpty As Boolean
  overload: Org.BouncyCastle.Utilities.Collections.ISet.IsEmpty*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Org.BouncyCastle.Utilities.Collections.ISet.IsFixedSize
  commentId: P:Org.BouncyCastle.Utilities.Collections.ISet.IsFixedSize
  id: IsFixedSize
  parent: Org.BouncyCastle.Utilities.Collections.ISet
  langs:
  - csharp
  - vb
  name: IsFixedSize
  nameWithType: ISet.IsFixedSize
  fullName: Org.BouncyCastle.Utilities.Collections.ISet.IsFixedSize
  type: Property
  source:
    id: IsFixedSize
    path: ''
    startLine: 48978
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Utilities.Collections
  syntax:
    content: bool IsFixedSize { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: ReadOnly Property IsFixedSize As Boolean
  overload: Org.BouncyCastle.Utilities.Collections.ISet.IsFixedSize*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Org.BouncyCastle.Utilities.Collections.ISet.IsReadOnly
  commentId: P:Org.BouncyCastle.Utilities.Collections.ISet.IsReadOnly
  id: IsReadOnly
  parent: Org.BouncyCastle.Utilities.Collections.ISet
  langs:
  - csharp
  - vb
  name: IsReadOnly
  nameWithType: ISet.IsReadOnly
  fullName: Org.BouncyCastle.Utilities.Collections.ISet.IsReadOnly
  type: Property
  source:
    id: IsReadOnly
    path: ''
    startLine: 48979
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Utilities.Collections
  syntax:
    content: bool IsReadOnly { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: ReadOnly Property IsReadOnly As Boolean
  overload: Org.BouncyCastle.Utilities.Collections.ISet.IsReadOnly*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Org.BouncyCastle.Utilities.Collections.ISet.Remove(System.Object)
  commentId: M:Org.BouncyCastle.Utilities.Collections.ISet.Remove(System.Object)
  id: Remove(System.Object)
  parent: Org.BouncyCastle.Utilities.Collections.ISet
  langs:
  - csharp
  - vb
  name: Remove(Object)
  nameWithType: ISet.Remove(Object)
  fullName: Org.BouncyCastle.Utilities.Collections.ISet.Remove(System.Object)
  type: Method
  source:
    id: Remove
    path: ''
    startLine: 48980
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Utilities.Collections
  syntax:
    content: void Remove(object o)
    parameters:
    - id: o
      type: System.Object
    content.vb: Sub Remove(o As Object)
  overload: Org.BouncyCastle.Utilities.Collections.ISet.Remove*
- uid: Org.BouncyCastle.Utilities.Collections.ISet.RemoveAll(System.Collections.IEnumerable)
  commentId: M:Org.BouncyCastle.Utilities.Collections.ISet.RemoveAll(System.Collections.IEnumerable)
  id: RemoveAll(System.Collections.IEnumerable)
  parent: Org.BouncyCastle.Utilities.Collections.ISet
  langs:
  - csharp
  - vb
  name: RemoveAll(IEnumerable)
  nameWithType: ISet.RemoveAll(IEnumerable)
  fullName: Org.BouncyCastle.Utilities.Collections.ISet.RemoveAll(System.Collections.IEnumerable)
  type: Method
  source:
    id: RemoveAll
    path: ''
    startLine: 48981
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Utilities.Collections
  syntax:
    content: void RemoveAll(IEnumerable e)
    parameters:
    - id: e
      type: System.Collections.IEnumerable
    content.vb: Sub RemoveAll(e As IEnumerable)
  overload: Org.BouncyCastle.Utilities.Collections.ISet.RemoveAll*
references:
- uid: Org.BouncyCastle.Utilities.Collections
  commentId: N:Org.BouncyCastle.Utilities.Collections
  name: Org.BouncyCastle.Utilities.Collections
  nameWithType: Org.BouncyCastle.Utilities.Collections
  fullName: Org.BouncyCastle.Utilities.Collections
- uid: System.Collections.ICollection.CopyTo(System.Array,System.Int32)
  commentId: M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)
  parent: System.Collections.ICollection
  isExternal: true
  name: CopyTo(Array, Int32)
  nameWithType: ICollection.CopyTo(Array, Int32)
  fullName: System.Collections.ICollection.CopyTo(System.Array, System.Int32)
  spec.csharp:
  - uid: System.Collections.ICollection.CopyTo(System.Array,System.Int32)
    name: CopyTo
    nameWithType: ICollection.CopyTo
    fullName: System.Collections.ICollection.CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Array
    name: Array
    nameWithType: Array
    fullName: System.Array
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ICollection.CopyTo(System.Array,System.Int32)
    name: CopyTo
    nameWithType: ICollection.CopyTo
    fullName: System.Collections.ICollection.CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Array
    name: Array
    nameWithType: Array
    fullName: System.Array
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ICollection.Count
  commentId: P:System.Collections.ICollection.Count
  parent: System.Collections.ICollection
  isExternal: true
  name: Count
  nameWithType: ICollection.Count
  fullName: System.Collections.ICollection.Count
- uid: System.Collections.ICollection.SyncRoot
  commentId: P:System.Collections.ICollection.SyncRoot
  parent: System.Collections.ICollection
  isExternal: true
  name: SyncRoot
  nameWithType: ICollection.SyncRoot
  fullName: System.Collections.ICollection.SyncRoot
- uid: System.Collections.ICollection.IsSynchronized
  commentId: P:System.Collections.ICollection.IsSynchronized
  parent: System.Collections.ICollection
  isExternal: true
  name: IsSynchronized
  nameWithType: ICollection.IsSynchronized
  fullName: System.Collections.ICollection.IsSynchronized
- uid: System.Collections.IEnumerable.GetEnumerator
  commentId: M:System.Collections.IEnumerable.GetEnumerator
  parent: System.Collections.IEnumerable
  isExternal: true
  name: GetEnumerator()
  nameWithType: IEnumerable.GetEnumerator()
  fullName: System.Collections.IEnumerable.GetEnumerator()
  spec.csharp:
  - uid: System.Collections.IEnumerable.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable.GetEnumerator
    fullName: System.Collections.IEnumerable.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.IEnumerable.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable.GetEnumerator
    fullName: System.Collections.IEnumerable.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ICollection
  commentId: T:System.Collections.ICollection
  parent: System.Collections
  isExternal: true
  name: ICollection
  nameWithType: ICollection
  fullName: System.Collections.ICollection
- uid: System.Collections.IEnumerable
  commentId: T:System.Collections.IEnumerable
  parent: System.Collections
  isExternal: true
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: System.Collections
  commentId: N:System.Collections
  isExternal: true
  name: System.Collections
  nameWithType: System.Collections
  fullName: System.Collections
- uid: Org.BouncyCastle.Utilities.Collections.ISet.Add*
  commentId: Overload:Org.BouncyCastle.Utilities.Collections.ISet.Add
  name: Add
  nameWithType: ISet.Add
  fullName: Org.BouncyCastle.Utilities.Collections.ISet.Add
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Org.BouncyCastle.Utilities.Collections.ISet.AddAll*
  commentId: Overload:Org.BouncyCastle.Utilities.Collections.ISet.AddAll
  name: AddAll
  nameWithType: ISet.AddAll
  fullName: Org.BouncyCastle.Utilities.Collections.ISet.AddAll
- uid: Org.BouncyCastle.Utilities.Collections.ISet.Clear*
  commentId: Overload:Org.BouncyCastle.Utilities.Collections.ISet.Clear
  name: Clear
  nameWithType: ISet.Clear
  fullName: Org.BouncyCastle.Utilities.Collections.ISet.Clear
- uid: Org.BouncyCastle.Utilities.Collections.ISet.Contains*
  commentId: Overload:Org.BouncyCastle.Utilities.Collections.ISet.Contains
  name: Contains
  nameWithType: ISet.Contains
  fullName: Org.BouncyCastle.Utilities.Collections.ISet.Contains
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Org.BouncyCastle.Utilities.Collections.ISet.IsEmpty*
  commentId: Overload:Org.BouncyCastle.Utilities.Collections.ISet.IsEmpty
  name: IsEmpty
  nameWithType: ISet.IsEmpty
  fullName: Org.BouncyCastle.Utilities.Collections.ISet.IsEmpty
- uid: Org.BouncyCastle.Utilities.Collections.ISet.IsFixedSize*
  commentId: Overload:Org.BouncyCastle.Utilities.Collections.ISet.IsFixedSize
  name: IsFixedSize
  nameWithType: ISet.IsFixedSize
  fullName: Org.BouncyCastle.Utilities.Collections.ISet.IsFixedSize
- uid: Org.BouncyCastle.Utilities.Collections.ISet.IsReadOnly*
  commentId: Overload:Org.BouncyCastle.Utilities.Collections.ISet.IsReadOnly
  name: IsReadOnly
  nameWithType: ISet.IsReadOnly
  fullName: Org.BouncyCastle.Utilities.Collections.ISet.IsReadOnly
- uid: Org.BouncyCastle.Utilities.Collections.ISet.Remove*
  commentId: Overload:Org.BouncyCastle.Utilities.Collections.ISet.Remove
  name: Remove
  nameWithType: ISet.Remove
  fullName: Org.BouncyCastle.Utilities.Collections.ISet.Remove
- uid: Org.BouncyCastle.Utilities.Collections.ISet.RemoveAll*
  commentId: Overload:Org.BouncyCastle.Utilities.Collections.ISet.RemoveAll
  name: RemoveAll
  nameWithType: ISet.RemoveAll
  fullName: Org.BouncyCastle.Utilities.Collections.ISet.RemoveAll
