### YamlMime:ManagedReference
items:
- uid: Org.BouncyCastle.Crypto.Macs.SipHash
  commentId: T:Org.BouncyCastle.Crypto.Macs.SipHash
  id: SipHash
  parent: Org.BouncyCastle.Crypto.Macs
  children:
  - Org.BouncyCastle.Crypto.Macs.SipHash.#ctor
  - Org.BouncyCastle.Crypto.Macs.SipHash.#ctor(System.Int32,System.Int32)
  - Org.BouncyCastle.Crypto.Macs.SipHash.AlgorithmName
  - Org.BouncyCastle.Crypto.Macs.SipHash.ApplySipRounds(System.Int32)
  - Org.BouncyCastle.Crypto.Macs.SipHash.BlockUpdate(System.Byte[],System.Int32,System.Int32)
  - Org.BouncyCastle.Crypto.Macs.SipHash.c
  - Org.BouncyCastle.Crypto.Macs.SipHash.d
  - Org.BouncyCastle.Crypto.Macs.SipHash.DoFinal
  - Org.BouncyCastle.Crypto.Macs.SipHash.DoFinal(System.Byte[],System.Int32)
  - Org.BouncyCastle.Crypto.Macs.SipHash.GetMacSize
  - Org.BouncyCastle.Crypto.Macs.SipHash.Init(Org.BouncyCastle.Crypto.ICipherParameters)
  - Org.BouncyCastle.Crypto.Macs.SipHash.k0
  - Org.BouncyCastle.Crypto.Macs.SipHash.k1
  - Org.BouncyCastle.Crypto.Macs.SipHash.m
  - Org.BouncyCastle.Crypto.Macs.SipHash.ProcessMessageWord
  - Org.BouncyCastle.Crypto.Macs.SipHash.Reset
  - Org.BouncyCastle.Crypto.Macs.SipHash.RotateLeft(System.Int64,System.Int32)
  - Org.BouncyCastle.Crypto.Macs.SipHash.Update(System.Byte)
  - Org.BouncyCastle.Crypto.Macs.SipHash.v0
  - Org.BouncyCastle.Crypto.Macs.SipHash.v1
  - Org.BouncyCastle.Crypto.Macs.SipHash.v2
  - Org.BouncyCastle.Crypto.Macs.SipHash.v3
  - Org.BouncyCastle.Crypto.Macs.SipHash.wordCount
  - Org.BouncyCastle.Crypto.Macs.SipHash.wordPos
  langs:
  - csharp
  - vb
  name: SipHash
  nameWithType: SipHash
  fullName: Org.BouncyCastle.Crypto.Macs.SipHash
  type: Class
  source:
    id: SipHash
    path: ''
    startLine: 100259
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Macs
  summary: "\nImplementation of SipHash as specified in &quot;SipHash: a fast short-input PRF&quot;, by Jean-Philippe\nAumasson and Daniel J. Bernstein (https://131002.net/siphash/siphash.pdf).\n"
  remarks: "\n&quot;SipHash is a family of PRFs SipHash-c-d where the integer parameters c and d are the number of\ncompression rounds and the number of finalization rounds. A compression round is identical to a\nfinalization round and this round function is called SipRound. Given a 128-bit key k and a\n(possibly empty) byte string m, SipHash-c-d returns a 64-bit value...&quot;\n"
  example: []
  syntax:
    content: 'public class SipHash : IMac'
    content.vb: >-
      Public Class SipHash
          Implements IMac
  inheritance:
  - System.Object
  implements:
  - Org.BouncyCastle.Crypto.IMac
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ToString
  - System.Object.ReferenceEquals(System.Object,System.Object)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Org.BouncyCastle.Crypto.Macs.SipHash.c
  commentId: F:Org.BouncyCastle.Crypto.Macs.SipHash.c
  id: c
  parent: Org.BouncyCastle.Crypto.Macs.SipHash
  langs:
  - csharp
  - vb
  name: c
  nameWithType: SipHash.c
  fullName: Org.BouncyCastle.Crypto.Macs.SipHash.c
  type: Field
  source:
    id: c
    path: ''
    startLine: 100262
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Macs
  syntax:
    content: protected readonly int c
    return:
      type: System.Int32
    content.vb: Protected ReadOnly c As Integer
  modifiers.csharp:
  - protected
  - readonly
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: Org.BouncyCastle.Crypto.Macs.SipHash.d
  commentId: F:Org.BouncyCastle.Crypto.Macs.SipHash.d
  id: d
  parent: Org.BouncyCastle.Crypto.Macs.SipHash
  langs:
  - csharp
  - vb
  name: d
  nameWithType: SipHash.d
  fullName: Org.BouncyCastle.Crypto.Macs.SipHash.d
  type: Field
  source:
    id: d
    path: ''
    startLine: 100262
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Macs
  syntax:
    content: protected readonly int d
    return:
      type: System.Int32
    content.vb: Protected ReadOnly d As Integer
  modifiers.csharp:
  - protected
  - readonly
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: Org.BouncyCastle.Crypto.Macs.SipHash.k0
  commentId: F:Org.BouncyCastle.Crypto.Macs.SipHash.k0
  id: k0
  parent: Org.BouncyCastle.Crypto.Macs.SipHash
  langs:
  - csharp
  - vb
  name: k0
  nameWithType: SipHash.k0
  fullName: Org.BouncyCastle.Crypto.Macs.SipHash.k0
  type: Field
  source:
    id: k0
    path: ''
    startLine: 100264
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Macs
  syntax:
    content: protected long k0
    return:
      type: System.Int64
    content.vb: Protected k0 As Long
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Org.BouncyCastle.Crypto.Macs.SipHash.k1
  commentId: F:Org.BouncyCastle.Crypto.Macs.SipHash.k1
  id: k1
  parent: Org.BouncyCastle.Crypto.Macs.SipHash
  langs:
  - csharp
  - vb
  name: k1
  nameWithType: SipHash.k1
  fullName: Org.BouncyCastle.Crypto.Macs.SipHash.k1
  type: Field
  source:
    id: k1
    path: ''
    startLine: 100264
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Macs
  syntax:
    content: protected long k1
    return:
      type: System.Int64
    content.vb: Protected k1 As Long
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Org.BouncyCastle.Crypto.Macs.SipHash.v0
  commentId: F:Org.BouncyCastle.Crypto.Macs.SipHash.v0
  id: v0
  parent: Org.BouncyCastle.Crypto.Macs.SipHash
  langs:
  - csharp
  - vb
  name: v0
  nameWithType: SipHash.v0
  fullName: Org.BouncyCastle.Crypto.Macs.SipHash.v0
  type: Field
  source:
    id: v0
    path: ''
    startLine: 100265
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Macs
  syntax:
    content: protected long v0
    return:
      type: System.Int64
    content.vb: Protected v0 As Long
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Org.BouncyCastle.Crypto.Macs.SipHash.v1
  commentId: F:Org.BouncyCastle.Crypto.Macs.SipHash.v1
  id: v1
  parent: Org.BouncyCastle.Crypto.Macs.SipHash
  langs:
  - csharp
  - vb
  name: v1
  nameWithType: SipHash.v1
  fullName: Org.BouncyCastle.Crypto.Macs.SipHash.v1
  type: Field
  source:
    id: v1
    path: ''
    startLine: 100265
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Macs
  syntax:
    content: protected long v1
    return:
      type: System.Int64
    content.vb: Protected v1 As Long
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Org.BouncyCastle.Crypto.Macs.SipHash.v2
  commentId: F:Org.BouncyCastle.Crypto.Macs.SipHash.v2
  id: v2
  parent: Org.BouncyCastle.Crypto.Macs.SipHash
  langs:
  - csharp
  - vb
  name: v2
  nameWithType: SipHash.v2
  fullName: Org.BouncyCastle.Crypto.Macs.SipHash.v2
  type: Field
  source:
    id: v2
    path: ''
    startLine: 100265
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Macs
  syntax:
    content: protected long v2
    return:
      type: System.Int64
    content.vb: Protected v2 As Long
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Org.BouncyCastle.Crypto.Macs.SipHash.v3
  commentId: F:Org.BouncyCastle.Crypto.Macs.SipHash.v3
  id: v3
  parent: Org.BouncyCastle.Crypto.Macs.SipHash
  langs:
  - csharp
  - vb
  name: v3
  nameWithType: SipHash.v3
  fullName: Org.BouncyCastle.Crypto.Macs.SipHash.v3
  type: Field
  source:
    id: v3
    path: ''
    startLine: 100265
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Macs
  syntax:
    content: protected long v3
    return:
      type: System.Int64
    content.vb: Protected v3 As Long
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Org.BouncyCastle.Crypto.Macs.SipHash.m
  commentId: F:Org.BouncyCastle.Crypto.Macs.SipHash.m
  id: m
  parent: Org.BouncyCastle.Crypto.Macs.SipHash
  langs:
  - csharp
  - vb
  name: m
  nameWithType: SipHash.m
  fullName: Org.BouncyCastle.Crypto.Macs.SipHash.m
  type: Field
  source:
    id: m
    path: ''
    startLine: 100267
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Macs
  syntax:
    content: protected long m
    return:
      type: System.Int64
    content.vb: Protected m As Long
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Org.BouncyCastle.Crypto.Macs.SipHash.wordPos
  commentId: F:Org.BouncyCastle.Crypto.Macs.SipHash.wordPos
  id: wordPos
  parent: Org.BouncyCastle.Crypto.Macs.SipHash
  langs:
  - csharp
  - vb
  name: wordPos
  nameWithType: SipHash.wordPos
  fullName: Org.BouncyCastle.Crypto.Macs.SipHash.wordPos
  type: Field
  source:
    id: wordPos
    path: ''
    startLine: 100268
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Macs
  syntax:
    content: protected int wordPos
    return:
      type: System.Int32
    content.vb: Protected wordPos As Integer
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Org.BouncyCastle.Crypto.Macs.SipHash.wordCount
  commentId: F:Org.BouncyCastle.Crypto.Macs.SipHash.wordCount
  id: wordCount
  parent: Org.BouncyCastle.Crypto.Macs.SipHash
  langs:
  - csharp
  - vb
  name: wordCount
  nameWithType: SipHash.wordCount
  fullName: Org.BouncyCastle.Crypto.Macs.SipHash.wordCount
  type: Field
  source:
    id: wordCount
    path: ''
    startLine: 100269
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Macs
  syntax:
    content: protected int wordCount
    return:
      type: System.Int32
    content.vb: Protected wordCount As Integer
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Org.BouncyCastle.Crypto.Macs.SipHash.#ctor
  commentId: M:Org.BouncyCastle.Crypto.Macs.SipHash.#ctor
  id: '#ctor'
  parent: Org.BouncyCastle.Crypto.Macs.SipHash
  langs:
  - csharp
  - vb
  name: SipHash()
  nameWithType: SipHash.SipHash()
  fullName: Org.BouncyCastle.Crypto.Macs.SipHash.SipHash()
  type: Constructor
  source:
    id: .ctor
    path: ''
    startLine: 100272
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Macs
  summary: SipHash-2-4
  example: []
  syntax:
    content: public SipHash()
    content.vb: Public Sub New
  overload: Org.BouncyCastle.Crypto.Macs.SipHash.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Org.BouncyCastle.Crypto.Macs.SipHash.#ctor(System.Int32,System.Int32)
  commentId: M:Org.BouncyCastle.Crypto.Macs.SipHash.#ctor(System.Int32,System.Int32)
  id: '#ctor(System.Int32,System.Int32)'
  parent: Org.BouncyCastle.Crypto.Macs.SipHash
  langs:
  - csharp
  - vb
  name: SipHash(Int32, Int32)
  nameWithType: SipHash.SipHash(Int32, Int32)
  fullName: Org.BouncyCastle.Crypto.Macs.SipHash.SipHash(System.Int32, System.Int32)
  type: Constructor
  source:
    id: .ctor
    path: ''
    startLine: 100280
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Macs
  summary: SipHash-c-d
  example: []
  syntax:
    content: public SipHash(int c, int d)
    parameters:
    - id: c
      type: System.Int32
      description: the number of compression rounds
    - id: d
      type: System.Int32
      description: the number of finalization rounds
    content.vb: Public Sub New(c As Integer, d As Integer)
  overload: Org.BouncyCastle.Crypto.Macs.SipHash.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Org.BouncyCastle.Crypto.Macs.SipHash.AlgorithmName
  commentId: P:Org.BouncyCastle.Crypto.Macs.SipHash.AlgorithmName
  id: AlgorithmName
  parent: Org.BouncyCastle.Crypto.Macs.SipHash
  langs:
  - csharp
  - vb
  name: AlgorithmName
  nameWithType: SipHash.AlgorithmName
  fullName: Org.BouncyCastle.Crypto.Macs.SipHash.AlgorithmName
  type: Property
  source:
    id: AlgorithmName
    path: ''
    startLine: 100286
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Macs
  syntax:
    content: public virtual string AlgorithmName { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Overridable ReadOnly Property AlgorithmName As String
  overload: Org.BouncyCastle.Crypto.Macs.SipHash.AlgorithmName*
  implements:
  - Org.BouncyCastle.Crypto.IMac.AlgorithmName
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: Org.BouncyCastle.Crypto.Macs.SipHash.GetMacSize
  commentId: M:Org.BouncyCastle.Crypto.Macs.SipHash.GetMacSize
  id: GetMacSize
  parent: Org.BouncyCastle.Crypto.Macs.SipHash
  langs:
  - csharp
  - vb
  name: GetMacSize()
  nameWithType: SipHash.GetMacSize()
  fullName: Org.BouncyCastle.Crypto.Macs.SipHash.GetMacSize()
  type: Method
  source:
    id: GetMacSize
    path: ''
    startLine: 100291
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Macs
  syntax:
    content: public virtual int GetMacSize()
    return:
      type: System.Int32
    content.vb: Public Overridable Function GetMacSize As Integer
  overload: Org.BouncyCastle.Crypto.Macs.SipHash.GetMacSize*
  implements:
  - Org.BouncyCastle.Crypto.IMac.GetMacSize
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Org.BouncyCastle.Crypto.Macs.SipHash.Init(Org.BouncyCastle.Crypto.ICipherParameters)
  commentId: M:Org.BouncyCastle.Crypto.Macs.SipHash.Init(Org.BouncyCastle.Crypto.ICipherParameters)
  id: Init(Org.BouncyCastle.Crypto.ICipherParameters)
  parent: Org.BouncyCastle.Crypto.Macs.SipHash
  langs:
  - csharp
  - vb
  name: Init(ICipherParameters)
  nameWithType: SipHash.Init(ICipherParameters)
  fullName: Org.BouncyCastle.Crypto.Macs.SipHash.Init(Org.BouncyCastle.Crypto.ICipherParameters)
  type: Method
  source:
    id: Init
    path: ''
    startLine: 100296
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Macs
  syntax:
    content: public virtual void Init(ICipherParameters parameters)
    parameters:
    - id: parameters
      type: Org.BouncyCastle.Crypto.ICipherParameters
    content.vb: Public Overridable Sub Init(parameters As ICipherParameters)
  overload: Org.BouncyCastle.Crypto.Macs.SipHash.Init*
  implements:
  - Org.BouncyCastle.Crypto.IMac.Init(Org.BouncyCastle.Crypto.ICipherParameters)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Org.BouncyCastle.Crypto.Macs.SipHash.Update(System.Byte)
  commentId: M:Org.BouncyCastle.Crypto.Macs.SipHash.Update(System.Byte)
  id: Update(System.Byte)
  parent: Org.BouncyCastle.Crypto.Macs.SipHash
  langs:
  - csharp
  - vb
  name: Update(Byte)
  nameWithType: SipHash.Update(Byte)
  fullName: Org.BouncyCastle.Crypto.Macs.SipHash.Update(System.Byte)
  type: Method
  source:
    id: Update
    path: ''
    startLine: 100311
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Macs
  syntax:
    content: public virtual void Update(byte input)
    parameters:
    - id: input
      type: System.Byte
    content.vb: Public Overridable Sub Update(input As Byte)
  overload: Org.BouncyCastle.Crypto.Macs.SipHash.Update*
  implements:
  - Org.BouncyCastle.Crypto.IMac.Update(System.Byte)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Org.BouncyCastle.Crypto.Macs.SipHash.BlockUpdate(System.Byte[],System.Int32,System.Int32)
  commentId: M:Org.BouncyCastle.Crypto.Macs.SipHash.BlockUpdate(System.Byte[],System.Int32,System.Int32)
  id: BlockUpdate(System.Byte[],System.Int32,System.Int32)
  parent: Org.BouncyCastle.Crypto.Macs.SipHash
  langs:
  - csharp
  - vb
  name: BlockUpdate(Byte[], Int32, Int32)
  nameWithType: SipHash.BlockUpdate(Byte[], Int32, Int32)
  fullName: Org.BouncyCastle.Crypto.Macs.SipHash.BlockUpdate(System.Byte[], System.Int32, System.Int32)
  type: Method
  source:
    id: BlockUpdate
    path: ''
    startLine: 100322
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Macs
  syntax:
    content: public virtual void BlockUpdate(byte[] input, int offset, int length)
    parameters:
    - id: input
      type: System.Byte[]
    - id: offset
      type: System.Int32
    - id: length
      type: System.Int32
    content.vb: Public Overridable Sub BlockUpdate(input As Byte(), offset As Integer, length As Integer)
  overload: Org.BouncyCastle.Crypto.Macs.SipHash.BlockUpdate*
  implements:
  - Org.BouncyCastle.Crypto.IMac.BlockUpdate(System.Byte[],System.Int32,System.Int32)
  nameWithType.vb: SipHash.BlockUpdate(Byte(), Int32, Int32)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Org.BouncyCastle.Crypto.Macs.SipHash.BlockUpdate(System.Byte(), System.Int32, System.Int32)
  name.vb: BlockUpdate(Byte(), Int32, Int32)
- uid: Org.BouncyCastle.Crypto.Macs.SipHash.DoFinal
  commentId: M:Org.BouncyCastle.Crypto.Macs.SipHash.DoFinal
  id: DoFinal
  parent: Org.BouncyCastle.Crypto.Macs.SipHash
  langs:
  - csharp
  - vb
  name: DoFinal()
  nameWithType: SipHash.DoFinal()
  fullName: Org.BouncyCastle.Crypto.Macs.SipHash.DoFinal()
  type: Method
  source:
    id: DoFinal
    path: ''
    startLine: 100361
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Macs
  syntax:
    content: public virtual long DoFinal()
    return:
      type: System.Int64
    content.vb: Public Overridable Function DoFinal As Long
  overload: Org.BouncyCastle.Crypto.Macs.SipHash.DoFinal*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Org.BouncyCastle.Crypto.Macs.SipHash.DoFinal(System.Byte[],System.Int32)
  commentId: M:Org.BouncyCastle.Crypto.Macs.SipHash.DoFinal(System.Byte[],System.Int32)
  id: DoFinal(System.Byte[],System.Int32)
  parent: Org.BouncyCastle.Crypto.Macs.SipHash
  langs:
  - csharp
  - vb
  name: DoFinal(Byte[], Int32)
  nameWithType: SipHash.DoFinal(Byte[], Int32)
  fullName: Org.BouncyCastle.Crypto.Macs.SipHash.DoFinal(System.Byte[], System.Int32)
  type: Method
  source:
    id: DoFinal
    path: ''
    startLine: 100381
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Macs
  syntax:
    content: public virtual int DoFinal(byte[] output, int outOff)
    parameters:
    - id: output
      type: System.Byte[]
    - id: outOff
      type: System.Int32
    return:
      type: System.Int32
    content.vb: Public Overridable Function DoFinal(output As Byte(), outOff As Integer) As Integer
  overload: Org.BouncyCastle.Crypto.Macs.SipHash.DoFinal*
  implements:
  - Org.BouncyCastle.Crypto.IMac.DoFinal(System.Byte[],System.Int32)
  nameWithType.vb: SipHash.DoFinal(Byte(), Int32)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Org.BouncyCastle.Crypto.Macs.SipHash.DoFinal(System.Byte(), System.Int32)
  name.vb: DoFinal(Byte(), Int32)
- uid: Org.BouncyCastle.Crypto.Macs.SipHash.Reset
  commentId: M:Org.BouncyCastle.Crypto.Macs.SipHash.Reset
  id: Reset
  parent: Org.BouncyCastle.Crypto.Macs.SipHash
  langs:
  - csharp
  - vb
  name: Reset()
  nameWithType: SipHash.Reset()
  fullName: Org.BouncyCastle.Crypto.Macs.SipHash.Reset()
  type: Method
  source:
    id: Reset
    path: ''
    startLine: 100388
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Macs
  syntax:
    content: public virtual void Reset()
    content.vb: Public Overridable Sub Reset
  overload: Org.BouncyCastle.Crypto.Macs.SipHash.Reset*
  implements:
  - Org.BouncyCastle.Crypto.IMac.Reset
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Org.BouncyCastle.Crypto.Macs.SipHash.ProcessMessageWord
  commentId: M:Org.BouncyCastle.Crypto.Macs.SipHash.ProcessMessageWord
  id: ProcessMessageWord
  parent: Org.BouncyCastle.Crypto.Macs.SipHash
  langs:
  - csharp
  - vb
  name: ProcessMessageWord()
  nameWithType: SipHash.ProcessMessageWord()
  fullName: Org.BouncyCastle.Crypto.Macs.SipHash.ProcessMessageWord()
  type: Method
  source:
    id: ProcessMessageWord
    path: ''
    startLine: 100400
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Macs
  syntax:
    content: protected virtual void ProcessMessageWord()
    content.vb: Protected Overridable Sub ProcessMessageWord
  overload: Org.BouncyCastle.Crypto.Macs.SipHash.ProcessMessageWord*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: Org.BouncyCastle.Crypto.Macs.SipHash.ApplySipRounds(System.Int32)
  commentId: M:Org.BouncyCastle.Crypto.Macs.SipHash.ApplySipRounds(System.Int32)
  id: ApplySipRounds(System.Int32)
  parent: Org.BouncyCastle.Crypto.Macs.SipHash
  langs:
  - csharp
  - vb
  name: ApplySipRounds(Int32)
  nameWithType: SipHash.ApplySipRounds(Int32)
  fullName: Org.BouncyCastle.Crypto.Macs.SipHash.ApplySipRounds(System.Int32)
  type: Method
  source:
    id: ApplySipRounds
    path: ''
    startLine: 100408
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Macs
  syntax:
    content: protected virtual void ApplySipRounds(int n)
    parameters:
    - id: n
      type: System.Int32
    content.vb: Protected Overridable Sub ApplySipRounds(n As Integer)
  overload: Org.BouncyCastle.Crypto.Macs.SipHash.ApplySipRounds*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: Org.BouncyCastle.Crypto.Macs.SipHash.RotateLeft(System.Int64,System.Int32)
  commentId: M:Org.BouncyCastle.Crypto.Macs.SipHash.RotateLeft(System.Int64,System.Int32)
  id: RotateLeft(System.Int64,System.Int32)
  parent: Org.BouncyCastle.Crypto.Macs.SipHash
  langs:
  - csharp
  - vb
  name: RotateLeft(Int64, Int32)
  nameWithType: SipHash.RotateLeft(Int64, Int32)
  fullName: Org.BouncyCastle.Crypto.Macs.SipHash.RotateLeft(System.Int64, System.Int32)
  type: Method
  source:
    id: RotateLeft
    path: ''
    startLine: 100433
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Macs
  syntax:
    content: protected static long RotateLeft(long x, int n)
    parameters:
    - id: x
      type: System.Int64
    - id: n
      type: System.Int32
    return:
      type: System.Int64
    content.vb: Protected Shared Function RotateLeft(x As Long, n As Integer) As Long
  overload: Org.BouncyCastle.Crypto.Macs.SipHash.RotateLeft*
  modifiers.csharp:
  - protected
  - static
  modifiers.vb:
  - Protected
  - Shared
references:
- uid: Org.BouncyCastle.Crypto.Macs
  commentId: N:Org.BouncyCastle.Crypto.Macs
  name: Org.BouncyCastle.Crypto.Macs
  nameWithType: Org.BouncyCastle.Crypto.Macs
  fullName: Org.BouncyCastle.Crypto.Macs
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Org.BouncyCastle.Crypto.IMac
  commentId: T:Org.BouncyCastle.Crypto.IMac
  parent: Org.BouncyCastle.Crypto
  name: IMac
  nameWithType: IMac
  fullName: Org.BouncyCastle.Crypto.IMac
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Org.BouncyCastle.Crypto
  commentId: N:Org.BouncyCastle.Crypto
  name: Org.BouncyCastle.Crypto
  nameWithType: Org.BouncyCastle.Crypto
  fullName: Org.BouncyCastle.Crypto
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: Org.BouncyCastle.Crypto.Macs.SipHash.#ctor*
  commentId: Overload:Org.BouncyCastle.Crypto.Macs.SipHash.#ctor
  name: SipHash
  nameWithType: SipHash.SipHash
  fullName: Org.BouncyCastle.Crypto.Macs.SipHash.SipHash
- uid: Org.BouncyCastle.Crypto.Macs.SipHash.AlgorithmName*
  commentId: Overload:Org.BouncyCastle.Crypto.Macs.SipHash.AlgorithmName
  name: AlgorithmName
  nameWithType: SipHash.AlgorithmName
  fullName: Org.BouncyCastle.Crypto.Macs.SipHash.AlgorithmName
- uid: Org.BouncyCastle.Crypto.IMac.AlgorithmName
  commentId: P:Org.BouncyCastle.Crypto.IMac.AlgorithmName
  parent: Org.BouncyCastle.Crypto.IMac
  name: AlgorithmName
  nameWithType: IMac.AlgorithmName
  fullName: Org.BouncyCastle.Crypto.IMac.AlgorithmName
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Org.BouncyCastle.Crypto.Macs.SipHash.GetMacSize*
  commentId: Overload:Org.BouncyCastle.Crypto.Macs.SipHash.GetMacSize
  name: GetMacSize
  nameWithType: SipHash.GetMacSize
  fullName: Org.BouncyCastle.Crypto.Macs.SipHash.GetMacSize
- uid: Org.BouncyCastle.Crypto.IMac.GetMacSize
  commentId: M:Org.BouncyCastle.Crypto.IMac.GetMacSize
  parent: Org.BouncyCastle.Crypto.IMac
  name: GetMacSize()
  nameWithType: IMac.GetMacSize()
  fullName: Org.BouncyCastle.Crypto.IMac.GetMacSize()
  spec.csharp:
  - uid: Org.BouncyCastle.Crypto.IMac.GetMacSize
    name: GetMacSize
    nameWithType: IMac.GetMacSize
    fullName: Org.BouncyCastle.Crypto.IMac.GetMacSize
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Org.BouncyCastle.Crypto.IMac.GetMacSize
    name: GetMacSize
    nameWithType: IMac.GetMacSize
    fullName: Org.BouncyCastle.Crypto.IMac.GetMacSize
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Org.BouncyCastle.Crypto.Macs.SipHash.Init*
  commentId: Overload:Org.BouncyCastle.Crypto.Macs.SipHash.Init
  name: Init
  nameWithType: SipHash.Init
  fullName: Org.BouncyCastle.Crypto.Macs.SipHash.Init
- uid: Org.BouncyCastle.Crypto.IMac.Init(Org.BouncyCastle.Crypto.ICipherParameters)
  commentId: M:Org.BouncyCastle.Crypto.IMac.Init(Org.BouncyCastle.Crypto.ICipherParameters)
  parent: Org.BouncyCastle.Crypto.IMac
  name: Init(ICipherParameters)
  nameWithType: IMac.Init(ICipherParameters)
  fullName: Org.BouncyCastle.Crypto.IMac.Init(Org.BouncyCastle.Crypto.ICipherParameters)
  spec.csharp:
  - uid: Org.BouncyCastle.Crypto.IMac.Init(Org.BouncyCastle.Crypto.ICipherParameters)
    name: Init
    nameWithType: IMac.Init
    fullName: Org.BouncyCastle.Crypto.IMac.Init
  - name: (
    nameWithType: (
    fullName: (
  - uid: Org.BouncyCastle.Crypto.ICipherParameters
    name: ICipherParameters
    nameWithType: ICipherParameters
    fullName: Org.BouncyCastle.Crypto.ICipherParameters
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Org.BouncyCastle.Crypto.IMac.Init(Org.BouncyCastle.Crypto.ICipherParameters)
    name: Init
    nameWithType: IMac.Init
    fullName: Org.BouncyCastle.Crypto.IMac.Init
  - name: (
    nameWithType: (
    fullName: (
  - uid: Org.BouncyCastle.Crypto.ICipherParameters
    name: ICipherParameters
    nameWithType: ICipherParameters
    fullName: Org.BouncyCastle.Crypto.ICipherParameters
  - name: )
    nameWithType: )
    fullName: )
- uid: Org.BouncyCastle.Crypto.ICipherParameters
  commentId: T:Org.BouncyCastle.Crypto.ICipherParameters
  parent: Org.BouncyCastle.Crypto
  name: ICipherParameters
  nameWithType: ICipherParameters
  fullName: Org.BouncyCastle.Crypto.ICipherParameters
- uid: Org.BouncyCastle.Crypto.Macs.SipHash.Update*
  commentId: Overload:Org.BouncyCastle.Crypto.Macs.SipHash.Update
  name: Update
  nameWithType: SipHash.Update
  fullName: Org.BouncyCastle.Crypto.Macs.SipHash.Update
- uid: Org.BouncyCastle.Crypto.IMac.Update(System.Byte)
  commentId: M:Org.BouncyCastle.Crypto.IMac.Update(System.Byte)
  parent: Org.BouncyCastle.Crypto.IMac
  isExternal: true
  name: Update(Byte)
  nameWithType: IMac.Update(Byte)
  fullName: Org.BouncyCastle.Crypto.IMac.Update(System.Byte)
  spec.csharp:
  - uid: Org.BouncyCastle.Crypto.IMac.Update(System.Byte)
    name: Update
    nameWithType: IMac.Update
    fullName: Org.BouncyCastle.Crypto.IMac.Update
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Org.BouncyCastle.Crypto.IMac.Update(System.Byte)
    name: Update
    nameWithType: IMac.Update
    fullName: Org.BouncyCastle.Crypto.IMac.Update
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Byte
  commentId: T:System.Byte
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte
- uid: Org.BouncyCastle.Crypto.Macs.SipHash.BlockUpdate*
  commentId: Overload:Org.BouncyCastle.Crypto.Macs.SipHash.BlockUpdate
  name: BlockUpdate
  nameWithType: SipHash.BlockUpdate
  fullName: Org.BouncyCastle.Crypto.Macs.SipHash.BlockUpdate
- uid: Org.BouncyCastle.Crypto.IMac.BlockUpdate(System.Byte[],System.Int32,System.Int32)
  commentId: M:Org.BouncyCastle.Crypto.IMac.BlockUpdate(System.Byte[],System.Int32,System.Int32)
  parent: Org.BouncyCastle.Crypto.IMac
  isExternal: true
  name: BlockUpdate(Byte[], Int32, Int32)
  nameWithType: IMac.BlockUpdate(Byte[], Int32, Int32)
  fullName: Org.BouncyCastle.Crypto.IMac.BlockUpdate(System.Byte[], System.Int32, System.Int32)
  nameWithType.vb: IMac.BlockUpdate(Byte(), Int32, Int32)
  fullName.vb: Org.BouncyCastle.Crypto.IMac.BlockUpdate(System.Byte(), System.Int32, System.Int32)
  name.vb: BlockUpdate(Byte(), Int32, Int32)
  spec.csharp:
  - uid: Org.BouncyCastle.Crypto.IMac.BlockUpdate(System.Byte[],System.Int32,System.Int32)
    name: BlockUpdate
    nameWithType: IMac.BlockUpdate
    fullName: Org.BouncyCastle.Crypto.IMac.BlockUpdate
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Org.BouncyCastle.Crypto.IMac.BlockUpdate(System.Byte[],System.Int32,System.Int32)
    name: BlockUpdate
    nameWithType: IMac.BlockUpdate
    fullName: Org.BouncyCastle.Crypto.IMac.BlockUpdate
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Byte[]
  isExternal: true
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullName.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Org.BouncyCastle.Crypto.Macs.SipHash.DoFinal*
  commentId: Overload:Org.BouncyCastle.Crypto.Macs.SipHash.DoFinal
  name: DoFinal
  nameWithType: SipHash.DoFinal
  fullName: Org.BouncyCastle.Crypto.Macs.SipHash.DoFinal
- uid: Org.BouncyCastle.Crypto.IMac.DoFinal(System.Byte[],System.Int32)
  commentId: M:Org.BouncyCastle.Crypto.IMac.DoFinal(System.Byte[],System.Int32)
  parent: Org.BouncyCastle.Crypto.IMac
  isExternal: true
  name: DoFinal(Byte[], Int32)
  nameWithType: IMac.DoFinal(Byte[], Int32)
  fullName: Org.BouncyCastle.Crypto.IMac.DoFinal(System.Byte[], System.Int32)
  nameWithType.vb: IMac.DoFinal(Byte(), Int32)
  fullName.vb: Org.BouncyCastle.Crypto.IMac.DoFinal(System.Byte(), System.Int32)
  name.vb: DoFinal(Byte(), Int32)
  spec.csharp:
  - uid: Org.BouncyCastle.Crypto.IMac.DoFinal(System.Byte[],System.Int32)
    name: DoFinal
    nameWithType: IMac.DoFinal
    fullName: Org.BouncyCastle.Crypto.IMac.DoFinal
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Org.BouncyCastle.Crypto.IMac.DoFinal(System.Byte[],System.Int32)
    name: DoFinal
    nameWithType: IMac.DoFinal
    fullName: Org.BouncyCastle.Crypto.IMac.DoFinal
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Org.BouncyCastle.Crypto.Macs.SipHash.Reset*
  commentId: Overload:Org.BouncyCastle.Crypto.Macs.SipHash.Reset
  name: Reset
  nameWithType: SipHash.Reset
  fullName: Org.BouncyCastle.Crypto.Macs.SipHash.Reset
- uid: Org.BouncyCastle.Crypto.IMac.Reset
  commentId: M:Org.BouncyCastle.Crypto.IMac.Reset
  parent: Org.BouncyCastle.Crypto.IMac
  name: Reset()
  nameWithType: IMac.Reset()
  fullName: Org.BouncyCastle.Crypto.IMac.Reset()
  spec.csharp:
  - uid: Org.BouncyCastle.Crypto.IMac.Reset
    name: Reset
    nameWithType: IMac.Reset
    fullName: Org.BouncyCastle.Crypto.IMac.Reset
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Org.BouncyCastle.Crypto.IMac.Reset
    name: Reset
    nameWithType: IMac.Reset
    fullName: Org.BouncyCastle.Crypto.IMac.Reset
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Org.BouncyCastle.Crypto.Macs.SipHash.ProcessMessageWord*
  commentId: Overload:Org.BouncyCastle.Crypto.Macs.SipHash.ProcessMessageWord
  name: ProcessMessageWord
  nameWithType: SipHash.ProcessMessageWord
  fullName: Org.BouncyCastle.Crypto.Macs.SipHash.ProcessMessageWord
- uid: Org.BouncyCastle.Crypto.Macs.SipHash.ApplySipRounds*
  commentId: Overload:Org.BouncyCastle.Crypto.Macs.SipHash.ApplySipRounds
  name: ApplySipRounds
  nameWithType: SipHash.ApplySipRounds
  fullName: Org.BouncyCastle.Crypto.Macs.SipHash.ApplySipRounds
- uid: Org.BouncyCastle.Crypto.Macs.SipHash.RotateLeft*
  commentId: Overload:Org.BouncyCastle.Crypto.Macs.SipHash.RotateLeft
  name: RotateLeft
  nameWithType: SipHash.RotateLeft
  fullName: Org.BouncyCastle.Crypto.Macs.SipHash.RotateLeft
