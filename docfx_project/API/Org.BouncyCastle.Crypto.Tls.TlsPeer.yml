### YamlMime:ManagedReference
items:
- uid: Org.BouncyCastle.Crypto.Tls.TlsPeer
  commentId: T:Org.BouncyCastle.Crypto.Tls.TlsPeer
  id: TlsPeer
  parent: Org.BouncyCastle.Crypto.Tls
  children:
  - Org.BouncyCastle.Crypto.Tls.TlsPeer.GetCipher
  - Org.BouncyCastle.Crypto.Tls.TlsPeer.GetCompression
  - Org.BouncyCastle.Crypto.Tls.TlsPeer.NotifyAlertRaised(System.Byte,System.Byte,System.String,System.Exception)
  - Org.BouncyCastle.Crypto.Tls.TlsPeer.NotifyAlertReceived(System.Byte,System.Byte)
  - Org.BouncyCastle.Crypto.Tls.TlsPeer.NotifyHandshakeComplete
  - Org.BouncyCastle.Crypto.Tls.TlsPeer.NotifySecureRenegotiation(System.Boolean)
  - Org.BouncyCastle.Crypto.Tls.TlsPeer.ShouldUseGmtUnixTime
  langs:
  - csharp
  - vb
  name: TlsPeer
  nameWithType: TlsPeer
  fullName: Org.BouncyCastle.Crypto.Tls.TlsPeer
  type: Interface
  source:
    id: TlsPeer
    path: ''
    startLine: 119424
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Tls
  syntax:
    content: public interface TlsPeer
    content.vb: Public Interface TlsPeer
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Org.BouncyCastle.Crypto.Tls.TlsPeer.ShouldUseGmtUnixTime
  commentId: M:Org.BouncyCastle.Crypto.Tls.TlsPeer.ShouldUseGmtUnixTime
  id: ShouldUseGmtUnixTime
  parent: Org.BouncyCastle.Crypto.Tls.TlsPeer
  langs:
  - csharp
  - vb
  name: ShouldUseGmtUnixTime()
  nameWithType: TlsPeer.ShouldUseGmtUnixTime()
  fullName: Org.BouncyCastle.Crypto.Tls.TlsPeer.ShouldUseGmtUnixTime()
  type: Method
  source:
    id: ShouldUseGmtUnixTime
    path: ''
    startLine: 119436
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Tls
  summary: "\ndraft-mathewson-no-gmtunixtime-00 2. &quot;If existing users of a TLS implementation may rely on\ngmt_unix_time containing the current time, we recommend that implementors MAY provide the\nability to set gmt_unix_time as an option only, off by default.&quot;\n"
  example: []
  syntax:
    content: bool ShouldUseGmtUnixTime()
    return:
      type: System.Boolean
      description: "\n<pre><code>true</code></pre> if the current time should be used in the gmt_unix_time field of\nRandom, or <pre><code>false</code></pre> if gmt_unix_time should contain a cryptographically\nrandom value.\n"
    content.vb: Function ShouldUseGmtUnixTime As Boolean
  overload: Org.BouncyCastle.Crypto.Tls.TlsPeer.ShouldUseGmtUnixTime*
- uid: Org.BouncyCastle.Crypto.Tls.TlsPeer.NotifySecureRenegotiation(System.Boolean)
  commentId: M:Org.BouncyCastle.Crypto.Tls.TlsPeer.NotifySecureRenegotiation(System.Boolean)
  id: NotifySecureRenegotiation(System.Boolean)
  parent: Org.BouncyCastle.Crypto.Tls.TlsPeer
  langs:
  - csharp
  - vb
  name: NotifySecureRenegotiation(Boolean)
  nameWithType: TlsPeer.NotifySecureRenegotiation(Boolean)
  fullName: Org.BouncyCastle.Crypto.Tls.TlsPeer.NotifySecureRenegotiation(System.Boolean)
  type: Method
  source:
    id: NotifySecureRenegotiation
    path: ''
    startLine: 119448
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Tls
  summary: "\nReport whether the server supports secure renegotiation\n"
  remarks: "\nThe protocol handler automatically processes the relevant extensions\n"
  example: []
  syntax:
    content: void NotifySecureRenegotiation(bool secureRenegotiation)
    parameters:
    - id: secureRenegotiation
      type: System.Boolean
      description: "\nA <xref href=\"System.Boolean\" data-throw-if-not-resolved=\"false\"></xref>, true if the server supports secure renegotiation\n"
    content.vb: Sub NotifySecureRenegotiation(secureRenegotiation As Boolean)
  overload: Org.BouncyCastle.Crypto.Tls.TlsPeer.NotifySecureRenegotiation*
- uid: Org.BouncyCastle.Crypto.Tls.TlsPeer.GetCompression
  commentId: M:Org.BouncyCastle.Crypto.Tls.TlsPeer.GetCompression
  id: GetCompression
  parent: Org.BouncyCastle.Crypto.Tls.TlsPeer
  langs:
  - csharp
  - vb
  name: GetCompression()
  nameWithType: TlsPeer.GetCompression()
  fullName: Org.BouncyCastle.Crypto.Tls.TlsPeer.GetCompression()
  type: Method
  source:
    id: GetCompression
    path: ''
    startLine: 119455
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Tls
  summary: "\nReturn an implementation of <xref href=\"Org.BouncyCastle.Crypto.Tls.TlsCompression\" data-throw-if-not-resolved=\"false\"></xref> to handle record compression.\n"
  example: []
  syntax:
    content: TlsCompression GetCompression()
    return:
      type: Org.BouncyCastle.Crypto.Tls.TlsCompression
      description: A <xref href="Org.BouncyCastle.Crypto.Tls.TlsCompression" data-throw-if-not-resolved="false"></xref>
    content.vb: Function GetCompression As TlsCompression
  overload: Org.BouncyCastle.Crypto.Tls.TlsPeer.GetCompression*
- uid: Org.BouncyCastle.Crypto.Tls.TlsPeer.GetCipher
  commentId: M:Org.BouncyCastle.Crypto.Tls.TlsPeer.GetCipher
  id: GetCipher
  parent: Org.BouncyCastle.Crypto.Tls.TlsPeer
  langs:
  - csharp
  - vb
  name: GetCipher()
  nameWithType: TlsPeer.GetCipher()
  fullName: Org.BouncyCastle.Crypto.Tls.TlsPeer.GetCipher()
  type: Method
  source:
    id: GetCipher
    path: ''
    startLine: 119462
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Tls
  summary: "\nReturn an implementation of <xref href=\"Org.BouncyCastle.Crypto.Tls.TlsCipher\" data-throw-if-not-resolved=\"false\"></xref> to use for encryption/decryption.\n"
  example: []
  syntax:
    content: TlsCipher GetCipher()
    return:
      type: Org.BouncyCastle.Crypto.Tls.TlsCipher
      description: A <xref href="Org.BouncyCastle.Crypto.Tls.TlsCipher" data-throw-if-not-resolved="false"></xref>
    content.vb: Function GetCipher As TlsCipher
  overload: Org.BouncyCastle.Crypto.Tls.TlsPeer.GetCipher*
- uid: Org.BouncyCastle.Crypto.Tls.TlsPeer.NotifyAlertRaised(System.Byte,System.Byte,System.String,System.Exception)
  commentId: M:Org.BouncyCastle.Crypto.Tls.TlsPeer.NotifyAlertRaised(System.Byte,System.Byte,System.String,System.Exception)
  id: NotifyAlertRaised(System.Byte,System.Byte,System.String,System.Exception)
  parent: Org.BouncyCastle.Crypto.Tls.TlsPeer
  langs:
  - csharp
  - vb
  name: NotifyAlertRaised(Byte, Byte, String, Exception)
  nameWithType: TlsPeer.NotifyAlertRaised(Byte, Byte, String, Exception)
  fullName: Org.BouncyCastle.Crypto.Tls.TlsPeer.NotifyAlertRaised(System.Byte, System.Byte, System.String, System.Exception)
  type: Method
  source:
    id: NotifyAlertRaised
    path: ''
    startLine: 119469
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Tls
  summary: This method will be called when an alert is raised by the protocol.
  example: []
  syntax:
    content: void NotifyAlertRaised(byte alertLevel, byte alertDescription, string message, Exception cause)
    parameters:
    - id: alertLevel
      type: System.Byte
      description: <xref href="Org.BouncyCastle.Crypto.Tls.AlertLevel" data-throw-if-not-resolved="false"></xref>
    - id: alertDescription
      type: System.Byte
      description: <xref href="Org.BouncyCastle.Crypto.Tls.AlertDescription" data-throw-if-not-resolved="false"></xref>
    - id: message
      type: System.String
      description: A human-readable message explaining what caused this alert. May be null.
    - id: cause
      type: System.Exception
      description: The <code>Exception</code> that caused this alert to be raised. May be null.
    content.vb: Sub NotifyAlertRaised(alertLevel As Byte, alertDescription As Byte, message As String, cause As Exception)
  overload: Org.BouncyCastle.Crypto.Tls.TlsPeer.NotifyAlertRaised*
- uid: Org.BouncyCastle.Crypto.Tls.TlsPeer.NotifyAlertReceived(System.Byte,System.Byte)
  commentId: M:Org.BouncyCastle.Crypto.Tls.TlsPeer.NotifyAlertReceived(System.Byte,System.Byte)
  id: NotifyAlertReceived(System.Byte,System.Byte)
  parent: Org.BouncyCastle.Crypto.Tls.TlsPeer
  langs:
  - csharp
  - vb
  name: NotifyAlertReceived(Byte, Byte)
  nameWithType: TlsPeer.NotifyAlertReceived(Byte, Byte)
  fullName: Org.BouncyCastle.Crypto.Tls.TlsPeer.NotifyAlertReceived(System.Byte, System.Byte)
  type: Method
  source:
    id: NotifyAlertReceived
    path: ''
    startLine: 119474
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Tls
  summary: This method will be called when an alert is received from the remote peer.
  example: []
  syntax:
    content: void NotifyAlertReceived(byte alertLevel, byte alertDescription)
    parameters:
    - id: alertLevel
      type: System.Byte
      description: <xref href="Org.BouncyCastle.Crypto.Tls.AlertLevel" data-throw-if-not-resolved="false"></xref>
    - id: alertDescription
      type: System.Byte
      description: <xref href="Org.BouncyCastle.Crypto.Tls.AlertDescription" data-throw-if-not-resolved="false"></xref>
    content.vb: Sub NotifyAlertReceived(alertLevel As Byte, alertDescription As Byte)
  overload: Org.BouncyCastle.Crypto.Tls.TlsPeer.NotifyAlertReceived*
- uid: Org.BouncyCastle.Crypto.Tls.TlsPeer.NotifyHandshakeComplete
  commentId: M:Org.BouncyCastle.Crypto.Tls.TlsPeer.NotifyHandshakeComplete
  id: NotifyHandshakeComplete
  parent: Org.BouncyCastle.Crypto.Tls.TlsPeer
  langs:
  - csharp
  - vb
  name: NotifyHandshakeComplete()
  nameWithType: TlsPeer.NotifyHandshakeComplete()
  fullName: Org.BouncyCastle.Crypto.Tls.TlsPeer.NotifyHandshakeComplete()
  type: Method
  source:
    id: NotifyHandshakeComplete
    path: ''
    startLine: 119478
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Tls
  summary: Notifies the peer that the handshake has been successfully completed.
  example: []
  syntax:
    content: void NotifyHandshakeComplete()
    content.vb: Sub NotifyHandshakeComplete
  overload: Org.BouncyCastle.Crypto.Tls.TlsPeer.NotifyHandshakeComplete*
references:
- uid: Org.BouncyCastle.Crypto.Tls
  commentId: N:Org.BouncyCastle.Crypto.Tls
  name: Org.BouncyCastle.Crypto.Tls
  nameWithType: Org.BouncyCastle.Crypto.Tls
  fullName: Org.BouncyCastle.Crypto.Tls
- uid: Org.BouncyCastle.Crypto.Tls.TlsPeer.ShouldUseGmtUnixTime*
  commentId: Overload:Org.BouncyCastle.Crypto.Tls.TlsPeer.ShouldUseGmtUnixTime
  name: ShouldUseGmtUnixTime
  nameWithType: TlsPeer.ShouldUseGmtUnixTime
  fullName: Org.BouncyCastle.Crypto.Tls.TlsPeer.ShouldUseGmtUnixTime
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Org.BouncyCastle.Crypto.Tls.TlsPeer.NotifySecureRenegotiation*
  commentId: Overload:Org.BouncyCastle.Crypto.Tls.TlsPeer.NotifySecureRenegotiation
  name: NotifySecureRenegotiation
  nameWithType: TlsPeer.NotifySecureRenegotiation
  fullName: Org.BouncyCastle.Crypto.Tls.TlsPeer.NotifySecureRenegotiation
- uid: Org.BouncyCastle.Crypto.Tls.TlsCompression
  commentId: T:Org.BouncyCastle.Crypto.Tls.TlsCompression
  parent: Org.BouncyCastle.Crypto.Tls
  name: TlsCompression
  nameWithType: TlsCompression
  fullName: Org.BouncyCastle.Crypto.Tls.TlsCompression
- uid: Org.BouncyCastle.Crypto.Tls.TlsPeer.GetCompression*
  commentId: Overload:Org.BouncyCastle.Crypto.Tls.TlsPeer.GetCompression
  name: GetCompression
  nameWithType: TlsPeer.GetCompression
  fullName: Org.BouncyCastle.Crypto.Tls.TlsPeer.GetCompression
- uid: Org.BouncyCastle.Crypto.Tls.TlsCipher
  commentId: T:Org.BouncyCastle.Crypto.Tls.TlsCipher
  parent: Org.BouncyCastle.Crypto.Tls
  name: TlsCipher
  nameWithType: TlsCipher
  fullName: Org.BouncyCastle.Crypto.Tls.TlsCipher
- uid: Org.BouncyCastle.Crypto.Tls.TlsPeer.GetCipher*
  commentId: Overload:Org.BouncyCastle.Crypto.Tls.TlsPeer.GetCipher
  name: GetCipher
  nameWithType: TlsPeer.GetCipher
  fullName: Org.BouncyCastle.Crypto.Tls.TlsPeer.GetCipher
- uid: Org.BouncyCastle.Crypto.Tls.AlertLevel
  commentId: T:Org.BouncyCastle.Crypto.Tls.AlertLevel
  name: AlertLevel
  nameWithType: AlertLevel
  fullName: Org.BouncyCastle.Crypto.Tls.AlertLevel
- uid: Org.BouncyCastle.Crypto.Tls.AlertDescription
  commentId: T:Org.BouncyCastle.Crypto.Tls.AlertDescription
  name: AlertDescription
  nameWithType: AlertDescription
  fullName: Org.BouncyCastle.Crypto.Tls.AlertDescription
- uid: Org.BouncyCastle.Crypto.Tls.TlsPeer.NotifyAlertRaised*
  commentId: Overload:Org.BouncyCastle.Crypto.Tls.TlsPeer.NotifyAlertRaised
  name: NotifyAlertRaised
  nameWithType: TlsPeer.NotifyAlertRaised
  fullName: Org.BouncyCastle.Crypto.Tls.TlsPeer.NotifyAlertRaised
- uid: System.Byte
  commentId: T:System.Byte
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Exception
  commentId: T:System.Exception
  parent: System
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: Org.BouncyCastle.Crypto.Tls.TlsPeer.NotifyAlertReceived*
  commentId: Overload:Org.BouncyCastle.Crypto.Tls.TlsPeer.NotifyAlertReceived
  name: NotifyAlertReceived
  nameWithType: TlsPeer.NotifyAlertReceived
  fullName: Org.BouncyCastle.Crypto.Tls.TlsPeer.NotifyAlertReceived
- uid: Org.BouncyCastle.Crypto.Tls.TlsPeer.NotifyHandshakeComplete*
  commentId: Overload:Org.BouncyCastle.Crypto.Tls.TlsPeer.NotifyHandshakeComplete
  name: NotifyHandshakeComplete
  nameWithType: TlsPeer.NotifyHandshakeComplete
  fullName: Org.BouncyCastle.Crypto.Tls.TlsPeer.NotifyHandshakeComplete
