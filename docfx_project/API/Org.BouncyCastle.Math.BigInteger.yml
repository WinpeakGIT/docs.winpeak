### YamlMime:ManagedReference
items:
- uid: Org.BouncyCastle.Math.BigInteger
  commentId: T:Org.BouncyCastle.Math.BigInteger
  id: BigInteger
  parent: Org.BouncyCastle.Math
  children:
  - Org.BouncyCastle.Math.BigInteger.#ctor(System.Byte[])
  - Org.BouncyCastle.Math.BigInteger.#ctor(System.Byte[],System.Int32,System.Int32)
  - Org.BouncyCastle.Math.BigInteger.#ctor(System.Int32,System.Byte[])
  - Org.BouncyCastle.Math.BigInteger.#ctor(System.Int32,System.Byte[],System.Int32,System.Int32)
  - Org.BouncyCastle.Math.BigInteger.#ctor(System.Int32,System.Int32,System.Random)
  - Org.BouncyCastle.Math.BigInteger.#ctor(System.Int32,System.Random)
  - Org.BouncyCastle.Math.BigInteger.#ctor(System.String)
  - Org.BouncyCastle.Math.BigInteger.#ctor(System.String,System.Int32)
  - Org.BouncyCastle.Math.BigInteger.Abs
  - Org.BouncyCastle.Math.BigInteger.Add(Org.BouncyCastle.Math.BigInteger)
  - Org.BouncyCastle.Math.BigInteger.And(Org.BouncyCastle.Math.BigInteger)
  - Org.BouncyCastle.Math.BigInteger.AndNot(Org.BouncyCastle.Math.BigInteger)
  - Org.BouncyCastle.Math.BigInteger.BitCnt(System.Int32)
  - Org.BouncyCastle.Math.BigInteger.BitCount
  - Org.BouncyCastle.Math.BigInteger.BitLength
  - Org.BouncyCastle.Math.BigInteger.ClearBit(System.Int32)
  - Org.BouncyCastle.Math.BigInteger.CompareTo(Org.BouncyCastle.Math.BigInteger)
  - Org.BouncyCastle.Math.BigInteger.CompareTo(System.Object)
  - Org.BouncyCastle.Math.BigInteger.Divide(Org.BouncyCastle.Math.BigInteger)
  - Org.BouncyCastle.Math.BigInteger.DivideAndRemainder(Org.BouncyCastle.Math.BigInteger)
  - Org.BouncyCastle.Math.BigInteger.Equals(System.Object)
  - Org.BouncyCastle.Math.BigInteger.FlipBit(System.Int32)
  - Org.BouncyCastle.Math.BigInteger.Gcd(Org.BouncyCastle.Math.BigInteger)
  - Org.BouncyCastle.Math.BigInteger.GetHashCode
  - Org.BouncyCastle.Math.BigInteger.GetLowestSetBit
  - Org.BouncyCastle.Math.BigInteger.IntValue
  - Org.BouncyCastle.Math.BigInteger.IsProbablePrime(System.Int32)
  - Org.BouncyCastle.Math.BigInteger.LongValue
  - Org.BouncyCastle.Math.BigInteger.Max(Org.BouncyCastle.Math.BigInteger)
  - Org.BouncyCastle.Math.BigInteger.Min(Org.BouncyCastle.Math.BigInteger)
  - Org.BouncyCastle.Math.BigInteger.Mod(Org.BouncyCastle.Math.BigInteger)
  - Org.BouncyCastle.Math.BigInteger.ModInverse(Org.BouncyCastle.Math.BigInteger)
  - Org.BouncyCastle.Math.BigInteger.ModPow(Org.BouncyCastle.Math.BigInteger,Org.BouncyCastle.Math.BigInteger)
  - Org.BouncyCastle.Math.BigInteger.Multiply(Org.BouncyCastle.Math.BigInteger)
  - Org.BouncyCastle.Math.BigInteger.Negate
  - Org.BouncyCastle.Math.BigInteger.NextProbablePrime
  - Org.BouncyCastle.Math.BigInteger.Not
  - Org.BouncyCastle.Math.BigInteger.One
  - Org.BouncyCastle.Math.BigInteger.Or(Org.BouncyCastle.Math.BigInteger)
  - Org.BouncyCastle.Math.BigInteger.Pow(System.Int32)
  - Org.BouncyCastle.Math.BigInteger.ProbablePrime(System.Int32,System.Random)
  - Org.BouncyCastle.Math.BigInteger.RabinMillerTest(System.Int32,System.Random)
  - Org.BouncyCastle.Math.BigInteger.Remainder(Org.BouncyCastle.Math.BigInteger)
  - Org.BouncyCastle.Math.BigInteger.SetBit(System.Int32)
  - Org.BouncyCastle.Math.BigInteger.ShiftLeft(System.Int32)
  - Org.BouncyCastle.Math.BigInteger.ShiftRight(System.Int32)
  - Org.BouncyCastle.Math.BigInteger.SignValue
  - Org.BouncyCastle.Math.BigInteger.Square
  - Org.BouncyCastle.Math.BigInteger.Subtract(Org.BouncyCastle.Math.BigInteger)
  - Org.BouncyCastle.Math.BigInteger.Ten
  - Org.BouncyCastle.Math.BigInteger.TestBit(System.Int32)
  - Org.BouncyCastle.Math.BigInteger.Three
  - Org.BouncyCastle.Math.BigInteger.ToByteArray
  - Org.BouncyCastle.Math.BigInteger.ToByteArrayUnsigned
  - Org.BouncyCastle.Math.BigInteger.ToString
  - Org.BouncyCastle.Math.BigInteger.ToString(System.Int32)
  - Org.BouncyCastle.Math.BigInteger.Two
  - Org.BouncyCastle.Math.BigInteger.ValueOf(System.Int64)
  - Org.BouncyCastle.Math.BigInteger.Xor(Org.BouncyCastle.Math.BigInteger)
  - Org.BouncyCastle.Math.BigInteger.Zero
  langs:
  - csharp
  - vb
  name: BigInteger
  nameWithType: BigInteger
  fullName: Org.BouncyCastle.Math.BigInteger
  type: Class
  source:
    id: BigInteger
    path: ''
    startLine: 14445
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Math
  syntax:
    content: >-
      [Serializable]

      public class BigInteger
    content.vb: >-
      <Serializable>

      Public Class BigInteger
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  attributes:
  - type: System.SerializableAttribute
    ctor: System.SerializableAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Org.BouncyCastle.Math.BigInteger.Zero
  commentId: F:Org.BouncyCastle.Math.BigInteger.Zero
  id: Zero
  parent: Org.BouncyCastle.Math.BigInteger
  langs:
  - csharp
  - vb
  name: Zero
  nameWithType: BigInteger.Zero
  fullName: Org.BouncyCastle.Math.BigInteger.Zero
  type: Field
  source:
    id: Zero
    path: ''
    startLine: 14565
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Math
  syntax:
    content: public static readonly BigInteger Zero
    return:
      type: Org.BouncyCastle.Math.BigInteger
    content.vb: Public Shared ReadOnly Zero As BigInteger
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Org.BouncyCastle.Math.BigInteger.One
  commentId: F:Org.BouncyCastle.Math.BigInteger.One
  id: One
  parent: Org.BouncyCastle.Math.BigInteger
  langs:
  - csharp
  - vb
  name: One
  nameWithType: BigInteger.One
  fullName: Org.BouncyCastle.Math.BigInteger.One
  type: Field
  source:
    id: One
    path: ''
    startLine: 14566
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Math
  syntax:
    content: public static readonly BigInteger One
    return:
      type: Org.BouncyCastle.Math.BigInteger
    content.vb: Public Shared ReadOnly One As BigInteger
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Org.BouncyCastle.Math.BigInteger.Two
  commentId: F:Org.BouncyCastle.Math.BigInteger.Two
  id: Two
  parent: Org.BouncyCastle.Math.BigInteger
  langs:
  - csharp
  - vb
  name: Two
  nameWithType: BigInteger.Two
  fullName: Org.BouncyCastle.Math.BigInteger.Two
  type: Field
  source:
    id: Two
    path: ''
    startLine: 14567
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Math
  syntax:
    content: public static readonly BigInteger Two
    return:
      type: Org.BouncyCastle.Math.BigInteger
    content.vb: Public Shared ReadOnly Two As BigInteger
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Org.BouncyCastle.Math.BigInteger.Three
  commentId: F:Org.BouncyCastle.Math.BigInteger.Three
  id: Three
  parent: Org.BouncyCastle.Math.BigInteger
  langs:
  - csharp
  - vb
  name: Three
  nameWithType: BigInteger.Three
  fullName: Org.BouncyCastle.Math.BigInteger.Three
  type: Field
  source:
    id: Three
    path: ''
    startLine: 14568
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Math
  syntax:
    content: public static readonly BigInteger Three
    return:
      type: Org.BouncyCastle.Math.BigInteger
    content.vb: Public Shared ReadOnly Three As BigInteger
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Org.BouncyCastle.Math.BigInteger.Ten
  commentId: F:Org.BouncyCastle.Math.BigInteger.Ten
  id: Ten
  parent: Org.BouncyCastle.Math.BigInteger
  langs:
  - csharp
  - vb
  name: Ten
  nameWithType: BigInteger.Ten
  fullName: Org.BouncyCastle.Math.BigInteger.Ten
  type: Field
  source:
    id: Ten
    path: ''
    startLine: 14569
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Math
  syntax:
    content: public static readonly BigInteger Ten
    return:
      type: Org.BouncyCastle.Math.BigInteger
    content.vb: Public Shared ReadOnly Ten As BigInteger
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Org.BouncyCastle.Math.BigInteger.#ctor(System.String)
  commentId: M:Org.BouncyCastle.Math.BigInteger.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: Org.BouncyCastle.Math.BigInteger
  langs:
  - csharp
  - vb
  name: BigInteger(String)
  nameWithType: BigInteger.BigInteger(String)
  fullName: Org.BouncyCastle.Math.BigInteger.BigInteger(System.String)
  type: Constructor
  source:
    id: .ctor
    path: ''
    startLine: 14728
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Math
  syntax:
    content: public BigInteger(string value)
    parameters:
    - id: value
      type: System.String
    content.vb: Public Sub New(value As String)
  overload: Org.BouncyCastle.Math.BigInteger.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Org.BouncyCastle.Math.BigInteger.#ctor(System.String,System.Int32)
  commentId: M:Org.BouncyCastle.Math.BigInteger.#ctor(System.String,System.Int32)
  id: '#ctor(System.String,System.Int32)'
  parent: Org.BouncyCastle.Math.BigInteger
  langs:
  - csharp
  - vb
  name: BigInteger(String, Int32)
  nameWithType: BigInteger.BigInteger(String, Int32)
  fullName: Org.BouncyCastle.Math.BigInteger.BigInteger(System.String, System.Int32)
  type: Constructor
  source:
    id: .ctor
    path: ''
    startLine: 14734
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Math
  syntax:
    content: public BigInteger(string str, int radix)
    parameters:
    - id: str
      type: System.String
    - id: radix
      type: System.Int32
    content.vb: Public Sub New(str As String, radix As Integer)
  overload: Org.BouncyCastle.Math.BigInteger.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Org.BouncyCastle.Math.BigInteger.#ctor(System.Byte[])
  commentId: M:Org.BouncyCastle.Math.BigInteger.#ctor(System.Byte[])
  id: '#ctor(System.Byte[])'
  parent: Org.BouncyCastle.Math.BigInteger
  langs:
  - csharp
  - vb
  name: BigInteger(Byte[])
  nameWithType: BigInteger.BigInteger(Byte[])
  fullName: Org.BouncyCastle.Math.BigInteger.BigInteger(System.Byte[])
  type: Constructor
  source:
    id: .ctor
    path: ''
    startLine: 14915
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Math
  syntax:
    content: public BigInteger(byte[] bytes)
    parameters:
    - id: bytes
      type: System.Byte[]
    content.vb: Public Sub New(bytes As Byte())
  overload: Org.BouncyCastle.Math.BigInteger.#ctor*
  nameWithType.vb: BigInteger.BigInteger(Byte())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Org.BouncyCastle.Math.BigInteger.BigInteger(System.Byte())
  name.vb: BigInteger(Byte())
- uid: Org.BouncyCastle.Math.BigInteger.#ctor(System.Byte[],System.Int32,System.Int32)
  commentId: M:Org.BouncyCastle.Math.BigInteger.#ctor(System.Byte[],System.Int32,System.Int32)
  id: '#ctor(System.Byte[],System.Int32,System.Int32)'
  parent: Org.BouncyCastle.Math.BigInteger
  langs:
  - csharp
  - vb
  name: BigInteger(Byte[], Int32, Int32)
  nameWithType: BigInteger.BigInteger(Byte[], Int32, Int32)
  fullName: Org.BouncyCastle.Math.BigInteger.BigInteger(System.Byte[], System.Int32, System.Int32)
  type: Constructor
  source:
    id: .ctor
    path: ''
    startLine: 14921
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Math
  syntax:
    content: public BigInteger(byte[] bytes, int offset, int length)
    parameters:
    - id: bytes
      type: System.Byte[]
    - id: offset
      type: System.Int32
    - id: length
      type: System.Int32
    content.vb: Public Sub New(bytes As Byte(), offset As Integer, length As Integer)
  overload: Org.BouncyCastle.Math.BigInteger.#ctor*
  nameWithType.vb: BigInteger.BigInteger(Byte(), Int32, Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Org.BouncyCastle.Math.BigInteger.BigInteger(System.Byte(), System.Int32, System.Int32)
  name.vb: BigInteger(Byte(), Int32, Int32)
- uid: Org.BouncyCastle.Math.BigInteger.#ctor(System.Int32,System.Byte[])
  commentId: M:Org.BouncyCastle.Math.BigInteger.#ctor(System.Int32,System.Byte[])
  id: '#ctor(System.Int32,System.Byte[])'
  parent: Org.BouncyCastle.Math.BigInteger
  langs:
  - csharp
  - vb
  name: BigInteger(Int32, Byte[])
  nameWithType: BigInteger.BigInteger(Int32, Byte[])
  fullName: Org.BouncyCastle.Math.BigInteger.BigInteger(System.Int32, System.Byte[])
  type: Constructor
  source:
    id: .ctor
    path: ''
    startLine: 15034
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Math
  syntax:
    content: public BigInteger(int sign, byte[] bytes)
    parameters:
    - id: sign
      type: System.Int32
    - id: bytes
      type: System.Byte[]
    content.vb: Public Sub New(sign As Integer, bytes As Byte())
  overload: Org.BouncyCastle.Math.BigInteger.#ctor*
  nameWithType.vb: BigInteger.BigInteger(Int32, Byte())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Org.BouncyCastle.Math.BigInteger.BigInteger(System.Int32, System.Byte())
  name.vb: BigInteger(Int32, Byte())
- uid: Org.BouncyCastle.Math.BigInteger.#ctor(System.Int32,System.Byte[],System.Int32,System.Int32)
  commentId: M:Org.BouncyCastle.Math.BigInteger.#ctor(System.Int32,System.Byte[],System.Int32,System.Int32)
  id: '#ctor(System.Int32,System.Byte[],System.Int32,System.Int32)'
  parent: Org.BouncyCastle.Math.BigInteger
  langs:
  - csharp
  - vb
  name: BigInteger(Int32, Byte[], Int32, Int32)
  nameWithType: BigInteger.BigInteger(Int32, Byte[], Int32, Int32)
  fullName: Org.BouncyCastle.Math.BigInteger.BigInteger(System.Int32, System.Byte[], System.Int32, System.Int32)
  type: Constructor
  source:
    id: .ctor
    path: ''
    startLine: 15041
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Math
  syntax:
    content: public BigInteger(int sign, byte[] bytes, int offset, int length)
    parameters:
    - id: sign
      type: System.Int32
    - id: bytes
      type: System.Byte[]
    - id: offset
      type: System.Int32
    - id: length
      type: System.Int32
    content.vb: Public Sub New(sign As Integer, bytes As Byte(), offset As Integer, length As Integer)
  overload: Org.BouncyCastle.Math.BigInteger.#ctor*
  nameWithType.vb: BigInteger.BigInteger(Int32, Byte(), Int32, Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Org.BouncyCastle.Math.BigInteger.BigInteger(System.Int32, System.Byte(), System.Int32, System.Int32)
  name.vb: BigInteger(Int32, Byte(), Int32, Int32)
- uid: Org.BouncyCastle.Math.BigInteger.#ctor(System.Int32,System.Random)
  commentId: M:Org.BouncyCastle.Math.BigInteger.#ctor(System.Int32,System.Random)
  id: '#ctor(System.Int32,System.Random)'
  parent: Org.BouncyCastle.Math.BigInteger
  langs:
  - csharp
  - vb
  name: BigInteger(Int32, Random)
  nameWithType: BigInteger.BigInteger(Int32, Random)
  fullName: Org.BouncyCastle.Math.BigInteger.BigInteger(System.Int32, System.Random)
  type: Constructor
  source:
    id: .ctor
    path: ''
    startLine: 15063
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Math
  syntax:
    content: public BigInteger(int sizeInBits, Random random)
    parameters:
    - id: sizeInBits
      type: System.Int32
    - id: random
      type: System.Random
    content.vb: Public Sub New(sizeInBits As Integer, random As Random)
  overload: Org.BouncyCastle.Math.BigInteger.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Org.BouncyCastle.Math.BigInteger.#ctor(System.Int32,System.Int32,System.Random)
  commentId: M:Org.BouncyCastle.Math.BigInteger.#ctor(System.Int32,System.Int32,System.Random)
  id: '#ctor(System.Int32,System.Int32,System.Random)'
  parent: Org.BouncyCastle.Math.BigInteger
  langs:
  - csharp
  - vb
  name: BigInteger(Int32, Int32, Random)
  nameWithType: BigInteger.BigInteger(Int32, Int32, Random)
  fullName: Org.BouncyCastle.Math.BigInteger.BigInteger(System.Int32, System.Int32, System.Random)
  type: Constructor
  source:
    id: .ctor
    path: ''
    startLine: 15092
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Math
  syntax:
    content: public BigInteger(int bitLength, int certainty, Random random)
    parameters:
    - id: bitLength
      type: System.Int32
    - id: certainty
      type: System.Int32
    - id: random
      type: System.Random
    content.vb: Public Sub New(bitLength As Integer, certainty As Integer, random As Random)
  overload: Org.BouncyCastle.Math.BigInteger.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Org.BouncyCastle.Math.BigInteger.Abs
  commentId: M:Org.BouncyCastle.Math.BigInteger.Abs
  id: Abs
  parent: Org.BouncyCastle.Math.BigInteger
  langs:
  - csharp
  - vb
  name: Abs()
  nameWithType: BigInteger.Abs()
  fullName: Org.BouncyCastle.Math.BigInteger.Abs()
  type: Method
  source:
    id: Abs
    path: ''
    startLine: 15151
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Math
  syntax:
    content: public BigInteger Abs()
    return:
      type: Org.BouncyCastle.Math.BigInteger
    content.vb: Public Function Abs As BigInteger
  overload: Org.BouncyCastle.Math.BigInteger.Abs*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Org.BouncyCastle.Math.BigInteger.Add(Org.BouncyCastle.Math.BigInteger)
  commentId: M:Org.BouncyCastle.Math.BigInteger.Add(Org.BouncyCastle.Math.BigInteger)
  id: Add(Org.BouncyCastle.Math.BigInteger)
  parent: Org.BouncyCastle.Math.BigInteger
  langs:
  - csharp
  - vb
  name: Add(BigInteger)
  nameWithType: BigInteger.Add(BigInteger)
  fullName: Org.BouncyCastle.Math.BigInteger.Add(Org.BouncyCastle.Math.BigInteger)
  type: Method
  source:
    id: Add
    path: ''
    startLine: 15184
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Math
  syntax:
    content: public BigInteger Add(BigInteger value)
    parameters:
    - id: value
      type: Org.BouncyCastle.Math.BigInteger
    return:
      type: Org.BouncyCastle.Math.BigInteger
    content.vb: Public Function Add(value As BigInteger) As BigInteger
  overload: Org.BouncyCastle.Math.BigInteger.Add*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Org.BouncyCastle.Math.BigInteger.And(Org.BouncyCastle.Math.BigInteger)
  commentId: M:Org.BouncyCastle.Math.BigInteger.And(Org.BouncyCastle.Math.BigInteger)
  id: And(Org.BouncyCastle.Math.BigInteger)
  parent: Org.BouncyCastle.Math.BigInteger
  langs:
  - csharp
  - vb
  name: And(BigInteger)
  nameWithType: BigInteger.And(BigInteger)
  fullName: Org.BouncyCastle.Math.BigInteger.And(Org.BouncyCastle.Math.BigInteger)
  type: Method
  source:
    id: And
    path: ''
    startLine: 15242
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Math
  syntax:
    content: public BigInteger And(BigInteger value)
    parameters:
    - id: value
      type: Org.BouncyCastle.Math.BigInteger
    return:
      type: Org.BouncyCastle.Math.BigInteger
    content.vb: Public Function And(value As BigInteger) As BigInteger
  overload: Org.BouncyCastle.Math.BigInteger.And*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Org.BouncyCastle.Math.BigInteger.AndNot(Org.BouncyCastle.Math.BigInteger)
  commentId: M:Org.BouncyCastle.Math.BigInteger.AndNot(Org.BouncyCastle.Math.BigInteger)
  id: AndNot(Org.BouncyCastle.Math.BigInteger)
  parent: Org.BouncyCastle.Math.BigInteger
  langs:
  - csharp
  - vb
  name: AndNot(BigInteger)
  nameWithType: BigInteger.AndNot(BigInteger)
  fullName: Org.BouncyCastle.Math.BigInteger.AndNot(Org.BouncyCastle.Math.BigInteger)
  type: Method
  source:
    id: AndNot
    path: ''
    startLine: 15299
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Math
  syntax:
    content: public BigInteger AndNot(BigInteger val)
    parameters:
    - id: val
      type: Org.BouncyCastle.Math.BigInteger
    return:
      type: Org.BouncyCastle.Math.BigInteger
    content.vb: Public Function AndNot(val As BigInteger) As BigInteger
  overload: Org.BouncyCastle.Math.BigInteger.AndNot*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Org.BouncyCastle.Math.BigInteger.BitCount
  commentId: P:Org.BouncyCastle.Math.BigInteger.BitCount
  id: BitCount
  parent: Org.BouncyCastle.Math.BigInteger
  langs:
  - csharp
  - vb
  name: BitCount
  nameWithType: BigInteger.BitCount
  fullName: Org.BouncyCastle.Math.BigInteger.BitCount
  type: Property
  source:
    id: BitCount
    path: ''
    startLine: 15305
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Math
  syntax:
    content: public int BitCount { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property BitCount As Integer
  overload: Org.BouncyCastle.Math.BigInteger.BitCount*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Org.BouncyCastle.Math.BigInteger.BitCnt(System.Int32)
  commentId: M:Org.BouncyCastle.Math.BigInteger.BitCnt(System.Int32)
  id: BitCnt(System.Int32)
  parent: Org.BouncyCastle.Math.BigInteger
  langs:
  - csharp
  - vb
  name: BitCnt(Int32)
  nameWithType: BigInteger.BitCnt(Int32)
  fullName: Org.BouncyCastle.Math.BigInteger.BitCnt(System.Int32)
  type: Method
  source:
    id: BitCnt
    path: ''
    startLine: 15331
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Math
  syntax:
    content: public static int BitCnt(int i)
    parameters:
    - id: i
      type: System.Int32
    return:
      type: System.Int32
    content.vb: Public Shared Function BitCnt(i As Integer) As Integer
  overload: Org.BouncyCastle.Math.BigInteger.BitCnt*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Org.BouncyCastle.Math.BigInteger.BitLength
  commentId: P:Org.BouncyCastle.Math.BigInteger.BitLength
  id: BitLength
  parent: Org.BouncyCastle.Math.BigInteger
  langs:
  - csharp
  - vb
  name: BitLength
  nameWithType: BigInteger.BitLength
  fullName: Org.BouncyCastle.Math.BigInteger.BitLength
  type: Property
  source:
    id: BitLength
    path: ''
    startLine: 15380
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Math
  syntax:
    content: public int BitLength { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property BitLength As Integer
  overload: Org.BouncyCastle.Math.BigInteger.BitLength*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Org.BouncyCastle.Math.BigInteger.CompareTo(System.Object)
  commentId: M:Org.BouncyCastle.Math.BigInteger.CompareTo(System.Object)
  id: CompareTo(System.Object)
  parent: Org.BouncyCastle.Math.BigInteger
  langs:
  - csharp
  - vb
  name: CompareTo(Object)
  nameWithType: BigInteger.CompareTo(Object)
  fullName: Org.BouncyCastle.Math.BigInteger.CompareTo(System.Object)
  type: Method
  source:
    id: CompareTo
    path: ''
    startLine: 15418
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Math
  syntax:
    content: public int CompareTo(object obj)
    parameters:
    - id: obj
      type: System.Object
    return:
      type: System.Int32
    content.vb: Public Function CompareTo(obj As Object) As Integer
  overload: Org.BouncyCastle.Math.BigInteger.CompareTo*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Org.BouncyCastle.Math.BigInteger.CompareTo(Org.BouncyCastle.Math.BigInteger)
  commentId: M:Org.BouncyCastle.Math.BigInteger.CompareTo(Org.BouncyCastle.Math.BigInteger)
  id: CompareTo(Org.BouncyCastle.Math.BigInteger)
  parent: Org.BouncyCastle.Math.BigInteger
  langs:
  - csharp
  - vb
  name: CompareTo(BigInteger)
  nameWithType: BigInteger.CompareTo(BigInteger)
  fullName: Org.BouncyCastle.Math.BigInteger.CompareTo(Org.BouncyCastle.Math.BigInteger)
  type: Method
  source:
    id: CompareTo
    path: ''
    startLine: 15474
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Math
  syntax:
    content: public int CompareTo(BigInteger value)
    parameters:
    - id: value
      type: Org.BouncyCastle.Math.BigInteger
    return:
      type: System.Int32
    content.vb: Public Function CompareTo(value As BigInteger) As Integer
  overload: Org.BouncyCastle.Math.BigInteger.CompareTo*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Org.BouncyCastle.Math.BigInteger.Divide(Org.BouncyCastle.Math.BigInteger)
  commentId: M:Org.BouncyCastle.Math.BigInteger.Divide(Org.BouncyCastle.Math.BigInteger)
  id: Divide(Org.BouncyCastle.Math.BigInteger)
  parent: Org.BouncyCastle.Math.BigInteger
  langs:
  - csharp
  - vb
  name: Divide(BigInteger)
  nameWithType: BigInteger.Divide(BigInteger)
  fullName: Org.BouncyCastle.Math.BigInteger.Divide(Org.BouncyCastle.Math.BigInteger)
  type: Method
  source:
    id: Divide
    path: ''
    startLine: 15619
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Math
  syntax:
    content: public BigInteger Divide(BigInteger val)
    parameters:
    - id: val
      type: Org.BouncyCastle.Math.BigInteger
    return:
      type: Org.BouncyCastle.Math.BigInteger
    content.vb: Public Function Divide(val As BigInteger) As BigInteger
  overload: Org.BouncyCastle.Math.BigInteger.Divide*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Org.BouncyCastle.Math.BigInteger.DivideAndRemainder(Org.BouncyCastle.Math.BigInteger)
  commentId: M:Org.BouncyCastle.Math.BigInteger.DivideAndRemainder(Org.BouncyCastle.Math.BigInteger)
  id: DivideAndRemainder(Org.BouncyCastle.Math.BigInteger)
  parent: Org.BouncyCastle.Math.BigInteger
  langs:
  - csharp
  - vb
  name: DivideAndRemainder(BigInteger)
  nameWithType: BigInteger.DivideAndRemainder(BigInteger)
  fullName: Org.BouncyCastle.Math.BigInteger.DivideAndRemainder(Org.BouncyCastle.Math.BigInteger)
  type: Method
  source:
    id: DivideAndRemainder
    path: ''
    startLine: 15639
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Math
  syntax:
    content: public BigInteger[] DivideAndRemainder(BigInteger val)
    parameters:
    - id: val
      type: Org.BouncyCastle.Math.BigInteger
    return:
      type: Org.BouncyCastle.Math.BigInteger[]
    content.vb: Public Function DivideAndRemainder(val As BigInteger) As BigInteger()
  overload: Org.BouncyCastle.Math.BigInteger.DivideAndRemainder*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Org.BouncyCastle.Math.BigInteger.Equals(System.Object)
  commentId: M:Org.BouncyCastle.Math.BigInteger.Equals(System.Object)
  id: Equals(System.Object)
  parent: Org.BouncyCastle.Math.BigInteger
  langs:
  - csharp
  - vb
  name: Equals(Object)
  nameWithType: BigInteger.Equals(Object)
  fullName: Org.BouncyCastle.Math.BigInteger.Equals(System.Object)
  type: Method
  source:
    id: Equals
    path: ''
    startLine: 15673
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Math
  syntax:
    content: public override bool Equals(object obj)
    parameters:
    - id: obj
      type: System.Object
    return:
      type: System.Boolean
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
  overridden: System.Object.Equals(System.Object)
  overload: Org.BouncyCastle.Math.BigInteger.Equals*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Org.BouncyCastle.Math.BigInteger.Gcd(Org.BouncyCastle.Math.BigInteger)
  commentId: M:Org.BouncyCastle.Math.BigInteger.Gcd(Org.BouncyCastle.Math.BigInteger)
  id: Gcd(Org.BouncyCastle.Math.BigInteger)
  parent: Org.BouncyCastle.Math.BigInteger
  langs:
  - csharp
  - vb
  name: Gcd(BigInteger)
  nameWithType: BigInteger.Gcd(BigInteger)
  fullName: Org.BouncyCastle.Math.BigInteger.Gcd(Org.BouncyCastle.Math.BigInteger)
  type: Method
  source:
    id: Gcd
    path: ''
    startLine: 15699
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Math
  syntax:
    content: public BigInteger Gcd(BigInteger value)
    parameters:
    - id: value
      type: Org.BouncyCastle.Math.BigInteger
    return:
      type: Org.BouncyCastle.Math.BigInteger
    content.vb: Public Function Gcd(value As BigInteger) As BigInteger
  overload: Org.BouncyCastle.Math.BigInteger.Gcd*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Org.BouncyCastle.Math.BigInteger.GetHashCode
  commentId: M:Org.BouncyCastle.Math.BigInteger.GetHashCode
  id: GetHashCode
  parent: Org.BouncyCastle.Math.BigInteger
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: BigInteger.GetHashCode()
  fullName: Org.BouncyCastle.Math.BigInteger.GetHashCode()
  type: Method
  source:
    id: GetHashCode
    path: ''
    startLine: 15722
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Math
  syntax:
    content: public override int GetHashCode()
    return:
      type: System.Int32
    content.vb: Public Overrides Function GetHashCode As Integer
  overridden: System.Object.GetHashCode
  overload: Org.BouncyCastle.Math.BigInteger.GetHashCode*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Org.BouncyCastle.Math.BigInteger.IntValue
  commentId: P:Org.BouncyCastle.Math.BigInteger.IntValue
  id: IntValue
  parent: Org.BouncyCastle.Math.BigInteger
  langs:
  - csharp
  - vb
  name: IntValue
  nameWithType: BigInteger.IntValue
  fullName: Org.BouncyCastle.Math.BigInteger.IntValue
  type: Property
  source:
    id: IntValue
    path: ''
    startLine: 15750
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Math
  syntax:
    content: public int IntValue { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property IntValue As Integer
  overload: Org.BouncyCastle.Math.BigInteger.IntValue*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Org.BouncyCastle.Math.BigInteger.IsProbablePrime(System.Int32)
  commentId: M:Org.BouncyCastle.Math.BigInteger.IsProbablePrime(System.Int32)
  id: IsProbablePrime(System.Int32)
  parent: Org.BouncyCastle.Math.BigInteger
  langs:
  - csharp
  - vb
  name: IsProbablePrime(Int32)
  nameWithType: BigInteger.IsProbablePrime(Int32)
  fullName: Org.BouncyCastle.Math.BigInteger.IsProbablePrime(System.Int32)
  type: Method
  source:
    id: IsProbablePrime
    path: ''
    startLine: 15770
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Math
  example: []
  syntax:
    content: public bool IsProbablePrime(int certainty)
    parameters:
    - id: certainty
      type: System.Int32
    return:
      type: System.Boolean
    content.vb: Public Function IsProbablePrime(certainty As Integer) As Boolean
  overload: Org.BouncyCastle.Math.BigInteger.IsProbablePrime*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Org.BouncyCastle.Math.BigInteger.RabinMillerTest(System.Int32,System.Random)
  commentId: M:Org.BouncyCastle.Math.BigInteger.RabinMillerTest(System.Int32,System.Random)
  id: RabinMillerTest(System.Int32,System.Random)
  parent: Org.BouncyCastle.Math.BigInteger
  langs:
  - csharp
  - vb
  name: RabinMillerTest(Int32, Random)
  nameWithType: BigInteger.RabinMillerTest(Int32, Random)
  fullName: Org.BouncyCastle.Math.BigInteger.RabinMillerTest(System.Int32, System.Random)
  type: Method
  source:
    id: RabinMillerTest
    path: ''
    startLine: 15838
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Math
  syntax:
    content: public bool RabinMillerTest(int certainty, Random random)
    parameters:
    - id: certainty
      type: System.Int32
    - id: random
      type: System.Random
    return:
      type: System.Boolean
    content.vb: Public Function RabinMillerTest(certainty As Integer, random As Random) As Boolean
  overload: Org.BouncyCastle.Math.BigInteger.RabinMillerTest*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Org.BouncyCastle.Math.BigInteger.LongValue
  commentId: P:Org.BouncyCastle.Math.BigInteger.LongValue
  id: LongValue
  parent: Org.BouncyCastle.Math.BigInteger
  langs:
  - csharp
  - vb
  name: LongValue
  nameWithType: BigInteger.LongValue
  fullName: Org.BouncyCastle.Math.BigInteger.LongValue
  type: Property
  source:
    id: LongValue
    path: ''
    startLine: 16002
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Math
  syntax:
    content: public long LongValue { get; }
    parameters: []
    return:
      type: System.Int64
    content.vb: Public ReadOnly Property LongValue As Long
  overload: Org.BouncyCastle.Math.BigInteger.LongValue*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Org.BouncyCastle.Math.BigInteger.Max(Org.BouncyCastle.Math.BigInteger)
  commentId: M:Org.BouncyCastle.Math.BigInteger.Max(Org.BouncyCastle.Math.BigInteger)
  id: Max(Org.BouncyCastle.Math.BigInteger)
  parent: Org.BouncyCastle.Math.BigInteger
  langs:
  - csharp
  - vb
  name: Max(BigInteger)
  nameWithType: BigInteger.Max(BigInteger)
  fullName: Org.BouncyCastle.Math.BigInteger.Max(Org.BouncyCastle.Math.BigInteger)
  type: Method
  source:
    id: Max
    path: ''
    startLine: 16021
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Math
  syntax:
    content: public BigInteger Max(BigInteger value)
    parameters:
    - id: value
      type: Org.BouncyCastle.Math.BigInteger
    return:
      type: Org.BouncyCastle.Math.BigInteger
    content.vb: Public Function Max(value As BigInteger) As BigInteger
  overload: Org.BouncyCastle.Math.BigInteger.Max*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Org.BouncyCastle.Math.BigInteger.Min(Org.BouncyCastle.Math.BigInteger)
  commentId: M:Org.BouncyCastle.Math.BigInteger.Min(Org.BouncyCastle.Math.BigInteger)
  id: Min(Org.BouncyCastle.Math.BigInteger)
  parent: Org.BouncyCastle.Math.BigInteger
  langs:
  - csharp
  - vb
  name: Min(BigInteger)
  nameWithType: BigInteger.Min(BigInteger)
  fullName: Org.BouncyCastle.Math.BigInteger.Min(Org.BouncyCastle.Math.BigInteger)
  type: Method
  source:
    id: Min
    path: ''
    startLine: 16027
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Math
  syntax:
    content: public BigInteger Min(BigInteger value)
    parameters:
    - id: value
      type: Org.BouncyCastle.Math.BigInteger
    return:
      type: Org.BouncyCastle.Math.BigInteger
    content.vb: Public Function Min(value As BigInteger) As BigInteger
  overload: Org.BouncyCastle.Math.BigInteger.Min*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Org.BouncyCastle.Math.BigInteger.Mod(Org.BouncyCastle.Math.BigInteger)
  commentId: M:Org.BouncyCastle.Math.BigInteger.Mod(Org.BouncyCastle.Math.BigInteger)
  id: Mod(Org.BouncyCastle.Math.BigInteger)
  parent: Org.BouncyCastle.Math.BigInteger
  langs:
  - csharp
  - vb
  name: Mod(BigInteger)
  nameWithType: BigInteger.Mod(BigInteger)
  fullName: Org.BouncyCastle.Math.BigInteger.Mod(Org.BouncyCastle.Math.BigInteger)
  type: Method
  source:
    id: Mod
    path: ''
    startLine: 16033
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Math
  syntax:
    content: public BigInteger Mod(BigInteger m)
    parameters:
    - id: m
      type: Org.BouncyCastle.Math.BigInteger
    return:
      type: Org.BouncyCastle.Math.BigInteger
    content.vb: Public Function Mod(m As BigInteger) As BigInteger
  overload: Org.BouncyCastle.Math.BigInteger.Mod*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Org.BouncyCastle.Math.BigInteger.ModInverse(Org.BouncyCastle.Math.BigInteger)
  commentId: M:Org.BouncyCastle.Math.BigInteger.ModInverse(Org.BouncyCastle.Math.BigInteger)
  id: ModInverse(Org.BouncyCastle.Math.BigInteger)
  parent: Org.BouncyCastle.Math.BigInteger
  langs:
  - csharp
  - vb
  name: ModInverse(BigInteger)
  nameWithType: BigInteger.ModInverse(BigInteger)
  fullName: Org.BouncyCastle.Math.BigInteger.ModInverse(Org.BouncyCastle.Math.BigInteger)
  type: Method
  source:
    id: ModInverse
    path: ''
    startLine: 16044
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Math
  syntax:
    content: public BigInteger ModInverse(BigInteger m)
    parameters:
    - id: m
      type: Org.BouncyCastle.Math.BigInteger
    return:
      type: Org.BouncyCastle.Math.BigInteger
    content.vb: Public Function ModInverse(m As BigInteger) As BigInteger
  overload: Org.BouncyCastle.Math.BigInteger.ModInverse*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Org.BouncyCastle.Math.BigInteger.ModPow(Org.BouncyCastle.Math.BigInteger,Org.BouncyCastle.Math.BigInteger)
  commentId: M:Org.BouncyCastle.Math.BigInteger.ModPow(Org.BouncyCastle.Math.BigInteger,Org.BouncyCastle.Math.BigInteger)
  id: ModPow(Org.BouncyCastle.Math.BigInteger,Org.BouncyCastle.Math.BigInteger)
  parent: Org.BouncyCastle.Math.BigInteger
  langs:
  - csharp
  - vb
  name: ModPow(BigInteger, BigInteger)
  nameWithType: BigInteger.ModPow(BigInteger, BigInteger)
  fullName: Org.BouncyCastle.Math.BigInteger.ModPow(Org.BouncyCastle.Math.BigInteger, Org.BouncyCastle.Math.BigInteger)
  type: Method
  source:
    id: ModPow
    path: ''
    startLine: 16227
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Math
  syntax:
    content: public BigInteger ModPow(BigInteger e, BigInteger m)
    parameters:
    - id: e
      type: Org.BouncyCastle.Math.BigInteger
    - id: m
      type: Org.BouncyCastle.Math.BigInteger
    return:
      type: Org.BouncyCastle.Math.BigInteger
    content.vb: Public Function ModPow(e As BigInteger, m As BigInteger) As BigInteger
  overload: Org.BouncyCastle.Math.BigInteger.ModPow*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Org.BouncyCastle.Math.BigInteger.Multiply(Org.BouncyCastle.Math.BigInteger)
  commentId: M:Org.BouncyCastle.Math.BigInteger.Multiply(Org.BouncyCastle.Math.BigInteger)
  id: Multiply(Org.BouncyCastle.Math.BigInteger)
  parent: Org.BouncyCastle.Math.BigInteger
  langs:
  - csharp
  - vb
  name: Multiply(BigInteger)
  nameWithType: BigInteger.Multiply(BigInteger)
  fullName: Org.BouncyCastle.Math.BigInteger.Multiply(Org.BouncyCastle.Math.BigInteger)
  type: Method
  source:
    id: Multiply
    path: ''
    startLine: 16888
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Math
  syntax:
    content: public BigInteger Multiply(BigInteger val)
    parameters:
    - id: val
      type: Org.BouncyCastle.Math.BigInteger
    return:
      type: Org.BouncyCastle.Math.BigInteger
    content.vb: Public Function Multiply(val As BigInteger) As BigInteger
  overload: Org.BouncyCastle.Math.BigInteger.Multiply*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Org.BouncyCastle.Math.BigInteger.Square
  commentId: M:Org.BouncyCastle.Math.BigInteger.Square
  id: Square
  parent: Org.BouncyCastle.Math.BigInteger
  langs:
  - csharp
  - vb
  name: Square()
  nameWithType: BigInteger.Square()
  fullName: Org.BouncyCastle.Math.BigInteger.Square()
  type: Method
  source:
    id: Square
    path: ''
    startLine: 16918
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Math
  syntax:
    content: public BigInteger Square()
    return:
      type: Org.BouncyCastle.Math.BigInteger
    content.vb: Public Function Square As BigInteger
  overload: Org.BouncyCastle.Math.BigInteger.Square*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Org.BouncyCastle.Math.BigInteger.Negate
  commentId: M:Org.BouncyCastle.Math.BigInteger.Negate
  id: Negate
  parent: Org.BouncyCastle.Math.BigInteger
  langs:
  - csharp
  - vb
  name: Negate()
  nameWithType: BigInteger.Negate()
  fullName: Org.BouncyCastle.Math.BigInteger.Negate()
  type: Method
  source:
    id: Negate
    path: ''
    startLine: 16932
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Math
  syntax:
    content: public BigInteger Negate()
    return:
      type: Org.BouncyCastle.Math.BigInteger
    content.vb: Public Function Negate As BigInteger
  overload: Org.BouncyCastle.Math.BigInteger.Negate*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Org.BouncyCastle.Math.BigInteger.NextProbablePrime
  commentId: M:Org.BouncyCastle.Math.BigInteger.NextProbablePrime
  id: NextProbablePrime
  parent: Org.BouncyCastle.Math.BigInteger
  langs:
  - csharp
  - vb
  name: NextProbablePrime()
  nameWithType: BigInteger.NextProbablePrime()
  fullName: Org.BouncyCastle.Math.BigInteger.NextProbablePrime()
  type: Method
  source:
    id: NextProbablePrime
    path: ''
    startLine: 16940
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Math
  syntax:
    content: public BigInteger NextProbablePrime()
    return:
      type: Org.BouncyCastle.Math.BigInteger
    content.vb: Public Function NextProbablePrime As BigInteger
  overload: Org.BouncyCastle.Math.BigInteger.NextProbablePrime*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Org.BouncyCastle.Math.BigInteger.Not
  commentId: M:Org.BouncyCastle.Math.BigInteger.Not
  id: Not
  parent: Org.BouncyCastle.Math.BigInteger
  langs:
  - csharp
  - vb
  name: Not()
  nameWithType: BigInteger.Not()
  fullName: Org.BouncyCastle.Math.BigInteger.Not()
  type: Method
  source:
    id: Not
    path: ''
    startLine: 16958
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Math
  syntax:
    content: public BigInteger Not()
    return:
      type: Org.BouncyCastle.Math.BigInteger
    content.vb: Public Function Not As BigInteger
  overload: Org.BouncyCastle.Math.BigInteger.Not*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Org.BouncyCastle.Math.BigInteger.Pow(System.Int32)
  commentId: M:Org.BouncyCastle.Math.BigInteger.Pow(System.Int32)
  id: Pow(System.Int32)
  parent: Org.BouncyCastle.Math.BigInteger
  langs:
  - csharp
  - vb
  name: Pow(Int32)
  nameWithType: BigInteger.Pow(Int32)
  fullName: Org.BouncyCastle.Math.BigInteger.Pow(System.Int32)
  type: Method
  source:
    id: Pow
    path: ''
    startLine: 16963
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Math
  syntax:
    content: public BigInteger Pow(int exp)
    parameters:
    - id: exp
      type: System.Int32
    return:
      type: Org.BouncyCastle.Math.BigInteger
    content.vb: Public Function Pow(exp As Integer) As BigInteger
  overload: Org.BouncyCastle.Math.BigInteger.Pow*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Org.BouncyCastle.Math.BigInteger.ProbablePrime(System.Int32,System.Random)
  commentId: M:Org.BouncyCastle.Math.BigInteger.ProbablePrime(System.Int32,System.Random)
  id: ProbablePrime(System.Int32,System.Random)
  parent: Org.BouncyCastle.Math.BigInteger
  langs:
  - csharp
  - vb
  name: ProbablePrime(Int32, Random)
  nameWithType: BigInteger.ProbablePrime(Int32, Random)
  fullName: Org.BouncyCastle.Math.BigInteger.ProbablePrime(System.Int32, System.Random)
  type: Method
  source:
    id: ProbablePrime
    path: ''
    startLine: 17005
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Math
  syntax:
    content: public static BigInteger ProbablePrime(int bitLength, Random random)
    parameters:
    - id: bitLength
      type: System.Int32
    - id: random
      type: System.Random
    return:
      type: Org.BouncyCastle.Math.BigInteger
    content.vb: Public Shared Function ProbablePrime(bitLength As Integer, random As Random) As BigInteger
  overload: Org.BouncyCastle.Math.BigInteger.ProbablePrime*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Org.BouncyCastle.Math.BigInteger.Remainder(Org.BouncyCastle.Math.BigInteger)
  commentId: M:Org.BouncyCastle.Math.BigInteger.Remainder(Org.BouncyCastle.Math.BigInteger)
  id: Remainder(Org.BouncyCastle.Math.BigInteger)
  parent: Org.BouncyCastle.Math.BigInteger
  langs:
  - csharp
  - vb
  name: Remainder(BigInteger)
  nameWithType: BigInteger.Remainder(BigInteger)
  fullName: Org.BouncyCastle.Math.BigInteger.Remainder(Org.BouncyCastle.Math.BigInteger)
  type: Method
  source:
    id: Remainder
    path: ''
    startLine: 17138
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Math
  syntax:
    content: public BigInteger Remainder(BigInteger n)
    parameters:
    - id: n
      type: Org.BouncyCastle.Math.BigInteger
    return:
      type: Org.BouncyCastle.Math.BigInteger
    content.vb: Public Function Remainder(n As BigInteger) As BigInteger
  overload: Org.BouncyCastle.Math.BigInteger.Remainder*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Org.BouncyCastle.Math.BigInteger.ShiftLeft(System.Int32)
  commentId: M:Org.BouncyCastle.Math.BigInteger.ShiftLeft(System.Int32)
  id: ShiftLeft(System.Int32)
  parent: Org.BouncyCastle.Math.BigInteger
  langs:
  - csharp
  - vb
  name: ShiftLeft(Int32)
  nameWithType: BigInteger.ShiftLeft(Int32)
  fullName: Org.BouncyCastle.Math.BigInteger.ShiftLeft(System.Int32)
  type: Method
  source:
    id: ShiftLeft
    path: ''
    startLine: 17288
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Math
  syntax:
    content: public BigInteger ShiftLeft(int n)
    parameters:
    - id: n
      type: System.Int32
    return:
      type: Org.BouncyCastle.Math.BigInteger
    content.vb: Public Function ShiftLeft(n As Integer) As BigInteger
  overload: Org.BouncyCastle.Math.BigInteger.ShiftLeft*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Org.BouncyCastle.Math.BigInteger.ShiftRight(System.Int32)
  commentId: M:Org.BouncyCastle.Math.BigInteger.ShiftRight(System.Int32)
  id: ShiftRight(System.Int32)
  parent: Org.BouncyCastle.Math.BigInteger
  langs:
  - csharp
  - vb
  name: ShiftRight(Int32)
  nameWithType: BigInteger.ShiftRight(Int32)
  fullName: Org.BouncyCastle.Math.BigInteger.ShiftRight(System.Int32)
  type: Method
  source:
    id: ShiftRight
    path: ''
    startLine: 17380
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Math
  syntax:
    content: public BigInteger ShiftRight(int n)
    parameters:
    - id: n
      type: System.Int32
    return:
      type: Org.BouncyCastle.Math.BigInteger
    content.vb: Public Function ShiftRight(n As Integer) As BigInteger
  overload: Org.BouncyCastle.Math.BigInteger.ShiftRight*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Org.BouncyCastle.Math.BigInteger.SignValue
  commentId: P:Org.BouncyCastle.Math.BigInteger.SignValue
  id: SignValue
  parent: Org.BouncyCastle.Math.BigInteger
  langs:
  - csharp
  - vb
  name: SignValue
  nameWithType: BigInteger.SignValue
  fullName: Org.BouncyCastle.Math.BigInteger.SignValue
  type: Property
  source:
    id: SignValue
    path: ''
    startLine: 17429
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Math
  syntax:
    content: public int SignValue { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property SignValue As Integer
  overload: Org.BouncyCastle.Math.BigInteger.SignValue*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Org.BouncyCastle.Math.BigInteger.Subtract(Org.BouncyCastle.Math.BigInteger)
  commentId: M:Org.BouncyCastle.Math.BigInteger.Subtract(Org.BouncyCastle.Math.BigInteger)
  id: Subtract(Org.BouncyCastle.Math.BigInteger)
  parent: Org.BouncyCastle.Math.BigInteger
  langs:
  - csharp
  - vb
  name: Subtract(BigInteger)
  nameWithType: BigInteger.Subtract(BigInteger)
  fullName: Org.BouncyCastle.Math.BigInteger.Subtract(Org.BouncyCastle.Math.BigInteger)
  type: Method
  source:
    id: Subtract
    path: ''
    startLine: 17471
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Math
  syntax:
    content: public BigInteger Subtract(BigInteger n)
    parameters:
    - id: n
      type: Org.BouncyCastle.Math.BigInteger
    return:
      type: Org.BouncyCastle.Math.BigInteger
    content.vb: Public Function Subtract(n As BigInteger) As BigInteger
  overload: Org.BouncyCastle.Math.BigInteger.Subtract*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Org.BouncyCastle.Math.BigInteger.ToByteArray
  commentId: M:Org.BouncyCastle.Math.BigInteger.ToByteArray
  id: ToByteArray
  parent: Org.BouncyCastle.Math.BigInteger
  langs:
  - csharp
  - vb
  name: ToByteArray()
  nameWithType: BigInteger.ToByteArray()
  fullName: Org.BouncyCastle.Math.BigInteger.ToByteArray()
  type: Method
  source:
    id: ToByteArray
    path: ''
    startLine: 17511
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Math
  syntax:
    content: public byte[] ToByteArray()
    return:
      type: System.Byte[]
    content.vb: Public Function ToByteArray As Byte()
  overload: Org.BouncyCastle.Math.BigInteger.ToByteArray*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Org.BouncyCastle.Math.BigInteger.ToByteArrayUnsigned
  commentId: M:Org.BouncyCastle.Math.BigInteger.ToByteArrayUnsigned
  id: ToByteArrayUnsigned
  parent: Org.BouncyCastle.Math.BigInteger
  langs:
  - csharp
  - vb
  name: ToByteArrayUnsigned()
  nameWithType: BigInteger.ToByteArrayUnsigned()
  fullName: Org.BouncyCastle.Math.BigInteger.ToByteArrayUnsigned()
  type: Method
  source:
    id: ToByteArrayUnsigned
    path: ''
    startLine: 17516
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Math
  syntax:
    content: public byte[] ToByteArrayUnsigned()
    return:
      type: System.Byte[]
    content.vb: Public Function ToByteArrayUnsigned As Byte()
  overload: Org.BouncyCastle.Math.BigInteger.ToByteArrayUnsigned*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Org.BouncyCastle.Math.BigInteger.ToString
  commentId: M:Org.BouncyCastle.Math.BigInteger.ToString
  id: ToString
  parent: Org.BouncyCastle.Math.BigInteger
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: BigInteger.ToString()
  fullName: Org.BouncyCastle.Math.BigInteger.ToString()
  type: Method
  source:
    id: ToString
    path: ''
    startLine: 17601
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Math
  syntax:
    content: public override string ToString()
    return:
      type: System.String
    content.vb: Public Overrides Function ToString As String
  overridden: System.Object.ToString
  overload: Org.BouncyCastle.Math.BigInteger.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Org.BouncyCastle.Math.BigInteger.ToString(System.Int32)
  commentId: M:Org.BouncyCastle.Math.BigInteger.ToString(System.Int32)
  id: ToString(System.Int32)
  parent: Org.BouncyCastle.Math.BigInteger
  langs:
  - csharp
  - vb
  name: ToString(Int32)
  nameWithType: BigInteger.ToString(Int32)
  fullName: Org.BouncyCastle.Math.BigInteger.ToString(System.Int32)
  type: Method
  source:
    id: ToString
    path: ''
    startLine: 17606
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Math
  syntax:
    content: public string ToString(int radix)
    parameters:
    - id: radix
      type: System.Int32
    return:
      type: System.String
    content.vb: Public Function ToString(radix As Integer) As String
  overload: Org.BouncyCastle.Math.BigInteger.ToString*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Org.BouncyCastle.Math.BigInteger.ValueOf(System.Int64)
  commentId: M:Org.BouncyCastle.Math.BigInteger.ValueOf(System.Int64)
  id: ValueOf(System.Int64)
  parent: Org.BouncyCastle.Math.BigInteger
  langs:
  - csharp
  - vb
  name: ValueOf(Int64)
  nameWithType: BigInteger.ValueOf(Int64)
  fullName: Org.BouncyCastle.Math.BigInteger.ValueOf(System.Int64)
  type: Method
  source:
    id: ValueOf
    path: ''
    startLine: 17785
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Math
  syntax:
    content: public static BigInteger ValueOf(long value)
    parameters:
    - id: value
      type: System.Int64
    return:
      type: Org.BouncyCastle.Math.BigInteger
    content.vb: Public Shared Function ValueOf(value As Long) As BigInteger
  overload: Org.BouncyCastle.Math.BigInteger.ValueOf*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Org.BouncyCastle.Math.BigInteger.GetLowestSetBit
  commentId: M:Org.BouncyCastle.Math.BigInteger.GetLowestSetBit
  id: GetLowestSetBit
  parent: Org.BouncyCastle.Math.BigInteger
  langs:
  - csharp
  - vb
  name: GetLowestSetBit()
  nameWithType: BigInteger.GetLowestSetBit()
  fullName: Org.BouncyCastle.Math.BigInteger.GetLowestSetBit()
  type: Method
  source:
    id: GetLowestSetBit
    path: ''
    startLine: 17796
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Math
  syntax:
    content: public int GetLowestSetBit()
    return:
      type: System.Int32
    content.vb: Public Function GetLowestSetBit As Integer
  overload: Org.BouncyCastle.Math.BigInteger.GetLowestSetBit*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Org.BouncyCastle.Math.BigInteger.TestBit(System.Int32)
  commentId: M:Org.BouncyCastle.Math.BigInteger.TestBit(System.Int32)
  id: TestBit(System.Int32)
  parent: Org.BouncyCastle.Math.BigInteger
  langs:
  - csharp
  - vb
  name: TestBit(Int32)
  nameWithType: BigInteger.TestBit(Int32)
  fullName: Org.BouncyCastle.Math.BigInteger.TestBit(System.Int32)
  type: Method
  source:
    id: TestBit
    path: ''
    startLine: 17832
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Math
  syntax:
    content: public bool TestBit(int n)
    parameters:
    - id: n
      type: System.Int32
    return:
      type: System.Boolean
    content.vb: Public Function TestBit(n As Integer) As Boolean
  overload: Org.BouncyCastle.Math.BigInteger.TestBit*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Org.BouncyCastle.Math.BigInteger.Or(Org.BouncyCastle.Math.BigInteger)
  commentId: M:Org.BouncyCastle.Math.BigInteger.Or(Org.BouncyCastle.Math.BigInteger)
  id: Or(Org.BouncyCastle.Math.BigInteger)
  parent: Org.BouncyCastle.Math.BigInteger
  langs:
  - csharp
  - vb
  name: Or(BigInteger)
  nameWithType: BigInteger.Or(BigInteger)
  fullName: Org.BouncyCastle.Math.BigInteger.Or(Org.BouncyCastle.Math.BigInteger)
  type: Method
  source:
    id: Or
    path: ''
    startLine: 17849
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Math
  syntax:
    content: public BigInteger Or(BigInteger value)
    parameters:
    - id: value
      type: Org.BouncyCastle.Math.BigInteger
    return:
      type: Org.BouncyCastle.Math.BigInteger
    content.vb: Public Function Or(value As BigInteger) As BigInteger
  overload: Org.BouncyCastle.Math.BigInteger.Or*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Org.BouncyCastle.Math.BigInteger.Xor(Org.BouncyCastle.Math.BigInteger)
  commentId: M:Org.BouncyCastle.Math.BigInteger.Xor(Org.BouncyCastle.Math.BigInteger)
  id: Xor(Org.BouncyCastle.Math.BigInteger)
  parent: Org.BouncyCastle.Math.BigInteger
  langs:
  - csharp
  - vb
  name: Xor(BigInteger)
  nameWithType: BigInteger.Xor(BigInteger)
  fullName: Org.BouncyCastle.Math.BigInteger.Xor(Org.BouncyCastle.Math.BigInteger)
  type: Method
  source:
    id: Xor
    path: ''
    startLine: 17907
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Math
  syntax:
    content: public BigInteger Xor(BigInteger value)
    parameters:
    - id: value
      type: Org.BouncyCastle.Math.BigInteger
    return:
      type: Org.BouncyCastle.Math.BigInteger
    content.vb: Public Function Xor(value As BigInteger) As BigInteger
  overload: Org.BouncyCastle.Math.BigInteger.Xor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Org.BouncyCastle.Math.BigInteger.SetBit(System.Int32)
  commentId: M:Org.BouncyCastle.Math.BigInteger.SetBit(System.Int32)
  id: SetBit(System.Int32)
  parent: Org.BouncyCastle.Math.BigInteger
  langs:
  - csharp
  - vb
  name: SetBit(Int32)
  nameWithType: BigInteger.SetBit(Int32)
  fullName: Org.BouncyCastle.Math.BigInteger.SetBit(System.Int32)
  type: Method
  source:
    id: SetBit
    path: ''
    startLine: 17966
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Math
  syntax:
    content: public BigInteger SetBit(int n)
    parameters:
    - id: n
      type: System.Int32
    return:
      type: Org.BouncyCastle.Math.BigInteger
    content.vb: Public Function SetBit(n As Integer) As BigInteger
  overload: Org.BouncyCastle.Math.BigInteger.SetBit*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Org.BouncyCastle.Math.BigInteger.ClearBit(System.Int32)
  commentId: M:Org.BouncyCastle.Math.BigInteger.ClearBit(System.Int32)
  id: ClearBit(System.Int32)
  parent: Org.BouncyCastle.Math.BigInteger
  langs:
  - csharp
  - vb
  name: ClearBit(Int32)
  nameWithType: BigInteger.ClearBit(Int32)
  fullName: Org.BouncyCastle.Math.BigInteger.ClearBit(System.Int32)
  type: Method
  source:
    id: ClearBit
    path: ''
    startLine: 17982
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Math
  syntax:
    content: public BigInteger ClearBit(int n)
    parameters:
    - id: n
      type: System.Int32
    return:
      type: Org.BouncyCastle.Math.BigInteger
    content.vb: Public Function ClearBit(n As Integer) As BigInteger
  overload: Org.BouncyCastle.Math.BigInteger.ClearBit*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Org.BouncyCastle.Math.BigInteger.FlipBit(System.Int32)
  commentId: M:Org.BouncyCastle.Math.BigInteger.FlipBit(System.Int32)
  id: FlipBit(System.Int32)
  parent: Org.BouncyCastle.Math.BigInteger
  langs:
  - csharp
  - vb
  name: FlipBit(Int32)
  nameWithType: BigInteger.FlipBit(Int32)
  fullName: Org.BouncyCastle.Math.BigInteger.FlipBit(System.Int32)
  type: Method
  source:
    id: FlipBit
    path: ''
    startLine: 17998
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Math
  syntax:
    content: public BigInteger FlipBit(int n)
    parameters:
    - id: n
      type: System.Int32
    return:
      type: Org.BouncyCastle.Math.BigInteger
    content.vb: Public Function FlipBit(n As Integer) As BigInteger
  overload: Org.BouncyCastle.Math.BigInteger.FlipBit*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Org.BouncyCastle.Math
  commentId: N:Org.BouncyCastle.Math
  name: Org.BouncyCastle.Math
  nameWithType: Org.BouncyCastle.Math
  fullName: Org.BouncyCastle.Math
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Org.BouncyCastle.Math.BigInteger
  commentId: T:Org.BouncyCastle.Math.BigInteger
  parent: Org.BouncyCastle.Math
  name: BigInteger
  nameWithType: BigInteger
  fullName: Org.BouncyCastle.Math.BigInteger
- uid: Org.BouncyCastle.Math.BigInteger.#ctor*
  commentId: Overload:Org.BouncyCastle.Math.BigInteger.#ctor
  name: BigInteger
  nameWithType: BigInteger.BigInteger
  fullName: Org.BouncyCastle.Math.BigInteger.BigInteger
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Byte[]
  isExternal: true
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullName.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Random
  commentId: T:System.Random
  parent: System
  isExternal: true
  name: Random
  nameWithType: Random
  fullName: System.Random
- uid: Org.BouncyCastle.Math.BigInteger.Abs*
  commentId: Overload:Org.BouncyCastle.Math.BigInteger.Abs
  name: Abs
  nameWithType: BigInteger.Abs
  fullName: Org.BouncyCastle.Math.BigInteger.Abs
- uid: Org.BouncyCastle.Math.BigInteger.Add*
  commentId: Overload:Org.BouncyCastle.Math.BigInteger.Add
  name: Add
  nameWithType: BigInteger.Add
  fullName: Org.BouncyCastle.Math.BigInteger.Add
- uid: Org.BouncyCastle.Math.BigInteger.And*
  commentId: Overload:Org.BouncyCastle.Math.BigInteger.And
  name: And
  nameWithType: BigInteger.And
  fullName: Org.BouncyCastle.Math.BigInteger.And
- uid: Org.BouncyCastle.Math.BigInteger.AndNot*
  commentId: Overload:Org.BouncyCastle.Math.BigInteger.AndNot
  name: AndNot
  nameWithType: BigInteger.AndNot
  fullName: Org.BouncyCastle.Math.BigInteger.AndNot
- uid: Org.BouncyCastle.Math.BigInteger.BitCount*
  commentId: Overload:Org.BouncyCastle.Math.BigInteger.BitCount
  name: BitCount
  nameWithType: BigInteger.BitCount
  fullName: Org.BouncyCastle.Math.BigInteger.BitCount
- uid: Org.BouncyCastle.Math.BigInteger.BitCnt*
  commentId: Overload:Org.BouncyCastle.Math.BigInteger.BitCnt
  name: BitCnt
  nameWithType: BigInteger.BitCnt
  fullName: Org.BouncyCastle.Math.BigInteger.BitCnt
- uid: Org.BouncyCastle.Math.BigInteger.BitLength*
  commentId: Overload:Org.BouncyCastle.Math.BigInteger.BitLength
  name: BitLength
  nameWithType: BigInteger.BitLength
  fullName: Org.BouncyCastle.Math.BigInteger.BitLength
- uid: Org.BouncyCastle.Math.BigInteger.CompareTo*
  commentId: Overload:Org.BouncyCastle.Math.BigInteger.CompareTo
  name: CompareTo
  nameWithType: BigInteger.CompareTo
  fullName: Org.BouncyCastle.Math.BigInteger.CompareTo
- uid: Org.BouncyCastle.Math.BigInteger.Divide*
  commentId: Overload:Org.BouncyCastle.Math.BigInteger.Divide
  name: Divide
  nameWithType: BigInteger.Divide
  fullName: Org.BouncyCastle.Math.BigInteger.Divide
- uid: Org.BouncyCastle.Math.BigInteger.DivideAndRemainder*
  commentId: Overload:Org.BouncyCastle.Math.BigInteger.DivideAndRemainder
  name: DivideAndRemainder
  nameWithType: BigInteger.DivideAndRemainder
  fullName: Org.BouncyCastle.Math.BigInteger.DivideAndRemainder
- uid: Org.BouncyCastle.Math.BigInteger[]
  isExternal: true
  name: BigInteger[]
  nameWithType: BigInteger[]
  fullName: Org.BouncyCastle.Math.BigInteger[]
  nameWithType.vb: BigInteger()
  fullName.vb: Org.BouncyCastle.Math.BigInteger()
  name.vb: BigInteger()
  spec.csharp:
  - uid: Org.BouncyCastle.Math.BigInteger
    name: BigInteger
    nameWithType: BigInteger
    fullName: Org.BouncyCastle.Math.BigInteger
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: Org.BouncyCastle.Math.BigInteger
    name: BigInteger
    nameWithType: BigInteger
    fullName: Org.BouncyCastle.Math.BigInteger
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Org.BouncyCastle.Math.BigInteger.Equals*
  commentId: Overload:Org.BouncyCastle.Math.BigInteger.Equals
  name: Equals
  nameWithType: BigInteger.Equals
  fullName: Org.BouncyCastle.Math.BigInteger.Equals
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Org.BouncyCastle.Math.BigInteger.Gcd*
  commentId: Overload:Org.BouncyCastle.Math.BigInteger.Gcd
  name: Gcd
  nameWithType: BigInteger.Gcd
  fullName: Org.BouncyCastle.Math.BigInteger.Gcd
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Org.BouncyCastle.Math.BigInteger.GetHashCode*
  commentId: Overload:Org.BouncyCastle.Math.BigInteger.GetHashCode
  name: GetHashCode
  nameWithType: BigInteger.GetHashCode
  fullName: Org.BouncyCastle.Math.BigInteger.GetHashCode
- uid: Org.BouncyCastle.Math.BigInteger.IntValue*
  commentId: Overload:Org.BouncyCastle.Math.BigInteger.IntValue
  name: IntValue
  nameWithType: BigInteger.IntValue
  fullName: Org.BouncyCastle.Math.BigInteger.IntValue
- uid: Org.BouncyCastle.Math.BigInteger.IsProbablePrime*
  commentId: Overload:Org.BouncyCastle.Math.BigInteger.IsProbablePrime
  name: IsProbablePrime
  nameWithType: BigInteger.IsProbablePrime
  fullName: Org.BouncyCastle.Math.BigInteger.IsProbablePrime
- uid: Org.BouncyCastle.Math.BigInteger.RabinMillerTest*
  commentId: Overload:Org.BouncyCastle.Math.BigInteger.RabinMillerTest
  name: RabinMillerTest
  nameWithType: BigInteger.RabinMillerTest
  fullName: Org.BouncyCastle.Math.BigInteger.RabinMillerTest
- uid: Org.BouncyCastle.Math.BigInteger.LongValue*
  commentId: Overload:Org.BouncyCastle.Math.BigInteger.LongValue
  name: LongValue
  nameWithType: BigInteger.LongValue
  fullName: Org.BouncyCastle.Math.BigInteger.LongValue
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: Org.BouncyCastle.Math.BigInteger.Max*
  commentId: Overload:Org.BouncyCastle.Math.BigInteger.Max
  name: Max
  nameWithType: BigInteger.Max
  fullName: Org.BouncyCastle.Math.BigInteger.Max
- uid: Org.BouncyCastle.Math.BigInteger.Min*
  commentId: Overload:Org.BouncyCastle.Math.BigInteger.Min
  name: Min
  nameWithType: BigInteger.Min
  fullName: Org.BouncyCastle.Math.BigInteger.Min
- uid: Org.BouncyCastle.Math.BigInteger.Mod*
  commentId: Overload:Org.BouncyCastle.Math.BigInteger.Mod
  name: Mod
  nameWithType: BigInteger.Mod
  fullName: Org.BouncyCastle.Math.BigInteger.Mod
- uid: Org.BouncyCastle.Math.BigInteger.ModInverse*
  commentId: Overload:Org.BouncyCastle.Math.BigInteger.ModInverse
  name: ModInverse
  nameWithType: BigInteger.ModInverse
  fullName: Org.BouncyCastle.Math.BigInteger.ModInverse
- uid: Org.BouncyCastle.Math.BigInteger.ModPow*
  commentId: Overload:Org.BouncyCastle.Math.BigInteger.ModPow
  name: ModPow
  nameWithType: BigInteger.ModPow
  fullName: Org.BouncyCastle.Math.BigInteger.ModPow
- uid: Org.BouncyCastle.Math.BigInteger.Multiply*
  commentId: Overload:Org.BouncyCastle.Math.BigInteger.Multiply
  name: Multiply
  nameWithType: BigInteger.Multiply
  fullName: Org.BouncyCastle.Math.BigInteger.Multiply
- uid: Org.BouncyCastle.Math.BigInteger.Square*
  commentId: Overload:Org.BouncyCastle.Math.BigInteger.Square
  name: Square
  nameWithType: BigInteger.Square
  fullName: Org.BouncyCastle.Math.BigInteger.Square
- uid: Org.BouncyCastle.Math.BigInteger.Negate*
  commentId: Overload:Org.BouncyCastle.Math.BigInteger.Negate
  name: Negate
  nameWithType: BigInteger.Negate
  fullName: Org.BouncyCastle.Math.BigInteger.Negate
- uid: Org.BouncyCastle.Math.BigInteger.NextProbablePrime*
  commentId: Overload:Org.BouncyCastle.Math.BigInteger.NextProbablePrime
  name: NextProbablePrime
  nameWithType: BigInteger.NextProbablePrime
  fullName: Org.BouncyCastle.Math.BigInteger.NextProbablePrime
- uid: Org.BouncyCastle.Math.BigInteger.Not*
  commentId: Overload:Org.BouncyCastle.Math.BigInteger.Not
  name: Not
  nameWithType: BigInteger.Not
  fullName: Org.BouncyCastle.Math.BigInteger.Not
- uid: Org.BouncyCastle.Math.BigInteger.Pow*
  commentId: Overload:Org.BouncyCastle.Math.BigInteger.Pow
  name: Pow
  nameWithType: BigInteger.Pow
  fullName: Org.BouncyCastle.Math.BigInteger.Pow
- uid: Org.BouncyCastle.Math.BigInteger.ProbablePrime*
  commentId: Overload:Org.BouncyCastle.Math.BigInteger.ProbablePrime
  name: ProbablePrime
  nameWithType: BigInteger.ProbablePrime
  fullName: Org.BouncyCastle.Math.BigInteger.ProbablePrime
- uid: Org.BouncyCastle.Math.BigInteger.Remainder*
  commentId: Overload:Org.BouncyCastle.Math.BigInteger.Remainder
  name: Remainder
  nameWithType: BigInteger.Remainder
  fullName: Org.BouncyCastle.Math.BigInteger.Remainder
- uid: Org.BouncyCastle.Math.BigInteger.ShiftLeft*
  commentId: Overload:Org.BouncyCastle.Math.BigInteger.ShiftLeft
  name: ShiftLeft
  nameWithType: BigInteger.ShiftLeft
  fullName: Org.BouncyCastle.Math.BigInteger.ShiftLeft
- uid: Org.BouncyCastle.Math.BigInteger.ShiftRight*
  commentId: Overload:Org.BouncyCastle.Math.BigInteger.ShiftRight
  name: ShiftRight
  nameWithType: BigInteger.ShiftRight
  fullName: Org.BouncyCastle.Math.BigInteger.ShiftRight
- uid: Org.BouncyCastle.Math.BigInteger.SignValue*
  commentId: Overload:Org.BouncyCastle.Math.BigInteger.SignValue
  name: SignValue
  nameWithType: BigInteger.SignValue
  fullName: Org.BouncyCastle.Math.BigInteger.SignValue
- uid: Org.BouncyCastle.Math.BigInteger.Subtract*
  commentId: Overload:Org.BouncyCastle.Math.BigInteger.Subtract
  name: Subtract
  nameWithType: BigInteger.Subtract
  fullName: Org.BouncyCastle.Math.BigInteger.Subtract
- uid: Org.BouncyCastle.Math.BigInteger.ToByteArray*
  commentId: Overload:Org.BouncyCastle.Math.BigInteger.ToByteArray
  name: ToByteArray
  nameWithType: BigInteger.ToByteArray
  fullName: Org.BouncyCastle.Math.BigInteger.ToByteArray
- uid: Org.BouncyCastle.Math.BigInteger.ToByteArrayUnsigned*
  commentId: Overload:Org.BouncyCastle.Math.BigInteger.ToByteArrayUnsigned
  name: ToByteArrayUnsigned
  nameWithType: BigInteger.ToByteArrayUnsigned
  fullName: Org.BouncyCastle.Math.BigInteger.ToByteArrayUnsigned
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Org.BouncyCastle.Math.BigInteger.ToString*
  commentId: Overload:Org.BouncyCastle.Math.BigInteger.ToString
  name: ToString
  nameWithType: BigInteger.ToString
  fullName: Org.BouncyCastle.Math.BigInteger.ToString
- uid: Org.BouncyCastle.Math.BigInteger.ValueOf*
  commentId: Overload:Org.BouncyCastle.Math.BigInteger.ValueOf
  name: ValueOf
  nameWithType: BigInteger.ValueOf
  fullName: Org.BouncyCastle.Math.BigInteger.ValueOf
- uid: Org.BouncyCastle.Math.BigInteger.GetLowestSetBit*
  commentId: Overload:Org.BouncyCastle.Math.BigInteger.GetLowestSetBit
  name: GetLowestSetBit
  nameWithType: BigInteger.GetLowestSetBit
  fullName: Org.BouncyCastle.Math.BigInteger.GetLowestSetBit
- uid: Org.BouncyCastle.Math.BigInteger.TestBit*
  commentId: Overload:Org.BouncyCastle.Math.BigInteger.TestBit
  name: TestBit
  nameWithType: BigInteger.TestBit
  fullName: Org.BouncyCastle.Math.BigInteger.TestBit
- uid: Org.BouncyCastle.Math.BigInteger.Or*
  commentId: Overload:Org.BouncyCastle.Math.BigInteger.Or
  name: Or
  nameWithType: BigInteger.Or
  fullName: Org.BouncyCastle.Math.BigInteger.Or
- uid: Org.BouncyCastle.Math.BigInteger.Xor*
  commentId: Overload:Org.BouncyCastle.Math.BigInteger.Xor
  name: Xor
  nameWithType: BigInteger.Xor
  fullName: Org.BouncyCastle.Math.BigInteger.Xor
- uid: Org.BouncyCastle.Math.BigInteger.SetBit*
  commentId: Overload:Org.BouncyCastle.Math.BigInteger.SetBit
  name: SetBit
  nameWithType: BigInteger.SetBit
  fullName: Org.BouncyCastle.Math.BigInteger.SetBit
- uid: Org.BouncyCastle.Math.BigInteger.ClearBit*
  commentId: Overload:Org.BouncyCastle.Math.BigInteger.ClearBit
  name: ClearBit
  nameWithType: BigInteger.ClearBit
  fullName: Org.BouncyCastle.Math.BigInteger.ClearBit
- uid: Org.BouncyCastle.Math.BigInteger.FlipBit*
  commentId: Overload:Org.BouncyCastle.Math.BigInteger.FlipBit
  name: FlipBit
  nameWithType: BigInteger.FlipBit
  fullName: Org.BouncyCastle.Math.BigInteger.FlipBit
