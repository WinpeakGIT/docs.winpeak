### YamlMime:ManagedReference
items:
- uid: Winpeak.Client.Networking.WebServer.GetGameInfoResult
  commentId: T:Winpeak.Client.Networking.WebServer.GetGameInfoResult
  id: GetGameInfoResult
  parent: Winpeak.Client.Networking.WebServer
  children:
  - Winpeak.Client.Networking.WebServer.GetGameInfoResult.Game
  - Winpeak.Client.Networking.WebServer.GetGameInfoResult.GameServer
  - Winpeak.Client.Networking.WebServer.GetGameInfoResult.GameUsers
  - Winpeak.Client.Networking.WebServer.GetGameInfoResult.HandleResponse(HTTPResponse)
  - Winpeak.Client.Networking.WebServer.GetGameInfoResult.RequestsList
  langs:
  - csharp
  - vb
  name: GetGameInfoResult
  nameWithType: GetGameInfoResult
  fullName: Winpeak.Client.Networking.WebServer.GetGameInfoResult
  type: Class
  source:
    id: GetGameInfoResult
    path: ''
    startLine: 167488
  assemblies:
  - cs.temp.dll
  namespace: Winpeak.Client.Networking.WebServer
  syntax:
    content: 'public class GetGameInfoResult : WebResult, IWebResult'
    content.vb: >-
      Public Class GetGameInfoResult
          Inherits WebResult
          Implements IWebResult
  inheritance:
  - System.Object
  - Winpeak.Client.Networking.WebServer.WebResult
  implements:
  - Winpeak.Client.Networking.WebServer.IWebResult
  inheritedMembers:
  - Winpeak.Client.Networking.WebServer.WebResult.Error
  - Winpeak.Client.Networking.WebServer.WebResult.m_state
  - Winpeak.Client.Networking.WebServer.WebResult.m_needAuth
  - Winpeak.Client.Networking.WebServer.WebResult.m_error
  - Winpeak.Client.Networking.WebServer.WebResult.SetResponse(HTTPResponse)
  - Winpeak.Client.Networking.WebServer.WebResult.IsSuccessCallback
  - Winpeak.Client.Networking.WebServer.WebResult.HasError
  - Winpeak.Client.Networking.WebServer.WebResult.DataAsByteArray
  - Winpeak.Client.Networking.WebServer.WebResult.DataAsTexture
  - Winpeak.Client.Networking.WebServer.WebResult.StatusCode
  - Winpeak.Client.Networking.WebServer.WebResult.DataAsText
  - Winpeak.Client.Networking.WebServer.WebResult.Message
  - Winpeak.Client.Networking.WebServer.WebResult.State
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ToString
  - System.Object.ReferenceEquals(System.Object,System.Object)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Winpeak.Client.Networking.WebServer.GetGameInfoResult.Game
  commentId: P:Winpeak.Client.Networking.WebServer.GetGameInfoResult.Game
  id: Game
  parent: Winpeak.Client.Networking.WebServer.GetGameInfoResult
  langs:
  - csharp
  - vb
  name: Game
  nameWithType: GetGameInfoResult.Game
  fullName: Winpeak.Client.Networking.WebServer.GetGameInfoResult.Game
  type: Property
  source:
    id: Game
    path: ''
    startLine: 167493
  assemblies:
  - cs.temp.dll
  namespace: Winpeak.Client.Networking.WebServer
  syntax:
    content: public GameInfo Game { get; }
    parameters: []
    return:
      type: Winpeak.Client.Networking.WebServer.GameInfo
    content.vb: Public ReadOnly Property Game As GameInfo
  overload: Winpeak.Client.Networking.WebServer.GetGameInfoResult.Game*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Winpeak.Client.Networking.WebServer.GetGameInfoResult.GameUsers
  commentId: P:Winpeak.Client.Networking.WebServer.GetGameInfoResult.GameUsers
  id: GameUsers
  parent: Winpeak.Client.Networking.WebServer.GetGameInfoResult
  langs:
  - csharp
  - vb
  name: GameUsers
  nameWithType: GetGameInfoResult.GameUsers
  fullName: Winpeak.Client.Networking.WebServer.GetGameInfoResult.GameUsers
  type: Property
  source:
    id: GameUsers
    path: ''
    startLine: 167494
  assemblies:
  - cs.temp.dll
  namespace: Winpeak.Client.Networking.WebServer
  syntax:
    content: public List<GameUser> GameUsers { get; }
    parameters: []
    return:
      type: System.Collections.Generic.List{Winpeak.Client.Networking.WebServer.GameUser}
    content.vb: Public ReadOnly Property GameUsers As List(Of GameUser)
  overload: Winpeak.Client.Networking.WebServer.GetGameInfoResult.GameUsers*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Winpeak.Client.Networking.WebServer.GetGameInfoResult.RequestsList
  commentId: P:Winpeak.Client.Networking.WebServer.GetGameInfoResult.RequestsList
  id: RequestsList
  parent: Winpeak.Client.Networking.WebServer.GetGameInfoResult
  langs:
  - csharp
  - vb
  name: RequestsList
  nameWithType: GetGameInfoResult.RequestsList
  fullName: Winpeak.Client.Networking.WebServer.GetGameInfoResult.RequestsList
  type: Property
  source:
    id: RequestsList
    path: ''
    startLine: 167495
  assemblies:
  - cs.temp.dll
  namespace: Winpeak.Client.Networking.WebServer
  syntax:
    content: public List<GameRequest> RequestsList { get; }
    parameters: []
    return:
      type: System.Collections.Generic.List{Winpeak.Client.Networking.WebServer.GameRequest}
    content.vb: Public ReadOnly Property RequestsList As List(Of GameRequest)
  overload: Winpeak.Client.Networking.WebServer.GetGameInfoResult.RequestsList*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Winpeak.Client.Networking.WebServer.GetGameInfoResult.GameServer
  commentId: P:Winpeak.Client.Networking.WebServer.GetGameInfoResult.GameServer
  id: GameServer
  parent: Winpeak.Client.Networking.WebServer.GetGameInfoResult
  langs:
  - csharp
  - vb
  name: GameServer
  nameWithType: GetGameInfoResult.GameServer
  fullName: Winpeak.Client.Networking.WebServer.GetGameInfoResult.GameServer
  type: Property
  source:
    id: GameServer
    path: ''
    startLine: 167496
  assemblies:
  - cs.temp.dll
  namespace: Winpeak.Client.Networking.WebServer
  syntax:
    content: public GameServerInfo GameServer { get; }
    parameters: []
    return:
      type: Winpeak.Client.Networking.WebServer.GameServerInfo
    content.vb: Public ReadOnly Property GameServer As GameServerInfo
  overload: Winpeak.Client.Networking.WebServer.GetGameInfoResult.GameServer*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Winpeak.Client.Networking.WebServer.GetGameInfoResult.HandleResponse(HTTPResponse)
  commentId: M:Winpeak.Client.Networking.WebServer.GetGameInfoResult.HandleResponse(HTTPResponse)
  id: HandleResponse(HTTPResponse)
  parent: Winpeak.Client.Networking.WebServer.GetGameInfoResult
  langs:
  - csharp
  - vb
  name: HandleResponse(HTTPResponse)
  nameWithType: GetGameInfoResult.HandleResponse(HTTPResponse)
  fullName: Winpeak.Client.Networking.WebServer.GetGameInfoResult.HandleResponse(HTTPResponse)
  type: Method
  source:
    id: HandleResponse
    path: ''
    startLine: 167498
  assemblies:
  - cs.temp.dll
  namespace: Winpeak.Client.Networking.WebServer
  syntax:
    content: protected override void HandleResponse(HTTPResponse response)
    parameters:
    - id: response
      type: HTTPResponse
    content.vb: Protected Overrides Sub HandleResponse(response As HTTPResponse)
  overridden: Winpeak.Client.Networking.WebServer.WebResult.HandleResponse(HTTPResponse)
  overload: Winpeak.Client.Networking.WebServer.GetGameInfoResult.HandleResponse*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
references:
- uid: Winpeak.Client.Networking.WebServer
  commentId: N:Winpeak.Client.Networking.WebServer
  name: Winpeak.Client.Networking.WebServer
  nameWithType: Winpeak.Client.Networking.WebServer
  fullName: Winpeak.Client.Networking.WebServer
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Winpeak.Client.Networking.WebServer.WebResult
  commentId: T:Winpeak.Client.Networking.WebServer.WebResult
  parent: Winpeak.Client.Networking.WebServer
  name: WebResult
  nameWithType: WebResult
  fullName: Winpeak.Client.Networking.WebServer.WebResult
- uid: Winpeak.Client.Networking.WebServer.IWebResult
  commentId: T:Winpeak.Client.Networking.WebServer.IWebResult
  parent: Winpeak.Client.Networking.WebServer
  name: IWebResult
  nameWithType: IWebResult
  fullName: Winpeak.Client.Networking.WebServer.IWebResult
- uid: Winpeak.Client.Networking.WebServer.WebResult.Error
  commentId: F:Winpeak.Client.Networking.WebServer.WebResult.Error
  parent: Winpeak.Client.Networking.WebServer.WebResult
  name: Error
  nameWithType: WebResult.Error
  fullName: Winpeak.Client.Networking.WebServer.WebResult.Error
- uid: Winpeak.Client.Networking.WebServer.WebResult.m_state
  commentId: F:Winpeak.Client.Networking.WebServer.WebResult.m_state
  parent: Winpeak.Client.Networking.WebServer.WebResult
  name: m_state
  nameWithType: WebResult.m_state
  fullName: Winpeak.Client.Networking.WebServer.WebResult.m_state
- uid: Winpeak.Client.Networking.WebServer.WebResult.m_needAuth
  commentId: F:Winpeak.Client.Networking.WebServer.WebResult.m_needAuth
  parent: Winpeak.Client.Networking.WebServer.WebResult
  name: m_needAuth
  nameWithType: WebResult.m_needAuth
  fullName: Winpeak.Client.Networking.WebServer.WebResult.m_needAuth
- uid: Winpeak.Client.Networking.WebServer.WebResult.m_error
  commentId: F:Winpeak.Client.Networking.WebServer.WebResult.m_error
  parent: Winpeak.Client.Networking.WebServer.WebResult
  name: m_error
  nameWithType: WebResult.m_error
  fullName: Winpeak.Client.Networking.WebServer.WebResult.m_error
- uid: Winpeak.Client.Networking.WebServer.WebResult.SetResponse(HTTPResponse)
  commentId: M:Winpeak.Client.Networking.WebServer.WebResult.SetResponse(HTTPResponse)
  parent: Winpeak.Client.Networking.WebServer.WebResult
  isExternal: true
  name: SetResponse(HTTPResponse)
  nameWithType: WebResult.SetResponse(HTTPResponse)
  fullName: Winpeak.Client.Networking.WebServer.WebResult.SetResponse(HTTPResponse)
  spec.csharp:
  - uid: Winpeak.Client.Networking.WebServer.WebResult.SetResponse(HTTPResponse)
    name: SetResponse
    nameWithType: WebResult.SetResponse
    fullName: Winpeak.Client.Networking.WebServer.WebResult.SetResponse
  - name: (
    nameWithType: (
    fullName: (
  - uid: HTTPResponse
    name: HTTPResponse
    nameWithType: HTTPResponse
    fullName: HTTPResponse
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Winpeak.Client.Networking.WebServer.WebResult.SetResponse(HTTPResponse)
    name: SetResponse
    nameWithType: WebResult.SetResponse
    fullName: Winpeak.Client.Networking.WebServer.WebResult.SetResponse
  - name: (
    nameWithType: (
    fullName: (
  - uid: HTTPResponse
    name: HTTPResponse
    nameWithType: HTTPResponse
    fullName: HTTPResponse
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Winpeak.Client.Networking.WebServer.WebResult.IsSuccessCallback
  commentId: P:Winpeak.Client.Networking.WebServer.WebResult.IsSuccessCallback
  parent: Winpeak.Client.Networking.WebServer.WebResult
  name: IsSuccessCallback
  nameWithType: WebResult.IsSuccessCallback
  fullName: Winpeak.Client.Networking.WebServer.WebResult.IsSuccessCallback
- uid: Winpeak.Client.Networking.WebServer.WebResult.HasError
  commentId: P:Winpeak.Client.Networking.WebServer.WebResult.HasError
  parent: Winpeak.Client.Networking.WebServer.WebResult
  name: HasError
  nameWithType: WebResult.HasError
  fullName: Winpeak.Client.Networking.WebServer.WebResult.HasError
- uid: Winpeak.Client.Networking.WebServer.WebResult.DataAsByteArray
  commentId: P:Winpeak.Client.Networking.WebServer.WebResult.DataAsByteArray
  parent: Winpeak.Client.Networking.WebServer.WebResult
  name: DataAsByteArray
  nameWithType: WebResult.DataAsByteArray
  fullName: Winpeak.Client.Networking.WebServer.WebResult.DataAsByteArray
- uid: Winpeak.Client.Networking.WebServer.WebResult.DataAsTexture
  commentId: P:Winpeak.Client.Networking.WebServer.WebResult.DataAsTexture
  parent: Winpeak.Client.Networking.WebServer.WebResult
  name: DataAsTexture
  nameWithType: WebResult.DataAsTexture
  fullName: Winpeak.Client.Networking.WebServer.WebResult.DataAsTexture
- uid: Winpeak.Client.Networking.WebServer.WebResult.StatusCode
  commentId: P:Winpeak.Client.Networking.WebServer.WebResult.StatusCode
  parent: Winpeak.Client.Networking.WebServer.WebResult
  name: StatusCode
  nameWithType: WebResult.StatusCode
  fullName: Winpeak.Client.Networking.WebServer.WebResult.StatusCode
- uid: Winpeak.Client.Networking.WebServer.WebResult.DataAsText
  commentId: P:Winpeak.Client.Networking.WebServer.WebResult.DataAsText
  parent: Winpeak.Client.Networking.WebServer.WebResult
  name: DataAsText
  nameWithType: WebResult.DataAsText
  fullName: Winpeak.Client.Networking.WebServer.WebResult.DataAsText
- uid: Winpeak.Client.Networking.WebServer.WebResult.Message
  commentId: P:Winpeak.Client.Networking.WebServer.WebResult.Message
  parent: Winpeak.Client.Networking.WebServer.WebResult
  name: Message
  nameWithType: WebResult.Message
  fullName: Winpeak.Client.Networking.WebServer.WebResult.Message
- uid: Winpeak.Client.Networking.WebServer.WebResult.State
  commentId: P:Winpeak.Client.Networking.WebServer.WebResult.State
  parent: Winpeak.Client.Networking.WebServer.WebResult
  name: State
  nameWithType: WebResult.State
  fullName: Winpeak.Client.Networking.WebServer.WebResult.State
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Winpeak.Client.Networking.WebServer.GetGameInfoResult.Game*
  commentId: Overload:Winpeak.Client.Networking.WebServer.GetGameInfoResult.Game
  name: Game
  nameWithType: GetGameInfoResult.Game
  fullName: Winpeak.Client.Networking.WebServer.GetGameInfoResult.Game
- uid: Winpeak.Client.Networking.WebServer.GameInfo
  commentId: T:Winpeak.Client.Networking.WebServer.GameInfo
  parent: Winpeak.Client.Networking.WebServer
  name: GameInfo
  nameWithType: GameInfo
  fullName: Winpeak.Client.Networking.WebServer.GameInfo
- uid: Winpeak.Client.Networking.WebServer.GetGameInfoResult.GameUsers*
  commentId: Overload:Winpeak.Client.Networking.WebServer.GetGameInfoResult.GameUsers
  name: GameUsers
  nameWithType: GetGameInfoResult.GameUsers
  fullName: Winpeak.Client.Networking.WebServer.GetGameInfoResult.GameUsers
- uid: System.Collections.Generic.List{Winpeak.Client.Networking.WebServer.GameUser}
  commentId: T:System.Collections.Generic.List{Winpeak.Client.Networking.WebServer.GameUser}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<GameUser>
  nameWithType: List<GameUser>
  fullName: System.Collections.Generic.List<Winpeak.Client.Networking.WebServer.GameUser>
  nameWithType.vb: List(Of GameUser)
  fullName.vb: System.Collections.Generic.List(Of Winpeak.Client.Networking.WebServer.GameUser)
  name.vb: List(Of GameUser)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Winpeak.Client.Networking.WebServer.GameUser
    name: GameUser
    nameWithType: GameUser
    fullName: Winpeak.Client.Networking.WebServer.GameUser
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Winpeak.Client.Networking.WebServer.GameUser
    name: GameUser
    nameWithType: GameUser
    fullName: Winpeak.Client.Networking.WebServer.GameUser
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Winpeak.Client.Networking.WebServer.GetGameInfoResult.RequestsList*
  commentId: Overload:Winpeak.Client.Networking.WebServer.GetGameInfoResult.RequestsList
  name: RequestsList
  nameWithType: GetGameInfoResult.RequestsList
  fullName: Winpeak.Client.Networking.WebServer.GetGameInfoResult.RequestsList
- uid: System.Collections.Generic.List{Winpeak.Client.Networking.WebServer.GameRequest}
  commentId: T:System.Collections.Generic.List{Winpeak.Client.Networking.WebServer.GameRequest}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<GameRequest>
  nameWithType: List<GameRequest>
  fullName: System.Collections.Generic.List<Winpeak.Client.Networking.WebServer.GameRequest>
  nameWithType.vb: List(Of GameRequest)
  fullName.vb: System.Collections.Generic.List(Of Winpeak.Client.Networking.WebServer.GameRequest)
  name.vb: List(Of GameRequest)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Winpeak.Client.Networking.WebServer.GameRequest
    name: GameRequest
    nameWithType: GameRequest
    fullName: Winpeak.Client.Networking.WebServer.GameRequest
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Winpeak.Client.Networking.WebServer.GameRequest
    name: GameRequest
    nameWithType: GameRequest
    fullName: Winpeak.Client.Networking.WebServer.GameRequest
  - name: )
    nameWithType: )
    fullName: )
- uid: Winpeak.Client.Networking.WebServer.GetGameInfoResult.GameServer*
  commentId: Overload:Winpeak.Client.Networking.WebServer.GetGameInfoResult.GameServer
  name: GameServer
  nameWithType: GetGameInfoResult.GameServer
  fullName: Winpeak.Client.Networking.WebServer.GetGameInfoResult.GameServer
- uid: Winpeak.Client.Networking.WebServer.GameServerInfo
  commentId: T:Winpeak.Client.Networking.WebServer.GameServerInfo
  parent: Winpeak.Client.Networking.WebServer
  name: GameServerInfo
  nameWithType: GameServerInfo
  fullName: Winpeak.Client.Networking.WebServer.GameServerInfo
- uid: Winpeak.Client.Networking.WebServer.WebResult.HandleResponse(HTTPResponse)
  commentId: M:Winpeak.Client.Networking.WebServer.WebResult.HandleResponse(HTTPResponse)
  parent: Winpeak.Client.Networking.WebServer.WebResult
  isExternal: true
  name: HandleResponse(HTTPResponse)
  nameWithType: WebResult.HandleResponse(HTTPResponse)
  fullName: Winpeak.Client.Networking.WebServer.WebResult.HandleResponse(HTTPResponse)
  spec.csharp:
  - uid: Winpeak.Client.Networking.WebServer.WebResult.HandleResponse(HTTPResponse)
    name: HandleResponse
    nameWithType: WebResult.HandleResponse
    fullName: Winpeak.Client.Networking.WebServer.WebResult.HandleResponse
  - name: (
    nameWithType: (
    fullName: (
  - uid: HTTPResponse
    name: HTTPResponse
    nameWithType: HTTPResponse
    fullName: HTTPResponse
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Winpeak.Client.Networking.WebServer.WebResult.HandleResponse(HTTPResponse)
    name: HandleResponse
    nameWithType: WebResult.HandleResponse
    fullName: Winpeak.Client.Networking.WebServer.WebResult.HandleResponse
  - name: (
    nameWithType: (
    fullName: (
  - uid: HTTPResponse
    name: HTTPResponse
    nameWithType: HTTPResponse
    fullName: HTTPResponse
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Winpeak.Client.Networking.WebServer.GetGameInfoResult.HandleResponse*
  commentId: Overload:Winpeak.Client.Networking.WebServer.GetGameInfoResult.HandleResponse
  name: HandleResponse
  nameWithType: GetGameInfoResult.HandleResponse
  fullName: Winpeak.Client.Networking.WebServer.GetGameInfoResult.HandleResponse
- uid: HTTPResponse
  isExternal: true
  name: HTTPResponse
  nameWithType: HTTPResponse
  fullName: HTTPResponse
