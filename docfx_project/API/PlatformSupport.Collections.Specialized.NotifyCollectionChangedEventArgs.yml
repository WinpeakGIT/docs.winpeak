### YamlMime:ManagedReference
items:
- uid: PlatformSupport.Collections.Specialized.NotifyCollectionChangedEventArgs
  commentId: T:PlatformSupport.Collections.Specialized.NotifyCollectionChangedEventArgs
  id: NotifyCollectionChangedEventArgs
  parent: PlatformSupport.Collections.Specialized
  children:
  - PlatformSupport.Collections.Specialized.NotifyCollectionChangedEventArgs.#ctor(PlatformSupport.Collections.Specialized.NotifyCollectionChangedAction)
  - PlatformSupport.Collections.Specialized.NotifyCollectionChangedEventArgs.#ctor(PlatformSupport.Collections.Specialized.NotifyCollectionChangedAction,System.Collections.IList)
  - PlatformSupport.Collections.Specialized.NotifyCollectionChangedEventArgs.#ctor(PlatformSupport.Collections.Specialized.NotifyCollectionChangedAction,System.Collections.IList,System.Collections.IList)
  - PlatformSupport.Collections.Specialized.NotifyCollectionChangedEventArgs.#ctor(PlatformSupport.Collections.Specialized.NotifyCollectionChangedAction,System.Collections.IList,System.Collections.IList,System.Int32)
  - PlatformSupport.Collections.Specialized.NotifyCollectionChangedEventArgs.#ctor(PlatformSupport.Collections.Specialized.NotifyCollectionChangedAction,System.Collections.IList,System.Int32)
  - PlatformSupport.Collections.Specialized.NotifyCollectionChangedEventArgs.#ctor(PlatformSupport.Collections.Specialized.NotifyCollectionChangedAction,System.Collections.IList,System.Int32,System.Int32)
  - PlatformSupport.Collections.Specialized.NotifyCollectionChangedEventArgs.#ctor(PlatformSupport.Collections.Specialized.NotifyCollectionChangedAction,System.Object)
  - PlatformSupport.Collections.Specialized.NotifyCollectionChangedEventArgs.#ctor(PlatformSupport.Collections.Specialized.NotifyCollectionChangedAction,System.Object,System.Int32)
  - PlatformSupport.Collections.Specialized.NotifyCollectionChangedEventArgs.#ctor(PlatformSupport.Collections.Specialized.NotifyCollectionChangedAction,System.Object,System.Int32,System.Int32)
  - PlatformSupport.Collections.Specialized.NotifyCollectionChangedEventArgs.#ctor(PlatformSupport.Collections.Specialized.NotifyCollectionChangedAction,System.Object,System.Object)
  - PlatformSupport.Collections.Specialized.NotifyCollectionChangedEventArgs.#ctor(PlatformSupport.Collections.Specialized.NotifyCollectionChangedAction,System.Object,System.Object,System.Int32)
  - PlatformSupport.Collections.Specialized.NotifyCollectionChangedEventArgs.Action
  - PlatformSupport.Collections.Specialized.NotifyCollectionChangedEventArgs.NewItems
  - PlatformSupport.Collections.Specialized.NotifyCollectionChangedEventArgs.NewStartingIndex
  - PlatformSupport.Collections.Specialized.NotifyCollectionChangedEventArgs.OldItems
  - PlatformSupport.Collections.Specialized.NotifyCollectionChangedEventArgs.OldStartingIndex
  langs:
  - csharp
  - vb
  name: NotifyCollectionChangedEventArgs
  nameWithType: NotifyCollectionChangedEventArgs
  fullName: PlatformSupport.Collections.Specialized.NotifyCollectionChangedEventArgs
  type: Class
  source:
    id: NotifyCollectionChangedEventArgs
    path: ''
    startLine: 168332
  assemblies:
  - cs.temp.dll
  namespace: PlatformSupport.Collections.Specialized
  summary: "\nArguments for the CollectionChanged event.\nA collection that supports INotifyCollectionChangedThis raises this event\nwhenever an item is added or removed, or when the contents of the collection\nchanges dramatically.\n"
  example: []
  syntax:
    content: 'public class NotifyCollectionChangedEventArgs : EventArgs'
    content.vb: >-
      Public Class NotifyCollectionChangedEventArgs
          Inherits EventArgs
  inheritance:
  - System.Object
  - System.EventArgs
  inheritedMembers:
  - System.EventArgs.Empty
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ToString
  - System.Object.ReferenceEquals(System.Object,System.Object)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: PlatformSupport.Collections.Specialized.NotifyCollectionChangedEventArgs.#ctor(PlatformSupport.Collections.Specialized.NotifyCollectionChangedAction)
  commentId: M:PlatformSupport.Collections.Specialized.NotifyCollectionChangedEventArgs.#ctor(PlatformSupport.Collections.Specialized.NotifyCollectionChangedAction)
  id: '#ctor(PlatformSupport.Collections.Specialized.NotifyCollectionChangedAction)'
  parent: PlatformSupport.Collections.Specialized.NotifyCollectionChangedEventArgs
  langs:
  - csharp
  - vb
  name: NotifyCollectionChangedEventArgs(NotifyCollectionChangedAction)
  nameWithType: NotifyCollectionChangedEventArgs.NotifyCollectionChangedEventArgs(NotifyCollectionChangedAction)
  fullName: PlatformSupport.Collections.Specialized.NotifyCollectionChangedEventArgs.NotifyCollectionChangedEventArgs(PlatformSupport.Collections.Specialized.NotifyCollectionChangedAction)
  type: Constructor
  source:
    id: .ctor
    path: ''
    startLine: 168344
  assemblies:
  - cs.temp.dll
  namespace: PlatformSupport.Collections.Specialized
  summary: "\nConstruct a NotifyCollectionChangedEventArgs that describes a reset change.\n"
  example: []
  syntax:
    content: public NotifyCollectionChangedEventArgs(NotifyCollectionChangedAction action)
    parameters:
    - id: action
      type: PlatformSupport.Collections.Specialized.NotifyCollectionChangedAction
      description: The action that caused the event (must be Reset).
    content.vb: Public Sub New(action As NotifyCollectionChangedAction)
  overload: PlatformSupport.Collections.Specialized.NotifyCollectionChangedEventArgs.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: PlatformSupport.Collections.Specialized.NotifyCollectionChangedEventArgs.#ctor(PlatformSupport.Collections.Specialized.NotifyCollectionChangedAction,System.Object)
  commentId: M:PlatformSupport.Collections.Specialized.NotifyCollectionChangedEventArgs.#ctor(PlatformSupport.Collections.Specialized.NotifyCollectionChangedAction,System.Object)
  id: '#ctor(PlatformSupport.Collections.Specialized.NotifyCollectionChangedAction,System.Object)'
  parent: PlatformSupport.Collections.Specialized.NotifyCollectionChangedEventArgs
  langs:
  - csharp
  - vb
  name: NotifyCollectionChangedEventArgs(NotifyCollectionChangedAction, Object)
  nameWithType: NotifyCollectionChangedEventArgs.NotifyCollectionChangedEventArgs(NotifyCollectionChangedAction, Object)
  fullName: PlatformSupport.Collections.Specialized.NotifyCollectionChangedEventArgs.NotifyCollectionChangedEventArgs(PlatformSupport.Collections.Specialized.NotifyCollectionChangedAction, System.Object)
  type: Constructor
  source:
    id: .ctor
    path: ''
    startLine: 168357
  assemblies:
  - cs.temp.dll
  namespace: PlatformSupport.Collections.Specialized
  summary: "\nConstruct a NotifyCollectionChangedEventArgs that describes a one-item change.\n"
  example: []
  syntax:
    content: public NotifyCollectionChangedEventArgs(NotifyCollectionChangedAction action, object changedItem)
    parameters:
    - id: action
      type: PlatformSupport.Collections.Specialized.NotifyCollectionChangedAction
      description: The action that caused the event; can only be Reset, Add or Remove action.
    - id: changedItem
      type: System.Object
      description: The item affected by the change.
    content.vb: Public Sub New(action As NotifyCollectionChangedAction, changedItem As Object)
  overload: PlatformSupport.Collections.Specialized.NotifyCollectionChangedEventArgs.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: PlatformSupport.Collections.Specialized.NotifyCollectionChangedEventArgs.#ctor(PlatformSupport.Collections.Specialized.NotifyCollectionChangedAction,System.Object,System.Int32)
  commentId: M:PlatformSupport.Collections.Specialized.NotifyCollectionChangedEventArgs.#ctor(PlatformSupport.Collections.Specialized.NotifyCollectionChangedAction,System.Object,System.Int32)
  id: '#ctor(PlatformSupport.Collections.Specialized.NotifyCollectionChangedAction,System.Object,System.Int32)'
  parent: PlatformSupport.Collections.Specialized.NotifyCollectionChangedEventArgs
  langs:
  - csharp
  - vb
  name: NotifyCollectionChangedEventArgs(NotifyCollectionChangedAction, Object, Int32)
  nameWithType: NotifyCollectionChangedEventArgs.NotifyCollectionChangedEventArgs(NotifyCollectionChangedAction, Object, Int32)
  fullName: PlatformSupport.Collections.Specialized.NotifyCollectionChangedEventArgs.NotifyCollectionChangedEventArgs(PlatformSupport.Collections.Specialized.NotifyCollectionChangedAction, System.Object, System.Int32)
  type: Constructor
  source:
    id: .ctor
    path: ''
    startLine: 168382
  assemblies:
  - cs.temp.dll
  namespace: PlatformSupport.Collections.Specialized
  summary: "\nConstruct a NotifyCollectionChangedEventArgs that describes a one-item change.\n"
  example: []
  syntax:
    content: public NotifyCollectionChangedEventArgs(NotifyCollectionChangedAction action, object changedItem, int index)
    parameters:
    - id: action
      type: PlatformSupport.Collections.Specialized.NotifyCollectionChangedAction
      description: The action that caused the event.
    - id: changedItem
      type: System.Object
      description: The item affected by the change.
    - id: index
      type: System.Int32
      description: The index where the change occurred.
    content.vb: Public Sub New(action As NotifyCollectionChangedAction, changedItem As Object, index As Integer)
  overload: PlatformSupport.Collections.Specialized.NotifyCollectionChangedEventArgs.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: PlatformSupport.Collections.Specialized.NotifyCollectionChangedEventArgs.#ctor(PlatformSupport.Collections.Specialized.NotifyCollectionChangedAction,System.Collections.IList)
  commentId: M:PlatformSupport.Collections.Specialized.NotifyCollectionChangedEventArgs.#ctor(PlatformSupport.Collections.Specialized.NotifyCollectionChangedAction,System.Collections.IList)
  id: '#ctor(PlatformSupport.Collections.Specialized.NotifyCollectionChangedAction,System.Collections.IList)'
  parent: PlatformSupport.Collections.Specialized.NotifyCollectionChangedEventArgs
  langs:
  - csharp
  - vb
  name: NotifyCollectionChangedEventArgs(NotifyCollectionChangedAction, IList)
  nameWithType: NotifyCollectionChangedEventArgs.NotifyCollectionChangedEventArgs(NotifyCollectionChangedAction, IList)
  fullName: PlatformSupport.Collections.Specialized.NotifyCollectionChangedEventArgs.NotifyCollectionChangedEventArgs(PlatformSupport.Collections.Specialized.NotifyCollectionChangedAction, System.Collections.IList)
  type: Constructor
  source:
    id: .ctor
    path: ''
    startLine: 168408
  assemblies:
  - cs.temp.dll
  namespace: PlatformSupport.Collections.Specialized
  summary: "\nConstruct a NotifyCollectionChangedEventArgs that describes a multi-item change.\n"
  example: []
  syntax:
    content: public NotifyCollectionChangedEventArgs(NotifyCollectionChangedAction action, IList changedItems)
    parameters:
    - id: action
      type: PlatformSupport.Collections.Specialized.NotifyCollectionChangedAction
      description: The action that caused the event.
    - id: changedItems
      type: System.Collections.IList
      description: The items affected by the change.
    content.vb: Public Sub New(action As NotifyCollectionChangedAction, changedItems As IList)
  overload: PlatformSupport.Collections.Specialized.NotifyCollectionChangedEventArgs.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: PlatformSupport.Collections.Specialized.NotifyCollectionChangedEventArgs.#ctor(PlatformSupport.Collections.Specialized.NotifyCollectionChangedAction,System.Collections.IList,System.Int32)
  commentId: M:PlatformSupport.Collections.Specialized.NotifyCollectionChangedEventArgs.#ctor(PlatformSupport.Collections.Specialized.NotifyCollectionChangedAction,System.Collections.IList,System.Int32)
  id: '#ctor(PlatformSupport.Collections.Specialized.NotifyCollectionChangedAction,System.Collections.IList,System.Int32)'
  parent: PlatformSupport.Collections.Specialized.NotifyCollectionChangedEventArgs
  langs:
  - csharp
  - vb
  name: NotifyCollectionChangedEventArgs(NotifyCollectionChangedAction, IList, Int32)
  nameWithType: NotifyCollectionChangedEventArgs.NotifyCollectionChangedEventArgs(NotifyCollectionChangedAction, IList, Int32)
  fullName: PlatformSupport.Collections.Specialized.NotifyCollectionChangedEventArgs.NotifyCollectionChangedEventArgs(PlatformSupport.Collections.Specialized.NotifyCollectionChangedAction, System.Collections.IList, System.Int32)
  type: Constructor
  source:
    id: .ctor
    path: ''
    startLine: 168436
  assemblies:
  - cs.temp.dll
  namespace: PlatformSupport.Collections.Specialized
  summary: "\nConstruct a NotifyCollectionChangedEventArgs that describes a multi-item change (or a reset).\n"
  example: []
  syntax:
    content: public NotifyCollectionChangedEventArgs(NotifyCollectionChangedAction action, IList changedItems, int startingIndex)
    parameters:
    - id: action
      type: PlatformSupport.Collections.Specialized.NotifyCollectionChangedAction
      description: The action that caused the event.
    - id: changedItems
      type: System.Collections.IList
      description: The items affected by the change.
    - id: startingIndex
      type: System.Int32
      description: The index where the change occurred.
    content.vb: Public Sub New(action As NotifyCollectionChangedAction, changedItems As IList, startingIndex As Integer)
  overload: PlatformSupport.Collections.Specialized.NotifyCollectionChangedEventArgs.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: PlatformSupport.Collections.Specialized.NotifyCollectionChangedEventArgs.#ctor(PlatformSupport.Collections.Specialized.NotifyCollectionChangedAction,System.Object,System.Object)
  commentId: M:PlatformSupport.Collections.Specialized.NotifyCollectionChangedEventArgs.#ctor(PlatformSupport.Collections.Specialized.NotifyCollectionChangedAction,System.Object,System.Object)
  id: '#ctor(PlatformSupport.Collections.Specialized.NotifyCollectionChangedAction,System.Object,System.Object)'
  parent: PlatformSupport.Collections.Specialized.NotifyCollectionChangedEventArgs
  langs:
  - csharp
  - vb
  name: NotifyCollectionChangedEventArgs(NotifyCollectionChangedAction, Object, Object)
  nameWithType: NotifyCollectionChangedEventArgs.NotifyCollectionChangedEventArgs(NotifyCollectionChangedAction, Object, Object)
  fullName: PlatformSupport.Collections.Specialized.NotifyCollectionChangedEventArgs.NotifyCollectionChangedEventArgs(PlatformSupport.Collections.Specialized.NotifyCollectionChangedAction, System.Object, System.Object)
  type: Constructor
  source:
    id: .ctor
    path: ''
    startLine: 168468
  assemblies:
  - cs.temp.dll
  namespace: PlatformSupport.Collections.Specialized
  summary: "\nConstruct a NotifyCollectionChangedEventArgs that describes a one-item Replace event.\n"
  example: []
  syntax:
    content: public NotifyCollectionChangedEventArgs(NotifyCollectionChangedAction action, object newItem, object oldItem)
    parameters:
    - id: action
      type: PlatformSupport.Collections.Specialized.NotifyCollectionChangedAction
      description: Can only be a Replace action.
    - id: newItem
      type: System.Object
      description: The new item replacing the original item.
    - id: oldItem
      type: System.Object
      description: The original item that is replaced.
    content.vb: Public Sub New(action As NotifyCollectionChangedAction, newItem As Object, oldItem As Object)
  overload: PlatformSupport.Collections.Specialized.NotifyCollectionChangedEventArgs.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: PlatformSupport.Collections.Specialized.NotifyCollectionChangedEventArgs.#ctor(PlatformSupport.Collections.Specialized.NotifyCollectionChangedAction,System.Object,System.Object,System.Int32)
  commentId: M:PlatformSupport.Collections.Specialized.NotifyCollectionChangedEventArgs.#ctor(PlatformSupport.Collections.Specialized.NotifyCollectionChangedAction,System.Object,System.Object,System.Int32)
  id: '#ctor(PlatformSupport.Collections.Specialized.NotifyCollectionChangedAction,System.Object,System.Object,System.Int32)'
  parent: PlatformSupport.Collections.Specialized.NotifyCollectionChangedEventArgs
  langs:
  - csharp
  - vb
  name: NotifyCollectionChangedEventArgs(NotifyCollectionChangedAction, Object, Object, Int32)
  nameWithType: NotifyCollectionChangedEventArgs.NotifyCollectionChangedEventArgs(NotifyCollectionChangedAction, Object, Object, Int32)
  fullName: PlatformSupport.Collections.Specialized.NotifyCollectionChangedEventArgs.NotifyCollectionChangedEventArgs(PlatformSupport.Collections.Specialized.NotifyCollectionChangedAction, System.Object, System.Object, System.Int32)
  type: Constructor
  source:
    id: .ctor
    path: ''
    startLine: 168483
  assemblies:
  - cs.temp.dll
  namespace: PlatformSupport.Collections.Specialized
  summary: "\nConstruct a NotifyCollectionChangedEventArgs that describes a one-item Replace event.\n"
  example: []
  syntax:
    content: public NotifyCollectionChangedEventArgs(NotifyCollectionChangedAction action, object newItem, object oldItem, int index)
    parameters:
    - id: action
      type: PlatformSupport.Collections.Specialized.NotifyCollectionChangedAction
      description: Can only be a Replace action.
    - id: newItem
      type: System.Object
      description: The new item replacing the original item.
    - id: oldItem
      type: System.Object
      description: The original item that is replaced.
    - id: index
      type: System.Int32
      description: The index of the item being replaced.
    content.vb: Public Sub New(action As NotifyCollectionChangedAction, newItem As Object, oldItem As Object, index As Integer)
  overload: PlatformSupport.Collections.Specialized.NotifyCollectionChangedEventArgs.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: PlatformSupport.Collections.Specialized.NotifyCollectionChangedEventArgs.#ctor(PlatformSupport.Collections.Specialized.NotifyCollectionChangedAction,System.Collections.IList,System.Collections.IList)
  commentId: M:PlatformSupport.Collections.Specialized.NotifyCollectionChangedEventArgs.#ctor(PlatformSupport.Collections.Specialized.NotifyCollectionChangedAction,System.Collections.IList,System.Collections.IList)
  id: '#ctor(PlatformSupport.Collections.Specialized.NotifyCollectionChangedAction,System.Collections.IList,System.Collections.IList)'
  parent: PlatformSupport.Collections.Specialized.NotifyCollectionChangedEventArgs
  langs:
  - csharp
  - vb
  name: NotifyCollectionChangedEventArgs(NotifyCollectionChangedAction, IList, IList)
  nameWithType: NotifyCollectionChangedEventArgs.NotifyCollectionChangedEventArgs(NotifyCollectionChangedAction, IList, IList)
  fullName: PlatformSupport.Collections.Specialized.NotifyCollectionChangedEventArgs.NotifyCollectionChangedEventArgs(PlatformSupport.Collections.Specialized.NotifyCollectionChangedAction, System.Collections.IList, System.Collections.IList)
  type: Constructor
  source:
    id: .ctor
    path: ''
    startLine: 168497
  assemblies:
  - cs.temp.dll
  namespace: PlatformSupport.Collections.Specialized
  summary: "\nConstruct a NotifyCollectionChangedEventArgs that describes a multi-item Replace event.\n"
  example: []
  syntax:
    content: public NotifyCollectionChangedEventArgs(NotifyCollectionChangedAction action, IList newItems, IList oldItems)
    parameters:
    - id: action
      type: PlatformSupport.Collections.Specialized.NotifyCollectionChangedAction
      description: Can only be a Replace action.
    - id: newItems
      type: System.Collections.IList
      description: The new items replacing the original items.
    - id: oldItems
      type: System.Collections.IList
      description: The original items that are replaced.
    content.vb: Public Sub New(action As NotifyCollectionChangedAction, newItems As IList, oldItems As IList)
  overload: PlatformSupport.Collections.Specialized.NotifyCollectionChangedEventArgs.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: PlatformSupport.Collections.Specialized.NotifyCollectionChangedEventArgs.#ctor(PlatformSupport.Collections.Specialized.NotifyCollectionChangedAction,System.Collections.IList,System.Collections.IList,System.Int32)
  commentId: M:PlatformSupport.Collections.Specialized.NotifyCollectionChangedEventArgs.#ctor(PlatformSupport.Collections.Specialized.NotifyCollectionChangedAction,System.Collections.IList,System.Collections.IList,System.Int32)
  id: '#ctor(PlatformSupport.Collections.Specialized.NotifyCollectionChangedAction,System.Collections.IList,System.Collections.IList,System.Int32)'
  parent: PlatformSupport.Collections.Specialized.NotifyCollectionChangedEventArgs
  langs:
  - csharp
  - vb
  name: NotifyCollectionChangedEventArgs(NotifyCollectionChangedAction, IList, IList, Int32)
  nameWithType: NotifyCollectionChangedEventArgs.NotifyCollectionChangedEventArgs(NotifyCollectionChangedAction, IList, IList, Int32)
  fullName: PlatformSupport.Collections.Specialized.NotifyCollectionChangedEventArgs.NotifyCollectionChangedEventArgs(PlatformSupport.Collections.Specialized.NotifyCollectionChangedAction, System.Collections.IList, System.Collections.IList, System.Int32)
  type: Constructor
  source:
    id: .ctor
    path: ''
    startLine: 168516
  assemblies:
  - cs.temp.dll
  namespace: PlatformSupport.Collections.Specialized
  summary: "\nConstruct a NotifyCollectionChangedEventArgs that describes a multi-item Replace event.\n"
  example: []
  syntax:
    content: public NotifyCollectionChangedEventArgs(NotifyCollectionChangedAction action, IList newItems, IList oldItems, int startingIndex)
    parameters:
    - id: action
      type: PlatformSupport.Collections.Specialized.NotifyCollectionChangedAction
      description: Can only be a Replace action.
    - id: newItems
      type: System.Collections.IList
      description: The new items replacing the original items.
    - id: oldItems
      type: System.Collections.IList
      description: The original items that are replaced.
    - id: startingIndex
      type: System.Int32
      description: The starting index of the items being replaced.
    content.vb: Public Sub New(action As NotifyCollectionChangedAction, newItems As IList, oldItems As IList, startingIndex As Integer)
  overload: PlatformSupport.Collections.Specialized.NotifyCollectionChangedEventArgs.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: PlatformSupport.Collections.Specialized.NotifyCollectionChangedEventArgs.#ctor(PlatformSupport.Collections.Specialized.NotifyCollectionChangedAction,System.Object,System.Int32,System.Int32)
  commentId: M:PlatformSupport.Collections.Specialized.NotifyCollectionChangedEventArgs.#ctor(PlatformSupport.Collections.Specialized.NotifyCollectionChangedAction,System.Object,System.Int32,System.Int32)
  id: '#ctor(PlatformSupport.Collections.Specialized.NotifyCollectionChangedAction,System.Object,System.Int32,System.Int32)'
  parent: PlatformSupport.Collections.Specialized.NotifyCollectionChangedEventArgs
  langs:
  - csharp
  - vb
  name: NotifyCollectionChangedEventArgs(NotifyCollectionChangedAction, Object, Int32, Int32)
  nameWithType: NotifyCollectionChangedEventArgs.NotifyCollectionChangedEventArgs(NotifyCollectionChangedAction, Object, Int32, Int32)
  fullName: PlatformSupport.Collections.Specialized.NotifyCollectionChangedEventArgs.NotifyCollectionChangedEventArgs(PlatformSupport.Collections.Specialized.NotifyCollectionChangedAction, System.Object, System.Int32, System.Int32)
  type: Constructor
  source:
    id: .ctor
    path: ''
    startLine: 168535
  assemblies:
  - cs.temp.dll
  namespace: PlatformSupport.Collections.Specialized
  summary: "\nConstruct a NotifyCollectionChangedEventArgs that describes a one-item Move event.\n"
  example: []
  syntax:
    content: public NotifyCollectionChangedEventArgs(NotifyCollectionChangedAction action, object changedItem, int index, int oldIndex)
    parameters:
    - id: action
      type: PlatformSupport.Collections.Specialized.NotifyCollectionChangedAction
      description: Can only be a Move action.
    - id: changedItem
      type: System.Object
      description: The item affected by the change.
    - id: index
      type: System.Int32
      description: The new index for the changed item.
    - id: oldIndex
      type: System.Int32
      description: The old index for the changed item.
    content.vb: Public Sub New(action As NotifyCollectionChangedAction, changedItem As Object, index As Integer, oldIndex As Integer)
  overload: PlatformSupport.Collections.Specialized.NotifyCollectionChangedEventArgs.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: PlatformSupport.Collections.Specialized.NotifyCollectionChangedEventArgs.#ctor(PlatformSupport.Collections.Specialized.NotifyCollectionChangedAction,System.Collections.IList,System.Int32,System.Int32)
  commentId: M:PlatformSupport.Collections.Specialized.NotifyCollectionChangedEventArgs.#ctor(PlatformSupport.Collections.Specialized.NotifyCollectionChangedAction,System.Collections.IList,System.Int32,System.Int32)
  id: '#ctor(PlatformSupport.Collections.Specialized.NotifyCollectionChangedAction,System.Collections.IList,System.Int32,System.Int32)'
  parent: PlatformSupport.Collections.Specialized.NotifyCollectionChangedEventArgs
  langs:
  - csharp
  - vb
  name: NotifyCollectionChangedEventArgs(NotifyCollectionChangedAction, IList, Int32, Int32)
  nameWithType: NotifyCollectionChangedEventArgs.NotifyCollectionChangedEventArgs(NotifyCollectionChangedAction, IList, Int32, Int32)
  fullName: PlatformSupport.Collections.Specialized.NotifyCollectionChangedEventArgs.NotifyCollectionChangedEventArgs(PlatformSupport.Collections.Specialized.NotifyCollectionChangedAction, System.Collections.IList, System.Int32, System.Int32)
  type: Constructor
  source:
    id: .ctor
    path: ''
    startLine: 168553
  assemblies:
  - cs.temp.dll
  namespace: PlatformSupport.Collections.Specialized
  summary: "\nConstruct a NotifyCollectionChangedEventArgs that describes a multi-item Move event.\n"
  example: []
  syntax:
    content: public NotifyCollectionChangedEventArgs(NotifyCollectionChangedAction action, IList changedItems, int index, int oldIndex)
    parameters:
    - id: action
      type: PlatformSupport.Collections.Specialized.NotifyCollectionChangedAction
      description: The action that caused the event.
    - id: changedItems
      type: System.Collections.IList
      description: The items affected by the change.
    - id: index
      type: System.Int32
      description: The new index for the changed items.
    - id: oldIndex
      type: System.Int32
      description: The old index for the changed items.
    content.vb: Public Sub New(action As NotifyCollectionChangedAction, changedItems As IList, index As Integer, oldIndex As Integer)
  overload: PlatformSupport.Collections.Specialized.NotifyCollectionChangedEventArgs.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: PlatformSupport.Collections.Specialized.NotifyCollectionChangedEventArgs.Action
  commentId: P:PlatformSupport.Collections.Specialized.NotifyCollectionChangedEventArgs.Action
  id: Action
  parent: PlatformSupport.Collections.Specialized.NotifyCollectionChangedEventArgs
  langs:
  - csharp
  - vb
  name: Action
  nameWithType: NotifyCollectionChangedEventArgs.Action
  fullName: PlatformSupport.Collections.Specialized.NotifyCollectionChangedEventArgs.Action
  type: Property
  source:
    id: Action
    path: ''
    startLine: 168614
  assemblies:
  - cs.temp.dll
  namespace: PlatformSupport.Collections.Specialized
  summary: "\nThe action that caused the event.\n"
  example: []
  syntax:
    content: public NotifyCollectionChangedAction Action { get; }
    parameters: []
    return:
      type: PlatformSupport.Collections.Specialized.NotifyCollectionChangedAction
    content.vb: Public ReadOnly Property Action As NotifyCollectionChangedAction
  overload: PlatformSupport.Collections.Specialized.NotifyCollectionChangedEventArgs.Action*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: PlatformSupport.Collections.Specialized.NotifyCollectionChangedEventArgs.NewItems
  commentId: P:PlatformSupport.Collections.Specialized.NotifyCollectionChangedEventArgs.NewItems
  id: NewItems
  parent: PlatformSupport.Collections.Specialized.NotifyCollectionChangedEventArgs
  langs:
  - csharp
  - vb
  name: NewItems
  nameWithType: NotifyCollectionChangedEventArgs.NewItems
  fullName: PlatformSupport.Collections.Specialized.NotifyCollectionChangedEventArgs.NewItems
  type: Property
  source:
    id: NewItems
    path: ''
    startLine: 168622
  assemblies:
  - cs.temp.dll
  namespace: PlatformSupport.Collections.Specialized
  summary: "\nThe items affected by the change.\n"
  example: []
  syntax:
    content: public IList NewItems { get; }
    parameters: []
    return:
      type: System.Collections.IList
    content.vb: Public ReadOnly Property NewItems As IList
  overload: PlatformSupport.Collections.Specialized.NotifyCollectionChangedEventArgs.NewItems*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: PlatformSupport.Collections.Specialized.NotifyCollectionChangedEventArgs.OldItems
  commentId: P:PlatformSupport.Collections.Specialized.NotifyCollectionChangedEventArgs.OldItems
  id: OldItems
  parent: PlatformSupport.Collections.Specialized.NotifyCollectionChangedEventArgs
  langs:
  - csharp
  - vb
  name: OldItems
  nameWithType: NotifyCollectionChangedEventArgs.OldItems
  fullName: PlatformSupport.Collections.Specialized.NotifyCollectionChangedEventArgs.OldItems
  type: Property
  source:
    id: OldItems
    path: ''
    startLine: 168630
  assemblies:
  - cs.temp.dll
  namespace: PlatformSupport.Collections.Specialized
  summary: "\nThe old items affected by the change (for Replace events).\n"
  example: []
  syntax:
    content: public IList OldItems { get; }
    parameters: []
    return:
      type: System.Collections.IList
    content.vb: Public ReadOnly Property OldItems As IList
  overload: PlatformSupport.Collections.Specialized.NotifyCollectionChangedEventArgs.OldItems*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: PlatformSupport.Collections.Specialized.NotifyCollectionChangedEventArgs.NewStartingIndex
  commentId: P:PlatformSupport.Collections.Specialized.NotifyCollectionChangedEventArgs.NewStartingIndex
  id: NewStartingIndex
  parent: PlatformSupport.Collections.Specialized.NotifyCollectionChangedEventArgs
  langs:
  - csharp
  - vb
  name: NewStartingIndex
  nameWithType: NotifyCollectionChangedEventArgs.NewStartingIndex
  fullName: PlatformSupport.Collections.Specialized.NotifyCollectionChangedEventArgs.NewStartingIndex
  type: Property
  source:
    id: NewStartingIndex
    path: ''
    startLine: 168638
  assemblies:
  - cs.temp.dll
  namespace: PlatformSupport.Collections.Specialized
  summary: "\nThe index where the change occurred.\n"
  example: []
  syntax:
    content: public int NewStartingIndex { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property NewStartingIndex As Integer
  overload: PlatformSupport.Collections.Specialized.NotifyCollectionChangedEventArgs.NewStartingIndex*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: PlatformSupport.Collections.Specialized.NotifyCollectionChangedEventArgs.OldStartingIndex
  commentId: P:PlatformSupport.Collections.Specialized.NotifyCollectionChangedEventArgs.OldStartingIndex
  id: OldStartingIndex
  parent: PlatformSupport.Collections.Specialized.NotifyCollectionChangedEventArgs
  langs:
  - csharp
  - vb
  name: OldStartingIndex
  nameWithType: NotifyCollectionChangedEventArgs.OldStartingIndex
  fullName: PlatformSupport.Collections.Specialized.NotifyCollectionChangedEventArgs.OldStartingIndex
  type: Property
  source:
    id: OldStartingIndex
    path: ''
    startLine: 168646
  assemblies:
  - cs.temp.dll
  namespace: PlatformSupport.Collections.Specialized
  summary: "\nThe old index where the change occurred (for Move events).\n"
  example: []
  syntax:
    content: public int OldStartingIndex { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property OldStartingIndex As Integer
  overload: PlatformSupport.Collections.Specialized.NotifyCollectionChangedEventArgs.OldStartingIndex*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: PlatformSupport.Collections.Specialized
  commentId: N:PlatformSupport.Collections.Specialized
  name: PlatformSupport.Collections.Specialized
  nameWithType: PlatformSupport.Collections.Specialized
  fullName: PlatformSupport.Collections.Specialized
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.EventArgs
  commentId: T:System.EventArgs
  parent: System
  isExternal: true
  name: EventArgs
  nameWithType: EventArgs
  fullName: System.EventArgs
- uid: System.EventArgs.Empty
  commentId: F:System.EventArgs.Empty
  parent: System.EventArgs
  isExternal: true
  name: Empty
  nameWithType: EventArgs.Empty
  fullName: System.EventArgs.Empty
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: PlatformSupport.Collections.Specialized.NotifyCollectionChangedEventArgs.#ctor*
  commentId: Overload:PlatformSupport.Collections.Specialized.NotifyCollectionChangedEventArgs.#ctor
  name: NotifyCollectionChangedEventArgs
  nameWithType: NotifyCollectionChangedEventArgs.NotifyCollectionChangedEventArgs
  fullName: PlatformSupport.Collections.Specialized.NotifyCollectionChangedEventArgs.NotifyCollectionChangedEventArgs
- uid: PlatformSupport.Collections.Specialized.NotifyCollectionChangedAction
  commentId: T:PlatformSupport.Collections.Specialized.NotifyCollectionChangedAction
  parent: PlatformSupport.Collections.Specialized
  name: NotifyCollectionChangedAction
  nameWithType: NotifyCollectionChangedAction
  fullName: PlatformSupport.Collections.Specialized.NotifyCollectionChangedAction
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Collections.IList
  commentId: T:System.Collections.IList
  parent: System.Collections
  isExternal: true
  name: IList
  nameWithType: IList
  fullName: System.Collections.IList
- uid: System.Collections
  commentId: N:System.Collections
  isExternal: true
  name: System.Collections
  nameWithType: System.Collections
  fullName: System.Collections
- uid: PlatformSupport.Collections.Specialized.NotifyCollectionChangedEventArgs.Action*
  commentId: Overload:PlatformSupport.Collections.Specialized.NotifyCollectionChangedEventArgs.Action
  name: Action
  nameWithType: NotifyCollectionChangedEventArgs.Action
  fullName: PlatformSupport.Collections.Specialized.NotifyCollectionChangedEventArgs.Action
- uid: PlatformSupport.Collections.Specialized.NotifyCollectionChangedEventArgs.NewItems*
  commentId: Overload:PlatformSupport.Collections.Specialized.NotifyCollectionChangedEventArgs.NewItems
  name: NewItems
  nameWithType: NotifyCollectionChangedEventArgs.NewItems
  fullName: PlatformSupport.Collections.Specialized.NotifyCollectionChangedEventArgs.NewItems
- uid: PlatformSupport.Collections.Specialized.NotifyCollectionChangedEventArgs.OldItems*
  commentId: Overload:PlatformSupport.Collections.Specialized.NotifyCollectionChangedEventArgs.OldItems
  name: OldItems
  nameWithType: NotifyCollectionChangedEventArgs.OldItems
  fullName: PlatformSupport.Collections.Specialized.NotifyCollectionChangedEventArgs.OldItems
- uid: PlatformSupport.Collections.Specialized.NotifyCollectionChangedEventArgs.NewStartingIndex*
  commentId: Overload:PlatformSupport.Collections.Specialized.NotifyCollectionChangedEventArgs.NewStartingIndex
  name: NewStartingIndex
  nameWithType: NotifyCollectionChangedEventArgs.NewStartingIndex
  fullName: PlatformSupport.Collections.Specialized.NotifyCollectionChangedEventArgs.NewStartingIndex
- uid: PlatformSupport.Collections.Specialized.NotifyCollectionChangedEventArgs.OldStartingIndex*
  commentId: Overload:PlatformSupport.Collections.Specialized.NotifyCollectionChangedEventArgs.OldStartingIndex
  name: OldStartingIndex
  nameWithType: NotifyCollectionChangedEventArgs.OldStartingIndex
  fullName: PlatformSupport.Collections.Specialized.NotifyCollectionChangedEventArgs.OldStartingIndex
