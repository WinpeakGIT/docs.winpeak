### YamlMime:ManagedReference
items:
- uid: Global.ResponseMeta
  commentId: T:Global.ResponseMeta
  id: ResponseMeta
  parent: Global
  children:
  - Global.ResponseMeta.#ctor(System.Int64,System.Int64,System.String,System.Collections.Generic.List{System.String})
  - Global.ResponseMeta.ActionsList
  - Global.ResponseMeta.PacketType
  - Global.ResponseMeta.ServerPId
  - Global.ResponseMeta.ServerRelativeTime
  langs:
  - csharp
  - vb
  name: ResponseMeta
  nameWithType: ResponseMeta
  fullName: ResponseMeta
  type: Class
  source:
    id: ResponseMeta
    path: ''
    startLine: 1586
  assemblies:
  - cs.temp.dll
  namespace: Global
  syntax:
    content: public class ResponseMeta
    content.vb: Public Class ResponseMeta
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ToString
  - System.Object.ReferenceEquals(System.Object,System.Object)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Global.ResponseMeta.ServerPId
  commentId: P:Global.ResponseMeta.ServerPId
  id: ServerPId
  parent: Global.ResponseMeta
  langs:
  - csharp
  - vb
  name: ServerPId
  nameWithType: ResponseMeta.ServerPId
  fullName: ResponseMeta.ServerPId
  type: Property
  source:
    id: ServerPId
    path: ''
    startLine: 1587
  assemblies:
  - cs.temp.dll
  namespace: Global
  syntax:
    content: public long ServerPId { get; }
    parameters: []
    return:
      type: System.Int64
    content.vb: Public ReadOnly Property ServerPId As Long
  overload: Global.ResponseMeta.ServerPId*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Global.ResponseMeta.ServerRelativeTime
  commentId: P:Global.ResponseMeta.ServerRelativeTime
  id: ServerRelativeTime
  parent: Global.ResponseMeta
  langs:
  - csharp
  - vb
  name: ServerRelativeTime
  nameWithType: ResponseMeta.ServerRelativeTime
  fullName: ResponseMeta.ServerRelativeTime
  type: Property
  source:
    id: ServerRelativeTime
    path: ''
    startLine: 1588
  assemblies:
  - cs.temp.dll
  namespace: Global
  syntax:
    content: public long ServerRelativeTime { get; }
    parameters: []
    return:
      type: System.Int64
    content.vb: Public ReadOnly Property ServerRelativeTime As Long
  overload: Global.ResponseMeta.ServerRelativeTime*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Global.ResponseMeta.PacketType
  commentId: P:Global.ResponseMeta.PacketType
  id: PacketType
  parent: Global.ResponseMeta
  langs:
  - csharp
  - vb
  name: PacketType
  nameWithType: ResponseMeta.PacketType
  fullName: ResponseMeta.PacketType
  type: Property
  source:
    id: PacketType
    path: ''
    startLine: 1589
  assemblies:
  - cs.temp.dll
  namespace: Global
  syntax:
    content: public string PacketType { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property PacketType As String
  overload: Global.ResponseMeta.PacketType*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Global.ResponseMeta.ActionsList
  commentId: P:Global.ResponseMeta.ActionsList
  id: ActionsList
  parent: Global.ResponseMeta
  langs:
  - csharp
  - vb
  name: ActionsList
  nameWithType: ResponseMeta.ActionsList
  fullName: ResponseMeta.ActionsList
  type: Property
  source:
    id: ActionsList
    path: ''
    startLine: 1590
  assemblies:
  - cs.temp.dll
  namespace: Global
  syntax:
    content: public List<string> ActionsList { get; }
    parameters: []
    return:
      type: System.Collections.Generic.List{System.String}
    content.vb: Public ReadOnly Property ActionsList As List(Of String)
  overload: Global.ResponseMeta.ActionsList*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Global.ResponseMeta.#ctor(System.Int64,System.Int64,System.String,System.Collections.Generic.List{System.String})
  commentId: M:Global.ResponseMeta.#ctor(System.Int64,System.Int64,System.String,System.Collections.Generic.List{System.String})
  id: '#ctor(System.Int64,System.Int64,System.String,System.Collections.Generic.List{System.String})'
  parent: Global.ResponseMeta
  langs:
  - csharp
  - vb
  name: ResponseMeta(Int64, Int64, String, List<String>)
  nameWithType: ResponseMeta.ResponseMeta(Int64, Int64, String, List<String>)
  fullName: ResponseMeta.ResponseMeta(System.Int64, System.Int64, System.String, System.Collections.Generic.List<System.String>)
  type: Constructor
  source:
    id: .ctor
    path: ''
    startLine: 1592
  assemblies:
  - cs.temp.dll
  namespace: Global
  syntax:
    content: public ResponseMeta(long pid, long relativeTime, string packetType, List<string> actions)
    parameters:
    - id: pid
      type: System.Int64
    - id: relativeTime
      type: System.Int64
    - id: packetType
      type: System.String
    - id: actions
      type: System.Collections.Generic.List{System.String}
    content.vb: Public Sub New(pid As Long, relativeTime As Long, packetType As String, actions As List(Of String))
  overload: Global.ResponseMeta.#ctor*
  nameWithType.vb: ResponseMeta.ResponseMeta(Int64, Int64, String, List(Of String))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: ResponseMeta.ResponseMeta(System.Int64, System.Int64, System.String, System.Collections.Generic.List(Of System.String))
  name.vb: ResponseMeta(Int64, Int64, String, List(Of String))
references:
- uid: Global
  name: Global
  nameWithType: Global
  fullName: Global
  nameWithType.vb: ''
  fullName.vb: ''
  name.vb: ''
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Global.ResponseMeta.ServerPId*
  commentId: Overload:Global.ResponseMeta.ServerPId
  name: ServerPId
  nameWithType: ResponseMeta.ServerPId
  fullName: ResponseMeta.ServerPId
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: Global.ResponseMeta.ServerRelativeTime*
  commentId: Overload:Global.ResponseMeta.ServerRelativeTime
  name: ServerRelativeTime
  nameWithType: ResponseMeta.ServerRelativeTime
  fullName: ResponseMeta.ServerRelativeTime
- uid: Global.ResponseMeta.PacketType*
  commentId: Overload:Global.ResponseMeta.PacketType
  name: PacketType
  nameWithType: ResponseMeta.PacketType
  fullName: ResponseMeta.PacketType
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Global.ResponseMeta.ActionsList*
  commentId: Overload:Global.ResponseMeta.ActionsList
  name: ActionsList
  nameWithType: ResponseMeta.ActionsList
  fullName: ResponseMeta.ActionsList
- uid: System.Collections.Generic.List{System.String}
  commentId: T:System.Collections.Generic.List{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<String>
  nameWithType: List<String>
  fullName: System.Collections.Generic.List<System.String>
  nameWithType.vb: List(Of String)
  fullName.vb: System.Collections.Generic.List(Of System.String)
  name.vb: List(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Global.ResponseMeta.#ctor*
  commentId: Overload:Global.ResponseMeta.#ctor
  name: ResponseMeta
  nameWithType: ResponseMeta.ResponseMeta
  fullName: ResponseMeta.ResponseMeta
