### YamlMime:ManagedReference
items:
- uid: Org.BouncyCastle.Utilities.Collections.HashSet
  commentId: T:Org.BouncyCastle.Utilities.Collections.HashSet
  id: HashSet
  parent: Org.BouncyCastle.Utilities.Collections
  children:
  - Org.BouncyCastle.Utilities.Collections.HashSet.#ctor
  - Org.BouncyCastle.Utilities.Collections.HashSet.#ctor(System.Collections.IEnumerable)
  - Org.BouncyCastle.Utilities.Collections.HashSet.Add(System.Object)
  - Org.BouncyCastle.Utilities.Collections.HashSet.AddAll(System.Collections.IEnumerable)
  - Org.BouncyCastle.Utilities.Collections.HashSet.Clear
  - Org.BouncyCastle.Utilities.Collections.HashSet.Contains(System.Object)
  - Org.BouncyCastle.Utilities.Collections.HashSet.CopyTo(System.Array,System.Int32)
  - Org.BouncyCastle.Utilities.Collections.HashSet.Count
  - Org.BouncyCastle.Utilities.Collections.HashSet.GetEnumerator
  - Org.BouncyCastle.Utilities.Collections.HashSet.IsEmpty
  - Org.BouncyCastle.Utilities.Collections.HashSet.IsFixedSize
  - Org.BouncyCastle.Utilities.Collections.HashSet.IsReadOnly
  - Org.BouncyCastle.Utilities.Collections.HashSet.IsSynchronized
  - Org.BouncyCastle.Utilities.Collections.HashSet.Remove(System.Object)
  - Org.BouncyCastle.Utilities.Collections.HashSet.RemoveAll(System.Collections.IEnumerable)
  - Org.BouncyCastle.Utilities.Collections.HashSet.SyncRoot
  langs:
  - csharp
  - vb
  name: HashSet
  nameWithType: HashSet
  fullName: Org.BouncyCastle.Utilities.Collections.HashSet
  type: Class
  source:
    id: HashSet
    path: ''
    startLine: 90438
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Utilities.Collections
  syntax:
    content: 'public class HashSet : ISet, ICollection, IEnumerable'
    content.vb: >-
      Public Class HashSet
          Implements ISet, ICollection, IEnumerable
  inheritance:
  - System.Object
  implements:
  - Org.BouncyCastle.Utilities.Collections.ISet
  - System.Collections.ICollection
  - System.Collections.IEnumerable
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ToString
  - System.Object.ReferenceEquals(System.Object,System.Object)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Org.BouncyCastle.Utilities.Collections.HashSet.#ctor
  commentId: M:Org.BouncyCastle.Utilities.Collections.HashSet.#ctor
  id: '#ctor'
  parent: Org.BouncyCastle.Utilities.Collections.HashSet
  langs:
  - csharp
  - vb
  name: HashSet()
  nameWithType: HashSet.HashSet()
  fullName: Org.BouncyCastle.Utilities.Collections.HashSet.HashSet()
  type: Constructor
  source:
    id: .ctor
    path: ''
    startLine: 90443
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Utilities.Collections
  syntax:
    content: public HashSet()
    content.vb: Public Sub New
  overload: Org.BouncyCastle.Utilities.Collections.HashSet.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Org.BouncyCastle.Utilities.Collections.HashSet.#ctor(System.Collections.IEnumerable)
  commentId: M:Org.BouncyCastle.Utilities.Collections.HashSet.#ctor(System.Collections.IEnumerable)
  id: '#ctor(System.Collections.IEnumerable)'
  parent: Org.BouncyCastle.Utilities.Collections.HashSet
  langs:
  - csharp
  - vb
  name: HashSet(IEnumerable)
  nameWithType: HashSet.HashSet(IEnumerable)
  fullName: Org.BouncyCastle.Utilities.Collections.HashSet.HashSet(System.Collections.IEnumerable)
  type: Constructor
  source:
    id: .ctor
    path: ''
    startLine: 90447
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Utilities.Collections
  syntax:
    content: public HashSet(IEnumerable s)
    parameters:
    - id: s
      type: System.Collections.IEnumerable
    content.vb: Public Sub New(s As IEnumerable)
  overload: Org.BouncyCastle.Utilities.Collections.HashSet.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Org.BouncyCastle.Utilities.Collections.HashSet.Add(System.Object)
  commentId: M:Org.BouncyCastle.Utilities.Collections.HashSet.Add(System.Object)
  id: Add(System.Object)
  parent: Org.BouncyCastle.Utilities.Collections.HashSet
  langs:
  - csharp
  - vb
  name: Add(Object)
  nameWithType: HashSet.Add(Object)
  fullName: Org.BouncyCastle.Utilities.Collections.HashSet.Add(System.Object)
  type: Method
  source:
    id: Add
    path: ''
    startLine: 90455
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Utilities.Collections
  syntax:
    content: public virtual void Add(object o)
    parameters:
    - id: o
      type: System.Object
    content.vb: Public Overridable Sub Add(o As Object)
  overload: Org.BouncyCastle.Utilities.Collections.HashSet.Add*
  implements:
  - Org.BouncyCastle.Utilities.Collections.ISet.Add(System.Object)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Org.BouncyCastle.Utilities.Collections.HashSet.AddAll(System.Collections.IEnumerable)
  commentId: M:Org.BouncyCastle.Utilities.Collections.HashSet.AddAll(System.Collections.IEnumerable)
  id: AddAll(System.Collections.IEnumerable)
  parent: Org.BouncyCastle.Utilities.Collections.HashSet
  langs:
  - csharp
  - vb
  name: AddAll(IEnumerable)
  nameWithType: HashSet.AddAll(IEnumerable)
  fullName: Org.BouncyCastle.Utilities.Collections.HashSet.AddAll(System.Collections.IEnumerable)
  type: Method
  source:
    id: AddAll
    path: ''
    startLine: 90460
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Utilities.Collections
  syntax:
    content: public virtual void AddAll(IEnumerable e)
    parameters:
    - id: e
      type: System.Collections.IEnumerable
    content.vb: Public Overridable Sub AddAll(e As IEnumerable)
  overload: Org.BouncyCastle.Utilities.Collections.HashSet.AddAll*
  implements:
  - Org.BouncyCastle.Utilities.Collections.ISet.AddAll(System.Collections.IEnumerable)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Org.BouncyCastle.Utilities.Collections.HashSet.Clear
  commentId: M:Org.BouncyCastle.Utilities.Collections.HashSet.Clear
  id: Clear
  parent: Org.BouncyCastle.Utilities.Collections.HashSet
  langs:
  - csharp
  - vb
  name: Clear()
  nameWithType: HashSet.Clear()
  fullName: Org.BouncyCastle.Utilities.Collections.HashSet.Clear()
  type: Method
  source:
    id: Clear
    path: ''
    startLine: 90468
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Utilities.Collections
  syntax:
    content: public virtual void Clear()
    content.vb: Public Overridable Sub Clear
  overload: Org.BouncyCastle.Utilities.Collections.HashSet.Clear*
  implements:
  - Org.BouncyCastle.Utilities.Collections.ISet.Clear
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Org.BouncyCastle.Utilities.Collections.HashSet.Contains(System.Object)
  commentId: M:Org.BouncyCastle.Utilities.Collections.HashSet.Contains(System.Object)
  id: Contains(System.Object)
  parent: Org.BouncyCastle.Utilities.Collections.HashSet
  langs:
  - csharp
  - vb
  name: Contains(Object)
  nameWithType: HashSet.Contains(Object)
  fullName: Org.BouncyCastle.Utilities.Collections.HashSet.Contains(System.Object)
  type: Method
  source:
    id: Contains
    path: ''
    startLine: 90473
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Utilities.Collections
  syntax:
    content: public virtual bool Contains(object o)
    parameters:
    - id: o
      type: System.Object
    return:
      type: System.Boolean
    content.vb: Public Overridable Function Contains(o As Object) As Boolean
  overload: Org.BouncyCastle.Utilities.Collections.HashSet.Contains*
  implements:
  - Org.BouncyCastle.Utilities.Collections.ISet.Contains(System.Object)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Org.BouncyCastle.Utilities.Collections.HashSet.CopyTo(System.Array,System.Int32)
  commentId: M:Org.BouncyCastle.Utilities.Collections.HashSet.CopyTo(System.Array,System.Int32)
  id: CopyTo(System.Array,System.Int32)
  parent: Org.BouncyCastle.Utilities.Collections.HashSet
  langs:
  - csharp
  - vb
  name: CopyTo(Array, Int32)
  nameWithType: HashSet.CopyTo(Array, Int32)
  fullName: Org.BouncyCastle.Utilities.Collections.HashSet.CopyTo(System.Array, System.Int32)
  type: Method
  source:
    id: CopyTo
    path: ''
    startLine: 90478
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Utilities.Collections
  syntax:
    content: public virtual void CopyTo(Array array, int index)
    parameters:
    - id: array
      type: System.Array
    - id: index
      type: System.Int32
    content.vb: Public Overridable Sub CopyTo(array As Array, index As Integer)
  overload: Org.BouncyCastle.Utilities.Collections.HashSet.CopyTo*
  implements:
  - System.Collections.ICollection.CopyTo(System.Array,System.Int32)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Org.BouncyCastle.Utilities.Collections.HashSet.Count
  commentId: P:Org.BouncyCastle.Utilities.Collections.HashSet.Count
  id: Count
  parent: Org.BouncyCastle.Utilities.Collections.HashSet
  langs:
  - csharp
  - vb
  name: Count
  nameWithType: HashSet.Count
  fullName: Org.BouncyCastle.Utilities.Collections.HashSet.Count
  type: Property
  source:
    id: Count
    path: ''
    startLine: 90483
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Utilities.Collections
  syntax:
    content: public virtual int Count { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Overridable ReadOnly Property Count As Integer
  overload: Org.BouncyCastle.Utilities.Collections.HashSet.Count*
  implements:
  - System.Collections.ICollection.Count
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: Org.BouncyCastle.Utilities.Collections.HashSet.GetEnumerator
  commentId: M:Org.BouncyCastle.Utilities.Collections.HashSet.GetEnumerator
  id: GetEnumerator
  parent: Org.BouncyCastle.Utilities.Collections.HashSet
  langs:
  - csharp
  - vb
  name: GetEnumerator()
  nameWithType: HashSet.GetEnumerator()
  fullName: Org.BouncyCastle.Utilities.Collections.HashSet.GetEnumerator()
  type: Method
  source:
    id: GetEnumerator
    path: ''
    startLine: 90488
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Utilities.Collections
  syntax:
    content: public virtual IEnumerator GetEnumerator()
    return:
      type: System.Collections.IEnumerator
    content.vb: Public Overridable Function GetEnumerator As IEnumerator
  overload: Org.BouncyCastle.Utilities.Collections.HashSet.GetEnumerator*
  implements:
  - System.Collections.IEnumerable.GetEnumerator
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Org.BouncyCastle.Utilities.Collections.HashSet.IsEmpty
  commentId: P:Org.BouncyCastle.Utilities.Collections.HashSet.IsEmpty
  id: IsEmpty
  parent: Org.BouncyCastle.Utilities.Collections.HashSet
  langs:
  - csharp
  - vb
  name: IsEmpty
  nameWithType: HashSet.IsEmpty
  fullName: Org.BouncyCastle.Utilities.Collections.HashSet.IsEmpty
  type: Property
  source:
    id: IsEmpty
    path: ''
    startLine: 90493
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Utilities.Collections
  syntax:
    content: public virtual bool IsEmpty { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Overridable ReadOnly Property IsEmpty As Boolean
  overload: Org.BouncyCastle.Utilities.Collections.HashSet.IsEmpty*
  implements:
  - Org.BouncyCastle.Utilities.Collections.ISet.IsEmpty
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: Org.BouncyCastle.Utilities.Collections.HashSet.IsFixedSize
  commentId: P:Org.BouncyCastle.Utilities.Collections.HashSet.IsFixedSize
  id: IsFixedSize
  parent: Org.BouncyCastle.Utilities.Collections.HashSet
  langs:
  - csharp
  - vb
  name: IsFixedSize
  nameWithType: HashSet.IsFixedSize
  fullName: Org.BouncyCastle.Utilities.Collections.HashSet.IsFixedSize
  type: Property
  source:
    id: IsFixedSize
    path: ''
    startLine: 90498
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Utilities.Collections
  syntax:
    content: public virtual bool IsFixedSize { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Overridable ReadOnly Property IsFixedSize As Boolean
  overload: Org.BouncyCastle.Utilities.Collections.HashSet.IsFixedSize*
  implements:
  - Org.BouncyCastle.Utilities.Collections.ISet.IsFixedSize
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: Org.BouncyCastle.Utilities.Collections.HashSet.IsReadOnly
  commentId: P:Org.BouncyCastle.Utilities.Collections.HashSet.IsReadOnly
  id: IsReadOnly
  parent: Org.BouncyCastle.Utilities.Collections.HashSet
  langs:
  - csharp
  - vb
  name: IsReadOnly
  nameWithType: HashSet.IsReadOnly
  fullName: Org.BouncyCastle.Utilities.Collections.HashSet.IsReadOnly
  type: Property
  source:
    id: IsReadOnly
    path: ''
    startLine: 90503
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Utilities.Collections
  syntax:
    content: public virtual bool IsReadOnly { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Overridable ReadOnly Property IsReadOnly As Boolean
  overload: Org.BouncyCastle.Utilities.Collections.HashSet.IsReadOnly*
  implements:
  - Org.BouncyCastle.Utilities.Collections.ISet.IsReadOnly
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: Org.BouncyCastle.Utilities.Collections.HashSet.IsSynchronized
  commentId: P:Org.BouncyCastle.Utilities.Collections.HashSet.IsSynchronized
  id: IsSynchronized
  parent: Org.BouncyCastle.Utilities.Collections.HashSet
  langs:
  - csharp
  - vb
  name: IsSynchronized
  nameWithType: HashSet.IsSynchronized
  fullName: Org.BouncyCastle.Utilities.Collections.HashSet.IsSynchronized
  type: Property
  source:
    id: IsSynchronized
    path: ''
    startLine: 90508
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Utilities.Collections
  syntax:
    content: public virtual bool IsSynchronized { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Overridable ReadOnly Property IsSynchronized As Boolean
  overload: Org.BouncyCastle.Utilities.Collections.HashSet.IsSynchronized*
  implements:
  - System.Collections.ICollection.IsSynchronized
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: Org.BouncyCastle.Utilities.Collections.HashSet.Remove(System.Object)
  commentId: M:Org.BouncyCastle.Utilities.Collections.HashSet.Remove(System.Object)
  id: Remove(System.Object)
  parent: Org.BouncyCastle.Utilities.Collections.HashSet
  langs:
  - csharp
  - vb
  name: Remove(Object)
  nameWithType: HashSet.Remove(Object)
  fullName: Org.BouncyCastle.Utilities.Collections.HashSet.Remove(System.Object)
  type: Method
  source:
    id: Remove
    path: ''
    startLine: 90513
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Utilities.Collections
  syntax:
    content: public virtual void Remove(object o)
    parameters:
    - id: o
      type: System.Object
    content.vb: Public Overridable Sub Remove(o As Object)
  overload: Org.BouncyCastle.Utilities.Collections.HashSet.Remove*
  implements:
  - Org.BouncyCastle.Utilities.Collections.ISet.Remove(System.Object)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Org.BouncyCastle.Utilities.Collections.HashSet.RemoveAll(System.Collections.IEnumerable)
  commentId: M:Org.BouncyCastle.Utilities.Collections.HashSet.RemoveAll(System.Collections.IEnumerable)
  id: RemoveAll(System.Collections.IEnumerable)
  parent: Org.BouncyCastle.Utilities.Collections.HashSet
  langs:
  - csharp
  - vb
  name: RemoveAll(IEnumerable)
  nameWithType: HashSet.RemoveAll(IEnumerable)
  fullName: Org.BouncyCastle.Utilities.Collections.HashSet.RemoveAll(System.Collections.IEnumerable)
  type: Method
  source:
    id: RemoveAll
    path: ''
    startLine: 90518
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Utilities.Collections
  syntax:
    content: public virtual void RemoveAll(IEnumerable e)
    parameters:
    - id: e
      type: System.Collections.IEnumerable
    content.vb: Public Overridable Sub RemoveAll(e As IEnumerable)
  overload: Org.BouncyCastle.Utilities.Collections.HashSet.RemoveAll*
  implements:
  - Org.BouncyCastle.Utilities.Collections.ISet.RemoveAll(System.Collections.IEnumerable)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Org.BouncyCastle.Utilities.Collections.HashSet.SyncRoot
  commentId: P:Org.BouncyCastle.Utilities.Collections.HashSet.SyncRoot
  id: SyncRoot
  parent: Org.BouncyCastle.Utilities.Collections.HashSet
  langs:
  - csharp
  - vb
  name: SyncRoot
  nameWithType: HashSet.SyncRoot
  fullName: Org.BouncyCastle.Utilities.Collections.HashSet.SyncRoot
  type: Property
  source:
    id: SyncRoot
    path: ''
    startLine: 90526
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Utilities.Collections
  syntax:
    content: public virtual object SyncRoot { get; }
    parameters: []
    return:
      type: System.Object
    content.vb: Public Overridable ReadOnly Property SyncRoot As Object
  overload: Org.BouncyCastle.Utilities.Collections.HashSet.SyncRoot*
  implements:
  - System.Collections.ICollection.SyncRoot
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
references:
- uid: Org.BouncyCastle.Utilities.Collections
  commentId: N:Org.BouncyCastle.Utilities.Collections
  name: Org.BouncyCastle.Utilities.Collections
  nameWithType: Org.BouncyCastle.Utilities.Collections
  fullName: Org.BouncyCastle.Utilities.Collections
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Org.BouncyCastle.Utilities.Collections.ISet
  commentId: T:Org.BouncyCastle.Utilities.Collections.ISet
  parent: Org.BouncyCastle.Utilities.Collections
  name: ISet
  nameWithType: ISet
  fullName: Org.BouncyCastle.Utilities.Collections.ISet
- uid: System.Collections.ICollection
  commentId: T:System.Collections.ICollection
  parent: System.Collections
  isExternal: true
  name: ICollection
  nameWithType: ICollection
  fullName: System.Collections.ICollection
- uid: System.Collections.IEnumerable
  commentId: T:System.Collections.IEnumerable
  parent: System.Collections
  isExternal: true
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Collections
  commentId: N:System.Collections
  isExternal: true
  name: System.Collections
  nameWithType: System.Collections
  fullName: System.Collections
- uid: Org.BouncyCastle.Utilities.Collections.HashSet.#ctor*
  commentId: Overload:Org.BouncyCastle.Utilities.Collections.HashSet.#ctor
  name: HashSet
  nameWithType: HashSet.HashSet
  fullName: Org.BouncyCastle.Utilities.Collections.HashSet.HashSet
- uid: Org.BouncyCastle.Utilities.Collections.HashSet.Add*
  commentId: Overload:Org.BouncyCastle.Utilities.Collections.HashSet.Add
  name: Add
  nameWithType: HashSet.Add
  fullName: Org.BouncyCastle.Utilities.Collections.HashSet.Add
- uid: Org.BouncyCastle.Utilities.Collections.ISet.Add(System.Object)
  commentId: M:Org.BouncyCastle.Utilities.Collections.ISet.Add(System.Object)
  parent: Org.BouncyCastle.Utilities.Collections.ISet
  isExternal: true
  name: Add(Object)
  nameWithType: ISet.Add(Object)
  fullName: Org.BouncyCastle.Utilities.Collections.ISet.Add(System.Object)
  spec.csharp:
  - uid: Org.BouncyCastle.Utilities.Collections.ISet.Add(System.Object)
    name: Add
    nameWithType: ISet.Add
    fullName: Org.BouncyCastle.Utilities.Collections.ISet.Add
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Org.BouncyCastle.Utilities.Collections.ISet.Add(System.Object)
    name: Add
    nameWithType: ISet.Add
    fullName: Org.BouncyCastle.Utilities.Collections.ISet.Add
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Org.BouncyCastle.Utilities.Collections.HashSet.AddAll*
  commentId: Overload:Org.BouncyCastle.Utilities.Collections.HashSet.AddAll
  name: AddAll
  nameWithType: HashSet.AddAll
  fullName: Org.BouncyCastle.Utilities.Collections.HashSet.AddAll
- uid: Org.BouncyCastle.Utilities.Collections.ISet.AddAll(System.Collections.IEnumerable)
  commentId: M:Org.BouncyCastle.Utilities.Collections.ISet.AddAll(System.Collections.IEnumerable)
  parent: Org.BouncyCastle.Utilities.Collections.ISet
  isExternal: true
  name: AddAll(IEnumerable)
  nameWithType: ISet.AddAll(IEnumerable)
  fullName: Org.BouncyCastle.Utilities.Collections.ISet.AddAll(System.Collections.IEnumerable)
  spec.csharp:
  - uid: Org.BouncyCastle.Utilities.Collections.ISet.AddAll(System.Collections.IEnumerable)
    name: AddAll
    nameWithType: ISet.AddAll
    fullName: Org.BouncyCastle.Utilities.Collections.ISet.AddAll
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.IEnumerable
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.IEnumerable
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Org.BouncyCastle.Utilities.Collections.ISet.AddAll(System.Collections.IEnumerable)
    name: AddAll
    nameWithType: ISet.AddAll
    fullName: Org.BouncyCastle.Utilities.Collections.ISet.AddAll
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.IEnumerable
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.IEnumerable
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Org.BouncyCastle.Utilities.Collections.HashSet.Clear*
  commentId: Overload:Org.BouncyCastle.Utilities.Collections.HashSet.Clear
  name: Clear
  nameWithType: HashSet.Clear
  fullName: Org.BouncyCastle.Utilities.Collections.HashSet.Clear
- uid: Org.BouncyCastle.Utilities.Collections.ISet.Clear
  commentId: M:Org.BouncyCastle.Utilities.Collections.ISet.Clear
  parent: Org.BouncyCastle.Utilities.Collections.ISet
  name: Clear()
  nameWithType: ISet.Clear()
  fullName: Org.BouncyCastle.Utilities.Collections.ISet.Clear()
  spec.csharp:
  - uid: Org.BouncyCastle.Utilities.Collections.ISet.Clear
    name: Clear
    nameWithType: ISet.Clear
    fullName: Org.BouncyCastle.Utilities.Collections.ISet.Clear
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Org.BouncyCastle.Utilities.Collections.ISet.Clear
    name: Clear
    nameWithType: ISet.Clear
    fullName: Org.BouncyCastle.Utilities.Collections.ISet.Clear
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Org.BouncyCastle.Utilities.Collections.HashSet.Contains*
  commentId: Overload:Org.BouncyCastle.Utilities.Collections.HashSet.Contains
  name: Contains
  nameWithType: HashSet.Contains
  fullName: Org.BouncyCastle.Utilities.Collections.HashSet.Contains
- uid: Org.BouncyCastle.Utilities.Collections.ISet.Contains(System.Object)
  commentId: M:Org.BouncyCastle.Utilities.Collections.ISet.Contains(System.Object)
  parent: Org.BouncyCastle.Utilities.Collections.ISet
  isExternal: true
  name: Contains(Object)
  nameWithType: ISet.Contains(Object)
  fullName: Org.BouncyCastle.Utilities.Collections.ISet.Contains(System.Object)
  spec.csharp:
  - uid: Org.BouncyCastle.Utilities.Collections.ISet.Contains(System.Object)
    name: Contains
    nameWithType: ISet.Contains
    fullName: Org.BouncyCastle.Utilities.Collections.ISet.Contains
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Org.BouncyCastle.Utilities.Collections.ISet.Contains(System.Object)
    name: Contains
    nameWithType: ISet.Contains
    fullName: Org.BouncyCastle.Utilities.Collections.ISet.Contains
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Org.BouncyCastle.Utilities.Collections.HashSet.CopyTo*
  commentId: Overload:Org.BouncyCastle.Utilities.Collections.HashSet.CopyTo
  name: CopyTo
  nameWithType: HashSet.CopyTo
  fullName: Org.BouncyCastle.Utilities.Collections.HashSet.CopyTo
- uid: System.Collections.ICollection.CopyTo(System.Array,System.Int32)
  commentId: M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)
  parent: System.Collections.ICollection
  isExternal: true
  name: CopyTo(Array, Int32)
  nameWithType: ICollection.CopyTo(Array, Int32)
  fullName: System.Collections.ICollection.CopyTo(System.Array, System.Int32)
  spec.csharp:
  - uid: System.Collections.ICollection.CopyTo(System.Array,System.Int32)
    name: CopyTo
    nameWithType: ICollection.CopyTo
    fullName: System.Collections.ICollection.CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Array
    name: Array
    nameWithType: Array
    fullName: System.Array
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ICollection.CopyTo(System.Array,System.Int32)
    name: CopyTo
    nameWithType: ICollection.CopyTo
    fullName: System.Collections.ICollection.CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Array
    name: Array
    nameWithType: Array
    fullName: System.Array
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Array
  commentId: T:System.Array
  parent: System
  isExternal: true
  name: Array
  nameWithType: Array
  fullName: System.Array
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Org.BouncyCastle.Utilities.Collections.HashSet.Count*
  commentId: Overload:Org.BouncyCastle.Utilities.Collections.HashSet.Count
  name: Count
  nameWithType: HashSet.Count
  fullName: Org.BouncyCastle.Utilities.Collections.HashSet.Count
- uid: System.Collections.ICollection.Count
  commentId: P:System.Collections.ICollection.Count
  parent: System.Collections.ICollection
  isExternal: true
  name: Count
  nameWithType: ICollection.Count
  fullName: System.Collections.ICollection.Count
- uid: Org.BouncyCastle.Utilities.Collections.HashSet.GetEnumerator*
  commentId: Overload:Org.BouncyCastle.Utilities.Collections.HashSet.GetEnumerator
  name: GetEnumerator
  nameWithType: HashSet.GetEnumerator
  fullName: Org.BouncyCastle.Utilities.Collections.HashSet.GetEnumerator
- uid: System.Collections.IEnumerable.GetEnumerator
  commentId: M:System.Collections.IEnumerable.GetEnumerator
  parent: System.Collections.IEnumerable
  isExternal: true
  name: GetEnumerator()
  nameWithType: IEnumerable.GetEnumerator()
  fullName: System.Collections.IEnumerable.GetEnumerator()
  spec.csharp:
  - uid: System.Collections.IEnumerable.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable.GetEnumerator
    fullName: System.Collections.IEnumerable.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.IEnumerable.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable.GetEnumerator
    fullName: System.Collections.IEnumerable.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.IEnumerator
  commentId: T:System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: Org.BouncyCastle.Utilities.Collections.HashSet.IsEmpty*
  commentId: Overload:Org.BouncyCastle.Utilities.Collections.HashSet.IsEmpty
  name: IsEmpty
  nameWithType: HashSet.IsEmpty
  fullName: Org.BouncyCastle.Utilities.Collections.HashSet.IsEmpty
- uid: Org.BouncyCastle.Utilities.Collections.ISet.IsEmpty
  commentId: P:Org.BouncyCastle.Utilities.Collections.ISet.IsEmpty
  parent: Org.BouncyCastle.Utilities.Collections.ISet
  name: IsEmpty
  nameWithType: ISet.IsEmpty
  fullName: Org.BouncyCastle.Utilities.Collections.ISet.IsEmpty
- uid: Org.BouncyCastle.Utilities.Collections.HashSet.IsFixedSize*
  commentId: Overload:Org.BouncyCastle.Utilities.Collections.HashSet.IsFixedSize
  name: IsFixedSize
  nameWithType: HashSet.IsFixedSize
  fullName: Org.BouncyCastle.Utilities.Collections.HashSet.IsFixedSize
- uid: Org.BouncyCastle.Utilities.Collections.ISet.IsFixedSize
  commentId: P:Org.BouncyCastle.Utilities.Collections.ISet.IsFixedSize
  parent: Org.BouncyCastle.Utilities.Collections.ISet
  name: IsFixedSize
  nameWithType: ISet.IsFixedSize
  fullName: Org.BouncyCastle.Utilities.Collections.ISet.IsFixedSize
- uid: Org.BouncyCastle.Utilities.Collections.HashSet.IsReadOnly*
  commentId: Overload:Org.BouncyCastle.Utilities.Collections.HashSet.IsReadOnly
  name: IsReadOnly
  nameWithType: HashSet.IsReadOnly
  fullName: Org.BouncyCastle.Utilities.Collections.HashSet.IsReadOnly
- uid: Org.BouncyCastle.Utilities.Collections.ISet.IsReadOnly
  commentId: P:Org.BouncyCastle.Utilities.Collections.ISet.IsReadOnly
  parent: Org.BouncyCastle.Utilities.Collections.ISet
  name: IsReadOnly
  nameWithType: ISet.IsReadOnly
  fullName: Org.BouncyCastle.Utilities.Collections.ISet.IsReadOnly
- uid: Org.BouncyCastle.Utilities.Collections.HashSet.IsSynchronized*
  commentId: Overload:Org.BouncyCastle.Utilities.Collections.HashSet.IsSynchronized
  name: IsSynchronized
  nameWithType: HashSet.IsSynchronized
  fullName: Org.BouncyCastle.Utilities.Collections.HashSet.IsSynchronized
- uid: System.Collections.ICollection.IsSynchronized
  commentId: P:System.Collections.ICollection.IsSynchronized
  parent: System.Collections.ICollection
  isExternal: true
  name: IsSynchronized
  nameWithType: ICollection.IsSynchronized
  fullName: System.Collections.ICollection.IsSynchronized
- uid: Org.BouncyCastle.Utilities.Collections.HashSet.Remove*
  commentId: Overload:Org.BouncyCastle.Utilities.Collections.HashSet.Remove
  name: Remove
  nameWithType: HashSet.Remove
  fullName: Org.BouncyCastle.Utilities.Collections.HashSet.Remove
- uid: Org.BouncyCastle.Utilities.Collections.ISet.Remove(System.Object)
  commentId: M:Org.BouncyCastle.Utilities.Collections.ISet.Remove(System.Object)
  parent: Org.BouncyCastle.Utilities.Collections.ISet
  isExternal: true
  name: Remove(Object)
  nameWithType: ISet.Remove(Object)
  fullName: Org.BouncyCastle.Utilities.Collections.ISet.Remove(System.Object)
  spec.csharp:
  - uid: Org.BouncyCastle.Utilities.Collections.ISet.Remove(System.Object)
    name: Remove
    nameWithType: ISet.Remove
    fullName: Org.BouncyCastle.Utilities.Collections.ISet.Remove
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Org.BouncyCastle.Utilities.Collections.ISet.Remove(System.Object)
    name: Remove
    nameWithType: ISet.Remove
    fullName: Org.BouncyCastle.Utilities.Collections.ISet.Remove
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Org.BouncyCastle.Utilities.Collections.HashSet.RemoveAll*
  commentId: Overload:Org.BouncyCastle.Utilities.Collections.HashSet.RemoveAll
  name: RemoveAll
  nameWithType: HashSet.RemoveAll
  fullName: Org.BouncyCastle.Utilities.Collections.HashSet.RemoveAll
- uid: Org.BouncyCastle.Utilities.Collections.ISet.RemoveAll(System.Collections.IEnumerable)
  commentId: M:Org.BouncyCastle.Utilities.Collections.ISet.RemoveAll(System.Collections.IEnumerable)
  parent: Org.BouncyCastle.Utilities.Collections.ISet
  isExternal: true
  name: RemoveAll(IEnumerable)
  nameWithType: ISet.RemoveAll(IEnumerable)
  fullName: Org.BouncyCastle.Utilities.Collections.ISet.RemoveAll(System.Collections.IEnumerable)
  spec.csharp:
  - uid: Org.BouncyCastle.Utilities.Collections.ISet.RemoveAll(System.Collections.IEnumerable)
    name: RemoveAll
    nameWithType: ISet.RemoveAll
    fullName: Org.BouncyCastle.Utilities.Collections.ISet.RemoveAll
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.IEnumerable
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.IEnumerable
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Org.BouncyCastle.Utilities.Collections.ISet.RemoveAll(System.Collections.IEnumerable)
    name: RemoveAll
    nameWithType: ISet.RemoveAll
    fullName: Org.BouncyCastle.Utilities.Collections.ISet.RemoveAll
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.IEnumerable
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.IEnumerable
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Org.BouncyCastle.Utilities.Collections.HashSet.SyncRoot*
  commentId: Overload:Org.BouncyCastle.Utilities.Collections.HashSet.SyncRoot
  name: SyncRoot
  nameWithType: HashSet.SyncRoot
  fullName: Org.BouncyCastle.Utilities.Collections.HashSet.SyncRoot
- uid: System.Collections.ICollection.SyncRoot
  commentId: P:System.Collections.ICollection.SyncRoot
  parent: System.Collections.ICollection
  isExternal: true
  name: SyncRoot
  nameWithType: ICollection.SyncRoot
  fullName: System.Collections.ICollection.SyncRoot
