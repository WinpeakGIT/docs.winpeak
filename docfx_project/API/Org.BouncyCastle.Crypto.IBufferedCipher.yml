### YamlMime:ManagedReference
items:
- uid: Org.BouncyCastle.Crypto.IBufferedCipher
  commentId: T:Org.BouncyCastle.Crypto.IBufferedCipher
  id: IBufferedCipher
  parent: Org.BouncyCastle.Crypto
  children:
  - Org.BouncyCastle.Crypto.IBufferedCipher.AlgorithmName
  - Org.BouncyCastle.Crypto.IBufferedCipher.DoFinal
  - Org.BouncyCastle.Crypto.IBufferedCipher.DoFinal(System.Byte[])
  - Org.BouncyCastle.Crypto.IBufferedCipher.DoFinal(System.Byte[],System.Byte[],System.Int32)
  - Org.BouncyCastle.Crypto.IBufferedCipher.DoFinal(System.Byte[],System.Int32)
  - Org.BouncyCastle.Crypto.IBufferedCipher.DoFinal(System.Byte[],System.Int32,System.Int32)
  - Org.BouncyCastle.Crypto.IBufferedCipher.DoFinal(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)
  - Org.BouncyCastle.Crypto.IBufferedCipher.GetBlockSize
  - Org.BouncyCastle.Crypto.IBufferedCipher.GetOutputSize(System.Int32)
  - Org.BouncyCastle.Crypto.IBufferedCipher.GetUpdateOutputSize(System.Int32)
  - Org.BouncyCastle.Crypto.IBufferedCipher.Init(System.Boolean,Org.BouncyCastle.Crypto.ICipherParameters)
  - Org.BouncyCastle.Crypto.IBufferedCipher.ProcessByte(System.Byte)
  - Org.BouncyCastle.Crypto.IBufferedCipher.ProcessByte(System.Byte,System.Byte[],System.Int32)
  - Org.BouncyCastle.Crypto.IBufferedCipher.ProcessBytes(System.Byte[])
  - Org.BouncyCastle.Crypto.IBufferedCipher.ProcessBytes(System.Byte[],System.Byte[],System.Int32)
  - Org.BouncyCastle.Crypto.IBufferedCipher.ProcessBytes(System.Byte[],System.Int32,System.Int32)
  - Org.BouncyCastle.Crypto.IBufferedCipher.ProcessBytes(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)
  - Org.BouncyCastle.Crypto.IBufferedCipher.Reset
  langs:
  - csharp
  - vb
  name: IBufferedCipher
  nameWithType: IBufferedCipher
  fullName: Org.BouncyCastle.Crypto.IBufferedCipher
  type: Interface
  source:
    id: IBufferedCipher
    path: ''
    startLine: 82652
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto
  remarks: Block cipher engines are expected to conform to this interface.
  example: []
  syntax:
    content: public interface IBufferedCipher
    content.vb: Public Interface IBufferedCipher
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Org.BouncyCastle.Crypto.IBufferedCipher.AlgorithmName
  commentId: P:Org.BouncyCastle.Crypto.IBufferedCipher.AlgorithmName
  id: AlgorithmName
  parent: Org.BouncyCastle.Crypto.IBufferedCipher
  langs:
  - csharp
  - vb
  name: AlgorithmName
  nameWithType: IBufferedCipher.AlgorithmName
  fullName: Org.BouncyCastle.Crypto.IBufferedCipher.AlgorithmName
  type: Property
  source:
    id: AlgorithmName
    path: ''
    startLine: 82655
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto
  summary: The name of the algorithm this cipher implements.
  example: []
  syntax:
    content: string AlgorithmName { get; }
    parameters: []
    return:
      type: System.String
    content.vb: ReadOnly Property AlgorithmName As String
  overload: Org.BouncyCastle.Crypto.IBufferedCipher.AlgorithmName*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Org.BouncyCastle.Crypto.IBufferedCipher.Init(System.Boolean,Org.BouncyCastle.Crypto.ICipherParameters)
  commentId: M:Org.BouncyCastle.Crypto.IBufferedCipher.Init(System.Boolean,Org.BouncyCastle.Crypto.ICipherParameters)
  id: Init(System.Boolean,Org.BouncyCastle.Crypto.ICipherParameters)
  parent: Org.BouncyCastle.Crypto.IBufferedCipher
  langs:
  - csharp
  - vb
  name: Init(Boolean, ICipherParameters)
  nameWithType: IBufferedCipher.Init(Boolean, ICipherParameters)
  fullName: Org.BouncyCastle.Crypto.IBufferedCipher.Init(System.Boolean, Org.BouncyCastle.Crypto.ICipherParameters)
  type: Method
  source:
    id: Init
    path: ''
    startLine: 82661
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto
  summary: Initialise the cipher.
  example: []
  syntax:
    content: void Init(bool forEncryption, ICipherParameters parameters)
    parameters:
    - id: forEncryption
      type: System.Boolean
      description: >-
        If true the cipher is initialised for encryption,

        if false for decryption.
    - id: parameters
      type: Org.BouncyCastle.Crypto.ICipherParameters
      description: The key and other data required by the cipher.
    content.vb: Sub Init(forEncryption As Boolean, parameters As ICipherParameters)
  overload: Org.BouncyCastle.Crypto.IBufferedCipher.Init*
- uid: Org.BouncyCastle.Crypto.IBufferedCipher.GetBlockSize
  commentId: M:Org.BouncyCastle.Crypto.IBufferedCipher.GetBlockSize
  id: GetBlockSize
  parent: Org.BouncyCastle.Crypto.IBufferedCipher
  langs:
  - csharp
  - vb
  name: GetBlockSize()
  nameWithType: IBufferedCipher.GetBlockSize()
  fullName: Org.BouncyCastle.Crypto.IBufferedCipher.GetBlockSize()
  type: Method
  source:
    id: GetBlockSize
    path: ''
    startLine: 82663
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto
  syntax:
    content: int GetBlockSize()
    return:
      type: System.Int32
    content.vb: Function GetBlockSize As Integer
  overload: Org.BouncyCastle.Crypto.IBufferedCipher.GetBlockSize*
- uid: Org.BouncyCastle.Crypto.IBufferedCipher.GetOutputSize(System.Int32)
  commentId: M:Org.BouncyCastle.Crypto.IBufferedCipher.GetOutputSize(System.Int32)
  id: GetOutputSize(System.Int32)
  parent: Org.BouncyCastle.Crypto.IBufferedCipher
  langs:
  - csharp
  - vb
  name: GetOutputSize(Int32)
  nameWithType: IBufferedCipher.GetOutputSize(Int32)
  fullName: Org.BouncyCastle.Crypto.IBufferedCipher.GetOutputSize(System.Int32)
  type: Method
  source:
    id: GetOutputSize
    path: ''
    startLine: 82665
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto
  syntax:
    content: int GetOutputSize(int inputLen)
    parameters:
    - id: inputLen
      type: System.Int32
    return:
      type: System.Int32
    content.vb: Function GetOutputSize(inputLen As Integer) As Integer
  overload: Org.BouncyCastle.Crypto.IBufferedCipher.GetOutputSize*
- uid: Org.BouncyCastle.Crypto.IBufferedCipher.GetUpdateOutputSize(System.Int32)
  commentId: M:Org.BouncyCastle.Crypto.IBufferedCipher.GetUpdateOutputSize(System.Int32)
  id: GetUpdateOutputSize(System.Int32)
  parent: Org.BouncyCastle.Crypto.IBufferedCipher
  langs:
  - csharp
  - vb
  name: GetUpdateOutputSize(Int32)
  nameWithType: IBufferedCipher.GetUpdateOutputSize(Int32)
  fullName: Org.BouncyCastle.Crypto.IBufferedCipher.GetUpdateOutputSize(System.Int32)
  type: Method
  source:
    id: GetUpdateOutputSize
    path: ''
    startLine: 82667
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto
  syntax:
    content: int GetUpdateOutputSize(int inputLen)
    parameters:
    - id: inputLen
      type: System.Int32
    return:
      type: System.Int32
    content.vb: Function GetUpdateOutputSize(inputLen As Integer) As Integer
  overload: Org.BouncyCastle.Crypto.IBufferedCipher.GetUpdateOutputSize*
- uid: Org.BouncyCastle.Crypto.IBufferedCipher.ProcessByte(System.Byte)
  commentId: M:Org.BouncyCastle.Crypto.IBufferedCipher.ProcessByte(System.Byte)
  id: ProcessByte(System.Byte)
  parent: Org.BouncyCastle.Crypto.IBufferedCipher
  langs:
  - csharp
  - vb
  name: ProcessByte(Byte)
  nameWithType: IBufferedCipher.ProcessByte(Byte)
  fullName: Org.BouncyCastle.Crypto.IBufferedCipher.ProcessByte(System.Byte)
  type: Method
  source:
    id: ProcessByte
    path: ''
    startLine: 82669
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto
  syntax:
    content: byte[] ProcessByte(byte input)
    parameters:
    - id: input
      type: System.Byte
    return:
      type: System.Byte[]
    content.vb: Function ProcessByte(input As Byte) As Byte()
  overload: Org.BouncyCastle.Crypto.IBufferedCipher.ProcessByte*
- uid: Org.BouncyCastle.Crypto.IBufferedCipher.ProcessByte(System.Byte,System.Byte[],System.Int32)
  commentId: M:Org.BouncyCastle.Crypto.IBufferedCipher.ProcessByte(System.Byte,System.Byte[],System.Int32)
  id: ProcessByte(System.Byte,System.Byte[],System.Int32)
  parent: Org.BouncyCastle.Crypto.IBufferedCipher
  langs:
  - csharp
  - vb
  name: ProcessByte(Byte, Byte[], Int32)
  nameWithType: IBufferedCipher.ProcessByte(Byte, Byte[], Int32)
  fullName: Org.BouncyCastle.Crypto.IBufferedCipher.ProcessByte(System.Byte, System.Byte[], System.Int32)
  type: Method
  source:
    id: ProcessByte
    path: ''
    startLine: 82670
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto
  syntax:
    content: int ProcessByte(byte input, byte[] output, int outOff)
    parameters:
    - id: input
      type: System.Byte
    - id: output
      type: System.Byte[]
    - id: outOff
      type: System.Int32
    return:
      type: System.Int32
    content.vb: Function ProcessByte(input As Byte, output As Byte(), outOff As Integer) As Integer
  overload: Org.BouncyCastle.Crypto.IBufferedCipher.ProcessByte*
  nameWithType.vb: IBufferedCipher.ProcessByte(Byte, Byte(), Int32)
  fullName.vb: Org.BouncyCastle.Crypto.IBufferedCipher.ProcessByte(System.Byte, System.Byte(), System.Int32)
  name.vb: ProcessByte(Byte, Byte(), Int32)
- uid: Org.BouncyCastle.Crypto.IBufferedCipher.ProcessBytes(System.Byte[])
  commentId: M:Org.BouncyCastle.Crypto.IBufferedCipher.ProcessBytes(System.Byte[])
  id: ProcessBytes(System.Byte[])
  parent: Org.BouncyCastle.Crypto.IBufferedCipher
  langs:
  - csharp
  - vb
  name: ProcessBytes(Byte[])
  nameWithType: IBufferedCipher.ProcessBytes(Byte[])
  fullName: Org.BouncyCastle.Crypto.IBufferedCipher.ProcessBytes(System.Byte[])
  type: Method
  source:
    id: ProcessBytes
    path: ''
    startLine: 82672
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto
  syntax:
    content: byte[] ProcessBytes(byte[] input)
    parameters:
    - id: input
      type: System.Byte[]
    return:
      type: System.Byte[]
    content.vb: Function ProcessBytes(input As Byte()) As Byte()
  overload: Org.BouncyCastle.Crypto.IBufferedCipher.ProcessBytes*
  nameWithType.vb: IBufferedCipher.ProcessBytes(Byte())
  fullName.vb: Org.BouncyCastle.Crypto.IBufferedCipher.ProcessBytes(System.Byte())
  name.vb: ProcessBytes(Byte())
- uid: Org.BouncyCastle.Crypto.IBufferedCipher.ProcessBytes(System.Byte[],System.Int32,System.Int32)
  commentId: M:Org.BouncyCastle.Crypto.IBufferedCipher.ProcessBytes(System.Byte[],System.Int32,System.Int32)
  id: ProcessBytes(System.Byte[],System.Int32,System.Int32)
  parent: Org.BouncyCastle.Crypto.IBufferedCipher
  langs:
  - csharp
  - vb
  name: ProcessBytes(Byte[], Int32, Int32)
  nameWithType: IBufferedCipher.ProcessBytes(Byte[], Int32, Int32)
  fullName: Org.BouncyCastle.Crypto.IBufferedCipher.ProcessBytes(System.Byte[], System.Int32, System.Int32)
  type: Method
  source:
    id: ProcessBytes
    path: ''
    startLine: 82673
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto
  syntax:
    content: byte[] ProcessBytes(byte[] input, int inOff, int length)
    parameters:
    - id: input
      type: System.Byte[]
    - id: inOff
      type: System.Int32
    - id: length
      type: System.Int32
    return:
      type: System.Byte[]
    content.vb: Function ProcessBytes(input As Byte(), inOff As Integer, length As Integer) As Byte()
  overload: Org.BouncyCastle.Crypto.IBufferedCipher.ProcessBytes*
  nameWithType.vb: IBufferedCipher.ProcessBytes(Byte(), Int32, Int32)
  fullName.vb: Org.BouncyCastle.Crypto.IBufferedCipher.ProcessBytes(System.Byte(), System.Int32, System.Int32)
  name.vb: ProcessBytes(Byte(), Int32, Int32)
- uid: Org.BouncyCastle.Crypto.IBufferedCipher.ProcessBytes(System.Byte[],System.Byte[],System.Int32)
  commentId: M:Org.BouncyCastle.Crypto.IBufferedCipher.ProcessBytes(System.Byte[],System.Byte[],System.Int32)
  id: ProcessBytes(System.Byte[],System.Byte[],System.Int32)
  parent: Org.BouncyCastle.Crypto.IBufferedCipher
  langs:
  - csharp
  - vb
  name: ProcessBytes(Byte[], Byte[], Int32)
  nameWithType: IBufferedCipher.ProcessBytes(Byte[], Byte[], Int32)
  fullName: Org.BouncyCastle.Crypto.IBufferedCipher.ProcessBytes(System.Byte[], System.Byte[], System.Int32)
  type: Method
  source:
    id: ProcessBytes
    path: ''
    startLine: 82674
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto
  syntax:
    content: int ProcessBytes(byte[] input, byte[] output, int outOff)
    parameters:
    - id: input
      type: System.Byte[]
    - id: output
      type: System.Byte[]
    - id: outOff
      type: System.Int32
    return:
      type: System.Int32
    content.vb: Function ProcessBytes(input As Byte(), output As Byte(), outOff As Integer) As Integer
  overload: Org.BouncyCastle.Crypto.IBufferedCipher.ProcessBytes*
  nameWithType.vb: IBufferedCipher.ProcessBytes(Byte(), Byte(), Int32)
  fullName.vb: Org.BouncyCastle.Crypto.IBufferedCipher.ProcessBytes(System.Byte(), System.Byte(), System.Int32)
  name.vb: ProcessBytes(Byte(), Byte(), Int32)
- uid: Org.BouncyCastle.Crypto.IBufferedCipher.ProcessBytes(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)
  commentId: M:Org.BouncyCastle.Crypto.IBufferedCipher.ProcessBytes(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)
  id: ProcessBytes(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)
  parent: Org.BouncyCastle.Crypto.IBufferedCipher
  langs:
  - csharp
  - vb
  name: ProcessBytes(Byte[], Int32, Int32, Byte[], Int32)
  nameWithType: IBufferedCipher.ProcessBytes(Byte[], Int32, Int32, Byte[], Int32)
  fullName: Org.BouncyCastle.Crypto.IBufferedCipher.ProcessBytes(System.Byte[], System.Int32, System.Int32, System.Byte[], System.Int32)
  type: Method
  source:
    id: ProcessBytes
    path: ''
    startLine: 82675
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto
  syntax:
    content: int ProcessBytes(byte[] input, int inOff, int length, byte[] output, int outOff)
    parameters:
    - id: input
      type: System.Byte[]
    - id: inOff
      type: System.Int32
    - id: length
      type: System.Int32
    - id: output
      type: System.Byte[]
    - id: outOff
      type: System.Int32
    return:
      type: System.Int32
    content.vb: Function ProcessBytes(input As Byte(), inOff As Integer, length As Integer, output As Byte(), outOff As Integer) As Integer
  overload: Org.BouncyCastle.Crypto.IBufferedCipher.ProcessBytes*
  nameWithType.vb: IBufferedCipher.ProcessBytes(Byte(), Int32, Int32, Byte(), Int32)
  fullName.vb: Org.BouncyCastle.Crypto.IBufferedCipher.ProcessBytes(System.Byte(), System.Int32, System.Int32, System.Byte(), System.Int32)
  name.vb: ProcessBytes(Byte(), Int32, Int32, Byte(), Int32)
- uid: Org.BouncyCastle.Crypto.IBufferedCipher.DoFinal
  commentId: M:Org.BouncyCastle.Crypto.IBufferedCipher.DoFinal
  id: DoFinal
  parent: Org.BouncyCastle.Crypto.IBufferedCipher
  langs:
  - csharp
  - vb
  name: DoFinal()
  nameWithType: IBufferedCipher.DoFinal()
  fullName: Org.BouncyCastle.Crypto.IBufferedCipher.DoFinal()
  type: Method
  source:
    id: DoFinal
    path: ''
    startLine: 82677
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto
  syntax:
    content: byte[] DoFinal()
    return:
      type: System.Byte[]
    content.vb: Function DoFinal As Byte()
  overload: Org.BouncyCastle.Crypto.IBufferedCipher.DoFinal*
- uid: Org.BouncyCastle.Crypto.IBufferedCipher.DoFinal(System.Byte[])
  commentId: M:Org.BouncyCastle.Crypto.IBufferedCipher.DoFinal(System.Byte[])
  id: DoFinal(System.Byte[])
  parent: Org.BouncyCastle.Crypto.IBufferedCipher
  langs:
  - csharp
  - vb
  name: DoFinal(Byte[])
  nameWithType: IBufferedCipher.DoFinal(Byte[])
  fullName: Org.BouncyCastle.Crypto.IBufferedCipher.DoFinal(System.Byte[])
  type: Method
  source:
    id: DoFinal
    path: ''
    startLine: 82678
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto
  syntax:
    content: byte[] DoFinal(byte[] input)
    parameters:
    - id: input
      type: System.Byte[]
    return:
      type: System.Byte[]
    content.vb: Function DoFinal(input As Byte()) As Byte()
  overload: Org.BouncyCastle.Crypto.IBufferedCipher.DoFinal*
  nameWithType.vb: IBufferedCipher.DoFinal(Byte())
  fullName.vb: Org.BouncyCastle.Crypto.IBufferedCipher.DoFinal(System.Byte())
  name.vb: DoFinal(Byte())
- uid: Org.BouncyCastle.Crypto.IBufferedCipher.DoFinal(System.Byte[],System.Int32,System.Int32)
  commentId: M:Org.BouncyCastle.Crypto.IBufferedCipher.DoFinal(System.Byte[],System.Int32,System.Int32)
  id: DoFinal(System.Byte[],System.Int32,System.Int32)
  parent: Org.BouncyCastle.Crypto.IBufferedCipher
  langs:
  - csharp
  - vb
  name: DoFinal(Byte[], Int32, Int32)
  nameWithType: IBufferedCipher.DoFinal(Byte[], Int32, Int32)
  fullName: Org.BouncyCastle.Crypto.IBufferedCipher.DoFinal(System.Byte[], System.Int32, System.Int32)
  type: Method
  source:
    id: DoFinal
    path: ''
    startLine: 82679
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto
  syntax:
    content: byte[] DoFinal(byte[] input, int inOff, int length)
    parameters:
    - id: input
      type: System.Byte[]
    - id: inOff
      type: System.Int32
    - id: length
      type: System.Int32
    return:
      type: System.Byte[]
    content.vb: Function DoFinal(input As Byte(), inOff As Integer, length As Integer) As Byte()
  overload: Org.BouncyCastle.Crypto.IBufferedCipher.DoFinal*
  nameWithType.vb: IBufferedCipher.DoFinal(Byte(), Int32, Int32)
  fullName.vb: Org.BouncyCastle.Crypto.IBufferedCipher.DoFinal(System.Byte(), System.Int32, System.Int32)
  name.vb: DoFinal(Byte(), Int32, Int32)
- uid: Org.BouncyCastle.Crypto.IBufferedCipher.DoFinal(System.Byte[],System.Int32)
  commentId: M:Org.BouncyCastle.Crypto.IBufferedCipher.DoFinal(System.Byte[],System.Int32)
  id: DoFinal(System.Byte[],System.Int32)
  parent: Org.BouncyCastle.Crypto.IBufferedCipher
  langs:
  - csharp
  - vb
  name: DoFinal(Byte[], Int32)
  nameWithType: IBufferedCipher.DoFinal(Byte[], Int32)
  fullName: Org.BouncyCastle.Crypto.IBufferedCipher.DoFinal(System.Byte[], System.Int32)
  type: Method
  source:
    id: DoFinal
    path: ''
    startLine: 82680
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto
  syntax:
    content: int DoFinal(byte[] output, int outOff)
    parameters:
    - id: output
      type: System.Byte[]
    - id: outOff
      type: System.Int32
    return:
      type: System.Int32
    content.vb: Function DoFinal(output As Byte(), outOff As Integer) As Integer
  overload: Org.BouncyCastle.Crypto.IBufferedCipher.DoFinal*
  nameWithType.vb: IBufferedCipher.DoFinal(Byte(), Int32)
  fullName.vb: Org.BouncyCastle.Crypto.IBufferedCipher.DoFinal(System.Byte(), System.Int32)
  name.vb: DoFinal(Byte(), Int32)
- uid: Org.BouncyCastle.Crypto.IBufferedCipher.DoFinal(System.Byte[],System.Byte[],System.Int32)
  commentId: M:Org.BouncyCastle.Crypto.IBufferedCipher.DoFinal(System.Byte[],System.Byte[],System.Int32)
  id: DoFinal(System.Byte[],System.Byte[],System.Int32)
  parent: Org.BouncyCastle.Crypto.IBufferedCipher
  langs:
  - csharp
  - vb
  name: DoFinal(Byte[], Byte[], Int32)
  nameWithType: IBufferedCipher.DoFinal(Byte[], Byte[], Int32)
  fullName: Org.BouncyCastle.Crypto.IBufferedCipher.DoFinal(System.Byte[], System.Byte[], System.Int32)
  type: Method
  source:
    id: DoFinal
    path: ''
    startLine: 82681
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto
  syntax:
    content: int DoFinal(byte[] input, byte[] output, int outOff)
    parameters:
    - id: input
      type: System.Byte[]
    - id: output
      type: System.Byte[]
    - id: outOff
      type: System.Int32
    return:
      type: System.Int32
    content.vb: Function DoFinal(input As Byte(), output As Byte(), outOff As Integer) As Integer
  overload: Org.BouncyCastle.Crypto.IBufferedCipher.DoFinal*
  nameWithType.vb: IBufferedCipher.DoFinal(Byte(), Byte(), Int32)
  fullName.vb: Org.BouncyCastle.Crypto.IBufferedCipher.DoFinal(System.Byte(), System.Byte(), System.Int32)
  name.vb: DoFinal(Byte(), Byte(), Int32)
- uid: Org.BouncyCastle.Crypto.IBufferedCipher.DoFinal(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)
  commentId: M:Org.BouncyCastle.Crypto.IBufferedCipher.DoFinal(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)
  id: DoFinal(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)
  parent: Org.BouncyCastle.Crypto.IBufferedCipher
  langs:
  - csharp
  - vb
  name: DoFinal(Byte[], Int32, Int32, Byte[], Int32)
  nameWithType: IBufferedCipher.DoFinal(Byte[], Int32, Int32, Byte[], Int32)
  fullName: Org.BouncyCastle.Crypto.IBufferedCipher.DoFinal(System.Byte[], System.Int32, System.Int32, System.Byte[], System.Int32)
  type: Method
  source:
    id: DoFinal
    path: ''
    startLine: 82682
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto
  syntax:
    content: int DoFinal(byte[] input, int inOff, int length, byte[] output, int outOff)
    parameters:
    - id: input
      type: System.Byte[]
    - id: inOff
      type: System.Int32
    - id: length
      type: System.Int32
    - id: output
      type: System.Byte[]
    - id: outOff
      type: System.Int32
    return:
      type: System.Int32
    content.vb: Function DoFinal(input As Byte(), inOff As Integer, length As Integer, output As Byte(), outOff As Integer) As Integer
  overload: Org.BouncyCastle.Crypto.IBufferedCipher.DoFinal*
  nameWithType.vb: IBufferedCipher.DoFinal(Byte(), Int32, Int32, Byte(), Int32)
  fullName.vb: Org.BouncyCastle.Crypto.IBufferedCipher.DoFinal(System.Byte(), System.Int32, System.Int32, System.Byte(), System.Int32)
  name.vb: DoFinal(Byte(), Int32, Int32, Byte(), Int32)
- uid: Org.BouncyCastle.Crypto.IBufferedCipher.Reset
  commentId: M:Org.BouncyCastle.Crypto.IBufferedCipher.Reset
  id: Reset
  parent: Org.BouncyCastle.Crypto.IBufferedCipher
  langs:
  - csharp
  - vb
  name: Reset()
  nameWithType: IBufferedCipher.Reset()
  fullName: Org.BouncyCastle.Crypto.IBufferedCipher.Reset()
  type: Method
  source:
    id: Reset
    path: ''
    startLine: 82688
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto
  summary: "\nReset the cipher. After resetting the cipher is in the same state\nas it was after the last init (if there was one).\n"
  example: []
  syntax:
    content: void Reset()
    content.vb: Sub Reset
  overload: Org.BouncyCastle.Crypto.IBufferedCipher.Reset*
references:
- uid: Org.BouncyCastle.Crypto
  commentId: N:Org.BouncyCastle.Crypto
  name: Org.BouncyCastle.Crypto
  nameWithType: Org.BouncyCastle.Crypto
  fullName: Org.BouncyCastle.Crypto
- uid: Org.BouncyCastle.Crypto.IBufferedCipher.AlgorithmName*
  commentId: Overload:Org.BouncyCastle.Crypto.IBufferedCipher.AlgorithmName
  name: AlgorithmName
  nameWithType: IBufferedCipher.AlgorithmName
  fullName: Org.BouncyCastle.Crypto.IBufferedCipher.AlgorithmName
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Org.BouncyCastle.Crypto.IBufferedCipher.Init*
  commentId: Overload:Org.BouncyCastle.Crypto.IBufferedCipher.Init
  name: Init
  nameWithType: IBufferedCipher.Init
  fullName: Org.BouncyCastle.Crypto.IBufferedCipher.Init
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Org.BouncyCastle.Crypto.ICipherParameters
  commentId: T:Org.BouncyCastle.Crypto.ICipherParameters
  parent: Org.BouncyCastle.Crypto
  name: ICipherParameters
  nameWithType: ICipherParameters
  fullName: Org.BouncyCastle.Crypto.ICipherParameters
- uid: Org.BouncyCastle.Crypto.IBufferedCipher.GetBlockSize*
  commentId: Overload:Org.BouncyCastle.Crypto.IBufferedCipher.GetBlockSize
  name: GetBlockSize
  nameWithType: IBufferedCipher.GetBlockSize
  fullName: Org.BouncyCastle.Crypto.IBufferedCipher.GetBlockSize
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Org.BouncyCastle.Crypto.IBufferedCipher.GetOutputSize*
  commentId: Overload:Org.BouncyCastle.Crypto.IBufferedCipher.GetOutputSize
  name: GetOutputSize
  nameWithType: IBufferedCipher.GetOutputSize
  fullName: Org.BouncyCastle.Crypto.IBufferedCipher.GetOutputSize
- uid: Org.BouncyCastle.Crypto.IBufferedCipher.GetUpdateOutputSize*
  commentId: Overload:Org.BouncyCastle.Crypto.IBufferedCipher.GetUpdateOutputSize
  name: GetUpdateOutputSize
  nameWithType: IBufferedCipher.GetUpdateOutputSize
  fullName: Org.BouncyCastle.Crypto.IBufferedCipher.GetUpdateOutputSize
- uid: Org.BouncyCastle.Crypto.IBufferedCipher.ProcessByte*
  commentId: Overload:Org.BouncyCastle.Crypto.IBufferedCipher.ProcessByte
  name: ProcessByte
  nameWithType: IBufferedCipher.ProcessByte
  fullName: Org.BouncyCastle.Crypto.IBufferedCipher.ProcessByte
- uid: System.Byte
  commentId: T:System.Byte
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte
- uid: System.Byte[]
  isExternal: true
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullName.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Org.BouncyCastle.Crypto.IBufferedCipher.ProcessBytes*
  commentId: Overload:Org.BouncyCastle.Crypto.IBufferedCipher.ProcessBytes
  name: ProcessBytes
  nameWithType: IBufferedCipher.ProcessBytes
  fullName: Org.BouncyCastle.Crypto.IBufferedCipher.ProcessBytes
- uid: Org.BouncyCastle.Crypto.IBufferedCipher.DoFinal*
  commentId: Overload:Org.BouncyCastle.Crypto.IBufferedCipher.DoFinal
  name: DoFinal
  nameWithType: IBufferedCipher.DoFinal
  fullName: Org.BouncyCastle.Crypto.IBufferedCipher.DoFinal
- uid: Org.BouncyCastle.Crypto.IBufferedCipher.Reset*
  commentId: Overload:Org.BouncyCastle.Crypto.IBufferedCipher.Reset
  name: Reset
  nameWithType: IBufferedCipher.Reset
  fullName: Org.BouncyCastle.Crypto.IBufferedCipher.Reset
