### YamlMime:ManagedReference
items:
- uid: Org.BouncyCastle.Crypto.Parameters.DesParameters
  commentId: T:Org.BouncyCastle.Crypto.Parameters.DesParameters
  id: DesParameters
  parent: Org.BouncyCastle.Crypto.Parameters
  children:
  - Org.BouncyCastle.Crypto.Parameters.DesParameters.#ctor(System.Byte[])
  - Org.BouncyCastle.Crypto.Parameters.DesParameters.#ctor(System.Byte[],System.Int32,System.Int32)
  - Org.BouncyCastle.Crypto.Parameters.DesParameters.DesKeyLength
  - Org.BouncyCastle.Crypto.Parameters.DesParameters.IsWeakKey(System.Byte[])
  - Org.BouncyCastle.Crypto.Parameters.DesParameters.IsWeakKey(System.Byte[],System.Int32)
  - Org.BouncyCastle.Crypto.Parameters.DesParameters.SetOddParity(System.Byte)
  - Org.BouncyCastle.Crypto.Parameters.DesParameters.SetOddParity(System.Byte[])
  - Org.BouncyCastle.Crypto.Parameters.DesParameters.SetOddParity(System.Byte[],System.Int32,System.Int32)
  langs:
  - csharp
  - vb
  name: DesParameters
  nameWithType: DesParameters
  fullName: Org.BouncyCastle.Crypto.Parameters.DesParameters
  type: Class
  source:
    id: DesParameters
    path: ''
    startLine: 105136
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Parameters
  syntax:
    content: 'public class DesParameters : KeyParameter, ICipherParameters'
    content.vb: >-
      Public Class DesParameters
          Inherits KeyParameter
          Implements ICipherParameters
  inheritance:
  - System.Object
  - Org.BouncyCastle.Crypto.Parameters.KeyParameter
  derivedClasses:
  - Org.BouncyCastle.Crypto.Parameters.DesEdeParameters
  implements:
  - Org.BouncyCastle.Crypto.ICipherParameters
  inheritedMembers:
  - Org.BouncyCastle.Crypto.Parameters.KeyParameter.GetKey
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ToString
  - System.Object.ReferenceEquals(System.Object,System.Object)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Org.BouncyCastle.Crypto.Parameters.DesParameters.#ctor(System.Byte[])
  commentId: M:Org.BouncyCastle.Crypto.Parameters.DesParameters.#ctor(System.Byte[])
  id: '#ctor(System.Byte[])'
  parent: Org.BouncyCastle.Crypto.Parameters.DesParameters
  langs:
  - csharp
  - vb
  name: DesParameters(Byte[])
  nameWithType: DesParameters.DesParameters(Byte[])
  fullName: Org.BouncyCastle.Crypto.Parameters.DesParameters.DesParameters(System.Byte[])
  type: Constructor
  source:
    id: .ctor
    path: ''
    startLine: 105139
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Parameters
  syntax:
    content: public DesParameters(byte[] key)
    parameters:
    - id: key
      type: System.Byte[]
    content.vb: Public Sub New(key As Byte())
  overload: Org.BouncyCastle.Crypto.Parameters.DesParameters.#ctor*
  nameWithType.vb: DesParameters.DesParameters(Byte())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Org.BouncyCastle.Crypto.Parameters.DesParameters.DesParameters(System.Byte())
  name.vb: DesParameters(Byte())
- uid: Org.BouncyCastle.Crypto.Parameters.DesParameters.#ctor(System.Byte[],System.Int32,System.Int32)
  commentId: M:Org.BouncyCastle.Crypto.Parameters.DesParameters.#ctor(System.Byte[],System.Int32,System.Int32)
  id: '#ctor(System.Byte[],System.Int32,System.Int32)'
  parent: Org.BouncyCastle.Crypto.Parameters.DesParameters
  langs:
  - csharp
  - vb
  name: DesParameters(Byte[], Int32, Int32)
  nameWithType: DesParameters.DesParameters(Byte[], Int32, Int32)
  fullName: Org.BouncyCastle.Crypto.Parameters.DesParameters.DesParameters(System.Byte[], System.Int32, System.Int32)
  type: Constructor
  source:
    id: .ctor
    path: ''
    startLine: 105147
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Parameters
  syntax:
    content: public DesParameters(byte[] key, int keyOff, int keyLen)
    parameters:
    - id: key
      type: System.Byte[]
    - id: keyOff
      type: System.Int32
    - id: keyLen
      type: System.Int32
    content.vb: Public Sub New(key As Byte(), keyOff As Integer, keyLen As Integer)
  overload: Org.BouncyCastle.Crypto.Parameters.DesParameters.#ctor*
  nameWithType.vb: DesParameters.DesParameters(Byte(), Int32, Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Org.BouncyCastle.Crypto.Parameters.DesParameters.DesParameters(System.Byte(), System.Int32, System.Int32)
  name.vb: DesParameters(Byte(), Int32, Int32)
- uid: Org.BouncyCastle.Crypto.Parameters.DesParameters.DesKeyLength
  commentId: F:Org.BouncyCastle.Crypto.Parameters.DesParameters.DesKeyLength
  id: DesKeyLength
  parent: Org.BouncyCastle.Crypto.Parameters.DesParameters
  langs:
  - csharp
  - vb
  name: DesKeyLength
  nameWithType: DesParameters.DesKeyLength
  fullName: Org.BouncyCastle.Crypto.Parameters.DesParameters.DesKeyLength
  type: Field
  source:
    id: DesKeyLength
    path: ''
    startLine: 105160
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Parameters
  syntax:
    content: public const int DesKeyLength = 8
    return:
      type: System.Int32
    content.vb: Public Const DesKeyLength As Integer = 8
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Org.BouncyCastle.Crypto.Parameters.DesParameters.IsWeakKey(System.Byte[],System.Int32)
  commentId: M:Org.BouncyCastle.Crypto.Parameters.DesParameters.IsWeakKey(System.Byte[],System.Int32)
  id: IsWeakKey(System.Byte[],System.Int32)
  parent: Org.BouncyCastle.Crypto.Parameters.DesParameters
  langs:
  - csharp
  - vb
  name: IsWeakKey(Byte[], Int32)
  nameWithType: DesParameters.IsWeakKey(Byte[], Int32)
  fullName: Org.BouncyCastle.Crypto.Parameters.DesParameters.IsWeakKey(System.Byte[], System.Int32)
  type: Method
  source:
    id: IsWeakKey
    path: ''
    startLine: 105201
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Parameters
  example: []
  syntax:
    content: public static bool IsWeakKey(byte[] key, int offset)
    parameters:
    - id: key
      type: System.Byte[]
    - id: offset
      type: System.Int32
    return:
      type: System.Boolean
    content.vb: Public Shared Function IsWeakKey(key As Byte(), offset As Integer) As Boolean
  overload: Org.BouncyCastle.Crypto.Parameters.DesParameters.IsWeakKey*
  nameWithType.vb: DesParameters.IsWeakKey(Byte(), Int32)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Org.BouncyCastle.Crypto.Parameters.DesParameters.IsWeakKey(System.Byte(), System.Int32)
  name.vb: IsWeakKey(Byte(), Int32)
- uid: Org.BouncyCastle.Crypto.Parameters.DesParameters.IsWeakKey(System.Byte[])
  commentId: M:Org.BouncyCastle.Crypto.Parameters.DesParameters.IsWeakKey(System.Byte[])
  id: IsWeakKey(System.Byte[])
  parent: Org.BouncyCastle.Crypto.Parameters.DesParameters
  langs:
  - csharp
  - vb
  name: IsWeakKey(Byte[])
  nameWithType: DesParameters.IsWeakKey(Byte[])
  fullName: Org.BouncyCastle.Crypto.Parameters.DesParameters.IsWeakKey(System.Byte[])
  type: Method
  source:
    id: IsWeakKey
    path: ''
    startLine: 105231
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Parameters
  syntax:
    content: public static bool IsWeakKey(byte[] key)
    parameters:
    - id: key
      type: System.Byte[]
    return:
      type: System.Boolean
    content.vb: Public Shared Function IsWeakKey(key As Byte()) As Boolean
  overload: Org.BouncyCastle.Crypto.Parameters.DesParameters.IsWeakKey*
  nameWithType.vb: DesParameters.IsWeakKey(Byte())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Org.BouncyCastle.Crypto.Parameters.DesParameters.IsWeakKey(System.Byte())
  name.vb: IsWeakKey(Byte())
- uid: Org.BouncyCastle.Crypto.Parameters.DesParameters.SetOddParity(System.Byte)
  commentId: M:Org.BouncyCastle.Crypto.Parameters.DesParameters.SetOddParity(System.Byte)
  id: SetOddParity(System.Byte)
  parent: Org.BouncyCastle.Crypto.Parameters.DesParameters
  langs:
  - csharp
  - vb
  name: SetOddParity(Byte)
  nameWithType: DesParameters.SetOddParity(Byte)
  fullName: Org.BouncyCastle.Crypto.Parameters.DesParameters.SetOddParity(System.Byte)
  type: Method
  source:
    id: SetOddParity
    path: ''
    startLine: 105237
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Parameters
  syntax:
    content: public static byte SetOddParity(byte b)
    parameters:
    - id: b
      type: System.Byte
    return:
      type: System.Byte
    content.vb: Public Shared Function SetOddParity(b As Byte) As Byte
  overload: Org.BouncyCastle.Crypto.Parameters.DesParameters.SetOddParity*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Org.BouncyCastle.Crypto.Parameters.DesParameters.SetOddParity(System.Byte[])
  commentId: M:Org.BouncyCastle.Crypto.Parameters.DesParameters.SetOddParity(System.Byte[])
  id: SetOddParity(System.Byte[])
  parent: Org.BouncyCastle.Crypto.Parameters.DesParameters
  langs:
  - csharp
  - vb
  name: SetOddParity(Byte[])
  nameWithType: DesParameters.SetOddParity(Byte[])
  fullName: Org.BouncyCastle.Crypto.Parameters.DesParameters.SetOddParity(System.Byte[])
  type: Method
  source:
    id: SetOddParity
    path: ''
    startLine: 105254
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Parameters
  example: []
  syntax:
    content: public static void SetOddParity(byte[] bytes)
    parameters:
    - id: bytes
      type: System.Byte[]
    content.vb: Public Shared Sub SetOddParity(bytes As Byte())
  overload: Org.BouncyCastle.Crypto.Parameters.DesParameters.SetOddParity*
  nameWithType.vb: DesParameters.SetOddParity(Byte())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Org.BouncyCastle.Crypto.Parameters.DesParameters.SetOddParity(System.Byte())
  name.vb: SetOddParity(Byte())
- uid: Org.BouncyCastle.Crypto.Parameters.DesParameters.SetOddParity(System.Byte[],System.Int32,System.Int32)
  commentId: M:Org.BouncyCastle.Crypto.Parameters.DesParameters.SetOddParity(System.Byte[],System.Int32,System.Int32)
  id: SetOddParity(System.Byte[],System.Int32,System.Int32)
  parent: Org.BouncyCastle.Crypto.Parameters.DesParameters
  langs:
  - csharp
  - vb
  name: SetOddParity(Byte[], Int32, Int32)
  nameWithType: DesParameters.SetOddParity(Byte[], Int32, Int32)
  fullName: Org.BouncyCastle.Crypto.Parameters.DesParameters.SetOddParity(System.Byte[], System.Int32, System.Int32)
  type: Method
  source:
    id: SetOddParity
    path: ''
    startLine: 105262
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Parameters
  syntax:
    content: public static void SetOddParity(byte[] bytes, int off, int len)
    parameters:
    - id: bytes
      type: System.Byte[]
    - id: off
      type: System.Int32
    - id: len
      type: System.Int32
    content.vb: Public Shared Sub SetOddParity(bytes As Byte(), off As Integer, len As Integer)
  overload: Org.BouncyCastle.Crypto.Parameters.DesParameters.SetOddParity*
  nameWithType.vb: DesParameters.SetOddParity(Byte(), Int32, Int32)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Org.BouncyCastle.Crypto.Parameters.DesParameters.SetOddParity(System.Byte(), System.Int32, System.Int32)
  name.vb: SetOddParity(Byte(), Int32, Int32)
references:
- uid: Org.BouncyCastle.Crypto.Parameters
  commentId: N:Org.BouncyCastle.Crypto.Parameters
  name: Org.BouncyCastle.Crypto.Parameters
  nameWithType: Org.BouncyCastle.Crypto.Parameters
  fullName: Org.BouncyCastle.Crypto.Parameters
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Org.BouncyCastle.Crypto.Parameters.KeyParameter
  commentId: T:Org.BouncyCastle.Crypto.Parameters.KeyParameter
  parent: Org.BouncyCastle.Crypto.Parameters
  name: KeyParameter
  nameWithType: KeyParameter
  fullName: Org.BouncyCastle.Crypto.Parameters.KeyParameter
- uid: Org.BouncyCastle.Crypto.ICipherParameters
  commentId: T:Org.BouncyCastle.Crypto.ICipherParameters
  parent: Org.BouncyCastle.Crypto
  name: ICipherParameters
  nameWithType: ICipherParameters
  fullName: Org.BouncyCastle.Crypto.ICipherParameters
- uid: Org.BouncyCastle.Crypto.Parameters.KeyParameter.GetKey
  commentId: M:Org.BouncyCastle.Crypto.Parameters.KeyParameter.GetKey
  parent: Org.BouncyCastle.Crypto.Parameters.KeyParameter
  name: GetKey()
  nameWithType: KeyParameter.GetKey()
  fullName: Org.BouncyCastle.Crypto.Parameters.KeyParameter.GetKey()
  spec.csharp:
  - uid: Org.BouncyCastle.Crypto.Parameters.KeyParameter.GetKey
    name: GetKey
    nameWithType: KeyParameter.GetKey
    fullName: Org.BouncyCastle.Crypto.Parameters.KeyParameter.GetKey
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Org.BouncyCastle.Crypto.Parameters.KeyParameter.GetKey
    name: GetKey
    nameWithType: KeyParameter.GetKey
    fullName: Org.BouncyCastle.Crypto.Parameters.KeyParameter.GetKey
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Org.BouncyCastle.Crypto
  commentId: N:Org.BouncyCastle.Crypto
  name: Org.BouncyCastle.Crypto
  nameWithType: Org.BouncyCastle.Crypto
  fullName: Org.BouncyCastle.Crypto
- uid: Org.BouncyCastle.Crypto.Parameters.DesParameters.#ctor*
  commentId: Overload:Org.BouncyCastle.Crypto.Parameters.DesParameters.#ctor
  name: DesParameters
  nameWithType: DesParameters.DesParameters
  fullName: Org.BouncyCastle.Crypto.Parameters.DesParameters.DesParameters
- uid: System.Byte[]
  isExternal: true
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullName.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Org.BouncyCastle.Crypto.Parameters.DesParameters.IsWeakKey*
  commentId: Overload:Org.BouncyCastle.Crypto.Parameters.DesParameters.IsWeakKey
  name: IsWeakKey
  nameWithType: DesParameters.IsWeakKey
  fullName: Org.BouncyCastle.Crypto.Parameters.DesParameters.IsWeakKey
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Org.BouncyCastle.Crypto.Parameters.DesParameters.SetOddParity*
  commentId: Overload:Org.BouncyCastle.Crypto.Parameters.DesParameters.SetOddParity
  name: SetOddParity
  nameWithType: DesParameters.SetOddParity
  fullName: Org.BouncyCastle.Crypto.Parameters.DesParameters.SetOddParity
- uid: System.Byte
  commentId: T:System.Byte
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte
