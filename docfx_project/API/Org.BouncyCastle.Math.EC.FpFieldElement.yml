### YamlMime:ManagedReference
items:
- uid: Org.BouncyCastle.Math.EC.FpFieldElement
  commentId: T:Org.BouncyCastle.Math.EC.FpFieldElement
  id: FpFieldElement
  parent: Org.BouncyCastle.Math.EC
  children:
  - Org.BouncyCastle.Math.EC.FpFieldElement.#ctor(Org.BouncyCastle.Math.BigInteger,Org.BouncyCastle.Math.BigInteger)
  - Org.BouncyCastle.Math.EC.FpFieldElement.Add(Org.BouncyCastle.Math.EC.ECFieldElement)
  - Org.BouncyCastle.Math.EC.FpFieldElement.AddOne
  - Org.BouncyCastle.Math.EC.FpFieldElement.Divide(Org.BouncyCastle.Math.EC.ECFieldElement)
  - Org.BouncyCastle.Math.EC.FpFieldElement.Equals(Org.BouncyCastle.Math.EC.FpFieldElement)
  - Org.BouncyCastle.Math.EC.FpFieldElement.Equals(System.Object)
  - Org.BouncyCastle.Math.EC.FpFieldElement.FieldName
  - Org.BouncyCastle.Math.EC.FpFieldElement.FieldSize
  - Org.BouncyCastle.Math.EC.FpFieldElement.GetHashCode
  - Org.BouncyCastle.Math.EC.FpFieldElement.Invert
  - Org.BouncyCastle.Math.EC.FpFieldElement.ModAdd(Org.BouncyCastle.Math.BigInteger,Org.BouncyCastle.Math.BigInteger)
  - Org.BouncyCastle.Math.EC.FpFieldElement.ModDouble(Org.BouncyCastle.Math.BigInteger)
  - Org.BouncyCastle.Math.EC.FpFieldElement.ModHalf(Org.BouncyCastle.Math.BigInteger)
  - Org.BouncyCastle.Math.EC.FpFieldElement.ModHalfAbs(Org.BouncyCastle.Math.BigInteger)
  - Org.BouncyCastle.Math.EC.FpFieldElement.ModInverse(Org.BouncyCastle.Math.BigInteger)
  - Org.BouncyCastle.Math.EC.FpFieldElement.ModMult(Org.BouncyCastle.Math.BigInteger,Org.BouncyCastle.Math.BigInteger)
  - Org.BouncyCastle.Math.EC.FpFieldElement.ModReduce(Org.BouncyCastle.Math.BigInteger)
  - Org.BouncyCastle.Math.EC.FpFieldElement.ModSubtract(Org.BouncyCastle.Math.BigInteger,Org.BouncyCastle.Math.BigInteger)
  - Org.BouncyCastle.Math.EC.FpFieldElement.Multiply(Org.BouncyCastle.Math.EC.ECFieldElement)
  - Org.BouncyCastle.Math.EC.FpFieldElement.MultiplyMinusProduct(Org.BouncyCastle.Math.EC.ECFieldElement,Org.BouncyCastle.Math.EC.ECFieldElement,Org.BouncyCastle.Math.EC.ECFieldElement)
  - Org.BouncyCastle.Math.EC.FpFieldElement.MultiplyPlusProduct(Org.BouncyCastle.Math.EC.ECFieldElement,Org.BouncyCastle.Math.EC.ECFieldElement,Org.BouncyCastle.Math.EC.ECFieldElement)
  - Org.BouncyCastle.Math.EC.FpFieldElement.Negate
  - Org.BouncyCastle.Math.EC.FpFieldElement.Q
  - Org.BouncyCastle.Math.EC.FpFieldElement.Sqrt
  - Org.BouncyCastle.Math.EC.FpFieldElement.Square
  - Org.BouncyCastle.Math.EC.FpFieldElement.SquareMinusProduct(Org.BouncyCastle.Math.EC.ECFieldElement,Org.BouncyCastle.Math.EC.ECFieldElement)
  - Org.BouncyCastle.Math.EC.FpFieldElement.SquarePlusProduct(Org.BouncyCastle.Math.EC.ECFieldElement,Org.BouncyCastle.Math.EC.ECFieldElement)
  - Org.BouncyCastle.Math.EC.FpFieldElement.Subtract(Org.BouncyCastle.Math.EC.ECFieldElement)
  - Org.BouncyCastle.Math.EC.FpFieldElement.ToBigInteger
  langs:
  - csharp
  - vb
  name: FpFieldElement
  nameWithType: FpFieldElement
  fullName: Org.BouncyCastle.Math.EC.FpFieldElement
  type: Class
  source:
    id: FpFieldElement
    path: ''
    startLine: 107204
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Math.EC
  syntax:
    content: 'public class FpFieldElement : ECFieldElement'
    content.vb: >-
      Public Class FpFieldElement
          Inherits ECFieldElement
  inheritance:
  - System.Object
  - Org.BouncyCastle.Math.EC.ECFieldElement
  inheritedMembers:
  - Org.BouncyCastle.Math.EC.ECFieldElement.BitLength
  - Org.BouncyCastle.Math.EC.ECFieldElement.IsOne
  - Org.BouncyCastle.Math.EC.ECFieldElement.IsZero
  - Org.BouncyCastle.Math.EC.ECFieldElement.SquarePow(System.Int32)
  - Org.BouncyCastle.Math.EC.ECFieldElement.TestBitZero
  - Org.BouncyCastle.Math.EC.ECFieldElement.Equals(Org.BouncyCastle.Math.EC.ECFieldElement)
  - Org.BouncyCastle.Math.EC.ECFieldElement.ToString
  - Org.BouncyCastle.Math.EC.ECFieldElement.GetEncoded
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Org.BouncyCastle.Math.EC.FpFieldElement.#ctor(Org.BouncyCastle.Math.BigInteger,Org.BouncyCastle.Math.BigInteger)
  commentId: M:Org.BouncyCastle.Math.EC.FpFieldElement.#ctor(Org.BouncyCastle.Math.BigInteger,Org.BouncyCastle.Math.BigInteger)
  id: '#ctor(Org.BouncyCastle.Math.BigInteger,Org.BouncyCastle.Math.BigInteger)'
  parent: Org.BouncyCastle.Math.EC.FpFieldElement
  langs:
  - csharp
  - vb
  name: FpFieldElement(BigInteger, BigInteger)
  nameWithType: FpFieldElement.FpFieldElement(BigInteger, BigInteger)
  fullName: Org.BouncyCastle.Math.EC.FpFieldElement.FpFieldElement(Org.BouncyCastle.Math.BigInteger, Org.BouncyCastle.Math.BigInteger)
  type: Constructor
  source:
    id: .ctor
    path: ''
    startLine: 107227
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Math.EC
  syntax:
    content: public FpFieldElement(BigInteger q, BigInteger x)
    parameters:
    - id: q
      type: Org.BouncyCastle.Math.BigInteger
    - id: x
      type: Org.BouncyCastle.Math.BigInteger
    content.vb: Public Sub New(q As BigInteger, x As BigInteger)
  overload: Org.BouncyCastle.Math.EC.FpFieldElement.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Org.BouncyCastle.Math.EC.FpFieldElement.ToBigInteger
  commentId: M:Org.BouncyCastle.Math.EC.FpFieldElement.ToBigInteger
  id: ToBigInteger
  parent: Org.BouncyCastle.Math.EC.FpFieldElement
  langs:
  - csharp
  - vb
  name: ToBigInteger()
  nameWithType: FpFieldElement.ToBigInteger()
  fullName: Org.BouncyCastle.Math.EC.FpFieldElement.ToBigInteger()
  type: Method
  source:
    id: ToBigInteger
    path: ''
    startLine: 107242
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Math.EC
  syntax:
    content: public override BigInteger ToBigInteger()
    return:
      type: Org.BouncyCastle.Math.BigInteger
    content.vb: Public Overrides Function ToBigInteger As BigInteger
  overridden: Org.BouncyCastle.Math.EC.ECFieldElement.ToBigInteger
  overload: Org.BouncyCastle.Math.EC.FpFieldElement.ToBigInteger*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Org.BouncyCastle.Math.EC.FpFieldElement.FieldName
  commentId: P:Org.BouncyCastle.Math.EC.FpFieldElement.FieldName
  id: FieldName
  parent: Org.BouncyCastle.Math.EC.FpFieldElement
  langs:
  - csharp
  - vb
  name: FieldName
  nameWithType: FpFieldElement.FieldName
  fullName: Org.BouncyCastle.Math.EC.FpFieldElement.FieldName
  type: Property
  source:
    id: FieldName
    path: ''
    startLine: 107252
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Math.EC
  example: []
  syntax:
    content: public override string FieldName { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Overrides ReadOnly Property FieldName As String
  overridden: Org.BouncyCastle.Math.EC.ECFieldElement.FieldName
  overload: Org.BouncyCastle.Math.EC.FpFieldElement.FieldName*
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: Org.BouncyCastle.Math.EC.FpFieldElement.FieldSize
  commentId: P:Org.BouncyCastle.Math.EC.FpFieldElement.FieldSize
  id: FieldSize
  parent: Org.BouncyCastle.Math.EC.FpFieldElement
  langs:
  - csharp
  - vb
  name: FieldSize
  nameWithType: FpFieldElement.FieldSize
  fullName: Org.BouncyCastle.Math.EC.FpFieldElement.FieldSize
  type: Property
  source:
    id: FieldSize
    path: ''
    startLine: 107257
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Math.EC
  syntax:
    content: public override int FieldSize { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Overrides ReadOnly Property FieldSize As Integer
  overridden: Org.BouncyCastle.Math.EC.ECFieldElement.FieldSize
  overload: Org.BouncyCastle.Math.EC.FpFieldElement.FieldSize*
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: Org.BouncyCastle.Math.EC.FpFieldElement.Q
  commentId: P:Org.BouncyCastle.Math.EC.FpFieldElement.Q
  id: Q
  parent: Org.BouncyCastle.Math.EC.FpFieldElement
  langs:
  - csharp
  - vb
  name: Q
  nameWithType: FpFieldElement.Q
  fullName: Org.BouncyCastle.Math.EC.FpFieldElement.Q
  type: Property
  source:
    id: Q
    path: ''
    startLine: 107262
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Math.EC
  syntax:
    content: public BigInteger Q { get; }
    parameters: []
    return:
      type: Org.BouncyCastle.Math.BigInteger
    content.vb: Public ReadOnly Property Q As BigInteger
  overload: Org.BouncyCastle.Math.EC.FpFieldElement.Q*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Org.BouncyCastle.Math.EC.FpFieldElement.Add(Org.BouncyCastle.Math.EC.ECFieldElement)
  commentId: M:Org.BouncyCastle.Math.EC.FpFieldElement.Add(Org.BouncyCastle.Math.EC.ECFieldElement)
  id: Add(Org.BouncyCastle.Math.EC.ECFieldElement)
  parent: Org.BouncyCastle.Math.EC.FpFieldElement
  langs:
  - csharp
  - vb
  name: Add(ECFieldElement)
  nameWithType: FpFieldElement.Add(ECFieldElement)
  fullName: Org.BouncyCastle.Math.EC.FpFieldElement.Add(Org.BouncyCastle.Math.EC.ECFieldElement)
  type: Method
  source:
    id: Add
    path: ''
    startLine: 107267
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Math.EC
  syntax:
    content: public override ECFieldElement Add(ECFieldElement b)
    parameters:
    - id: b
      type: Org.BouncyCastle.Math.EC.ECFieldElement
    return:
      type: Org.BouncyCastle.Math.EC.ECFieldElement
    content.vb: Public Overrides Function Add(b As ECFieldElement) As ECFieldElement
  overridden: Org.BouncyCastle.Math.EC.ECFieldElement.Add(Org.BouncyCastle.Math.EC.ECFieldElement)
  overload: Org.BouncyCastle.Math.EC.FpFieldElement.Add*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Org.BouncyCastle.Math.EC.FpFieldElement.AddOne
  commentId: M:Org.BouncyCastle.Math.EC.FpFieldElement.AddOne
  id: AddOne
  parent: Org.BouncyCastle.Math.EC.FpFieldElement
  langs:
  - csharp
  - vb
  name: AddOne()
  nameWithType: FpFieldElement.AddOne()
  fullName: Org.BouncyCastle.Math.EC.FpFieldElement.AddOne()
  type: Method
  source:
    id: AddOne
    path: ''
    startLine: 107273
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Math.EC
  syntax:
    content: public override ECFieldElement AddOne()
    return:
      type: Org.BouncyCastle.Math.EC.ECFieldElement
    content.vb: Public Overrides Function AddOne As ECFieldElement
  overridden: Org.BouncyCastle.Math.EC.ECFieldElement.AddOne
  overload: Org.BouncyCastle.Math.EC.FpFieldElement.AddOne*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Org.BouncyCastle.Math.EC.FpFieldElement.Subtract(Org.BouncyCastle.Math.EC.ECFieldElement)
  commentId: M:Org.BouncyCastle.Math.EC.FpFieldElement.Subtract(Org.BouncyCastle.Math.EC.ECFieldElement)
  id: Subtract(Org.BouncyCastle.Math.EC.ECFieldElement)
  parent: Org.BouncyCastle.Math.EC.FpFieldElement
  langs:
  - csharp
  - vb
  name: Subtract(ECFieldElement)
  nameWithType: FpFieldElement.Subtract(ECFieldElement)
  fullName: Org.BouncyCastle.Math.EC.FpFieldElement.Subtract(Org.BouncyCastle.Math.EC.ECFieldElement)
  type: Method
  source:
    id: Subtract
    path: ''
    startLine: 107283
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Math.EC
  syntax:
    content: public override ECFieldElement Subtract(ECFieldElement b)
    parameters:
    - id: b
      type: Org.BouncyCastle.Math.EC.ECFieldElement
    return:
      type: Org.BouncyCastle.Math.EC.ECFieldElement
    content.vb: Public Overrides Function Subtract(b As ECFieldElement) As ECFieldElement
  overridden: Org.BouncyCastle.Math.EC.ECFieldElement.Subtract(Org.BouncyCastle.Math.EC.ECFieldElement)
  overload: Org.BouncyCastle.Math.EC.FpFieldElement.Subtract*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Org.BouncyCastle.Math.EC.FpFieldElement.Multiply(Org.BouncyCastle.Math.EC.ECFieldElement)
  commentId: M:Org.BouncyCastle.Math.EC.FpFieldElement.Multiply(Org.BouncyCastle.Math.EC.ECFieldElement)
  id: Multiply(Org.BouncyCastle.Math.EC.ECFieldElement)
  parent: Org.BouncyCastle.Math.EC.FpFieldElement
  langs:
  - csharp
  - vb
  name: Multiply(ECFieldElement)
  nameWithType: FpFieldElement.Multiply(ECFieldElement)
  fullName: Org.BouncyCastle.Math.EC.FpFieldElement.Multiply(Org.BouncyCastle.Math.EC.ECFieldElement)
  type: Method
  source:
    id: Multiply
    path: ''
    startLine: 107289
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Math.EC
  syntax:
    content: public override ECFieldElement Multiply(ECFieldElement b)
    parameters:
    - id: b
      type: Org.BouncyCastle.Math.EC.ECFieldElement
    return:
      type: Org.BouncyCastle.Math.EC.ECFieldElement
    content.vb: Public Overrides Function Multiply(b As ECFieldElement) As ECFieldElement
  overridden: Org.BouncyCastle.Math.EC.ECFieldElement.Multiply(Org.BouncyCastle.Math.EC.ECFieldElement)
  overload: Org.BouncyCastle.Math.EC.FpFieldElement.Multiply*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Org.BouncyCastle.Math.EC.FpFieldElement.MultiplyMinusProduct(Org.BouncyCastle.Math.EC.ECFieldElement,Org.BouncyCastle.Math.EC.ECFieldElement,Org.BouncyCastle.Math.EC.ECFieldElement)
  commentId: M:Org.BouncyCastle.Math.EC.FpFieldElement.MultiplyMinusProduct(Org.BouncyCastle.Math.EC.ECFieldElement,Org.BouncyCastle.Math.EC.ECFieldElement,Org.BouncyCastle.Math.EC.ECFieldElement)
  id: MultiplyMinusProduct(Org.BouncyCastle.Math.EC.ECFieldElement,Org.BouncyCastle.Math.EC.ECFieldElement,Org.BouncyCastle.Math.EC.ECFieldElement)
  parent: Org.BouncyCastle.Math.EC.FpFieldElement
  langs:
  - csharp
  - vb
  name: MultiplyMinusProduct(ECFieldElement, ECFieldElement, ECFieldElement)
  nameWithType: FpFieldElement.MultiplyMinusProduct(ECFieldElement, ECFieldElement, ECFieldElement)
  fullName: Org.BouncyCastle.Math.EC.FpFieldElement.MultiplyMinusProduct(Org.BouncyCastle.Math.EC.ECFieldElement, Org.BouncyCastle.Math.EC.ECFieldElement, Org.BouncyCastle.Math.EC.ECFieldElement)
  type: Method
  source:
    id: MultiplyMinusProduct
    path: ''
    startLine: 107295
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Math.EC
  syntax:
    content: public override ECFieldElement MultiplyMinusProduct(ECFieldElement b, ECFieldElement x, ECFieldElement y)
    parameters:
    - id: b
      type: Org.BouncyCastle.Math.EC.ECFieldElement
    - id: x
      type: Org.BouncyCastle.Math.EC.ECFieldElement
    - id: y
      type: Org.BouncyCastle.Math.EC.ECFieldElement
    return:
      type: Org.BouncyCastle.Math.EC.ECFieldElement
    content.vb: Public Overrides Function MultiplyMinusProduct(b As ECFieldElement, x As ECFieldElement, y As ECFieldElement) As ECFieldElement
  overridden: Org.BouncyCastle.Math.EC.ECFieldElement.MultiplyMinusProduct(Org.BouncyCastle.Math.EC.ECFieldElement,Org.BouncyCastle.Math.EC.ECFieldElement,Org.BouncyCastle.Math.EC.ECFieldElement)
  overload: Org.BouncyCastle.Math.EC.FpFieldElement.MultiplyMinusProduct*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Org.BouncyCastle.Math.EC.FpFieldElement.MultiplyPlusProduct(Org.BouncyCastle.Math.EC.ECFieldElement,Org.BouncyCastle.Math.EC.ECFieldElement,Org.BouncyCastle.Math.EC.ECFieldElement)
  commentId: M:Org.BouncyCastle.Math.EC.FpFieldElement.MultiplyPlusProduct(Org.BouncyCastle.Math.EC.ECFieldElement,Org.BouncyCastle.Math.EC.ECFieldElement,Org.BouncyCastle.Math.EC.ECFieldElement)
  id: MultiplyPlusProduct(Org.BouncyCastle.Math.EC.ECFieldElement,Org.BouncyCastle.Math.EC.ECFieldElement,Org.BouncyCastle.Math.EC.ECFieldElement)
  parent: Org.BouncyCastle.Math.EC.FpFieldElement
  langs:
  - csharp
  - vb
  name: MultiplyPlusProduct(ECFieldElement, ECFieldElement, ECFieldElement)
  nameWithType: FpFieldElement.MultiplyPlusProduct(ECFieldElement, ECFieldElement, ECFieldElement)
  fullName: Org.BouncyCastle.Math.EC.FpFieldElement.MultiplyPlusProduct(Org.BouncyCastle.Math.EC.ECFieldElement, Org.BouncyCastle.Math.EC.ECFieldElement, Org.BouncyCastle.Math.EC.ECFieldElement)
  type: Method
  source:
    id: MultiplyPlusProduct
    path: ''
    startLine: 107303
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Math.EC
  syntax:
    content: public override ECFieldElement MultiplyPlusProduct(ECFieldElement b, ECFieldElement x, ECFieldElement y)
    parameters:
    - id: b
      type: Org.BouncyCastle.Math.EC.ECFieldElement
    - id: x
      type: Org.BouncyCastle.Math.EC.ECFieldElement
    - id: y
      type: Org.BouncyCastle.Math.EC.ECFieldElement
    return:
      type: Org.BouncyCastle.Math.EC.ECFieldElement
    content.vb: Public Overrides Function MultiplyPlusProduct(b As ECFieldElement, x As ECFieldElement, y As ECFieldElement) As ECFieldElement
  overridden: Org.BouncyCastle.Math.EC.ECFieldElement.MultiplyPlusProduct(Org.BouncyCastle.Math.EC.ECFieldElement,Org.BouncyCastle.Math.EC.ECFieldElement,Org.BouncyCastle.Math.EC.ECFieldElement)
  overload: Org.BouncyCastle.Math.EC.FpFieldElement.MultiplyPlusProduct*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Org.BouncyCastle.Math.EC.FpFieldElement.Divide(Org.BouncyCastle.Math.EC.ECFieldElement)
  commentId: M:Org.BouncyCastle.Math.EC.FpFieldElement.Divide(Org.BouncyCastle.Math.EC.ECFieldElement)
  id: Divide(Org.BouncyCastle.Math.EC.ECFieldElement)
  parent: Org.BouncyCastle.Math.EC.FpFieldElement
  langs:
  - csharp
  - vb
  name: Divide(ECFieldElement)
  nameWithType: FpFieldElement.Divide(ECFieldElement)
  fullName: Org.BouncyCastle.Math.EC.FpFieldElement.Divide(Org.BouncyCastle.Math.EC.ECFieldElement)
  type: Method
  source:
    id: Divide
    path: ''
    startLine: 107316
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Math.EC
  syntax:
    content: public override ECFieldElement Divide(ECFieldElement b)
    parameters:
    - id: b
      type: Org.BouncyCastle.Math.EC.ECFieldElement
    return:
      type: Org.BouncyCastle.Math.EC.ECFieldElement
    content.vb: Public Overrides Function Divide(b As ECFieldElement) As ECFieldElement
  overridden: Org.BouncyCastle.Math.EC.ECFieldElement.Divide(Org.BouncyCastle.Math.EC.ECFieldElement)
  overload: Org.BouncyCastle.Math.EC.FpFieldElement.Divide*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Org.BouncyCastle.Math.EC.FpFieldElement.Negate
  commentId: M:Org.BouncyCastle.Math.EC.FpFieldElement.Negate
  id: Negate
  parent: Org.BouncyCastle.Math.EC.FpFieldElement
  langs:
  - csharp
  - vb
  name: Negate()
  nameWithType: FpFieldElement.Negate()
  fullName: Org.BouncyCastle.Math.EC.FpFieldElement.Negate()
  type: Method
  source:
    id: Negate
    path: ''
    startLine: 107322
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Math.EC
  syntax:
    content: public override ECFieldElement Negate()
    return:
      type: Org.BouncyCastle.Math.EC.ECFieldElement
    content.vb: Public Overrides Function Negate As ECFieldElement
  overridden: Org.BouncyCastle.Math.EC.ECFieldElement.Negate
  overload: Org.BouncyCastle.Math.EC.FpFieldElement.Negate*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Org.BouncyCastle.Math.EC.FpFieldElement.Square
  commentId: M:Org.BouncyCastle.Math.EC.FpFieldElement.Square
  id: Square
  parent: Org.BouncyCastle.Math.EC.FpFieldElement
  langs:
  - csharp
  - vb
  name: Square()
  nameWithType: FpFieldElement.Square()
  fullName: Org.BouncyCastle.Math.EC.FpFieldElement.Square()
  type: Method
  source:
    id: Square
    path: ''
    startLine: 107327
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Math.EC
  syntax:
    content: public override ECFieldElement Square()
    return:
      type: Org.BouncyCastle.Math.EC.ECFieldElement
    content.vb: Public Overrides Function Square As ECFieldElement
  overridden: Org.BouncyCastle.Math.EC.ECFieldElement.Square
  overload: Org.BouncyCastle.Math.EC.FpFieldElement.Square*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Org.BouncyCastle.Math.EC.FpFieldElement.SquareMinusProduct(Org.BouncyCastle.Math.EC.ECFieldElement,Org.BouncyCastle.Math.EC.ECFieldElement)
  commentId: M:Org.BouncyCastle.Math.EC.FpFieldElement.SquareMinusProduct(Org.BouncyCastle.Math.EC.ECFieldElement,Org.BouncyCastle.Math.EC.ECFieldElement)
  id: SquareMinusProduct(Org.BouncyCastle.Math.EC.ECFieldElement,Org.BouncyCastle.Math.EC.ECFieldElement)
  parent: Org.BouncyCastle.Math.EC.FpFieldElement
  langs:
  - csharp
  - vb
  name: SquareMinusProduct(ECFieldElement, ECFieldElement)
  nameWithType: FpFieldElement.SquareMinusProduct(ECFieldElement, ECFieldElement)
  fullName: Org.BouncyCastle.Math.EC.FpFieldElement.SquareMinusProduct(Org.BouncyCastle.Math.EC.ECFieldElement, Org.BouncyCastle.Math.EC.ECFieldElement)
  type: Method
  source:
    id: SquareMinusProduct
    path: ''
    startLine: 107332
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Math.EC
  syntax:
    content: public override ECFieldElement SquareMinusProduct(ECFieldElement x, ECFieldElement y)
    parameters:
    - id: x
      type: Org.BouncyCastle.Math.EC.ECFieldElement
    - id: y
      type: Org.BouncyCastle.Math.EC.ECFieldElement
    return:
      type: Org.BouncyCastle.Math.EC.ECFieldElement
    content.vb: Public Overrides Function SquareMinusProduct(x As ECFieldElement, y As ECFieldElement) As ECFieldElement
  overridden: Org.BouncyCastle.Math.EC.ECFieldElement.SquareMinusProduct(Org.BouncyCastle.Math.EC.ECFieldElement,Org.BouncyCastle.Math.EC.ECFieldElement)
  overload: Org.BouncyCastle.Math.EC.FpFieldElement.SquareMinusProduct*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Org.BouncyCastle.Math.EC.FpFieldElement.SquarePlusProduct(Org.BouncyCastle.Math.EC.ECFieldElement,Org.BouncyCastle.Math.EC.ECFieldElement)
  commentId: M:Org.BouncyCastle.Math.EC.FpFieldElement.SquarePlusProduct(Org.BouncyCastle.Math.EC.ECFieldElement,Org.BouncyCastle.Math.EC.ECFieldElement)
  id: SquarePlusProduct(Org.BouncyCastle.Math.EC.ECFieldElement,Org.BouncyCastle.Math.EC.ECFieldElement)
  parent: Org.BouncyCastle.Math.EC.FpFieldElement
  langs:
  - csharp
  - vb
  name: SquarePlusProduct(ECFieldElement, ECFieldElement)
  nameWithType: FpFieldElement.SquarePlusProduct(ECFieldElement, ECFieldElement)
  fullName: Org.BouncyCastle.Math.EC.FpFieldElement.SquarePlusProduct(Org.BouncyCastle.Math.EC.ECFieldElement, Org.BouncyCastle.Math.EC.ECFieldElement)
  type: Method
  source:
    id: SquarePlusProduct
    path: ''
    startLine: 107340
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Math.EC
  syntax:
    content: public override ECFieldElement SquarePlusProduct(ECFieldElement x, ECFieldElement y)
    parameters:
    - id: x
      type: Org.BouncyCastle.Math.EC.ECFieldElement
    - id: y
      type: Org.BouncyCastle.Math.EC.ECFieldElement
    return:
      type: Org.BouncyCastle.Math.EC.ECFieldElement
    content.vb: Public Overrides Function SquarePlusProduct(x As ECFieldElement, y As ECFieldElement) As ECFieldElement
  overridden: Org.BouncyCastle.Math.EC.ECFieldElement.SquarePlusProduct(Org.BouncyCastle.Math.EC.ECFieldElement,Org.BouncyCastle.Math.EC.ECFieldElement)
  overload: Org.BouncyCastle.Math.EC.FpFieldElement.SquarePlusProduct*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Org.BouncyCastle.Math.EC.FpFieldElement.Invert
  commentId: M:Org.BouncyCastle.Math.EC.FpFieldElement.Invert
  id: Invert
  parent: Org.BouncyCastle.Math.EC.FpFieldElement
  langs:
  - csharp
  - vb
  name: Invert()
  nameWithType: FpFieldElement.Invert()
  fullName: Org.BouncyCastle.Math.EC.FpFieldElement.Invert()
  type: Method
  source:
    id: Invert
    path: ''
    startLine: 107353
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Math.EC
  syntax:
    content: public override ECFieldElement Invert()
    return:
      type: Org.BouncyCastle.Math.EC.ECFieldElement
    content.vb: Public Overrides Function Invert As ECFieldElement
  overridden: Org.BouncyCastle.Math.EC.ECFieldElement.Invert
  overload: Org.BouncyCastle.Math.EC.FpFieldElement.Invert*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Org.BouncyCastle.Math.EC.FpFieldElement.Sqrt
  commentId: M:Org.BouncyCastle.Math.EC.FpFieldElement.Sqrt
  id: Sqrt
  parent: Org.BouncyCastle.Math.EC.FpFieldElement
  langs:
  - csharp
  - vb
  name: Sqrt()
  nameWithType: FpFieldElement.Sqrt()
  fullName: Org.BouncyCastle.Math.EC.FpFieldElement.Sqrt()
  type: Method
  source:
    id: Sqrt
    path: ''
    startLine: 107363
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Math.EC
  example: []
  syntax:
    content: public override ECFieldElement Sqrt()
    return:
      type: Org.BouncyCastle.Math.EC.ECFieldElement
    content.vb: Public Overrides Function Sqrt As ECFieldElement
  overridden: Org.BouncyCastle.Math.EC.ECFieldElement.Sqrt
  overload: Org.BouncyCastle.Math.EC.FpFieldElement.Sqrt*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Org.BouncyCastle.Math.EC.FpFieldElement.ModAdd(Org.BouncyCastle.Math.BigInteger,Org.BouncyCastle.Math.BigInteger)
  commentId: M:Org.BouncyCastle.Math.EC.FpFieldElement.ModAdd(Org.BouncyCastle.Math.BigInteger,Org.BouncyCastle.Math.BigInteger)
  id: ModAdd(Org.BouncyCastle.Math.BigInteger,Org.BouncyCastle.Math.BigInteger)
  parent: Org.BouncyCastle.Math.EC.FpFieldElement
  langs:
  - csharp
  - vb
  name: ModAdd(BigInteger, BigInteger)
  nameWithType: FpFieldElement.ModAdd(BigInteger, BigInteger)
  fullName: Org.BouncyCastle.Math.EC.FpFieldElement.ModAdd(Org.BouncyCastle.Math.BigInteger, Org.BouncyCastle.Math.BigInteger)
  type: Method
  source:
    id: ModAdd
    path: ''
    startLine: 107491
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Math.EC
  syntax:
    content: protected virtual BigInteger ModAdd(BigInteger x1, BigInteger x2)
    parameters:
    - id: x1
      type: Org.BouncyCastle.Math.BigInteger
    - id: x2
      type: Org.BouncyCastle.Math.BigInteger
    return:
      type: Org.BouncyCastle.Math.BigInteger
    content.vb: Protected Overridable Function ModAdd(x1 As BigInteger, x2 As BigInteger) As BigInteger
  overload: Org.BouncyCastle.Math.EC.FpFieldElement.ModAdd*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: Org.BouncyCastle.Math.EC.FpFieldElement.ModDouble(Org.BouncyCastle.Math.BigInteger)
  commentId: M:Org.BouncyCastle.Math.EC.FpFieldElement.ModDouble(Org.BouncyCastle.Math.BigInteger)
  id: ModDouble(Org.BouncyCastle.Math.BigInteger)
  parent: Org.BouncyCastle.Math.EC.FpFieldElement
  langs:
  - csharp
  - vb
  name: ModDouble(BigInteger)
  nameWithType: FpFieldElement.ModDouble(BigInteger)
  fullName: Org.BouncyCastle.Math.EC.FpFieldElement.ModDouble(Org.BouncyCastle.Math.BigInteger)
  type: Method
  source:
    id: ModDouble
    path: ''
    startLine: 107501
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Math.EC
  syntax:
    content: protected virtual BigInteger ModDouble(BigInteger x)
    parameters:
    - id: x
      type: Org.BouncyCastle.Math.BigInteger
    return:
      type: Org.BouncyCastle.Math.BigInteger
    content.vb: Protected Overridable Function ModDouble(x As BigInteger) As BigInteger
  overload: Org.BouncyCastle.Math.EC.FpFieldElement.ModDouble*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: Org.BouncyCastle.Math.EC.FpFieldElement.ModHalf(Org.BouncyCastle.Math.BigInteger)
  commentId: M:Org.BouncyCastle.Math.EC.FpFieldElement.ModHalf(Org.BouncyCastle.Math.BigInteger)
  id: ModHalf(Org.BouncyCastle.Math.BigInteger)
  parent: Org.BouncyCastle.Math.EC.FpFieldElement
  langs:
  - csharp
  - vb
  name: ModHalf(BigInteger)
  nameWithType: FpFieldElement.ModHalf(BigInteger)
  fullName: Org.BouncyCastle.Math.EC.FpFieldElement.ModHalf(Org.BouncyCastle.Math.BigInteger)
  type: Method
  source:
    id: ModHalf
    path: ''
    startLine: 107511
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Math.EC
  syntax:
    content: protected virtual BigInteger ModHalf(BigInteger x)
    parameters:
    - id: x
      type: Org.BouncyCastle.Math.BigInteger
    return:
      type: Org.BouncyCastle.Math.BigInteger
    content.vb: Protected Overridable Function ModHalf(x As BigInteger) As BigInteger
  overload: Org.BouncyCastle.Math.EC.FpFieldElement.ModHalf*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: Org.BouncyCastle.Math.EC.FpFieldElement.ModHalfAbs(Org.BouncyCastle.Math.BigInteger)
  commentId: M:Org.BouncyCastle.Math.EC.FpFieldElement.ModHalfAbs(Org.BouncyCastle.Math.BigInteger)
  id: ModHalfAbs(Org.BouncyCastle.Math.BigInteger)
  parent: Org.BouncyCastle.Math.EC.FpFieldElement
  langs:
  - csharp
  - vb
  name: ModHalfAbs(BigInteger)
  nameWithType: FpFieldElement.ModHalfAbs(BigInteger)
  fullName: Org.BouncyCastle.Math.EC.FpFieldElement.ModHalfAbs(Org.BouncyCastle.Math.BigInteger)
  type: Method
  source:
    id: ModHalfAbs
    path: ''
    startLine: 107520
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Math.EC
  syntax:
    content: protected virtual BigInteger ModHalfAbs(BigInteger x)
    parameters:
    - id: x
      type: Org.BouncyCastle.Math.BigInteger
    return:
      type: Org.BouncyCastle.Math.BigInteger
    content.vb: Protected Overridable Function ModHalfAbs(x As BigInteger) As BigInteger
  overload: Org.BouncyCastle.Math.EC.FpFieldElement.ModHalfAbs*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: Org.BouncyCastle.Math.EC.FpFieldElement.ModInverse(Org.BouncyCastle.Math.BigInteger)
  commentId: M:Org.BouncyCastle.Math.EC.FpFieldElement.ModInverse(Org.BouncyCastle.Math.BigInteger)
  id: ModInverse(Org.BouncyCastle.Math.BigInteger)
  parent: Org.BouncyCastle.Math.EC.FpFieldElement
  langs:
  - csharp
  - vb
  name: ModInverse(BigInteger)
  nameWithType: FpFieldElement.ModInverse(BigInteger)
  fullName: Org.BouncyCastle.Math.EC.FpFieldElement.ModInverse(Org.BouncyCastle.Math.BigInteger)
  type: Method
  source:
    id: ModInverse
    path: ''
    startLine: 107529
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Math.EC
  syntax:
    content: protected virtual BigInteger ModInverse(BigInteger x)
    parameters:
    - id: x
      type: Org.BouncyCastle.Math.BigInteger
    return:
      type: Org.BouncyCastle.Math.BigInteger
    content.vb: Protected Overridable Function ModInverse(x As BigInteger) As BigInteger
  overload: Org.BouncyCastle.Math.EC.FpFieldElement.ModInverse*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: Org.BouncyCastle.Math.EC.FpFieldElement.ModMult(Org.BouncyCastle.Math.BigInteger,Org.BouncyCastle.Math.BigInteger)
  commentId: M:Org.BouncyCastle.Math.EC.FpFieldElement.ModMult(Org.BouncyCastle.Math.BigInteger,Org.BouncyCastle.Math.BigInteger)
  id: ModMult(Org.BouncyCastle.Math.BigInteger,Org.BouncyCastle.Math.BigInteger)
  parent: Org.BouncyCastle.Math.EC.FpFieldElement
  langs:
  - csharp
  - vb
  name: ModMult(BigInteger, BigInteger)
  nameWithType: FpFieldElement.ModMult(BigInteger, BigInteger)
  fullName: Org.BouncyCastle.Math.EC.FpFieldElement.ModMult(Org.BouncyCastle.Math.BigInteger, Org.BouncyCastle.Math.BigInteger)
  type: Method
  source:
    id: ModMult
    path: ''
    startLine: 107540
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Math.EC
  syntax:
    content: protected virtual BigInteger ModMult(BigInteger x1, BigInteger x2)
    parameters:
    - id: x1
      type: Org.BouncyCastle.Math.BigInteger
    - id: x2
      type: Org.BouncyCastle.Math.BigInteger
    return:
      type: Org.BouncyCastle.Math.BigInteger
    content.vb: Protected Overridable Function ModMult(x1 As BigInteger, x2 As BigInteger) As BigInteger
  overload: Org.BouncyCastle.Math.EC.FpFieldElement.ModMult*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: Org.BouncyCastle.Math.EC.FpFieldElement.ModReduce(Org.BouncyCastle.Math.BigInteger)
  commentId: M:Org.BouncyCastle.Math.EC.FpFieldElement.ModReduce(Org.BouncyCastle.Math.BigInteger)
  id: ModReduce(Org.BouncyCastle.Math.BigInteger)
  parent: Org.BouncyCastle.Math.EC.FpFieldElement
  langs:
  - csharp
  - vb
  name: ModReduce(BigInteger)
  nameWithType: FpFieldElement.ModReduce(BigInteger)
  fullName: Org.BouncyCastle.Math.EC.FpFieldElement.ModReduce(Org.BouncyCastle.Math.BigInteger)
  type: Method
  source:
    id: ModReduce
    path: ''
    startLine: 107545
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Math.EC
  syntax:
    content: protected virtual BigInteger ModReduce(BigInteger x)
    parameters:
    - id: x
      type: Org.BouncyCastle.Math.BigInteger
    return:
      type: Org.BouncyCastle.Math.BigInteger
    content.vb: Protected Overridable Function ModReduce(x As BigInteger) As BigInteger
  overload: Org.BouncyCastle.Math.EC.FpFieldElement.ModReduce*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: Org.BouncyCastle.Math.EC.FpFieldElement.ModSubtract(Org.BouncyCastle.Math.BigInteger,Org.BouncyCastle.Math.BigInteger)
  commentId: M:Org.BouncyCastle.Math.EC.FpFieldElement.ModSubtract(Org.BouncyCastle.Math.BigInteger,Org.BouncyCastle.Math.BigInteger)
  id: ModSubtract(Org.BouncyCastle.Math.BigInteger,Org.BouncyCastle.Math.BigInteger)
  parent: Org.BouncyCastle.Math.EC.FpFieldElement
  langs:
  - csharp
  - vb
  name: ModSubtract(BigInteger, BigInteger)
  nameWithType: FpFieldElement.ModSubtract(BigInteger, BigInteger)
  fullName: Org.BouncyCastle.Math.EC.FpFieldElement.ModSubtract(Org.BouncyCastle.Math.BigInteger, Org.BouncyCastle.Math.BigInteger)
  type: Method
  source:
    id: ModSubtract
    path: ''
    startLine: 107602
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Math.EC
  syntax:
    content: protected virtual BigInteger ModSubtract(BigInteger x1, BigInteger x2)
    parameters:
    - id: x1
      type: Org.BouncyCastle.Math.BigInteger
    - id: x2
      type: Org.BouncyCastle.Math.BigInteger
    return:
      type: Org.BouncyCastle.Math.BigInteger
    content.vb: Protected Overridable Function ModSubtract(x1 As BigInteger, x2 As BigInteger) As BigInteger
  overload: Org.BouncyCastle.Math.EC.FpFieldElement.ModSubtract*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: Org.BouncyCastle.Math.EC.FpFieldElement.Equals(System.Object)
  commentId: M:Org.BouncyCastle.Math.EC.FpFieldElement.Equals(System.Object)
  id: Equals(System.Object)
  parent: Org.BouncyCastle.Math.EC.FpFieldElement
  langs:
  - csharp
  - vb
  name: Equals(Object)
  nameWithType: FpFieldElement.Equals(Object)
  fullName: Org.BouncyCastle.Math.EC.FpFieldElement.Equals(System.Object)
  type: Method
  source:
    id: Equals
    path: ''
    startLine: 107612
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Math.EC
  syntax:
    content: public override bool Equals(object obj)
    parameters:
    - id: obj
      type: System.Object
    return:
      type: System.Boolean
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
  overridden: Org.BouncyCastle.Math.EC.ECFieldElement.Equals(System.Object)
  overload: Org.BouncyCastle.Math.EC.FpFieldElement.Equals*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Org.BouncyCastle.Math.EC.FpFieldElement.Equals(Org.BouncyCastle.Math.EC.FpFieldElement)
  commentId: M:Org.BouncyCastle.Math.EC.FpFieldElement.Equals(Org.BouncyCastle.Math.EC.FpFieldElement)
  id: Equals(Org.BouncyCastle.Math.EC.FpFieldElement)
  parent: Org.BouncyCastle.Math.EC.FpFieldElement
  langs:
  - csharp
  - vb
  name: Equals(FpFieldElement)
  nameWithType: FpFieldElement.Equals(FpFieldElement)
  fullName: Org.BouncyCastle.Math.EC.FpFieldElement.Equals(Org.BouncyCastle.Math.EC.FpFieldElement)
  type: Method
  source:
    id: Equals
    path: ''
    startLine: 107626
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Math.EC
  syntax:
    content: public virtual bool Equals(FpFieldElement other)
    parameters:
    - id: other
      type: Org.BouncyCastle.Math.EC.FpFieldElement
    return:
      type: System.Boolean
    content.vb: Public Overridable Function Equals(other As FpFieldElement) As Boolean
  overload: Org.BouncyCastle.Math.EC.FpFieldElement.Equals*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Org.BouncyCastle.Math.EC.FpFieldElement.GetHashCode
  commentId: M:Org.BouncyCastle.Math.EC.FpFieldElement.GetHashCode
  id: GetHashCode
  parent: Org.BouncyCastle.Math.EC.FpFieldElement
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: FpFieldElement.GetHashCode()
  fullName: Org.BouncyCastle.Math.EC.FpFieldElement.GetHashCode()
  type: Method
  source:
    id: GetHashCode
    path: ''
    startLine: 107632
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Math.EC
  syntax:
    content: public override int GetHashCode()
    return:
      type: System.Int32
    content.vb: Public Overrides Function GetHashCode As Integer
  overridden: Org.BouncyCastle.Math.EC.ECFieldElement.GetHashCode
  overload: Org.BouncyCastle.Math.EC.FpFieldElement.GetHashCode*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: Org.BouncyCastle.Math.EC
  commentId: N:Org.BouncyCastle.Math.EC
  name: Org.BouncyCastle.Math.EC
  nameWithType: Org.BouncyCastle.Math.EC
  fullName: Org.BouncyCastle.Math.EC
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Org.BouncyCastle.Math.EC.ECFieldElement
  commentId: T:Org.BouncyCastle.Math.EC.ECFieldElement
  parent: Org.BouncyCastle.Math.EC
  name: ECFieldElement
  nameWithType: ECFieldElement
  fullName: Org.BouncyCastle.Math.EC.ECFieldElement
- uid: Org.BouncyCastle.Math.EC.ECFieldElement.BitLength
  commentId: P:Org.BouncyCastle.Math.EC.ECFieldElement.BitLength
  parent: Org.BouncyCastle.Math.EC.ECFieldElement
  name: BitLength
  nameWithType: ECFieldElement.BitLength
  fullName: Org.BouncyCastle.Math.EC.ECFieldElement.BitLength
- uid: Org.BouncyCastle.Math.EC.ECFieldElement.IsOne
  commentId: P:Org.BouncyCastle.Math.EC.ECFieldElement.IsOne
  parent: Org.BouncyCastle.Math.EC.ECFieldElement
  name: IsOne
  nameWithType: ECFieldElement.IsOne
  fullName: Org.BouncyCastle.Math.EC.ECFieldElement.IsOne
- uid: Org.BouncyCastle.Math.EC.ECFieldElement.IsZero
  commentId: P:Org.BouncyCastle.Math.EC.ECFieldElement.IsZero
  parent: Org.BouncyCastle.Math.EC.ECFieldElement
  name: IsZero
  nameWithType: ECFieldElement.IsZero
  fullName: Org.BouncyCastle.Math.EC.ECFieldElement.IsZero
- uid: Org.BouncyCastle.Math.EC.ECFieldElement.SquarePow(System.Int32)
  commentId: M:Org.BouncyCastle.Math.EC.ECFieldElement.SquarePow(System.Int32)
  parent: Org.BouncyCastle.Math.EC.ECFieldElement
  isExternal: true
  name: SquarePow(Int32)
  nameWithType: ECFieldElement.SquarePow(Int32)
  fullName: Org.BouncyCastle.Math.EC.ECFieldElement.SquarePow(System.Int32)
  spec.csharp:
  - uid: Org.BouncyCastle.Math.EC.ECFieldElement.SquarePow(System.Int32)
    name: SquarePow
    nameWithType: ECFieldElement.SquarePow
    fullName: Org.BouncyCastle.Math.EC.ECFieldElement.SquarePow
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Org.BouncyCastle.Math.EC.ECFieldElement.SquarePow(System.Int32)
    name: SquarePow
    nameWithType: ECFieldElement.SquarePow
    fullName: Org.BouncyCastle.Math.EC.ECFieldElement.SquarePow
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Org.BouncyCastle.Math.EC.ECFieldElement.TestBitZero
  commentId: M:Org.BouncyCastle.Math.EC.ECFieldElement.TestBitZero
  parent: Org.BouncyCastle.Math.EC.ECFieldElement
  name: TestBitZero()
  nameWithType: ECFieldElement.TestBitZero()
  fullName: Org.BouncyCastle.Math.EC.ECFieldElement.TestBitZero()
  spec.csharp:
  - uid: Org.BouncyCastle.Math.EC.ECFieldElement.TestBitZero
    name: TestBitZero
    nameWithType: ECFieldElement.TestBitZero
    fullName: Org.BouncyCastle.Math.EC.ECFieldElement.TestBitZero
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Org.BouncyCastle.Math.EC.ECFieldElement.TestBitZero
    name: TestBitZero
    nameWithType: ECFieldElement.TestBitZero
    fullName: Org.BouncyCastle.Math.EC.ECFieldElement.TestBitZero
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Org.BouncyCastle.Math.EC.ECFieldElement.Equals(Org.BouncyCastle.Math.EC.ECFieldElement)
  commentId: M:Org.BouncyCastle.Math.EC.ECFieldElement.Equals(Org.BouncyCastle.Math.EC.ECFieldElement)
  parent: Org.BouncyCastle.Math.EC.ECFieldElement
  name: Equals(ECFieldElement)
  nameWithType: ECFieldElement.Equals(ECFieldElement)
  fullName: Org.BouncyCastle.Math.EC.ECFieldElement.Equals(Org.BouncyCastle.Math.EC.ECFieldElement)
  spec.csharp:
  - uid: Org.BouncyCastle.Math.EC.ECFieldElement.Equals(Org.BouncyCastle.Math.EC.ECFieldElement)
    name: Equals
    nameWithType: ECFieldElement.Equals
    fullName: Org.BouncyCastle.Math.EC.ECFieldElement.Equals
  - name: (
    nameWithType: (
    fullName: (
  - uid: Org.BouncyCastle.Math.EC.ECFieldElement
    name: ECFieldElement
    nameWithType: ECFieldElement
    fullName: Org.BouncyCastle.Math.EC.ECFieldElement
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Org.BouncyCastle.Math.EC.ECFieldElement.Equals(Org.BouncyCastle.Math.EC.ECFieldElement)
    name: Equals
    nameWithType: ECFieldElement.Equals
    fullName: Org.BouncyCastle.Math.EC.ECFieldElement.Equals
  - name: (
    nameWithType: (
    fullName: (
  - uid: Org.BouncyCastle.Math.EC.ECFieldElement
    name: ECFieldElement
    nameWithType: ECFieldElement
    fullName: Org.BouncyCastle.Math.EC.ECFieldElement
  - name: )
    nameWithType: )
    fullName: )
- uid: Org.BouncyCastle.Math.EC.ECFieldElement.ToString
  commentId: M:Org.BouncyCastle.Math.EC.ECFieldElement.ToString
  parent: Org.BouncyCastle.Math.EC.ECFieldElement
  name: ToString()
  nameWithType: ECFieldElement.ToString()
  fullName: Org.BouncyCastle.Math.EC.ECFieldElement.ToString()
  spec.csharp:
  - uid: Org.BouncyCastle.Math.EC.ECFieldElement.ToString
    name: ToString
    nameWithType: ECFieldElement.ToString
    fullName: Org.BouncyCastle.Math.EC.ECFieldElement.ToString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Org.BouncyCastle.Math.EC.ECFieldElement.ToString
    name: ToString
    nameWithType: ECFieldElement.ToString
    fullName: Org.BouncyCastle.Math.EC.ECFieldElement.ToString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Org.BouncyCastle.Math.EC.ECFieldElement.GetEncoded
  commentId: M:Org.BouncyCastle.Math.EC.ECFieldElement.GetEncoded
  parent: Org.BouncyCastle.Math.EC.ECFieldElement
  name: GetEncoded()
  nameWithType: ECFieldElement.GetEncoded()
  fullName: Org.BouncyCastle.Math.EC.ECFieldElement.GetEncoded()
  spec.csharp:
  - uid: Org.BouncyCastle.Math.EC.ECFieldElement.GetEncoded
    name: GetEncoded
    nameWithType: ECFieldElement.GetEncoded
    fullName: Org.BouncyCastle.Math.EC.ECFieldElement.GetEncoded
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Org.BouncyCastle.Math.EC.ECFieldElement.GetEncoded
    name: GetEncoded
    nameWithType: ECFieldElement.GetEncoded
    fullName: Org.BouncyCastle.Math.EC.ECFieldElement.GetEncoded
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Org.BouncyCastle.Math.EC.FpFieldElement.#ctor*
  commentId: Overload:Org.BouncyCastle.Math.EC.FpFieldElement.#ctor
  name: FpFieldElement
  nameWithType: FpFieldElement.FpFieldElement
  fullName: Org.BouncyCastle.Math.EC.FpFieldElement.FpFieldElement
- uid: Org.BouncyCastle.Math.BigInteger
  commentId: T:Org.BouncyCastle.Math.BigInteger
  parent: Org.BouncyCastle.Math
  name: BigInteger
  nameWithType: BigInteger
  fullName: Org.BouncyCastle.Math.BigInteger
- uid: Org.BouncyCastle.Math
  commentId: N:Org.BouncyCastle.Math
  name: Org.BouncyCastle.Math
  nameWithType: Org.BouncyCastle.Math
  fullName: Org.BouncyCastle.Math
- uid: Org.BouncyCastle.Math.EC.ECFieldElement.ToBigInteger
  commentId: M:Org.BouncyCastle.Math.EC.ECFieldElement.ToBigInteger
  parent: Org.BouncyCastle.Math.EC.ECFieldElement
  name: ToBigInteger()
  nameWithType: ECFieldElement.ToBigInteger()
  fullName: Org.BouncyCastle.Math.EC.ECFieldElement.ToBigInteger()
  spec.csharp:
  - uid: Org.BouncyCastle.Math.EC.ECFieldElement.ToBigInteger
    name: ToBigInteger
    nameWithType: ECFieldElement.ToBigInteger
    fullName: Org.BouncyCastle.Math.EC.ECFieldElement.ToBigInteger
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Org.BouncyCastle.Math.EC.ECFieldElement.ToBigInteger
    name: ToBigInteger
    nameWithType: ECFieldElement.ToBigInteger
    fullName: Org.BouncyCastle.Math.EC.ECFieldElement.ToBigInteger
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Org.BouncyCastle.Math.EC.FpFieldElement.ToBigInteger*
  commentId: Overload:Org.BouncyCastle.Math.EC.FpFieldElement.ToBigInteger
  name: ToBigInteger
  nameWithType: FpFieldElement.ToBigInteger
  fullName: Org.BouncyCastle.Math.EC.FpFieldElement.ToBigInteger
- uid: Org.BouncyCastle.Math.EC.ECFieldElement.FieldName
  commentId: P:Org.BouncyCastle.Math.EC.ECFieldElement.FieldName
  parent: Org.BouncyCastle.Math.EC.ECFieldElement
  name: FieldName
  nameWithType: ECFieldElement.FieldName
  fullName: Org.BouncyCastle.Math.EC.ECFieldElement.FieldName
- uid: Org.BouncyCastle.Math.EC.FpFieldElement.FieldName*
  commentId: Overload:Org.BouncyCastle.Math.EC.FpFieldElement.FieldName
  name: FieldName
  nameWithType: FpFieldElement.FieldName
  fullName: Org.BouncyCastle.Math.EC.FpFieldElement.FieldName
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Org.BouncyCastle.Math.EC.ECFieldElement.FieldSize
  commentId: P:Org.BouncyCastle.Math.EC.ECFieldElement.FieldSize
  parent: Org.BouncyCastle.Math.EC.ECFieldElement
  name: FieldSize
  nameWithType: ECFieldElement.FieldSize
  fullName: Org.BouncyCastle.Math.EC.ECFieldElement.FieldSize
- uid: Org.BouncyCastle.Math.EC.FpFieldElement.FieldSize*
  commentId: Overload:Org.BouncyCastle.Math.EC.FpFieldElement.FieldSize
  name: FieldSize
  nameWithType: FpFieldElement.FieldSize
  fullName: Org.BouncyCastle.Math.EC.FpFieldElement.FieldSize
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Org.BouncyCastle.Math.EC.FpFieldElement.Q*
  commentId: Overload:Org.BouncyCastle.Math.EC.FpFieldElement.Q
  name: Q
  nameWithType: FpFieldElement.Q
  fullName: Org.BouncyCastle.Math.EC.FpFieldElement.Q
- uid: Org.BouncyCastle.Math.EC.ECFieldElement.Add(Org.BouncyCastle.Math.EC.ECFieldElement)
  commentId: M:Org.BouncyCastle.Math.EC.ECFieldElement.Add(Org.BouncyCastle.Math.EC.ECFieldElement)
  parent: Org.BouncyCastle.Math.EC.ECFieldElement
  name: Add(ECFieldElement)
  nameWithType: ECFieldElement.Add(ECFieldElement)
  fullName: Org.BouncyCastle.Math.EC.ECFieldElement.Add(Org.BouncyCastle.Math.EC.ECFieldElement)
  spec.csharp:
  - uid: Org.BouncyCastle.Math.EC.ECFieldElement.Add(Org.BouncyCastle.Math.EC.ECFieldElement)
    name: Add
    nameWithType: ECFieldElement.Add
    fullName: Org.BouncyCastle.Math.EC.ECFieldElement.Add
  - name: (
    nameWithType: (
    fullName: (
  - uid: Org.BouncyCastle.Math.EC.ECFieldElement
    name: ECFieldElement
    nameWithType: ECFieldElement
    fullName: Org.BouncyCastle.Math.EC.ECFieldElement
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Org.BouncyCastle.Math.EC.ECFieldElement.Add(Org.BouncyCastle.Math.EC.ECFieldElement)
    name: Add
    nameWithType: ECFieldElement.Add
    fullName: Org.BouncyCastle.Math.EC.ECFieldElement.Add
  - name: (
    nameWithType: (
    fullName: (
  - uid: Org.BouncyCastle.Math.EC.ECFieldElement
    name: ECFieldElement
    nameWithType: ECFieldElement
    fullName: Org.BouncyCastle.Math.EC.ECFieldElement
  - name: )
    nameWithType: )
    fullName: )
- uid: Org.BouncyCastle.Math.EC.FpFieldElement.Add*
  commentId: Overload:Org.BouncyCastle.Math.EC.FpFieldElement.Add
  name: Add
  nameWithType: FpFieldElement.Add
  fullName: Org.BouncyCastle.Math.EC.FpFieldElement.Add
- uid: Org.BouncyCastle.Math.EC.ECFieldElement.AddOne
  commentId: M:Org.BouncyCastle.Math.EC.ECFieldElement.AddOne
  parent: Org.BouncyCastle.Math.EC.ECFieldElement
  name: AddOne()
  nameWithType: ECFieldElement.AddOne()
  fullName: Org.BouncyCastle.Math.EC.ECFieldElement.AddOne()
  spec.csharp:
  - uid: Org.BouncyCastle.Math.EC.ECFieldElement.AddOne
    name: AddOne
    nameWithType: ECFieldElement.AddOne
    fullName: Org.BouncyCastle.Math.EC.ECFieldElement.AddOne
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Org.BouncyCastle.Math.EC.ECFieldElement.AddOne
    name: AddOne
    nameWithType: ECFieldElement.AddOne
    fullName: Org.BouncyCastle.Math.EC.ECFieldElement.AddOne
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Org.BouncyCastle.Math.EC.FpFieldElement.AddOne*
  commentId: Overload:Org.BouncyCastle.Math.EC.FpFieldElement.AddOne
  name: AddOne
  nameWithType: FpFieldElement.AddOne
  fullName: Org.BouncyCastle.Math.EC.FpFieldElement.AddOne
- uid: Org.BouncyCastle.Math.EC.ECFieldElement.Subtract(Org.BouncyCastle.Math.EC.ECFieldElement)
  commentId: M:Org.BouncyCastle.Math.EC.ECFieldElement.Subtract(Org.BouncyCastle.Math.EC.ECFieldElement)
  parent: Org.BouncyCastle.Math.EC.ECFieldElement
  name: Subtract(ECFieldElement)
  nameWithType: ECFieldElement.Subtract(ECFieldElement)
  fullName: Org.BouncyCastle.Math.EC.ECFieldElement.Subtract(Org.BouncyCastle.Math.EC.ECFieldElement)
  spec.csharp:
  - uid: Org.BouncyCastle.Math.EC.ECFieldElement.Subtract(Org.BouncyCastle.Math.EC.ECFieldElement)
    name: Subtract
    nameWithType: ECFieldElement.Subtract
    fullName: Org.BouncyCastle.Math.EC.ECFieldElement.Subtract
  - name: (
    nameWithType: (
    fullName: (
  - uid: Org.BouncyCastle.Math.EC.ECFieldElement
    name: ECFieldElement
    nameWithType: ECFieldElement
    fullName: Org.BouncyCastle.Math.EC.ECFieldElement
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Org.BouncyCastle.Math.EC.ECFieldElement.Subtract(Org.BouncyCastle.Math.EC.ECFieldElement)
    name: Subtract
    nameWithType: ECFieldElement.Subtract
    fullName: Org.BouncyCastle.Math.EC.ECFieldElement.Subtract
  - name: (
    nameWithType: (
    fullName: (
  - uid: Org.BouncyCastle.Math.EC.ECFieldElement
    name: ECFieldElement
    nameWithType: ECFieldElement
    fullName: Org.BouncyCastle.Math.EC.ECFieldElement
  - name: )
    nameWithType: )
    fullName: )
- uid: Org.BouncyCastle.Math.EC.FpFieldElement.Subtract*
  commentId: Overload:Org.BouncyCastle.Math.EC.FpFieldElement.Subtract
  name: Subtract
  nameWithType: FpFieldElement.Subtract
  fullName: Org.BouncyCastle.Math.EC.FpFieldElement.Subtract
- uid: Org.BouncyCastle.Math.EC.ECFieldElement.Multiply(Org.BouncyCastle.Math.EC.ECFieldElement)
  commentId: M:Org.BouncyCastle.Math.EC.ECFieldElement.Multiply(Org.BouncyCastle.Math.EC.ECFieldElement)
  parent: Org.BouncyCastle.Math.EC.ECFieldElement
  name: Multiply(ECFieldElement)
  nameWithType: ECFieldElement.Multiply(ECFieldElement)
  fullName: Org.BouncyCastle.Math.EC.ECFieldElement.Multiply(Org.BouncyCastle.Math.EC.ECFieldElement)
  spec.csharp:
  - uid: Org.BouncyCastle.Math.EC.ECFieldElement.Multiply(Org.BouncyCastle.Math.EC.ECFieldElement)
    name: Multiply
    nameWithType: ECFieldElement.Multiply
    fullName: Org.BouncyCastle.Math.EC.ECFieldElement.Multiply
  - name: (
    nameWithType: (
    fullName: (
  - uid: Org.BouncyCastle.Math.EC.ECFieldElement
    name: ECFieldElement
    nameWithType: ECFieldElement
    fullName: Org.BouncyCastle.Math.EC.ECFieldElement
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Org.BouncyCastle.Math.EC.ECFieldElement.Multiply(Org.BouncyCastle.Math.EC.ECFieldElement)
    name: Multiply
    nameWithType: ECFieldElement.Multiply
    fullName: Org.BouncyCastle.Math.EC.ECFieldElement.Multiply
  - name: (
    nameWithType: (
    fullName: (
  - uid: Org.BouncyCastle.Math.EC.ECFieldElement
    name: ECFieldElement
    nameWithType: ECFieldElement
    fullName: Org.BouncyCastle.Math.EC.ECFieldElement
  - name: )
    nameWithType: )
    fullName: )
- uid: Org.BouncyCastle.Math.EC.FpFieldElement.Multiply*
  commentId: Overload:Org.BouncyCastle.Math.EC.FpFieldElement.Multiply
  name: Multiply
  nameWithType: FpFieldElement.Multiply
  fullName: Org.BouncyCastle.Math.EC.FpFieldElement.Multiply
- uid: Org.BouncyCastle.Math.EC.ECFieldElement.MultiplyMinusProduct(Org.BouncyCastle.Math.EC.ECFieldElement,Org.BouncyCastle.Math.EC.ECFieldElement,Org.BouncyCastle.Math.EC.ECFieldElement)
  commentId: M:Org.BouncyCastle.Math.EC.ECFieldElement.MultiplyMinusProduct(Org.BouncyCastle.Math.EC.ECFieldElement,Org.BouncyCastle.Math.EC.ECFieldElement,Org.BouncyCastle.Math.EC.ECFieldElement)
  parent: Org.BouncyCastle.Math.EC.ECFieldElement
  name: MultiplyMinusProduct(ECFieldElement, ECFieldElement, ECFieldElement)
  nameWithType: ECFieldElement.MultiplyMinusProduct(ECFieldElement, ECFieldElement, ECFieldElement)
  fullName: Org.BouncyCastle.Math.EC.ECFieldElement.MultiplyMinusProduct(Org.BouncyCastle.Math.EC.ECFieldElement, Org.BouncyCastle.Math.EC.ECFieldElement, Org.BouncyCastle.Math.EC.ECFieldElement)
  spec.csharp:
  - uid: Org.BouncyCastle.Math.EC.ECFieldElement.MultiplyMinusProduct(Org.BouncyCastle.Math.EC.ECFieldElement,Org.BouncyCastle.Math.EC.ECFieldElement,Org.BouncyCastle.Math.EC.ECFieldElement)
    name: MultiplyMinusProduct
    nameWithType: ECFieldElement.MultiplyMinusProduct
    fullName: Org.BouncyCastle.Math.EC.ECFieldElement.MultiplyMinusProduct
  - name: (
    nameWithType: (
    fullName: (
  - uid: Org.BouncyCastle.Math.EC.ECFieldElement
    name: ECFieldElement
    nameWithType: ECFieldElement
    fullName: Org.BouncyCastle.Math.EC.ECFieldElement
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Org.BouncyCastle.Math.EC.ECFieldElement
    name: ECFieldElement
    nameWithType: ECFieldElement
    fullName: Org.BouncyCastle.Math.EC.ECFieldElement
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Org.BouncyCastle.Math.EC.ECFieldElement
    name: ECFieldElement
    nameWithType: ECFieldElement
    fullName: Org.BouncyCastle.Math.EC.ECFieldElement
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Org.BouncyCastle.Math.EC.ECFieldElement.MultiplyMinusProduct(Org.BouncyCastle.Math.EC.ECFieldElement,Org.BouncyCastle.Math.EC.ECFieldElement,Org.BouncyCastle.Math.EC.ECFieldElement)
    name: MultiplyMinusProduct
    nameWithType: ECFieldElement.MultiplyMinusProduct
    fullName: Org.BouncyCastle.Math.EC.ECFieldElement.MultiplyMinusProduct
  - name: (
    nameWithType: (
    fullName: (
  - uid: Org.BouncyCastle.Math.EC.ECFieldElement
    name: ECFieldElement
    nameWithType: ECFieldElement
    fullName: Org.BouncyCastle.Math.EC.ECFieldElement
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Org.BouncyCastle.Math.EC.ECFieldElement
    name: ECFieldElement
    nameWithType: ECFieldElement
    fullName: Org.BouncyCastle.Math.EC.ECFieldElement
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Org.BouncyCastle.Math.EC.ECFieldElement
    name: ECFieldElement
    nameWithType: ECFieldElement
    fullName: Org.BouncyCastle.Math.EC.ECFieldElement
  - name: )
    nameWithType: )
    fullName: )
- uid: Org.BouncyCastle.Math.EC.FpFieldElement.MultiplyMinusProduct*
  commentId: Overload:Org.BouncyCastle.Math.EC.FpFieldElement.MultiplyMinusProduct
  name: MultiplyMinusProduct
  nameWithType: FpFieldElement.MultiplyMinusProduct
  fullName: Org.BouncyCastle.Math.EC.FpFieldElement.MultiplyMinusProduct
- uid: Org.BouncyCastle.Math.EC.ECFieldElement.MultiplyPlusProduct(Org.BouncyCastle.Math.EC.ECFieldElement,Org.BouncyCastle.Math.EC.ECFieldElement,Org.BouncyCastle.Math.EC.ECFieldElement)
  commentId: M:Org.BouncyCastle.Math.EC.ECFieldElement.MultiplyPlusProduct(Org.BouncyCastle.Math.EC.ECFieldElement,Org.BouncyCastle.Math.EC.ECFieldElement,Org.BouncyCastle.Math.EC.ECFieldElement)
  parent: Org.BouncyCastle.Math.EC.ECFieldElement
  name: MultiplyPlusProduct(ECFieldElement, ECFieldElement, ECFieldElement)
  nameWithType: ECFieldElement.MultiplyPlusProduct(ECFieldElement, ECFieldElement, ECFieldElement)
  fullName: Org.BouncyCastle.Math.EC.ECFieldElement.MultiplyPlusProduct(Org.BouncyCastle.Math.EC.ECFieldElement, Org.BouncyCastle.Math.EC.ECFieldElement, Org.BouncyCastle.Math.EC.ECFieldElement)
  spec.csharp:
  - uid: Org.BouncyCastle.Math.EC.ECFieldElement.MultiplyPlusProduct(Org.BouncyCastle.Math.EC.ECFieldElement,Org.BouncyCastle.Math.EC.ECFieldElement,Org.BouncyCastle.Math.EC.ECFieldElement)
    name: MultiplyPlusProduct
    nameWithType: ECFieldElement.MultiplyPlusProduct
    fullName: Org.BouncyCastle.Math.EC.ECFieldElement.MultiplyPlusProduct
  - name: (
    nameWithType: (
    fullName: (
  - uid: Org.BouncyCastle.Math.EC.ECFieldElement
    name: ECFieldElement
    nameWithType: ECFieldElement
    fullName: Org.BouncyCastle.Math.EC.ECFieldElement
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Org.BouncyCastle.Math.EC.ECFieldElement
    name: ECFieldElement
    nameWithType: ECFieldElement
    fullName: Org.BouncyCastle.Math.EC.ECFieldElement
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Org.BouncyCastle.Math.EC.ECFieldElement
    name: ECFieldElement
    nameWithType: ECFieldElement
    fullName: Org.BouncyCastle.Math.EC.ECFieldElement
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Org.BouncyCastle.Math.EC.ECFieldElement.MultiplyPlusProduct(Org.BouncyCastle.Math.EC.ECFieldElement,Org.BouncyCastle.Math.EC.ECFieldElement,Org.BouncyCastle.Math.EC.ECFieldElement)
    name: MultiplyPlusProduct
    nameWithType: ECFieldElement.MultiplyPlusProduct
    fullName: Org.BouncyCastle.Math.EC.ECFieldElement.MultiplyPlusProduct
  - name: (
    nameWithType: (
    fullName: (
  - uid: Org.BouncyCastle.Math.EC.ECFieldElement
    name: ECFieldElement
    nameWithType: ECFieldElement
    fullName: Org.BouncyCastle.Math.EC.ECFieldElement
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Org.BouncyCastle.Math.EC.ECFieldElement
    name: ECFieldElement
    nameWithType: ECFieldElement
    fullName: Org.BouncyCastle.Math.EC.ECFieldElement
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Org.BouncyCastle.Math.EC.ECFieldElement
    name: ECFieldElement
    nameWithType: ECFieldElement
    fullName: Org.BouncyCastle.Math.EC.ECFieldElement
  - name: )
    nameWithType: )
    fullName: )
- uid: Org.BouncyCastle.Math.EC.FpFieldElement.MultiplyPlusProduct*
  commentId: Overload:Org.BouncyCastle.Math.EC.FpFieldElement.MultiplyPlusProduct
  name: MultiplyPlusProduct
  nameWithType: FpFieldElement.MultiplyPlusProduct
  fullName: Org.BouncyCastle.Math.EC.FpFieldElement.MultiplyPlusProduct
- uid: Org.BouncyCastle.Math.EC.ECFieldElement.Divide(Org.BouncyCastle.Math.EC.ECFieldElement)
  commentId: M:Org.BouncyCastle.Math.EC.ECFieldElement.Divide(Org.BouncyCastle.Math.EC.ECFieldElement)
  parent: Org.BouncyCastle.Math.EC.ECFieldElement
  name: Divide(ECFieldElement)
  nameWithType: ECFieldElement.Divide(ECFieldElement)
  fullName: Org.BouncyCastle.Math.EC.ECFieldElement.Divide(Org.BouncyCastle.Math.EC.ECFieldElement)
  spec.csharp:
  - uid: Org.BouncyCastle.Math.EC.ECFieldElement.Divide(Org.BouncyCastle.Math.EC.ECFieldElement)
    name: Divide
    nameWithType: ECFieldElement.Divide
    fullName: Org.BouncyCastle.Math.EC.ECFieldElement.Divide
  - name: (
    nameWithType: (
    fullName: (
  - uid: Org.BouncyCastle.Math.EC.ECFieldElement
    name: ECFieldElement
    nameWithType: ECFieldElement
    fullName: Org.BouncyCastle.Math.EC.ECFieldElement
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Org.BouncyCastle.Math.EC.ECFieldElement.Divide(Org.BouncyCastle.Math.EC.ECFieldElement)
    name: Divide
    nameWithType: ECFieldElement.Divide
    fullName: Org.BouncyCastle.Math.EC.ECFieldElement.Divide
  - name: (
    nameWithType: (
    fullName: (
  - uid: Org.BouncyCastle.Math.EC.ECFieldElement
    name: ECFieldElement
    nameWithType: ECFieldElement
    fullName: Org.BouncyCastle.Math.EC.ECFieldElement
  - name: )
    nameWithType: )
    fullName: )
- uid: Org.BouncyCastle.Math.EC.FpFieldElement.Divide*
  commentId: Overload:Org.BouncyCastle.Math.EC.FpFieldElement.Divide
  name: Divide
  nameWithType: FpFieldElement.Divide
  fullName: Org.BouncyCastle.Math.EC.FpFieldElement.Divide
- uid: Org.BouncyCastle.Math.EC.ECFieldElement.Negate
  commentId: M:Org.BouncyCastle.Math.EC.ECFieldElement.Negate
  parent: Org.BouncyCastle.Math.EC.ECFieldElement
  name: Negate()
  nameWithType: ECFieldElement.Negate()
  fullName: Org.BouncyCastle.Math.EC.ECFieldElement.Negate()
  spec.csharp:
  - uid: Org.BouncyCastle.Math.EC.ECFieldElement.Negate
    name: Negate
    nameWithType: ECFieldElement.Negate
    fullName: Org.BouncyCastle.Math.EC.ECFieldElement.Negate
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Org.BouncyCastle.Math.EC.ECFieldElement.Negate
    name: Negate
    nameWithType: ECFieldElement.Negate
    fullName: Org.BouncyCastle.Math.EC.ECFieldElement.Negate
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Org.BouncyCastle.Math.EC.FpFieldElement.Negate*
  commentId: Overload:Org.BouncyCastle.Math.EC.FpFieldElement.Negate
  name: Negate
  nameWithType: FpFieldElement.Negate
  fullName: Org.BouncyCastle.Math.EC.FpFieldElement.Negate
- uid: Org.BouncyCastle.Math.EC.ECFieldElement.Square
  commentId: M:Org.BouncyCastle.Math.EC.ECFieldElement.Square
  parent: Org.BouncyCastle.Math.EC.ECFieldElement
  name: Square()
  nameWithType: ECFieldElement.Square()
  fullName: Org.BouncyCastle.Math.EC.ECFieldElement.Square()
  spec.csharp:
  - uid: Org.BouncyCastle.Math.EC.ECFieldElement.Square
    name: Square
    nameWithType: ECFieldElement.Square
    fullName: Org.BouncyCastle.Math.EC.ECFieldElement.Square
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Org.BouncyCastle.Math.EC.ECFieldElement.Square
    name: Square
    nameWithType: ECFieldElement.Square
    fullName: Org.BouncyCastle.Math.EC.ECFieldElement.Square
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Org.BouncyCastle.Math.EC.FpFieldElement.Square*
  commentId: Overload:Org.BouncyCastle.Math.EC.FpFieldElement.Square
  name: Square
  nameWithType: FpFieldElement.Square
  fullName: Org.BouncyCastle.Math.EC.FpFieldElement.Square
- uid: Org.BouncyCastle.Math.EC.ECFieldElement.SquareMinusProduct(Org.BouncyCastle.Math.EC.ECFieldElement,Org.BouncyCastle.Math.EC.ECFieldElement)
  commentId: M:Org.BouncyCastle.Math.EC.ECFieldElement.SquareMinusProduct(Org.BouncyCastle.Math.EC.ECFieldElement,Org.BouncyCastle.Math.EC.ECFieldElement)
  parent: Org.BouncyCastle.Math.EC.ECFieldElement
  name: SquareMinusProduct(ECFieldElement, ECFieldElement)
  nameWithType: ECFieldElement.SquareMinusProduct(ECFieldElement, ECFieldElement)
  fullName: Org.BouncyCastle.Math.EC.ECFieldElement.SquareMinusProduct(Org.BouncyCastle.Math.EC.ECFieldElement, Org.BouncyCastle.Math.EC.ECFieldElement)
  spec.csharp:
  - uid: Org.BouncyCastle.Math.EC.ECFieldElement.SquareMinusProduct(Org.BouncyCastle.Math.EC.ECFieldElement,Org.BouncyCastle.Math.EC.ECFieldElement)
    name: SquareMinusProduct
    nameWithType: ECFieldElement.SquareMinusProduct
    fullName: Org.BouncyCastle.Math.EC.ECFieldElement.SquareMinusProduct
  - name: (
    nameWithType: (
    fullName: (
  - uid: Org.BouncyCastle.Math.EC.ECFieldElement
    name: ECFieldElement
    nameWithType: ECFieldElement
    fullName: Org.BouncyCastle.Math.EC.ECFieldElement
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Org.BouncyCastle.Math.EC.ECFieldElement
    name: ECFieldElement
    nameWithType: ECFieldElement
    fullName: Org.BouncyCastle.Math.EC.ECFieldElement
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Org.BouncyCastle.Math.EC.ECFieldElement.SquareMinusProduct(Org.BouncyCastle.Math.EC.ECFieldElement,Org.BouncyCastle.Math.EC.ECFieldElement)
    name: SquareMinusProduct
    nameWithType: ECFieldElement.SquareMinusProduct
    fullName: Org.BouncyCastle.Math.EC.ECFieldElement.SquareMinusProduct
  - name: (
    nameWithType: (
    fullName: (
  - uid: Org.BouncyCastle.Math.EC.ECFieldElement
    name: ECFieldElement
    nameWithType: ECFieldElement
    fullName: Org.BouncyCastle.Math.EC.ECFieldElement
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Org.BouncyCastle.Math.EC.ECFieldElement
    name: ECFieldElement
    nameWithType: ECFieldElement
    fullName: Org.BouncyCastle.Math.EC.ECFieldElement
  - name: )
    nameWithType: )
    fullName: )
- uid: Org.BouncyCastle.Math.EC.FpFieldElement.SquareMinusProduct*
  commentId: Overload:Org.BouncyCastle.Math.EC.FpFieldElement.SquareMinusProduct
  name: SquareMinusProduct
  nameWithType: FpFieldElement.SquareMinusProduct
  fullName: Org.BouncyCastle.Math.EC.FpFieldElement.SquareMinusProduct
- uid: Org.BouncyCastle.Math.EC.ECFieldElement.SquarePlusProduct(Org.BouncyCastle.Math.EC.ECFieldElement,Org.BouncyCastle.Math.EC.ECFieldElement)
  commentId: M:Org.BouncyCastle.Math.EC.ECFieldElement.SquarePlusProduct(Org.BouncyCastle.Math.EC.ECFieldElement,Org.BouncyCastle.Math.EC.ECFieldElement)
  parent: Org.BouncyCastle.Math.EC.ECFieldElement
  name: SquarePlusProduct(ECFieldElement, ECFieldElement)
  nameWithType: ECFieldElement.SquarePlusProduct(ECFieldElement, ECFieldElement)
  fullName: Org.BouncyCastle.Math.EC.ECFieldElement.SquarePlusProduct(Org.BouncyCastle.Math.EC.ECFieldElement, Org.BouncyCastle.Math.EC.ECFieldElement)
  spec.csharp:
  - uid: Org.BouncyCastle.Math.EC.ECFieldElement.SquarePlusProduct(Org.BouncyCastle.Math.EC.ECFieldElement,Org.BouncyCastle.Math.EC.ECFieldElement)
    name: SquarePlusProduct
    nameWithType: ECFieldElement.SquarePlusProduct
    fullName: Org.BouncyCastle.Math.EC.ECFieldElement.SquarePlusProduct
  - name: (
    nameWithType: (
    fullName: (
  - uid: Org.BouncyCastle.Math.EC.ECFieldElement
    name: ECFieldElement
    nameWithType: ECFieldElement
    fullName: Org.BouncyCastle.Math.EC.ECFieldElement
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Org.BouncyCastle.Math.EC.ECFieldElement
    name: ECFieldElement
    nameWithType: ECFieldElement
    fullName: Org.BouncyCastle.Math.EC.ECFieldElement
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Org.BouncyCastle.Math.EC.ECFieldElement.SquarePlusProduct(Org.BouncyCastle.Math.EC.ECFieldElement,Org.BouncyCastle.Math.EC.ECFieldElement)
    name: SquarePlusProduct
    nameWithType: ECFieldElement.SquarePlusProduct
    fullName: Org.BouncyCastle.Math.EC.ECFieldElement.SquarePlusProduct
  - name: (
    nameWithType: (
    fullName: (
  - uid: Org.BouncyCastle.Math.EC.ECFieldElement
    name: ECFieldElement
    nameWithType: ECFieldElement
    fullName: Org.BouncyCastle.Math.EC.ECFieldElement
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Org.BouncyCastle.Math.EC.ECFieldElement
    name: ECFieldElement
    nameWithType: ECFieldElement
    fullName: Org.BouncyCastle.Math.EC.ECFieldElement
  - name: )
    nameWithType: )
    fullName: )
- uid: Org.BouncyCastle.Math.EC.FpFieldElement.SquarePlusProduct*
  commentId: Overload:Org.BouncyCastle.Math.EC.FpFieldElement.SquarePlusProduct
  name: SquarePlusProduct
  nameWithType: FpFieldElement.SquarePlusProduct
  fullName: Org.BouncyCastle.Math.EC.FpFieldElement.SquarePlusProduct
- uid: Org.BouncyCastle.Math.EC.ECFieldElement.Invert
  commentId: M:Org.BouncyCastle.Math.EC.ECFieldElement.Invert
  parent: Org.BouncyCastle.Math.EC.ECFieldElement
  name: Invert()
  nameWithType: ECFieldElement.Invert()
  fullName: Org.BouncyCastle.Math.EC.ECFieldElement.Invert()
  spec.csharp:
  - uid: Org.BouncyCastle.Math.EC.ECFieldElement.Invert
    name: Invert
    nameWithType: ECFieldElement.Invert
    fullName: Org.BouncyCastle.Math.EC.ECFieldElement.Invert
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Org.BouncyCastle.Math.EC.ECFieldElement.Invert
    name: Invert
    nameWithType: ECFieldElement.Invert
    fullName: Org.BouncyCastle.Math.EC.ECFieldElement.Invert
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Org.BouncyCastle.Math.EC.FpFieldElement.Invert*
  commentId: Overload:Org.BouncyCastle.Math.EC.FpFieldElement.Invert
  name: Invert
  nameWithType: FpFieldElement.Invert
  fullName: Org.BouncyCastle.Math.EC.FpFieldElement.Invert
- uid: Org.BouncyCastle.Math.EC.ECFieldElement.Sqrt
  commentId: M:Org.BouncyCastle.Math.EC.ECFieldElement.Sqrt
  parent: Org.BouncyCastle.Math.EC.ECFieldElement
  name: Sqrt()
  nameWithType: ECFieldElement.Sqrt()
  fullName: Org.BouncyCastle.Math.EC.ECFieldElement.Sqrt()
  spec.csharp:
  - uid: Org.BouncyCastle.Math.EC.ECFieldElement.Sqrt
    name: Sqrt
    nameWithType: ECFieldElement.Sqrt
    fullName: Org.BouncyCastle.Math.EC.ECFieldElement.Sqrt
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Org.BouncyCastle.Math.EC.ECFieldElement.Sqrt
    name: Sqrt
    nameWithType: ECFieldElement.Sqrt
    fullName: Org.BouncyCastle.Math.EC.ECFieldElement.Sqrt
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Org.BouncyCastle.Math.EC.FpFieldElement.Sqrt*
  commentId: Overload:Org.BouncyCastle.Math.EC.FpFieldElement.Sqrt
  name: Sqrt
  nameWithType: FpFieldElement.Sqrt
  fullName: Org.BouncyCastle.Math.EC.FpFieldElement.Sqrt
- uid: Org.BouncyCastle.Math.EC.FpFieldElement.ModAdd*
  commentId: Overload:Org.BouncyCastle.Math.EC.FpFieldElement.ModAdd
  name: ModAdd
  nameWithType: FpFieldElement.ModAdd
  fullName: Org.BouncyCastle.Math.EC.FpFieldElement.ModAdd
- uid: Org.BouncyCastle.Math.EC.FpFieldElement.ModDouble*
  commentId: Overload:Org.BouncyCastle.Math.EC.FpFieldElement.ModDouble
  name: ModDouble
  nameWithType: FpFieldElement.ModDouble
  fullName: Org.BouncyCastle.Math.EC.FpFieldElement.ModDouble
- uid: Org.BouncyCastle.Math.EC.FpFieldElement.ModHalf*
  commentId: Overload:Org.BouncyCastle.Math.EC.FpFieldElement.ModHalf
  name: ModHalf
  nameWithType: FpFieldElement.ModHalf
  fullName: Org.BouncyCastle.Math.EC.FpFieldElement.ModHalf
- uid: Org.BouncyCastle.Math.EC.FpFieldElement.ModHalfAbs*
  commentId: Overload:Org.BouncyCastle.Math.EC.FpFieldElement.ModHalfAbs
  name: ModHalfAbs
  nameWithType: FpFieldElement.ModHalfAbs
  fullName: Org.BouncyCastle.Math.EC.FpFieldElement.ModHalfAbs
- uid: Org.BouncyCastle.Math.EC.FpFieldElement.ModInverse*
  commentId: Overload:Org.BouncyCastle.Math.EC.FpFieldElement.ModInverse
  name: ModInverse
  nameWithType: FpFieldElement.ModInverse
  fullName: Org.BouncyCastle.Math.EC.FpFieldElement.ModInverse
- uid: Org.BouncyCastle.Math.EC.FpFieldElement.ModMult*
  commentId: Overload:Org.BouncyCastle.Math.EC.FpFieldElement.ModMult
  name: ModMult
  nameWithType: FpFieldElement.ModMult
  fullName: Org.BouncyCastle.Math.EC.FpFieldElement.ModMult
- uid: Org.BouncyCastle.Math.EC.FpFieldElement.ModReduce*
  commentId: Overload:Org.BouncyCastle.Math.EC.FpFieldElement.ModReduce
  name: ModReduce
  nameWithType: FpFieldElement.ModReduce
  fullName: Org.BouncyCastle.Math.EC.FpFieldElement.ModReduce
- uid: Org.BouncyCastle.Math.EC.FpFieldElement.ModSubtract*
  commentId: Overload:Org.BouncyCastle.Math.EC.FpFieldElement.ModSubtract
  name: ModSubtract
  nameWithType: FpFieldElement.ModSubtract
  fullName: Org.BouncyCastle.Math.EC.FpFieldElement.ModSubtract
- uid: Org.BouncyCastle.Math.EC.ECFieldElement.Equals(System.Object)
  commentId: M:Org.BouncyCastle.Math.EC.ECFieldElement.Equals(System.Object)
  parent: Org.BouncyCastle.Math.EC.ECFieldElement
  isExternal: true
  name: Equals(Object)
  nameWithType: ECFieldElement.Equals(Object)
  fullName: Org.BouncyCastle.Math.EC.ECFieldElement.Equals(System.Object)
  spec.csharp:
  - uid: Org.BouncyCastle.Math.EC.ECFieldElement.Equals(System.Object)
    name: Equals
    nameWithType: ECFieldElement.Equals
    fullName: Org.BouncyCastle.Math.EC.ECFieldElement.Equals
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Org.BouncyCastle.Math.EC.ECFieldElement.Equals(System.Object)
    name: Equals
    nameWithType: ECFieldElement.Equals
    fullName: Org.BouncyCastle.Math.EC.ECFieldElement.Equals
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Org.BouncyCastle.Math.EC.FpFieldElement.Equals*
  commentId: Overload:Org.BouncyCastle.Math.EC.FpFieldElement.Equals
  name: Equals
  nameWithType: FpFieldElement.Equals
  fullName: Org.BouncyCastle.Math.EC.FpFieldElement.Equals
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Org.BouncyCastle.Math.EC.FpFieldElement
  commentId: T:Org.BouncyCastle.Math.EC.FpFieldElement
  parent: Org.BouncyCastle.Math.EC
  name: FpFieldElement
  nameWithType: FpFieldElement
  fullName: Org.BouncyCastle.Math.EC.FpFieldElement
- uid: Org.BouncyCastle.Math.EC.ECFieldElement.GetHashCode
  commentId: M:Org.BouncyCastle.Math.EC.ECFieldElement.GetHashCode
  parent: Org.BouncyCastle.Math.EC.ECFieldElement
  name: GetHashCode()
  nameWithType: ECFieldElement.GetHashCode()
  fullName: Org.BouncyCastle.Math.EC.ECFieldElement.GetHashCode()
  spec.csharp:
  - uid: Org.BouncyCastle.Math.EC.ECFieldElement.GetHashCode
    name: GetHashCode
    nameWithType: ECFieldElement.GetHashCode
    fullName: Org.BouncyCastle.Math.EC.ECFieldElement.GetHashCode
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Org.BouncyCastle.Math.EC.ECFieldElement.GetHashCode
    name: GetHashCode
    nameWithType: ECFieldElement.GetHashCode
    fullName: Org.BouncyCastle.Math.EC.ECFieldElement.GetHashCode
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Org.BouncyCastle.Math.EC.FpFieldElement.GetHashCode*
  commentId: Overload:Org.BouncyCastle.Math.EC.FpFieldElement.GetHashCode
  name: GetHashCode
  nameWithType: FpFieldElement.GetHashCode
  fullName: Org.BouncyCastle.Math.EC.FpFieldElement.GetHashCode
