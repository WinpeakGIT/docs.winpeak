### YamlMime:ManagedReference
items:
- uid: BestHTTP.SignalR.JsonEncoders.IJsonEncoder
  commentId: T:BestHTTP.SignalR.JsonEncoders.IJsonEncoder
  id: IJsonEncoder
  parent: BestHTTP.SignalR.JsonEncoders
  children:
  - BestHTTP.SignalR.JsonEncoders.IJsonEncoder.DecodeMessage(System.String)
  - BestHTTP.SignalR.JsonEncoders.IJsonEncoder.Encode(System.Object)
  langs:
  - csharp
  - vb
  name: IJsonEncoder
  nameWithType: IJsonEncoder
  fullName: BestHTTP.SignalR.JsonEncoders.IJsonEncoder
  type: Interface
  source:
    id: IJsonEncoder
    path: ''
    startLine: 9418
  assemblies:
  - cs.temp.dll
  namespace: BestHTTP.SignalR.JsonEncoders
  summary: "\nInterface to be able to write custom Json encoders/decoders.\n"
  example: []
  syntax:
    content: public interface IJsonEncoder
    content.vb: Public Interface IJsonEncoder
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: BestHTTP.SignalR.JsonEncoders.IJsonEncoder.Encode(System.Object)
  commentId: M:BestHTTP.SignalR.JsonEncoders.IJsonEncoder.Encode(System.Object)
  id: Encode(System.Object)
  parent: BestHTTP.SignalR.JsonEncoders.IJsonEncoder
  langs:
  - csharp
  - vb
  name: Encode(Object)
  nameWithType: IJsonEncoder.Encode(Object)
  fullName: BestHTTP.SignalR.JsonEncoders.IJsonEncoder.Encode(System.Object)
  type: Method
  source:
    id: Encode
    path: ''
    startLine: 9423
  assemblies:
  - cs.temp.dll
  namespace: BestHTTP.SignalR.JsonEncoders
  summary: "\nThis function must create a json formatted string from the given object. If the encoding fails, it should return null.\n"
  example: []
  syntax:
    content: string Encode(object obj)
    parameters:
    - id: obj
      type: System.Object
    return:
      type: System.String
    content.vb: Function Encode(obj As Object) As String
  overload: BestHTTP.SignalR.JsonEncoders.IJsonEncoder.Encode*
- uid: BestHTTP.SignalR.JsonEncoders.IJsonEncoder.DecodeMessage(System.String)
  commentId: M:BestHTTP.SignalR.JsonEncoders.IJsonEncoder.DecodeMessage(System.String)
  id: DecodeMessage(System.String)
  parent: BestHTTP.SignalR.JsonEncoders.IJsonEncoder
  langs:
  - csharp
  - vb
  name: DecodeMessage(String)
  nameWithType: IJsonEncoder.DecodeMessage(String)
  fullName: BestHTTP.SignalR.JsonEncoders.IJsonEncoder.DecodeMessage(System.String)
  type: Method
  source:
    id: DecodeMessage
    path: ''
    startLine: 9428
  assemblies:
  - cs.temp.dll
  namespace: BestHTTP.SignalR.JsonEncoders
  summary: "\nThis function must create a dictionary the Json formatted string parameter. If the decoding fails, it should return null.\n"
  example: []
  syntax:
    content: IDictionary<string, object> DecodeMessage(string json)
    parameters:
    - id: json
      type: System.String
    return:
      type: System.Collections.Generic.IDictionary{System.String,System.Object}
    content.vb: Function DecodeMessage(json As String) As IDictionary(Of String, Object)
  overload: BestHTTP.SignalR.JsonEncoders.IJsonEncoder.DecodeMessage*
references:
- uid: BestHTTP.SignalR.JsonEncoders
  commentId: N:BestHTTP.SignalR.JsonEncoders
  name: BestHTTP.SignalR.JsonEncoders
  nameWithType: BestHTTP.SignalR.JsonEncoders
  fullName: BestHTTP.SignalR.JsonEncoders
- uid: BestHTTP.SignalR.JsonEncoders.IJsonEncoder.Encode*
  commentId: Overload:BestHTTP.SignalR.JsonEncoders.IJsonEncoder.Encode
  name: Encode
  nameWithType: IJsonEncoder.Encode
  fullName: BestHTTP.SignalR.JsonEncoders.IJsonEncoder.Encode
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: BestHTTP.SignalR.JsonEncoders.IJsonEncoder.DecodeMessage*
  commentId: Overload:BestHTTP.SignalR.JsonEncoders.IJsonEncoder.DecodeMessage
  name: DecodeMessage
  nameWithType: IJsonEncoder.DecodeMessage
  fullName: BestHTTP.SignalR.JsonEncoders.IJsonEncoder.DecodeMessage
- uid: System.Collections.Generic.IDictionary{System.String,System.Object}
  commentId: T:System.Collections.Generic.IDictionary{System.String,System.Object}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IDictionary`2
  name: IDictionary<String, Object>
  nameWithType: IDictionary<String, Object>
  fullName: System.Collections.Generic.IDictionary<System.String, System.Object>
  nameWithType.vb: IDictionary(Of String, Object)
  fullName.vb: System.Collections.Generic.IDictionary(Of System.String, System.Object)
  name.vb: IDictionary(Of String, Object)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IDictionary`2
  commentId: T:System.Collections.Generic.IDictionary`2
  isExternal: true
  name: IDictionary<TKey, TValue>
  nameWithType: IDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>
  nameWithType.vb: IDictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.IDictionary(Of TKey, TValue)
  name.vb: IDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
