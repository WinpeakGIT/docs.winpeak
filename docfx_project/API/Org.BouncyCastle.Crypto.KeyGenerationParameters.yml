### YamlMime:ManagedReference
items:
- uid: Org.BouncyCastle.Crypto.KeyGenerationParameters
  commentId: T:Org.BouncyCastle.Crypto.KeyGenerationParameters
  id: KeyGenerationParameters
  parent: Org.BouncyCastle.Crypto
  children:
  - Org.BouncyCastle.Crypto.KeyGenerationParameters.#ctor(SecureRandom,System.Int32)
  - Org.BouncyCastle.Crypto.KeyGenerationParameters.Random
  - Org.BouncyCastle.Crypto.KeyGenerationParameters.Strength
  langs:
  - csharp
  - vb
  name: KeyGenerationParameters
  nameWithType: KeyGenerationParameters
  fullName: Org.BouncyCastle.Crypto.KeyGenerationParameters
  type: Class
  source:
    id: KeyGenerationParameters
    path: ''
    startLine: 100089
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto
  example: []
  syntax:
    content: public class KeyGenerationParameters
    content.vb: Public Class KeyGenerationParameters
  inheritance:
  - System.Object
  derivedClasses:
  - Org.BouncyCastle.Crypto.Parameters.DHKeyGenerationParameters
  - Org.BouncyCastle.Crypto.Parameters.DsaKeyGenerationParameters
  - Org.BouncyCastle.Crypto.Parameters.ECKeyGenerationParameters
  - Org.BouncyCastle.Crypto.Parameters.ElGamalKeyGenerationParameters
  - Org.BouncyCastle.Crypto.Parameters.RsaKeyGenerationParameters
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ToString
  - System.Object.ReferenceEquals(System.Object,System.Object)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Org.BouncyCastle.Crypto.KeyGenerationParameters.#ctor(SecureRandom,System.Int32)
  commentId: M:Org.BouncyCastle.Crypto.KeyGenerationParameters.#ctor(SecureRandom,System.Int32)
  id: '#ctor(SecureRandom,System.Int32)'
  parent: Org.BouncyCastle.Crypto.KeyGenerationParameters
  langs:
  - csharp
  - vb
  name: KeyGenerationParameters(SecureRandom, Int32)
  nameWithType: KeyGenerationParameters.KeyGenerationParameters(SecureRandom, Int32)
  fullName: Org.BouncyCastle.Crypto.KeyGenerationParameters.KeyGenerationParameters(SecureRandom, System.Int32)
  type: Constructor
  source:
    id: .ctor
    path: ''
    startLine: 100101
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto
  example: []
  syntax:
    content: public KeyGenerationParameters(SecureRandom random, int strength)
    parameters:
    - id: random
      type: SecureRandom
    - id: strength
      type: System.Int32
    content.vb: Public Sub New(random As SecureRandom, strength As Integer)
  overload: Org.BouncyCastle.Crypto.KeyGenerationParameters.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Org.BouncyCastle.Crypto.KeyGenerationParameters.Random
  commentId: P:Org.BouncyCastle.Crypto.KeyGenerationParameters.Random
  id: Random
  parent: Org.BouncyCastle.Crypto.KeyGenerationParameters
  langs:
  - csharp
  - vb
  name: Random
  nameWithType: KeyGenerationParameters.Random
  fullName: Org.BouncyCastle.Crypto.KeyGenerationParameters.Random
  type: Property
  source:
    id: Random
    path: ''
    startLine: 100120
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto
  example: []
  syntax:
    content: public SecureRandom Random { get; }
    parameters: []
    return:
      type: SecureRandom
    content.vb: Public ReadOnly Property Random As SecureRandom
  overload: Org.BouncyCastle.Crypto.KeyGenerationParameters.Random*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Org.BouncyCastle.Crypto.KeyGenerationParameters.Strength
  commentId: P:Org.BouncyCastle.Crypto.KeyGenerationParameters.Strength
  id: Strength
  parent: Org.BouncyCastle.Crypto.KeyGenerationParameters
  langs:
  - csharp
  - vb
  name: Strength
  nameWithType: KeyGenerationParameters.Strength
  fullName: Org.BouncyCastle.Crypto.KeyGenerationParameters.Strength
  type: Property
  source:
    id: Strength
    path: ''
    startLine: 100130
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto
  example: []
  syntax:
    content: public int Strength { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property Strength As Integer
  overload: Org.BouncyCastle.Crypto.KeyGenerationParameters.Strength*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: Org.BouncyCastle.Crypto
  commentId: N:Org.BouncyCastle.Crypto
  name: Org.BouncyCastle.Crypto
  nameWithType: Org.BouncyCastle.Crypto
  fullName: Org.BouncyCastle.Crypto
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Org.BouncyCastle.Crypto.KeyGenerationParameters.#ctor*
  commentId: Overload:Org.BouncyCastle.Crypto.KeyGenerationParameters.#ctor
  name: KeyGenerationParameters
  nameWithType: KeyGenerationParameters.KeyGenerationParameters
  fullName: Org.BouncyCastle.Crypto.KeyGenerationParameters.KeyGenerationParameters
- uid: SecureRandom
  isExternal: true
  name: SecureRandom
  nameWithType: SecureRandom
  fullName: SecureRandom
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Org.BouncyCastle.Crypto.KeyGenerationParameters.Random*
  commentId: Overload:Org.BouncyCastle.Crypto.KeyGenerationParameters.Random
  name: Random
  nameWithType: KeyGenerationParameters.Random
  fullName: Org.BouncyCastle.Crypto.KeyGenerationParameters.Random
- uid: Org.BouncyCastle.Crypto.KeyGenerationParameters.Strength*
  commentId: Overload:Org.BouncyCastle.Crypto.KeyGenerationParameters.Strength
  name: Strength
  nameWithType: KeyGenerationParameters.Strength
  fullName: Org.BouncyCastle.Crypto.KeyGenerationParameters.Strength
