### YamlMime:ManagedReference
items:
- uid: Org.BouncyCastle.Crypto.IDsa
  commentId: T:Org.BouncyCastle.Crypto.IDsa
  id: IDsa
  parent: Org.BouncyCastle.Crypto
  children:
  - Org.BouncyCastle.Crypto.IDsa.AlgorithmName
  - Org.BouncyCastle.Crypto.IDsa.GenerateSignature(System.Byte[])
  - Org.BouncyCastle.Crypto.IDsa.Init(System.Boolean,Org.BouncyCastle.Crypto.ICipherParameters)
  - Org.BouncyCastle.Crypto.IDsa.VerifySignature(System.Byte[],BigInteger,BigInteger)
  langs:
  - csharp
  - vb
  name: IDsa
  nameWithType: IDsa
  fullName: Org.BouncyCastle.Crypto.IDsa
  type: Interface
  source:
    id: IDsa
    path: ''
    startLine: 101199
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto
  example: []
  syntax:
    content: public interface IDsa
    content.vb: Public Interface IDsa
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Org.BouncyCastle.Crypto.IDsa.AlgorithmName
  commentId: P:Org.BouncyCastle.Crypto.IDsa.AlgorithmName
  id: AlgorithmName
  parent: Org.BouncyCastle.Crypto.IDsa
  langs:
  - csharp
  - vb
  name: AlgorithmName
  nameWithType: IDsa.AlgorithmName
  fullName: Org.BouncyCastle.Crypto.IDsa.AlgorithmName
  type: Property
  source:
    id: AlgorithmName
    path: ''
    startLine: 101201
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto
  syntax:
    content: string AlgorithmName { get; }
    parameters: []
    return:
      type: System.String
    content.vb: ReadOnly Property AlgorithmName As String
  overload: Org.BouncyCastle.Crypto.IDsa.AlgorithmName*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Org.BouncyCastle.Crypto.IDsa.Init(System.Boolean,Org.BouncyCastle.Crypto.ICipherParameters)
  commentId: M:Org.BouncyCastle.Crypto.IDsa.Init(System.Boolean,Org.BouncyCastle.Crypto.ICipherParameters)
  id: Init(System.Boolean,Org.BouncyCastle.Crypto.ICipherParameters)
  parent: Org.BouncyCastle.Crypto.IDsa
  langs:
  - csharp
  - vb
  name: Init(Boolean, ICipherParameters)
  nameWithType: IDsa.Init(Boolean, ICipherParameters)
  fullName: Org.BouncyCastle.Crypto.IDsa.Init(System.Boolean, Org.BouncyCastle.Crypto.ICipherParameters)
  type: Method
  source:
    id: Init
    path: ''
    startLine: 101211
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto
  example: []
  syntax:
    content: void Init(bool forSigning, ICipherParameters parameters)
    parameters:
    - id: forSigning
      type: System.Boolean
    - id: parameters
      type: Org.BouncyCastle.Crypto.ICipherParameters
    content.vb: Sub Init(forSigning As Boolean, parameters As ICipherParameters)
  overload: Org.BouncyCastle.Crypto.IDsa.Init*
- uid: Org.BouncyCastle.Crypto.IDsa.GenerateSignature(System.Byte[])
  commentId: M:Org.BouncyCastle.Crypto.IDsa.GenerateSignature(System.Byte[])
  id: GenerateSignature(System.Byte[])
  parent: Org.BouncyCastle.Crypto.IDsa
  langs:
  - csharp
  - vb
  name: GenerateSignature(Byte[])
  nameWithType: IDsa.GenerateSignature(Byte[])
  fullName: Org.BouncyCastle.Crypto.IDsa.GenerateSignature(System.Byte[])
  type: Method
  source:
    id: GenerateSignature
    path: ''
    startLine: 101219
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto
  example: []
  syntax:
    content: BigInteger[] GenerateSignature(byte[] message)
    parameters:
    - id: message
      type: System.Byte[]
    return:
      type: BigInteger[]
    content.vb: Function GenerateSignature(message As Byte()) As BigInteger()
  overload: Org.BouncyCastle.Crypto.IDsa.GenerateSignature*
  nameWithType.vb: IDsa.GenerateSignature(Byte())
  fullName.vb: Org.BouncyCastle.Crypto.IDsa.GenerateSignature(System.Byte())
  name.vb: GenerateSignature(Byte())
- uid: Org.BouncyCastle.Crypto.IDsa.VerifySignature(System.Byte[],BigInteger,BigInteger)
  commentId: M:Org.BouncyCastle.Crypto.IDsa.VerifySignature(System.Byte[],BigInteger,BigInteger)
  id: VerifySignature(System.Byte[],BigInteger,BigInteger)
  parent: Org.BouncyCastle.Crypto.IDsa
  langs:
  - csharp
  - vb
  name: VerifySignature(Byte[], BigInteger, BigInteger)
  nameWithType: IDsa.VerifySignature(Byte[], BigInteger, BigInteger)
  fullName: Org.BouncyCastle.Crypto.IDsa.VerifySignature(System.Byte[], BigInteger, BigInteger)
  type: Method
  source:
    id: VerifySignature
    path: ''
    startLine: 101228
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto
  example: []
  syntax:
    content: bool VerifySignature(byte[] message, BigInteger r, BigInteger s)
    parameters:
    - id: message
      type: System.Byte[]
    - id: r
      type: BigInteger
    - id: s
      type: BigInteger
    return:
      type: System.Boolean
    content.vb: Function VerifySignature(message As Byte(), r As BigInteger, s As BigInteger) As Boolean
  overload: Org.BouncyCastle.Crypto.IDsa.VerifySignature*
  nameWithType.vb: IDsa.VerifySignature(Byte(), BigInteger, BigInteger)
  fullName.vb: Org.BouncyCastle.Crypto.IDsa.VerifySignature(System.Byte(), BigInteger, BigInteger)
  name.vb: VerifySignature(Byte(), BigInteger, BigInteger)
references:
- uid: Org.BouncyCastle.Crypto
  commentId: N:Org.BouncyCastle.Crypto
  name: Org.BouncyCastle.Crypto
  nameWithType: Org.BouncyCastle.Crypto
  fullName: Org.BouncyCastle.Crypto
- uid: Org.BouncyCastle.Crypto.IDsa.AlgorithmName*
  commentId: Overload:Org.BouncyCastle.Crypto.IDsa.AlgorithmName
  name: AlgorithmName
  nameWithType: IDsa.AlgorithmName
  fullName: Org.BouncyCastle.Crypto.IDsa.AlgorithmName
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Org.BouncyCastle.Crypto.IDsa.Init*
  commentId: Overload:Org.BouncyCastle.Crypto.IDsa.Init
  name: Init
  nameWithType: IDsa.Init
  fullName: Org.BouncyCastle.Crypto.IDsa.Init
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Org.BouncyCastle.Crypto.ICipherParameters
  commentId: T:Org.BouncyCastle.Crypto.ICipherParameters
  parent: Org.BouncyCastle.Crypto
  name: ICipherParameters
  nameWithType: ICipherParameters
  fullName: Org.BouncyCastle.Crypto.ICipherParameters
- uid: Org.BouncyCastle.Crypto.IDsa.GenerateSignature*
  commentId: Overload:Org.BouncyCastle.Crypto.IDsa.GenerateSignature
  name: GenerateSignature
  nameWithType: IDsa.GenerateSignature
  fullName: Org.BouncyCastle.Crypto.IDsa.GenerateSignature
- uid: System.Byte[]
  isExternal: true
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullName.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: BigInteger[]
  isExternal: true
  name: BigInteger[]
  nameWithType: BigInteger[]
  fullName: BigInteger[]
  nameWithType.vb: BigInteger()
  fullName.vb: BigInteger()
  name.vb: BigInteger()
  spec.csharp:
  - uid: BigInteger
    name: BigInteger
    nameWithType: BigInteger
    fullName: BigInteger
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: BigInteger
    name: BigInteger
    nameWithType: BigInteger
    fullName: BigInteger
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Org.BouncyCastle.Crypto.IDsa.VerifySignature*
  commentId: Overload:Org.BouncyCastle.Crypto.IDsa.VerifySignature
  name: VerifySignature
  nameWithType: IDsa.VerifySignature
  fullName: Org.BouncyCastle.Crypto.IDsa.VerifySignature
- uid: BigInteger
  isExternal: true
  name: BigInteger
  nameWithType: BigInteger
  fullName: BigInteger
