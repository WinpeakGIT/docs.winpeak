### YamlMime:ManagedReference
items:
- uid: Org.BouncyCastle.Crypto.Parameters.ECDomainParameters
  commentId: T:Org.BouncyCastle.Crypto.Parameters.ECDomainParameters
  id: ECDomainParameters
  parent: Org.BouncyCastle.Crypto.Parameters
  children:
  - Org.BouncyCastle.Crypto.Parameters.ECDomainParameters.#ctor(ECCurve,ECPoint,BigInteger)
  - Org.BouncyCastle.Crypto.Parameters.ECDomainParameters.#ctor(ECCurve,ECPoint,BigInteger,BigInteger)
  - Org.BouncyCastle.Crypto.Parameters.ECDomainParameters.#ctor(ECCurve,ECPoint,BigInteger,BigInteger,System.Byte[])
  - Org.BouncyCastle.Crypto.Parameters.ECDomainParameters.Curve
  - Org.BouncyCastle.Crypto.Parameters.ECDomainParameters.Equals(Org.BouncyCastle.Crypto.Parameters.ECDomainParameters)
  - Org.BouncyCastle.Crypto.Parameters.ECDomainParameters.Equals(System.Object)
  - Org.BouncyCastle.Crypto.Parameters.ECDomainParameters.G
  - Org.BouncyCastle.Crypto.Parameters.ECDomainParameters.GetHashCode
  - Org.BouncyCastle.Crypto.Parameters.ECDomainParameters.GetSeed
  - Org.BouncyCastle.Crypto.Parameters.ECDomainParameters.H
  - Org.BouncyCastle.Crypto.Parameters.ECDomainParameters.N
  langs:
  - csharp
  - vb
  name: ECDomainParameters
  nameWithType: ECDomainParameters
  fullName: Org.BouncyCastle.Crypto.Parameters.ECDomainParameters
  type: Class
  source:
    id: ECDomainParameters
    path: ''
    startLine: 18702
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Parameters
  syntax:
    content: public class ECDomainParameters
    content.vb: Public Class ECDomainParameters
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ToString
  - System.Object.ReferenceEquals(System.Object,System.Object)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Org.BouncyCastle.Crypto.Parameters.ECDomainParameters.#ctor(ECCurve,ECPoint,BigInteger)
  commentId: M:Org.BouncyCastle.Crypto.Parameters.ECDomainParameters.#ctor(ECCurve,ECPoint,BigInteger)
  id: '#ctor(ECCurve,ECPoint,BigInteger)'
  parent: Org.BouncyCastle.Crypto.Parameters.ECDomainParameters
  langs:
  - csharp
  - vb
  name: ECDomainParameters(ECCurve, ECPoint, BigInteger)
  nameWithType: ECDomainParameters.ECDomainParameters(ECCurve, ECPoint, BigInteger)
  fullName: Org.BouncyCastle.Crypto.Parameters.ECDomainParameters.ECDomainParameters(ECCurve, ECPoint, BigInteger)
  type: Constructor
  source:
    id: .ctor
    path: ''
    startLine: 18710
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Parameters
  syntax:
    content: public ECDomainParameters(ECCurve curve, ECPoint g, BigInteger n)
    parameters:
    - id: curve
      type: ECCurve
    - id: g
      type: ECPoint
    - id: n
      type: BigInteger
    content.vb: Public Sub New(curve As ECCurve, g As ECPoint, n As BigInteger)
  overload: Org.BouncyCastle.Crypto.Parameters.ECDomainParameters.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Org.BouncyCastle.Crypto.Parameters.ECDomainParameters.#ctor(ECCurve,ECPoint,BigInteger,BigInteger)
  commentId: M:Org.BouncyCastle.Crypto.Parameters.ECDomainParameters.#ctor(ECCurve,ECPoint,BigInteger,BigInteger)
  id: '#ctor(ECCurve,ECPoint,BigInteger,BigInteger)'
  parent: Org.BouncyCastle.Crypto.Parameters.ECDomainParameters
  langs:
  - csharp
  - vb
  name: ECDomainParameters(ECCurve, ECPoint, BigInteger, BigInteger)
  nameWithType: ECDomainParameters.ECDomainParameters(ECCurve, ECPoint, BigInteger, BigInteger)
  fullName: Org.BouncyCastle.Crypto.Parameters.ECDomainParameters.ECDomainParameters(ECCurve, ECPoint, BigInteger, BigInteger)
  type: Constructor
  source:
    id: .ctor
    path: ''
    startLine: 18718
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Parameters
  syntax:
    content: public ECDomainParameters(ECCurve curve, ECPoint g, BigInteger n, BigInteger h)
    parameters:
    - id: curve
      type: ECCurve
    - id: g
      type: ECPoint
    - id: n
      type: BigInteger
    - id: h
      type: BigInteger
    content.vb: Public Sub New(curve As ECCurve, g As ECPoint, n As BigInteger, h As BigInteger)
  overload: Org.BouncyCastle.Crypto.Parameters.ECDomainParameters.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Org.BouncyCastle.Crypto.Parameters.ECDomainParameters.#ctor(ECCurve,ECPoint,BigInteger,BigInteger,System.Byte[])
  commentId: M:Org.BouncyCastle.Crypto.Parameters.ECDomainParameters.#ctor(ECCurve,ECPoint,BigInteger,BigInteger,System.Byte[])
  id: '#ctor(ECCurve,ECPoint,BigInteger,BigInteger,System.Byte[])'
  parent: Org.BouncyCastle.Crypto.Parameters.ECDomainParameters
  langs:
  - csharp
  - vb
  name: ECDomainParameters(ECCurve, ECPoint, BigInteger, BigInteger, Byte[])
  nameWithType: ECDomainParameters.ECDomainParameters(ECCurve, ECPoint, BigInteger, BigInteger, Byte[])
  fullName: Org.BouncyCastle.Crypto.Parameters.ECDomainParameters.ECDomainParameters(ECCurve, ECPoint, BigInteger, BigInteger, System.Byte[])
  type: Constructor
  source:
    id: .ctor
    path: ''
    startLine: 18727
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Parameters
  syntax:
    content: public ECDomainParameters(ECCurve curve, ECPoint g, BigInteger n, BigInteger h, byte[] seed)
    parameters:
    - id: curve
      type: ECCurve
    - id: g
      type: ECPoint
    - id: n
      type: BigInteger
    - id: h
      type: BigInteger
    - id: seed
      type: System.Byte[]
    content.vb: Public Sub New(curve As ECCurve, g As ECPoint, n As BigInteger, h As BigInteger, seed As Byte())
  overload: Org.BouncyCastle.Crypto.Parameters.ECDomainParameters.#ctor*
  nameWithType.vb: ECDomainParameters.ECDomainParameters(ECCurve, ECPoint, BigInteger, BigInteger, Byte())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Org.BouncyCastle.Crypto.Parameters.ECDomainParameters.ECDomainParameters(ECCurve, ECPoint, BigInteger, BigInteger, System.Byte())
  name.vb: ECDomainParameters(ECCurve, ECPoint, BigInteger, BigInteger, Byte())
- uid: Org.BouncyCastle.Crypto.Parameters.ECDomainParameters.Curve
  commentId: P:Org.BouncyCastle.Crypto.Parameters.ECDomainParameters.Curve
  id: Curve
  parent: Org.BouncyCastle.Crypto.Parameters.ECDomainParameters
  langs:
  - csharp
  - vb
  name: Curve
  nameWithType: ECDomainParameters.Curve
  fullName: Org.BouncyCastle.Crypto.Parameters.ECDomainParameters.Curve
  type: Property
  source:
    id: Curve
    path: ''
    startLine: 18750
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Parameters
  syntax:
    content: public ECCurve Curve { get; }
    parameters: []
    return:
      type: ECCurve
    content.vb: Public ReadOnly Property Curve As ECCurve
  overload: Org.BouncyCastle.Crypto.Parameters.ECDomainParameters.Curve*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Org.BouncyCastle.Crypto.Parameters.ECDomainParameters.G
  commentId: P:Org.BouncyCastle.Crypto.Parameters.ECDomainParameters.G
  id: G
  parent: Org.BouncyCastle.Crypto.Parameters.ECDomainParameters
  langs:
  - csharp
  - vb
  name: G
  nameWithType: ECDomainParameters.G
  fullName: Org.BouncyCastle.Crypto.Parameters.ECDomainParameters.G
  type: Property
  source:
    id: G
    path: ''
    startLine: 18755
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Parameters
  syntax:
    content: public ECPoint G { get; }
    parameters: []
    return:
      type: ECPoint
    content.vb: Public ReadOnly Property G As ECPoint
  overload: Org.BouncyCastle.Crypto.Parameters.ECDomainParameters.G*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Org.BouncyCastle.Crypto.Parameters.ECDomainParameters.N
  commentId: P:Org.BouncyCastle.Crypto.Parameters.ECDomainParameters.N
  id: N
  parent: Org.BouncyCastle.Crypto.Parameters.ECDomainParameters
  langs:
  - csharp
  - vb
  name: N
  nameWithType: ECDomainParameters.N
  fullName: Org.BouncyCastle.Crypto.Parameters.ECDomainParameters.N
  type: Property
  source:
    id: N
    path: ''
    startLine: 18760
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Parameters
  syntax:
    content: public BigInteger N { get; }
    parameters: []
    return:
      type: BigInteger
    content.vb: Public ReadOnly Property N As BigInteger
  overload: Org.BouncyCastle.Crypto.Parameters.ECDomainParameters.N*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Org.BouncyCastle.Crypto.Parameters.ECDomainParameters.H
  commentId: P:Org.BouncyCastle.Crypto.Parameters.ECDomainParameters.H
  id: H
  parent: Org.BouncyCastle.Crypto.Parameters.ECDomainParameters
  langs:
  - csharp
  - vb
  name: H
  nameWithType: ECDomainParameters.H
  fullName: Org.BouncyCastle.Crypto.Parameters.ECDomainParameters.H
  type: Property
  source:
    id: H
    path: ''
    startLine: 18765
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Parameters
  syntax:
    content: public BigInteger H { get; }
    parameters: []
    return:
      type: BigInteger
    content.vb: Public ReadOnly Property H As BigInteger
  overload: Org.BouncyCastle.Crypto.Parameters.ECDomainParameters.H*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Org.BouncyCastle.Crypto.Parameters.ECDomainParameters.GetSeed
  commentId: M:Org.BouncyCastle.Crypto.Parameters.ECDomainParameters.GetSeed
  id: GetSeed
  parent: Org.BouncyCastle.Crypto.Parameters.ECDomainParameters
  langs:
  - csharp
  - vb
  name: GetSeed()
  nameWithType: ECDomainParameters.GetSeed()
  fullName: Org.BouncyCastle.Crypto.Parameters.ECDomainParameters.GetSeed()
  type: Method
  source:
    id: GetSeed
    path: ''
    startLine: 18770
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Parameters
  syntax:
    content: public byte[] GetSeed()
    return:
      type: System.Byte[]
    content.vb: Public Function GetSeed As Byte()
  overload: Org.BouncyCastle.Crypto.Parameters.ECDomainParameters.GetSeed*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Org.BouncyCastle.Crypto.Parameters.ECDomainParameters.Equals(System.Object)
  commentId: M:Org.BouncyCastle.Crypto.Parameters.ECDomainParameters.Equals(System.Object)
  id: Equals(System.Object)
  parent: Org.BouncyCastle.Crypto.Parameters.ECDomainParameters
  langs:
  - csharp
  - vb
  name: Equals(Object)
  nameWithType: ECDomainParameters.Equals(Object)
  fullName: Org.BouncyCastle.Crypto.Parameters.ECDomainParameters.Equals(System.Object)
  type: Method
  source:
    id: Equals
    path: ''
    startLine: 18775
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Parameters
  syntax:
    content: public override bool Equals(object obj)
    parameters:
    - id: obj
      type: System.Object
    return:
      type: System.Boolean
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
  overridden: System.Object.Equals(System.Object)
  overload: Org.BouncyCastle.Crypto.Parameters.ECDomainParameters.Equals*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Org.BouncyCastle.Crypto.Parameters.ECDomainParameters.Equals(Org.BouncyCastle.Crypto.Parameters.ECDomainParameters)
  commentId: M:Org.BouncyCastle.Crypto.Parameters.ECDomainParameters.Equals(Org.BouncyCastle.Crypto.Parameters.ECDomainParameters)
  id: Equals(Org.BouncyCastle.Crypto.Parameters.ECDomainParameters)
  parent: Org.BouncyCastle.Crypto.Parameters.ECDomainParameters
  langs:
  - csharp
  - vb
  name: Equals(ECDomainParameters)
  nameWithType: ECDomainParameters.Equals(ECDomainParameters)
  fullName: Org.BouncyCastle.Crypto.Parameters.ECDomainParameters.Equals(Org.BouncyCastle.Crypto.Parameters.ECDomainParameters)
  type: Method
  source:
    id: Equals
    path: ''
    startLine: 18789
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Parameters
  syntax:
    content: protected virtual bool Equals(ECDomainParameters other)
    parameters:
    - id: other
      type: Org.BouncyCastle.Crypto.Parameters.ECDomainParameters
    return:
      type: System.Boolean
    content.vb: Protected Overridable Function Equals(other As ECDomainParameters) As Boolean
  overload: Org.BouncyCastle.Crypto.Parameters.ECDomainParameters.Equals*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: Org.BouncyCastle.Crypto.Parameters.ECDomainParameters.GetHashCode
  commentId: M:Org.BouncyCastle.Crypto.Parameters.ECDomainParameters.GetHashCode
  id: GetHashCode
  parent: Org.BouncyCastle.Crypto.Parameters.ECDomainParameters
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: ECDomainParameters.GetHashCode()
  fullName: Org.BouncyCastle.Crypto.Parameters.ECDomainParameters.GetHashCode()
  type: Method
  source:
    id: GetHashCode
    path: ''
    startLine: 18798
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Parameters
  syntax:
    content: public override int GetHashCode()
    return:
      type: System.Int32
    content.vb: Public Overrides Function GetHashCode As Integer
  overridden: System.Object.GetHashCode
  overload: Org.BouncyCastle.Crypto.Parameters.ECDomainParameters.GetHashCode*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: Org.BouncyCastle.Crypto.Parameters
  commentId: N:Org.BouncyCastle.Crypto.Parameters
  name: Org.BouncyCastle.Crypto.Parameters
  nameWithType: Org.BouncyCastle.Crypto.Parameters
  fullName: Org.BouncyCastle.Crypto.Parameters
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Org.BouncyCastle.Crypto.Parameters.ECDomainParameters.#ctor*
  commentId: Overload:Org.BouncyCastle.Crypto.Parameters.ECDomainParameters.#ctor
  name: ECDomainParameters
  nameWithType: ECDomainParameters.ECDomainParameters
  fullName: Org.BouncyCastle.Crypto.Parameters.ECDomainParameters.ECDomainParameters
- uid: ECCurve
  isExternal: true
  name: ECCurve
  nameWithType: ECCurve
  fullName: ECCurve
- uid: ECPoint
  isExternal: true
  name: ECPoint
  nameWithType: ECPoint
  fullName: ECPoint
- uid: BigInteger
  isExternal: true
  name: BigInteger
  nameWithType: BigInteger
  fullName: BigInteger
- uid: System.Byte[]
  isExternal: true
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullName.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Org.BouncyCastle.Crypto.Parameters.ECDomainParameters.Curve*
  commentId: Overload:Org.BouncyCastle.Crypto.Parameters.ECDomainParameters.Curve
  name: Curve
  nameWithType: ECDomainParameters.Curve
  fullName: Org.BouncyCastle.Crypto.Parameters.ECDomainParameters.Curve
- uid: Org.BouncyCastle.Crypto.Parameters.ECDomainParameters.G*
  commentId: Overload:Org.BouncyCastle.Crypto.Parameters.ECDomainParameters.G
  name: G
  nameWithType: ECDomainParameters.G
  fullName: Org.BouncyCastle.Crypto.Parameters.ECDomainParameters.G
- uid: Org.BouncyCastle.Crypto.Parameters.ECDomainParameters.N*
  commentId: Overload:Org.BouncyCastle.Crypto.Parameters.ECDomainParameters.N
  name: N
  nameWithType: ECDomainParameters.N
  fullName: Org.BouncyCastle.Crypto.Parameters.ECDomainParameters.N
- uid: Org.BouncyCastle.Crypto.Parameters.ECDomainParameters.H*
  commentId: Overload:Org.BouncyCastle.Crypto.Parameters.ECDomainParameters.H
  name: H
  nameWithType: ECDomainParameters.H
  fullName: Org.BouncyCastle.Crypto.Parameters.ECDomainParameters.H
- uid: Org.BouncyCastle.Crypto.Parameters.ECDomainParameters.GetSeed*
  commentId: Overload:Org.BouncyCastle.Crypto.Parameters.ECDomainParameters.GetSeed
  name: GetSeed
  nameWithType: ECDomainParameters.GetSeed
  fullName: Org.BouncyCastle.Crypto.Parameters.ECDomainParameters.GetSeed
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Org.BouncyCastle.Crypto.Parameters.ECDomainParameters.Equals*
  commentId: Overload:Org.BouncyCastle.Crypto.Parameters.ECDomainParameters.Equals
  name: Equals
  nameWithType: ECDomainParameters.Equals
  fullName: Org.BouncyCastle.Crypto.Parameters.ECDomainParameters.Equals
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Org.BouncyCastle.Crypto.Parameters.ECDomainParameters
  commentId: T:Org.BouncyCastle.Crypto.Parameters.ECDomainParameters
  parent: Org.BouncyCastle.Crypto.Parameters
  name: ECDomainParameters
  nameWithType: ECDomainParameters
  fullName: Org.BouncyCastle.Crypto.Parameters.ECDomainParameters
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Org.BouncyCastle.Crypto.Parameters.ECDomainParameters.GetHashCode*
  commentId: Overload:Org.BouncyCastle.Crypto.Parameters.ECDomainParameters.GetHashCode
  name: GetHashCode
  nameWithType: ECDomainParameters.GetHashCode
  fullName: Org.BouncyCastle.Crypto.Parameters.ECDomainParameters.GetHashCode
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
