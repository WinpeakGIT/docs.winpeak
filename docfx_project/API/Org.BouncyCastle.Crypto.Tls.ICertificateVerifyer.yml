### YamlMime:ManagedReference
items:
- uid: Org.BouncyCastle.Crypto.Tls.ICertificateVerifyer
  commentId: T:Org.BouncyCastle.Crypto.Tls.ICertificateVerifyer
  id: ICertificateVerifyer
  parent: Org.BouncyCastle.Crypto.Tls
  children:
  - Org.BouncyCastle.Crypto.Tls.ICertificateVerifyer.IsValid(System.Uri,X509CertificateStructure[])
  langs:
  - csharp
  - vb
  name: ICertificateVerifyer
  nameWithType: ICertificateVerifyer
  fullName: Org.BouncyCastle.Crypto.Tls.ICertificateVerifyer
  type: Interface
  source:
    id: ICertificateVerifyer
    path: ''
    startLine: 128398
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Tls
  remarks: "\nThis should be implemented by any class which can find out, if a given\ncertificate chain is being accepted by an client.\n"
  example: []
  syntax:
    content: public interface ICertificateVerifyer
    content.vb: Public Interface ICertificateVerifyer
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Org.BouncyCastle.Crypto.Tls.ICertificateVerifyer.IsValid(System.Uri,X509CertificateStructure[])
  commentId: M:Org.BouncyCastle.Crypto.Tls.ICertificateVerifyer.IsValid(System.Uri,X509CertificateStructure[])
  id: IsValid(System.Uri,X509CertificateStructure[])
  parent: Org.BouncyCastle.Crypto.Tls.ICertificateVerifyer
  langs:
  - csharp
  - vb
  name: IsValid(Uri, X509CertificateStructure[])
  nameWithType: ICertificateVerifyer.IsValid(Uri, X509CertificateStructure[])
  fullName: Org.BouncyCastle.Crypto.Tls.ICertificateVerifyer.IsValid(System.Uri, X509CertificateStructure[])
  type: Method
  source:
    id: IsValid
    path: ''
    startLine: 128403
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Tls
  example: []
  syntax:
    content: bool IsValid(Uri targetUri, X509CertificateStructure[] certs)
    parameters:
    - id: targetUri
      type: System.Uri
      description: ''
    - id: certs
      type: X509CertificateStructure[]
      description: The certs, which are part of the chain.
    return:
      type: System.Boolean
      description: True, if the chain is accepted, false otherwise
    content.vb: Function IsValid(targetUri As Uri, certs As X509CertificateStructure()) As Boolean
  overload: Org.BouncyCastle.Crypto.Tls.ICertificateVerifyer.IsValid*
  nameWithType.vb: ICertificateVerifyer.IsValid(Uri, X509CertificateStructure())
  fullName.vb: Org.BouncyCastle.Crypto.Tls.ICertificateVerifyer.IsValid(System.Uri, X509CertificateStructure())
  name.vb: IsValid(Uri, X509CertificateStructure())
references:
- uid: Org.BouncyCastle.Crypto.Tls
  commentId: N:Org.BouncyCastle.Crypto.Tls
  name: Org.BouncyCastle.Crypto.Tls
  nameWithType: Org.BouncyCastle.Crypto.Tls
  fullName: Org.BouncyCastle.Crypto.Tls
- uid: Org.BouncyCastle.Crypto.Tls.ICertificateVerifyer.IsValid*
  commentId: Overload:Org.BouncyCastle.Crypto.Tls.ICertificateVerifyer.IsValid
  name: IsValid
  nameWithType: ICertificateVerifyer.IsValid
  fullName: Org.BouncyCastle.Crypto.Tls.ICertificateVerifyer.IsValid
- uid: System.Uri
  commentId: T:System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: X509CertificateStructure[]
  isExternal: true
  name: X509CertificateStructure[]
  nameWithType: X509CertificateStructure[]
  fullName: X509CertificateStructure[]
  nameWithType.vb: X509CertificateStructure()
  fullName.vb: X509CertificateStructure()
  name.vb: X509CertificateStructure()
  spec.csharp:
  - uid: X509CertificateStructure
    name: X509CertificateStructure
    nameWithType: X509CertificateStructure
    fullName: X509CertificateStructure
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: X509CertificateStructure
    name: X509CertificateStructure
    nameWithType: X509CertificateStructure
    fullName: X509CertificateStructure
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
