### YamlMime:ManagedReference
items:
- uid: Org.BouncyCastle.Math.Field.FiniteFields
  commentId: T:Org.BouncyCastle.Math.Field.FiniteFields
  id: FiniteFields
  parent: Org.BouncyCastle.Math.Field
  children:
  - Org.BouncyCastle.Math.Field.FiniteFields.GetBinaryExtensionField(System.Int32[])
  - Org.BouncyCastle.Math.Field.FiniteFields.GetPrimeField(Org.BouncyCastle.Math.BigInteger)
  langs:
  - csharp
  - vb
  name: FiniteFields
  nameWithType: FiniteFields
  fullName: Org.BouncyCastle.Math.Field.FiniteFields
  type: Class
  source:
    id: FiniteFields
    path: ''
    startLine: 42272
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Math.Field
  syntax:
    content: public abstract class FiniteFields
    content.vb: Public MustInherit Class FiniteFields
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ToString
  - System.Object.ReferenceEquals(System.Object,System.Object)
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: Org.BouncyCastle.Math.Field.FiniteFields.GetBinaryExtensionField(System.Int32[])
  commentId: M:Org.BouncyCastle.Math.Field.FiniteFields.GetBinaryExtensionField(System.Int32[])
  id: GetBinaryExtensionField(System.Int32[])
  parent: Org.BouncyCastle.Math.Field.FiniteFields
  langs:
  - csharp
  - vb
  name: GetBinaryExtensionField(Int32[])
  nameWithType: FiniteFields.GetBinaryExtensionField(Int32[])
  fullName: Org.BouncyCastle.Math.Field.FiniteFields.GetBinaryExtensionField(System.Int32[])
  type: Method
  source:
    id: GetBinaryExtensionField
    path: ''
    startLine: 42277
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Math.Field
  syntax:
    content: public static IPolynomialExtensionField GetBinaryExtensionField(int[] exponents)
    parameters:
    - id: exponents
      type: System.Int32[]
    return:
      type: Org.BouncyCastle.Math.Field.IPolynomialExtensionField
    content.vb: Public Shared Function GetBinaryExtensionField(exponents As Integer()) As IPolynomialExtensionField
  overload: Org.BouncyCastle.Math.Field.FiniteFields.GetBinaryExtensionField*
  nameWithType.vb: FiniteFields.GetBinaryExtensionField(Int32())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Org.BouncyCastle.Math.Field.FiniteFields.GetBinaryExtensionField(System.Int32())
  name.vb: GetBinaryExtensionField(Int32())
- uid: Org.BouncyCastle.Math.Field.FiniteFields.GetPrimeField(Org.BouncyCastle.Math.BigInteger)
  commentId: M:Org.BouncyCastle.Math.Field.FiniteFields.GetPrimeField(Org.BouncyCastle.Math.BigInteger)
  id: GetPrimeField(Org.BouncyCastle.Math.BigInteger)
  parent: Org.BouncyCastle.Math.Field.FiniteFields
  langs:
  - csharp
  - vb
  name: GetPrimeField(BigInteger)
  nameWithType: FiniteFields.GetPrimeField(BigInteger)
  fullName: Org.BouncyCastle.Math.Field.FiniteFields.GetPrimeField(Org.BouncyCastle.Math.BigInteger)
  type: Method
  source:
    id: GetPrimeField
    path: ''
    startLine: 42299
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Math.Field
  syntax:
    content: public static IFiniteField GetPrimeField(BigInteger characteristic)
    parameters:
    - id: characteristic
      type: Org.BouncyCastle.Math.BigInteger
    return:
      type: Org.BouncyCastle.Math.Field.IFiniteField
    content.vb: Public Shared Function GetPrimeField(characteristic As BigInteger) As IFiniteField
  overload: Org.BouncyCastle.Math.Field.FiniteFields.GetPrimeField*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Org.BouncyCastle.Math.Field
  commentId: N:Org.BouncyCastle.Math.Field
  name: Org.BouncyCastle.Math.Field
  nameWithType: Org.BouncyCastle.Math.Field
  fullName: Org.BouncyCastle.Math.Field
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Org.BouncyCastle.Math.Field.FiniteFields.GetBinaryExtensionField*
  commentId: Overload:Org.BouncyCastle.Math.Field.FiniteFields.GetBinaryExtensionField
  name: GetBinaryExtensionField
  nameWithType: FiniteFields.GetBinaryExtensionField
  fullName: Org.BouncyCastle.Math.Field.FiniteFields.GetBinaryExtensionField
- uid: System.Int32[]
  isExternal: true
  name: Int32[]
  nameWithType: Int32[]
  fullName: System.Int32[]
  nameWithType.vb: Int32()
  fullName.vb: System.Int32()
  name.vb: Int32()
  spec.csharp:
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Org.BouncyCastle.Math.Field.IPolynomialExtensionField
  commentId: T:Org.BouncyCastle.Math.Field.IPolynomialExtensionField
  parent: Org.BouncyCastle.Math.Field
  name: IPolynomialExtensionField
  nameWithType: IPolynomialExtensionField
  fullName: Org.BouncyCastle.Math.Field.IPolynomialExtensionField
- uid: Org.BouncyCastle.Math.Field.FiniteFields.GetPrimeField*
  commentId: Overload:Org.BouncyCastle.Math.Field.FiniteFields.GetPrimeField
  name: GetPrimeField
  nameWithType: FiniteFields.GetPrimeField
  fullName: Org.BouncyCastle.Math.Field.FiniteFields.GetPrimeField
- uid: Org.BouncyCastle.Math.BigInteger
  commentId: T:Org.BouncyCastle.Math.BigInteger
  parent: Org.BouncyCastle.Math
  name: BigInteger
  nameWithType: BigInteger
  fullName: Org.BouncyCastle.Math.BigInteger
- uid: Org.BouncyCastle.Math.Field.IFiniteField
  commentId: T:Org.BouncyCastle.Math.Field.IFiniteField
  parent: Org.BouncyCastle.Math.Field
  name: IFiniteField
  nameWithType: IFiniteField
  fullName: Org.BouncyCastle.Math.Field.IFiniteField
- uid: Org.BouncyCastle.Math
  commentId: N:Org.BouncyCastle.Math
  name: Org.BouncyCastle.Math
  nameWithType: Org.BouncyCastle.Math
  fullName: Org.BouncyCastle.Math
