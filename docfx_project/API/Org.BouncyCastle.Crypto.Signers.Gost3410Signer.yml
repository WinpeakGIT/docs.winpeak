### YamlMime:ManagedReference
items:
- uid: Org.BouncyCastle.Crypto.Signers.Gost3410Signer
  commentId: T:Org.BouncyCastle.Crypto.Signers.Gost3410Signer
  id: Gost3410Signer
  parent: Org.BouncyCastle.Crypto.Signers
  children:
  - Org.BouncyCastle.Crypto.Signers.Gost3410Signer.AlgorithmName
  - Org.BouncyCastle.Crypto.Signers.Gost3410Signer.GenerateSignature(System.Byte[])
  - Org.BouncyCastle.Crypto.Signers.Gost3410Signer.Init(System.Boolean,Org.BouncyCastle.Crypto.ICipherParameters)
  - Org.BouncyCastle.Crypto.Signers.Gost3410Signer.VerifySignature(System.Byte[],BigInteger,BigInteger)
  langs:
  - csharp
  - vb
  name: Gost3410Signer
  nameWithType: Gost3410Signer
  fullName: Org.BouncyCastle.Crypto.Signers.Gost3410Signer
  type: Class
  source:
    id: Gost3410Signer
    path: ''
    startLine: 68585
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Signers
  example: []
  syntax:
    content: 'public class Gost3410Signer : IDsa'
    content.vb: >-
      Public Class Gost3410Signer
          Implements IDsa
  inheritance:
  - System.Object
  implements:
  - Org.BouncyCastle.Crypto.IDsa
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ToString
  - System.Object.ReferenceEquals(System.Object,System.Object)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Org.BouncyCastle.Crypto.Signers.Gost3410Signer.AlgorithmName
  commentId: P:Org.BouncyCastle.Crypto.Signers.Gost3410Signer.AlgorithmName
  id: AlgorithmName
  parent: Org.BouncyCastle.Crypto.Signers.Gost3410Signer
  langs:
  - csharp
  - vb
  name: AlgorithmName
  nameWithType: Gost3410Signer.AlgorithmName
  fullName: Org.BouncyCastle.Crypto.Signers.Gost3410Signer.AlgorithmName
  type: Property
  source:
    id: AlgorithmName
    path: ''
    startLine: 68591
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Signers
  syntax:
    content: public virtual string AlgorithmName { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Overridable ReadOnly Property AlgorithmName As String
  overload: Org.BouncyCastle.Crypto.Signers.Gost3410Signer.AlgorithmName*
  implements:
  - Org.BouncyCastle.Crypto.IDsa.AlgorithmName
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: Org.BouncyCastle.Crypto.Signers.Gost3410Signer.Init(System.Boolean,Org.BouncyCastle.Crypto.ICipherParameters)
  commentId: M:Org.BouncyCastle.Crypto.Signers.Gost3410Signer.Init(System.Boolean,Org.BouncyCastle.Crypto.ICipherParameters)
  id: Init(System.Boolean,Org.BouncyCastle.Crypto.ICipherParameters)
  parent: Org.BouncyCastle.Crypto.Signers.Gost3410Signer
  langs:
  - csharp
  - vb
  name: Init(Boolean, ICipherParameters)
  nameWithType: Gost3410Signer.Init(Boolean, ICipherParameters)
  fullName: Org.BouncyCastle.Crypto.Signers.Gost3410Signer.Init(System.Boolean, Org.BouncyCastle.Crypto.ICipherParameters)
  type: Method
  source:
    id: Init
    path: ''
    startLine: 68596
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Signers
  syntax:
    content: public virtual void Init(bool forSigning, ICipherParameters parameters)
    parameters:
    - id: forSigning
      type: System.Boolean
    - id: parameters
      type: Org.BouncyCastle.Crypto.ICipherParameters
    content.vb: Public Overridable Sub Init(forSigning As Boolean, parameters As ICipherParameters)
  overload: Org.BouncyCastle.Crypto.Signers.Gost3410Signer.Init*
  implements:
  - Org.BouncyCastle.Crypto.IDsa.Init(System.Boolean,Org.BouncyCastle.Crypto.ICipherParameters)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Org.BouncyCastle.Crypto.Signers.Gost3410Signer.GenerateSignature(System.Byte[])
  commentId: M:Org.BouncyCastle.Crypto.Signers.Gost3410Signer.GenerateSignature(System.Byte[])
  id: GenerateSignature(System.Byte[])
  parent: Org.BouncyCastle.Crypto.Signers.Gost3410Signer
  langs:
  - csharp
  - vb
  name: GenerateSignature(Byte[])
  nameWithType: Gost3410Signer.GenerateSignature(Byte[])
  fullName: Org.BouncyCastle.Crypto.Signers.Gost3410Signer.GenerateSignature(System.Byte[])
  type: Method
  source:
    id: GenerateSignature
    path: ''
    startLine: 68635
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Signers
  example: []
  syntax:
    content: public virtual BigInteger[] GenerateSignature(byte[] message)
    parameters:
    - id: message
      type: System.Byte[]
    return:
      type: BigInteger[]
    content.vb: Public Overridable Function GenerateSignature(message As Byte()) As BigInteger()
  overload: Org.BouncyCastle.Crypto.Signers.Gost3410Signer.GenerateSignature*
  implements:
  - Org.BouncyCastle.Crypto.IDsa.GenerateSignature(System.Byte[])
  nameWithType.vb: Gost3410Signer.GenerateSignature(Byte())
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Org.BouncyCastle.Crypto.Signers.Gost3410Signer.GenerateSignature(System.Byte())
  name.vb: GenerateSignature(Byte())
- uid: Org.BouncyCastle.Crypto.Signers.Gost3410Signer.VerifySignature(System.Byte[],BigInteger,BigInteger)
  commentId: M:Org.BouncyCastle.Crypto.Signers.Gost3410Signer.VerifySignature(System.Byte[],BigInteger,BigInteger)
  id: VerifySignature(System.Byte[],BigInteger,BigInteger)
  parent: Org.BouncyCastle.Crypto.Signers.Gost3410Signer
  langs:
  - csharp
  - vb
  name: VerifySignature(Byte[], BigInteger, BigInteger)
  nameWithType: Gost3410Signer.VerifySignature(Byte[], BigInteger, BigInteger)
  fullName: Org.BouncyCastle.Crypto.Signers.Gost3410Signer.VerifySignature(System.Byte[], BigInteger, BigInteger)
  type: Method
  source:
    id: VerifySignature
    path: ''
    startLine: 68668
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Signers
  example: []
  syntax:
    content: public virtual bool VerifySignature(byte[] message, BigInteger r, BigInteger s)
    parameters:
    - id: message
      type: System.Byte[]
    - id: r
      type: BigInteger
    - id: s
      type: BigInteger
    return:
      type: System.Boolean
    content.vb: Public Overridable Function VerifySignature(message As Byte(), r As BigInteger, s As BigInteger) As Boolean
  overload: Org.BouncyCastle.Crypto.Signers.Gost3410Signer.VerifySignature*
  implements:
  - Org.BouncyCastle.Crypto.IDsa.VerifySignature(System.Byte[],BigInteger,BigInteger)
  nameWithType.vb: Gost3410Signer.VerifySignature(Byte(), BigInteger, BigInteger)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Org.BouncyCastle.Crypto.Signers.Gost3410Signer.VerifySignature(System.Byte(), BigInteger, BigInteger)
  name.vb: VerifySignature(Byte(), BigInteger, BigInteger)
references:
- uid: Org.BouncyCastle.Crypto.Signers
  commentId: N:Org.BouncyCastle.Crypto.Signers
  name: Org.BouncyCastle.Crypto.Signers
  nameWithType: Org.BouncyCastle.Crypto.Signers
  fullName: Org.BouncyCastle.Crypto.Signers
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Org.BouncyCastle.Crypto.IDsa
  commentId: T:Org.BouncyCastle.Crypto.IDsa
  parent: Org.BouncyCastle.Crypto
  name: IDsa
  nameWithType: IDsa
  fullName: Org.BouncyCastle.Crypto.IDsa
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Org.BouncyCastle.Crypto
  commentId: N:Org.BouncyCastle.Crypto
  name: Org.BouncyCastle.Crypto
  nameWithType: Org.BouncyCastle.Crypto
  fullName: Org.BouncyCastle.Crypto
- uid: Org.BouncyCastle.Crypto.Signers.Gost3410Signer.AlgorithmName*
  commentId: Overload:Org.BouncyCastle.Crypto.Signers.Gost3410Signer.AlgorithmName
  name: AlgorithmName
  nameWithType: Gost3410Signer.AlgorithmName
  fullName: Org.BouncyCastle.Crypto.Signers.Gost3410Signer.AlgorithmName
- uid: Org.BouncyCastle.Crypto.IDsa.AlgorithmName
  commentId: P:Org.BouncyCastle.Crypto.IDsa.AlgorithmName
  parent: Org.BouncyCastle.Crypto.IDsa
  name: AlgorithmName
  nameWithType: IDsa.AlgorithmName
  fullName: Org.BouncyCastle.Crypto.IDsa.AlgorithmName
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Org.BouncyCastle.Crypto.Signers.Gost3410Signer.Init*
  commentId: Overload:Org.BouncyCastle.Crypto.Signers.Gost3410Signer.Init
  name: Init
  nameWithType: Gost3410Signer.Init
  fullName: Org.BouncyCastle.Crypto.Signers.Gost3410Signer.Init
- uid: Org.BouncyCastle.Crypto.IDsa.Init(System.Boolean,Org.BouncyCastle.Crypto.ICipherParameters)
  commentId: M:Org.BouncyCastle.Crypto.IDsa.Init(System.Boolean,Org.BouncyCastle.Crypto.ICipherParameters)
  parent: Org.BouncyCastle.Crypto.IDsa
  isExternal: true
  name: Init(Boolean, ICipherParameters)
  nameWithType: IDsa.Init(Boolean, ICipherParameters)
  fullName: Org.BouncyCastle.Crypto.IDsa.Init(System.Boolean, Org.BouncyCastle.Crypto.ICipherParameters)
  spec.csharp:
  - uid: Org.BouncyCastle.Crypto.IDsa.Init(System.Boolean,Org.BouncyCastle.Crypto.ICipherParameters)
    name: Init
    nameWithType: IDsa.Init
    fullName: Org.BouncyCastle.Crypto.IDsa.Init
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Org.BouncyCastle.Crypto.ICipherParameters
    name: ICipherParameters
    nameWithType: ICipherParameters
    fullName: Org.BouncyCastle.Crypto.ICipherParameters
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Org.BouncyCastle.Crypto.IDsa.Init(System.Boolean,Org.BouncyCastle.Crypto.ICipherParameters)
    name: Init
    nameWithType: IDsa.Init
    fullName: Org.BouncyCastle.Crypto.IDsa.Init
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Org.BouncyCastle.Crypto.ICipherParameters
    name: ICipherParameters
    nameWithType: ICipherParameters
    fullName: Org.BouncyCastle.Crypto.ICipherParameters
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Org.BouncyCastle.Crypto.ICipherParameters
  commentId: T:Org.BouncyCastle.Crypto.ICipherParameters
  parent: Org.BouncyCastle.Crypto
  name: ICipherParameters
  nameWithType: ICipherParameters
  fullName: Org.BouncyCastle.Crypto.ICipherParameters
- uid: Org.BouncyCastle.Crypto.Signers.Gost3410Signer.GenerateSignature*
  commentId: Overload:Org.BouncyCastle.Crypto.Signers.Gost3410Signer.GenerateSignature
  name: GenerateSignature
  nameWithType: Gost3410Signer.GenerateSignature
  fullName: Org.BouncyCastle.Crypto.Signers.Gost3410Signer.GenerateSignature
- uid: Org.BouncyCastle.Crypto.IDsa.GenerateSignature(System.Byte[])
  commentId: M:Org.BouncyCastle.Crypto.IDsa.GenerateSignature(System.Byte[])
  parent: Org.BouncyCastle.Crypto.IDsa
  isExternal: true
  name: GenerateSignature(Byte[])
  nameWithType: IDsa.GenerateSignature(Byte[])
  fullName: Org.BouncyCastle.Crypto.IDsa.GenerateSignature(System.Byte[])
  nameWithType.vb: IDsa.GenerateSignature(Byte())
  fullName.vb: Org.BouncyCastle.Crypto.IDsa.GenerateSignature(System.Byte())
  name.vb: GenerateSignature(Byte())
  spec.csharp:
  - uid: Org.BouncyCastle.Crypto.IDsa.GenerateSignature(System.Byte[])
    name: GenerateSignature
    nameWithType: IDsa.GenerateSignature
    fullName: Org.BouncyCastle.Crypto.IDsa.GenerateSignature
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Org.BouncyCastle.Crypto.IDsa.GenerateSignature(System.Byte[])
    name: GenerateSignature
    nameWithType: IDsa.GenerateSignature
    fullName: Org.BouncyCastle.Crypto.IDsa.GenerateSignature
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Byte[]
  isExternal: true
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullName.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: BigInteger[]
  isExternal: true
  name: BigInteger[]
  nameWithType: BigInteger[]
  fullName: BigInteger[]
  nameWithType.vb: BigInteger()
  fullName.vb: BigInteger()
  name.vb: BigInteger()
  spec.csharp:
  - uid: BigInteger
    name: BigInteger
    nameWithType: BigInteger
    fullName: BigInteger
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: BigInteger
    name: BigInteger
    nameWithType: BigInteger
    fullName: BigInteger
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Org.BouncyCastle.Crypto.Signers.Gost3410Signer.VerifySignature*
  commentId: Overload:Org.BouncyCastle.Crypto.Signers.Gost3410Signer.VerifySignature
  name: VerifySignature
  nameWithType: Gost3410Signer.VerifySignature
  fullName: Org.BouncyCastle.Crypto.Signers.Gost3410Signer.VerifySignature
- uid: Org.BouncyCastle.Crypto.IDsa.VerifySignature(System.Byte[],BigInteger,BigInteger)
  commentId: M:Org.BouncyCastle.Crypto.IDsa.VerifySignature(System.Byte[],BigInteger,BigInteger)
  parent: Org.BouncyCastle.Crypto.IDsa
  isExternal: true
  name: VerifySignature(Byte[], BigInteger, BigInteger)
  nameWithType: IDsa.VerifySignature(Byte[], BigInteger, BigInteger)
  fullName: Org.BouncyCastle.Crypto.IDsa.VerifySignature(System.Byte[], BigInteger, BigInteger)
  nameWithType.vb: IDsa.VerifySignature(Byte(), BigInteger, BigInteger)
  fullName.vb: Org.BouncyCastle.Crypto.IDsa.VerifySignature(System.Byte(), BigInteger, BigInteger)
  name.vb: VerifySignature(Byte(), BigInteger, BigInteger)
  spec.csharp:
  - uid: Org.BouncyCastle.Crypto.IDsa.VerifySignature(System.Byte[],BigInteger,BigInteger)
    name: VerifySignature
    nameWithType: IDsa.VerifySignature
    fullName: Org.BouncyCastle.Crypto.IDsa.VerifySignature
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BigInteger
    name: BigInteger
    nameWithType: BigInteger
    fullName: BigInteger
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BigInteger
    name: BigInteger
    nameWithType: BigInteger
    fullName: BigInteger
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Org.BouncyCastle.Crypto.IDsa.VerifySignature(System.Byte[],BigInteger,BigInteger)
    name: VerifySignature
    nameWithType: IDsa.VerifySignature
    fullName: Org.BouncyCastle.Crypto.IDsa.VerifySignature
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BigInteger
    name: BigInteger
    nameWithType: BigInteger
    fullName: BigInteger
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BigInteger
    name: BigInteger
    nameWithType: BigInteger
    fullName: BigInteger
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BigInteger
  isExternal: true
  name: BigInteger
  nameWithType: BigInteger
  fullName: BigInteger
