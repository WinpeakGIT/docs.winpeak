### YamlMime:ManagedReference
items:
- uid: Org.BouncyCastle.Utilities.IO.Streams
  commentId: T:Org.BouncyCastle.Utilities.IO.Streams
  id: Streams
  parent: Org.BouncyCastle.Utilities.IO
  children:
  - Org.BouncyCastle.Utilities.IO.Streams.Drain(Stream)
  - Org.BouncyCastle.Utilities.IO.Streams.PipeAll(Stream,Stream)
  - Org.BouncyCastle.Utilities.IO.Streams.PipeAllLimited(Stream,System.Int64,Stream)
  - Org.BouncyCastle.Utilities.IO.Streams.ReadAll(Stream)
  - Org.BouncyCastle.Utilities.IO.Streams.ReadAllLimited(Stream,System.Int32)
  - Org.BouncyCastle.Utilities.IO.Streams.ReadFully(Stream,System.Byte[])
  - Org.BouncyCastle.Utilities.IO.Streams.ReadFully(Stream,System.Byte[],System.Int32,System.Int32)
  langs:
  - csharp
  - vb
  name: Streams
  nameWithType: Streams
  fullName: Org.BouncyCastle.Utilities.IO.Streams
  type: Class
  source:
    id: Streams
    path: ''
    startLine: 131293
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Utilities.IO
  syntax:
    content: public sealed class Streams
    content.vb: Public NotInheritable Class Streams
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ToString
  - System.Object.ReferenceEquals(System.Object,System.Object)
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: Org.BouncyCastle.Utilities.IO.Streams.Drain(Stream)
  commentId: M:Org.BouncyCastle.Utilities.IO.Streams.Drain(Stream)
  id: Drain(Stream)
  parent: Org.BouncyCastle.Utilities.IO.Streams
  langs:
  - csharp
  - vb
  name: Drain(Stream)
  nameWithType: Streams.Drain(Stream)
  fullName: Org.BouncyCastle.Utilities.IO.Streams.Drain(Stream)
  type: Method
  source:
    id: Drain
    path: ''
    startLine: 131301
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Utilities.IO
  syntax:
    content: public static void Drain(Stream inStr)
    parameters:
    - id: inStr
      type: Stream
    content.vb: Public Shared Sub Drain(inStr As Stream)
  overload: Org.BouncyCastle.Utilities.IO.Streams.Drain*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Org.BouncyCastle.Utilities.IO.Streams.ReadAll(Stream)
  commentId: M:Org.BouncyCastle.Utilities.IO.Streams.ReadAll(Stream)
  id: ReadAll(Stream)
  parent: Org.BouncyCastle.Utilities.IO.Streams
  langs:
  - csharp
  - vb
  name: ReadAll(Stream)
  nameWithType: Streams.ReadAll(Stream)
  fullName: Org.BouncyCastle.Utilities.IO.Streams.ReadAll(Stream)
  type: Method
  source:
    id: ReadAll
    path: ''
    startLine: 131309
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Utilities.IO
  syntax:
    content: public static byte[] ReadAll(Stream inStr)
    parameters:
    - id: inStr
      type: Stream
    return:
      type: System.Byte[]
    content.vb: Public Shared Function ReadAll(inStr As Stream) As Byte()
  overload: Org.BouncyCastle.Utilities.IO.Streams.ReadAll*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Org.BouncyCastle.Utilities.IO.Streams.ReadAllLimited(Stream,System.Int32)
  commentId: M:Org.BouncyCastle.Utilities.IO.Streams.ReadAllLimited(Stream,System.Int32)
  id: ReadAllLimited(Stream,System.Int32)
  parent: Org.BouncyCastle.Utilities.IO.Streams
  langs:
  - csharp
  - vb
  name: ReadAllLimited(Stream, Int32)
  nameWithType: Streams.ReadAllLimited(Stream, Int32)
  fullName: Org.BouncyCastle.Utilities.IO.Streams.ReadAllLimited(Stream, System.Int32)
  type: Method
  source:
    id: ReadAllLimited
    path: ''
    startLine: 131316
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Utilities.IO
  syntax:
    content: public static byte[] ReadAllLimited(Stream inStr, int limit)
    parameters:
    - id: inStr
      type: Stream
    - id: limit
      type: System.Int32
    return:
      type: System.Byte[]
    content.vb: Public Shared Function ReadAllLimited(inStr As Stream, limit As Integer) As Byte()
  overload: Org.BouncyCastle.Utilities.IO.Streams.ReadAllLimited*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Org.BouncyCastle.Utilities.IO.Streams.ReadFully(Stream,System.Byte[])
  commentId: M:Org.BouncyCastle.Utilities.IO.Streams.ReadFully(Stream,System.Byte[])
  id: ReadFully(Stream,System.Byte[])
  parent: Org.BouncyCastle.Utilities.IO.Streams
  langs:
  - csharp
  - vb
  name: ReadFully(Stream, Byte[])
  nameWithType: Streams.ReadFully(Stream, Byte[])
  fullName: Org.BouncyCastle.Utilities.IO.Streams.ReadFully(Stream, System.Byte[])
  type: Method
  source:
    id: ReadFully
    path: ''
    startLine: 131323
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Utilities.IO
  syntax:
    content: public static int ReadFully(Stream inStr, byte[] buf)
    parameters:
    - id: inStr
      type: Stream
    - id: buf
      type: System.Byte[]
    return:
      type: System.Int32
    content.vb: Public Shared Function ReadFully(inStr As Stream, buf As Byte()) As Integer
  overload: Org.BouncyCastle.Utilities.IO.Streams.ReadFully*
  nameWithType.vb: Streams.ReadFully(Stream, Byte())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Org.BouncyCastle.Utilities.IO.Streams.ReadFully(Stream, System.Byte())
  name.vb: ReadFully(Stream, Byte())
- uid: Org.BouncyCastle.Utilities.IO.Streams.ReadFully(Stream,System.Byte[],System.Int32,System.Int32)
  commentId: M:Org.BouncyCastle.Utilities.IO.Streams.ReadFully(Stream,System.Byte[],System.Int32,System.Int32)
  id: ReadFully(Stream,System.Byte[],System.Int32,System.Int32)
  parent: Org.BouncyCastle.Utilities.IO.Streams
  langs:
  - csharp
  - vb
  name: ReadFully(Stream, Byte[], Int32, Int32)
  nameWithType: Streams.ReadFully(Stream, Byte[], Int32, Int32)
  fullName: Org.BouncyCastle.Utilities.IO.Streams.ReadFully(Stream, System.Byte[], System.Int32, System.Int32)
  type: Method
  source:
    id: ReadFully
    path: ''
    startLine: 131328
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Utilities.IO
  syntax:
    content: public static int ReadFully(Stream inStr, byte[] buf, int off, int len)
    parameters:
    - id: inStr
      type: Stream
    - id: buf
      type: System.Byte[]
    - id: off
      type: System.Int32
    - id: len
      type: System.Int32
    return:
      type: System.Int32
    content.vb: Public Shared Function ReadFully(inStr As Stream, buf As Byte(), off As Integer, len As Integer) As Integer
  overload: Org.BouncyCastle.Utilities.IO.Streams.ReadFully*
  nameWithType.vb: Streams.ReadFully(Stream, Byte(), Int32, Int32)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Org.BouncyCastle.Utilities.IO.Streams.ReadFully(Stream, System.Byte(), System.Int32, System.Int32)
  name.vb: ReadFully(Stream, Byte(), Int32, Int32)
- uid: Org.BouncyCastle.Utilities.IO.Streams.PipeAll(Stream,Stream)
  commentId: M:Org.BouncyCastle.Utilities.IO.Streams.PipeAll(Stream,Stream)
  id: PipeAll(Stream,Stream)
  parent: Org.BouncyCastle.Utilities.IO.Streams
  langs:
  - csharp
  - vb
  name: PipeAll(Stream, Stream)
  nameWithType: Streams.PipeAll(Stream, Stream)
  fullName: Org.BouncyCastle.Utilities.IO.Streams.PipeAll(Stream, Stream)
  type: Method
  source:
    id: PipeAll
    path: ''
    startLine: 131341
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Utilities.IO
  syntax:
    content: public static void PipeAll(Stream inStr, Stream outStr)
    parameters:
    - id: inStr
      type: Stream
    - id: outStr
      type: Stream
    content.vb: Public Shared Sub PipeAll(inStr As Stream, outStr As Stream)
  overload: Org.BouncyCastle.Utilities.IO.Streams.PipeAll*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Org.BouncyCastle.Utilities.IO.Streams.PipeAllLimited(Stream,System.Int64,Stream)
  commentId: M:Org.BouncyCastle.Utilities.IO.Streams.PipeAllLimited(Stream,System.Int64,Stream)
  id: PipeAllLimited(Stream,System.Int64,Stream)
  parent: Org.BouncyCastle.Utilities.IO.Streams
  langs:
  - csharp
  - vb
  name: PipeAllLimited(Stream, Int64, Stream)
  nameWithType: Streams.PipeAllLimited(Stream, Int64, Stream)
  fullName: Org.BouncyCastle.Utilities.IO.Streams.PipeAllLimited(Stream, System.Int64, Stream)
  type: Method
  source:
    id: PipeAllLimited
    path: ''
    startLine: 131366
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Utilities.IO
  summary: "\nPipe all bytes from <code>inStr</code> to <code>outStr</code>, throwing <code>StreamFlowException</code> if greater\nthan <code>limit</code> bytes in <code>inStr</code>.\n"
  example: []
  syntax:
    content: public static long PipeAllLimited(Stream inStr, long limit, Stream outStr)
    parameters:
    - id: inStr
      type: Stream
      description: "\nA <see cref=\"!:Stream\"></see>\n"
    - id: limit
      type: System.Int64
      description: "\nA <xref href=\"System.Int64\" data-throw-if-not-resolved=\"false\"></xref>\n"
    - id: outStr
      type: Stream
      description: "\nA <see cref=\"!:Stream\"></see>\n"
    return:
      type: System.Int64
      description: The number of bytes actually transferred, if not greater than <code>limit</code>
    content.vb: Public Shared Function PipeAllLimited(inStr As Stream, limit As Long, outStr As Stream) As Long
  overload: Org.BouncyCastle.Utilities.IO.Streams.PipeAllLimited*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Org.BouncyCastle.Utilities.IO
  commentId: N:Org.BouncyCastle.Utilities.IO
  name: Org.BouncyCastle.Utilities.IO
  nameWithType: Org.BouncyCastle.Utilities.IO
  fullName: Org.BouncyCastle.Utilities.IO
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Org.BouncyCastle.Utilities.IO.Streams.Drain*
  commentId: Overload:Org.BouncyCastle.Utilities.IO.Streams.Drain
  name: Drain
  nameWithType: Streams.Drain
  fullName: Org.BouncyCastle.Utilities.IO.Streams.Drain
- uid: Stream
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: Stream
- uid: Org.BouncyCastle.Utilities.IO.Streams.ReadAll*
  commentId: Overload:Org.BouncyCastle.Utilities.IO.Streams.ReadAll
  name: ReadAll
  nameWithType: Streams.ReadAll
  fullName: Org.BouncyCastle.Utilities.IO.Streams.ReadAll
- uid: System.Byte[]
  isExternal: true
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullName.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Org.BouncyCastle.Utilities.IO.Streams.ReadAllLimited*
  commentId: Overload:Org.BouncyCastle.Utilities.IO.Streams.ReadAllLimited
  name: ReadAllLimited
  nameWithType: Streams.ReadAllLimited
  fullName: Org.BouncyCastle.Utilities.IO.Streams.ReadAllLimited
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Org.BouncyCastle.Utilities.IO.Streams.ReadFully*
  commentId: Overload:Org.BouncyCastle.Utilities.IO.Streams.ReadFully
  name: ReadFully
  nameWithType: Streams.ReadFully
  fullName: Org.BouncyCastle.Utilities.IO.Streams.ReadFully
- uid: Org.BouncyCastle.Utilities.IO.Streams.PipeAll*
  commentId: Overload:Org.BouncyCastle.Utilities.IO.Streams.PipeAll
  name: PipeAll
  nameWithType: Streams.PipeAll
  fullName: Org.BouncyCastle.Utilities.IO.Streams.PipeAll
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: Org.BouncyCastle.Utilities.IO.Streams.PipeAllLimited*
  commentId: Overload:Org.BouncyCastle.Utilities.IO.Streams.PipeAllLimited
  name: PipeAllLimited
  nameWithType: Streams.PipeAllLimited
  fullName: Org.BouncyCastle.Utilities.IO.Streams.PipeAllLimited
