### YamlMime:ManagedReference
items:
- uid: Winpeak.Client.Networking.WebServer.CreateGameSession
  commentId: T:Winpeak.Client.Networking.WebServer.CreateGameSession
  id: CreateGameSession
  parent: Winpeak.Client.Networking.WebServer
  children:
  - Winpeak.Client.Networking.WebServer.CreateGameSession.#ctor(System.Int32,System.Int32,System.Int32)
  - Winpeak.Client.Networking.WebServer.CreateGameSession.GenerateData
  langs:
  - csharp
  - vb
  name: CreateGameSession
  nameWithType: CreateGameSession
  fullName: Winpeak.Client.Networking.WebServer.CreateGameSession
  type: Class
  source:
    id: CreateGameSession
    path: ''
    startLine: 3634
  assemblies:
  - cs.temp.dll
  namespace: Winpeak.Client.Networking.WebServer
  syntax:
    content: 'public class CreateGameSession : BaseWebPackage<CreateGameSessionResult>, IWebRequest'
    content.vb: >-
      Public Class CreateGameSession
          Inherits BaseWebPackage(Of CreateGameSessionResult)
          Implements IWebRequest
  inheritance:
  - System.Object
  - Winpeak.Client.Networking.WebServer.WebRequest
  - Winpeak.Client.Networking.WebServer.BaseWebPackage{Winpeak.Client.Networking.WebServer.CreateGameSessionResult}
  implements:
  - Winpeak.Client.Networking.WebServer.IWebRequest
  inheritedMembers:
  - Winpeak.Client.Networking.WebServer.BaseWebPackage{Winpeak.Client.Networking.WebServer.CreateGameSessionResult}.Send(System.Action{Winpeak.Client.Networking.WebServer.CreateGameSessionResult})
  - Winpeak.Client.Networking.WebServer.BaseWebPackage{Winpeak.Client.Networking.WebServer.CreateGameSessionResult}.OnRequestFinished(HTTPRequest,HTTPResponse)
  - Winpeak.Client.Networking.WebServer.WebRequest.Mod
  - Winpeak.Client.Networking.WebServer.WebRequest.Act
  - Winpeak.Client.Networking.WebServer.WebRequest.Send
  - Winpeak.Client.Networking.WebServer.WebRequest.Url
  - Winpeak.Client.Networking.WebServer.WebRequest.TimeStamp
  - Winpeak.Client.Networking.WebServer.WebRequest.Method
  - Winpeak.Client.Networking.WebServer.WebRequest.HasTextureToSend
  - Winpeak.Client.Networking.WebServer.WebRequest.Texture
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ToString
  - System.Object.ReferenceEquals(System.Object,System.Object)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Winpeak.Client.Networking.WebServer.CreateGameSession.#ctor(System.Int32,System.Int32,System.Int32)
  commentId: M:Winpeak.Client.Networking.WebServer.CreateGameSession.#ctor(System.Int32,System.Int32,System.Int32)
  id: '#ctor(System.Int32,System.Int32,System.Int32)'
  parent: Winpeak.Client.Networking.WebServer.CreateGameSession
  langs:
  - csharp
  - vb
  name: CreateGameSession(Int32, Int32, Int32)
  nameWithType: CreateGameSession.CreateGameSession(Int32, Int32, Int32)
  fullName: Winpeak.Client.Networking.WebServer.CreateGameSession.CreateGameSession(System.Int32, System.Int32, System.Int32)
  type: Constructor
  source:
    id: .ctor
    path: ''
    startLine: 3642
  assemblies:
  - cs.temp.dll
  namespace: Winpeak.Client.Networking.WebServer
  syntax:
    content: public CreateGameSession(int gameId, int gameType, int cash)
    parameters:
    - id: gameId
      type: System.Int32
    - id: gameType
      type: System.Int32
    - id: cash
      type: System.Int32
    content.vb: Public Sub New(gameId As Integer, gameType As Integer, cash As Integer)
  overload: Winpeak.Client.Networking.WebServer.CreateGameSession.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Winpeak.Client.Networking.WebServer.CreateGameSession.GenerateData
  commentId: M:Winpeak.Client.Networking.WebServer.CreateGameSession.GenerateData
  id: GenerateData
  parent: Winpeak.Client.Networking.WebServer.CreateGameSession
  langs:
  - csharp
  - vb
  name: GenerateData()
  nameWithType: CreateGameSession.GenerateData()
  fullName: Winpeak.Client.Networking.WebServer.CreateGameSession.GenerateData()
  type: Method
  source:
    id: GenerateData
    path: ''
    startLine: 3648
  assemblies:
  - cs.temp.dll
  namespace: Winpeak.Client.Networking.WebServer
  syntax:
    content: public override Dictionary<string, object> GenerateData()
    return:
      type: System.Collections.Generic.Dictionary{System.String,System.Object}
    content.vb: Public Overrides Function GenerateData As Dictionary(Of String, Object)
  overridden: Winpeak.Client.Networking.WebServer.WebRequest.GenerateData
  overload: Winpeak.Client.Networking.WebServer.CreateGameSession.GenerateData*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: Winpeak.Client.Networking.WebServer
  commentId: N:Winpeak.Client.Networking.WebServer
  name: Winpeak.Client.Networking.WebServer
  nameWithType: Winpeak.Client.Networking.WebServer
  fullName: Winpeak.Client.Networking.WebServer
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Winpeak.Client.Networking.WebServer.WebRequest
  commentId: T:Winpeak.Client.Networking.WebServer.WebRequest
  parent: Winpeak.Client.Networking.WebServer
  name: WebRequest
  nameWithType: WebRequest
  fullName: Winpeak.Client.Networking.WebServer.WebRequest
- uid: Winpeak.Client.Networking.WebServer.BaseWebPackage{Winpeak.Client.Networking.WebServer.CreateGameSessionResult}
  commentId: T:Winpeak.Client.Networking.WebServer.BaseWebPackage{Winpeak.Client.Networking.WebServer.CreateGameSessionResult}
  parent: Winpeak.Client.Networking.WebServer
  definition: Winpeak.Client.Networking.WebServer.BaseWebPackage`1
  name: BaseWebPackage<CreateGameSessionResult>
  nameWithType: BaseWebPackage<CreateGameSessionResult>
  fullName: Winpeak.Client.Networking.WebServer.BaseWebPackage<Winpeak.Client.Networking.WebServer.CreateGameSessionResult>
  nameWithType.vb: BaseWebPackage(Of CreateGameSessionResult)
  fullName.vb: Winpeak.Client.Networking.WebServer.BaseWebPackage(Of Winpeak.Client.Networking.WebServer.CreateGameSessionResult)
  name.vb: BaseWebPackage(Of CreateGameSessionResult)
  spec.csharp:
  - uid: Winpeak.Client.Networking.WebServer.BaseWebPackage`1
    name: BaseWebPackage
    nameWithType: BaseWebPackage
    fullName: Winpeak.Client.Networking.WebServer.BaseWebPackage
  - name: <
    nameWithType: <
    fullName: <
  - uid: Winpeak.Client.Networking.WebServer.CreateGameSessionResult
    name: CreateGameSessionResult
    nameWithType: CreateGameSessionResult
    fullName: Winpeak.Client.Networking.WebServer.CreateGameSessionResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Winpeak.Client.Networking.WebServer.BaseWebPackage`1
    name: BaseWebPackage
    nameWithType: BaseWebPackage
    fullName: Winpeak.Client.Networking.WebServer.BaseWebPackage
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Winpeak.Client.Networking.WebServer.CreateGameSessionResult
    name: CreateGameSessionResult
    nameWithType: CreateGameSessionResult
    fullName: Winpeak.Client.Networking.WebServer.CreateGameSessionResult
  - name: )
    nameWithType: )
    fullName: )
- uid: Winpeak.Client.Networking.WebServer.IWebRequest
  commentId: T:Winpeak.Client.Networking.WebServer.IWebRequest
  parent: Winpeak.Client.Networking.WebServer
  name: IWebRequest
  nameWithType: IWebRequest
  fullName: Winpeak.Client.Networking.WebServer.IWebRequest
- uid: Winpeak.Client.Networking.WebServer.BaseWebPackage{Winpeak.Client.Networking.WebServer.CreateGameSessionResult}.Send(System.Action{Winpeak.Client.Networking.WebServer.CreateGameSessionResult})
  commentId: M:Winpeak.Client.Networking.WebServer.BaseWebPackage{Winpeak.Client.Networking.WebServer.CreateGameSessionResult}.Send(System.Action{Winpeak.Client.Networking.WebServer.CreateGameSessionResult})
  parent: Winpeak.Client.Networking.WebServer.BaseWebPackage{Winpeak.Client.Networking.WebServer.CreateGameSessionResult}
  definition: Winpeak.Client.Networking.WebServer.BaseWebPackage`1.Send(System.Action{`0})
  name: Send(Action<CreateGameSessionResult>)
  nameWithType: BaseWebPackage<CreateGameSessionResult>.Send(Action<CreateGameSessionResult>)
  fullName: Winpeak.Client.Networking.WebServer.BaseWebPackage<Winpeak.Client.Networking.WebServer.CreateGameSessionResult>.Send(System.Action<Winpeak.Client.Networking.WebServer.CreateGameSessionResult>)
  nameWithType.vb: BaseWebPackage(Of CreateGameSessionResult).Send(Action(Of CreateGameSessionResult))
  fullName.vb: Winpeak.Client.Networking.WebServer.BaseWebPackage(Of Winpeak.Client.Networking.WebServer.CreateGameSessionResult).Send(System.Action(Of Winpeak.Client.Networking.WebServer.CreateGameSessionResult))
  name.vb: Send(Action(Of CreateGameSessionResult))
  spec.csharp:
  - uid: Winpeak.Client.Networking.WebServer.BaseWebPackage`1.Send(System.Action{`0})
    name: Send
    nameWithType: BaseWebPackage<CreateGameSessionResult>.Send
    fullName: Winpeak.Client.Networking.WebServer.BaseWebPackage<Winpeak.Client.Networking.WebServer.CreateGameSessionResult>.Send
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Winpeak.Client.Networking.WebServer.CreateGameSessionResult
    name: CreateGameSessionResult
    nameWithType: CreateGameSessionResult
    fullName: Winpeak.Client.Networking.WebServer.CreateGameSessionResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Winpeak.Client.Networking.WebServer.BaseWebPackage`1.Send(System.Action{`0})
    name: Send
    nameWithType: BaseWebPackage(Of CreateGameSessionResult).Send
    fullName: Winpeak.Client.Networking.WebServer.BaseWebPackage(Of Winpeak.Client.Networking.WebServer.CreateGameSessionResult).Send
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Winpeak.Client.Networking.WebServer.CreateGameSessionResult
    name: CreateGameSessionResult
    nameWithType: CreateGameSessionResult
    fullName: Winpeak.Client.Networking.WebServer.CreateGameSessionResult
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Winpeak.Client.Networking.WebServer.BaseWebPackage{Winpeak.Client.Networking.WebServer.CreateGameSessionResult}.OnRequestFinished(HTTPRequest,HTTPResponse)
  commentId: M:Winpeak.Client.Networking.WebServer.BaseWebPackage{Winpeak.Client.Networking.WebServer.CreateGameSessionResult}.OnRequestFinished(HTTPRequest,HTTPResponse)
  parent: Winpeak.Client.Networking.WebServer.BaseWebPackage{Winpeak.Client.Networking.WebServer.CreateGameSessionResult}
  definition: Winpeak.Client.Networking.WebServer.BaseWebPackage`1.OnRequestFinished(HTTPRequest,HTTPResponse)
  name: OnRequestFinished(HTTPRequest, HTTPResponse)
  nameWithType: BaseWebPackage<CreateGameSessionResult>.OnRequestFinished(HTTPRequest, HTTPResponse)
  fullName: Winpeak.Client.Networking.WebServer.BaseWebPackage<Winpeak.Client.Networking.WebServer.CreateGameSessionResult>.OnRequestFinished(HTTPRequest, HTTPResponse)
  nameWithType.vb: BaseWebPackage(Of CreateGameSessionResult).OnRequestFinished(HTTPRequest, HTTPResponse)
  fullName.vb: Winpeak.Client.Networking.WebServer.BaseWebPackage(Of Winpeak.Client.Networking.WebServer.CreateGameSessionResult).OnRequestFinished(HTTPRequest, HTTPResponse)
  spec.csharp:
  - uid: Winpeak.Client.Networking.WebServer.BaseWebPackage`1.OnRequestFinished(HTTPRequest,HTTPResponse)
    name: OnRequestFinished
    nameWithType: BaseWebPackage<CreateGameSessionResult>.OnRequestFinished
    fullName: Winpeak.Client.Networking.WebServer.BaseWebPackage<Winpeak.Client.Networking.WebServer.CreateGameSessionResult>.OnRequestFinished
  - name: (
    nameWithType: (
    fullName: (
  - uid: HTTPRequest
    name: HTTPRequest
    nameWithType: HTTPRequest
    fullName: HTTPRequest
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: HTTPResponse
    name: HTTPResponse
    nameWithType: HTTPResponse
    fullName: HTTPResponse
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Winpeak.Client.Networking.WebServer.BaseWebPackage`1.OnRequestFinished(HTTPRequest,HTTPResponse)
    name: OnRequestFinished
    nameWithType: BaseWebPackage(Of CreateGameSessionResult).OnRequestFinished
    fullName: Winpeak.Client.Networking.WebServer.BaseWebPackage(Of Winpeak.Client.Networking.WebServer.CreateGameSessionResult).OnRequestFinished
  - name: (
    nameWithType: (
    fullName: (
  - uid: HTTPRequest
    name: HTTPRequest
    nameWithType: HTTPRequest
    fullName: HTTPRequest
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: HTTPResponse
    name: HTTPResponse
    nameWithType: HTTPResponse
    fullName: HTTPResponse
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Winpeak.Client.Networking.WebServer.WebRequest.Mod
  commentId: P:Winpeak.Client.Networking.WebServer.WebRequest.Mod
  parent: Winpeak.Client.Networking.WebServer.WebRequest
  name: Mod
  nameWithType: WebRequest.Mod
  fullName: Winpeak.Client.Networking.WebServer.WebRequest.Mod
- uid: Winpeak.Client.Networking.WebServer.WebRequest.Act
  commentId: P:Winpeak.Client.Networking.WebServer.WebRequest.Act
  parent: Winpeak.Client.Networking.WebServer.WebRequest
  name: Act
  nameWithType: WebRequest.Act
  fullName: Winpeak.Client.Networking.WebServer.WebRequest.Act
- uid: Winpeak.Client.Networking.WebServer.WebRequest.Send
  commentId: M:Winpeak.Client.Networking.WebServer.WebRequest.Send
  parent: Winpeak.Client.Networking.WebServer.WebRequest
  name: Send()
  nameWithType: WebRequest.Send()
  fullName: Winpeak.Client.Networking.WebServer.WebRequest.Send()
  spec.csharp:
  - uid: Winpeak.Client.Networking.WebServer.WebRequest.Send
    name: Send
    nameWithType: WebRequest.Send
    fullName: Winpeak.Client.Networking.WebServer.WebRequest.Send
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Winpeak.Client.Networking.WebServer.WebRequest.Send
    name: Send
    nameWithType: WebRequest.Send
    fullName: Winpeak.Client.Networking.WebServer.WebRequest.Send
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Winpeak.Client.Networking.WebServer.WebRequest.Url
  commentId: P:Winpeak.Client.Networking.WebServer.WebRequest.Url
  parent: Winpeak.Client.Networking.WebServer.WebRequest
  name: Url
  nameWithType: WebRequest.Url
  fullName: Winpeak.Client.Networking.WebServer.WebRequest.Url
- uid: Winpeak.Client.Networking.WebServer.WebRequest.TimeStamp
  commentId: P:Winpeak.Client.Networking.WebServer.WebRequest.TimeStamp
  parent: Winpeak.Client.Networking.WebServer.WebRequest
  name: TimeStamp
  nameWithType: WebRequest.TimeStamp
  fullName: Winpeak.Client.Networking.WebServer.WebRequest.TimeStamp
- uid: Winpeak.Client.Networking.WebServer.WebRequest.Method
  commentId: P:Winpeak.Client.Networking.WebServer.WebRequest.Method
  parent: Winpeak.Client.Networking.WebServer.WebRequest
  name: Method
  nameWithType: WebRequest.Method
  fullName: Winpeak.Client.Networking.WebServer.WebRequest.Method
- uid: Winpeak.Client.Networking.WebServer.WebRequest.HasTextureToSend
  commentId: P:Winpeak.Client.Networking.WebServer.WebRequest.HasTextureToSend
  parent: Winpeak.Client.Networking.WebServer.WebRequest
  name: HasTextureToSend
  nameWithType: WebRequest.HasTextureToSend
  fullName: Winpeak.Client.Networking.WebServer.WebRequest.HasTextureToSend
- uid: Winpeak.Client.Networking.WebServer.WebRequest.Texture
  commentId: P:Winpeak.Client.Networking.WebServer.WebRequest.Texture
  parent: Winpeak.Client.Networking.WebServer.WebRequest
  name: Texture
  nameWithType: WebRequest.Texture
  fullName: Winpeak.Client.Networking.WebServer.WebRequest.Texture
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Winpeak.Client.Networking.WebServer.BaseWebPackage`1
  commentId: T:Winpeak.Client.Networking.WebServer.BaseWebPackage`1
  name: BaseWebPackage<T>
  nameWithType: BaseWebPackage<T>
  fullName: Winpeak.Client.Networking.WebServer.BaseWebPackage<T>
  nameWithType.vb: BaseWebPackage(Of T)
  fullName.vb: Winpeak.Client.Networking.WebServer.BaseWebPackage(Of T)
  name.vb: BaseWebPackage(Of T)
  spec.csharp:
  - uid: Winpeak.Client.Networking.WebServer.BaseWebPackage`1
    name: BaseWebPackage
    nameWithType: BaseWebPackage
    fullName: Winpeak.Client.Networking.WebServer.BaseWebPackage
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Winpeak.Client.Networking.WebServer.BaseWebPackage`1
    name: BaseWebPackage
    nameWithType: BaseWebPackage
    fullName: Winpeak.Client.Networking.WebServer.BaseWebPackage
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Winpeak.Client.Networking.WebServer.BaseWebPackage`1.Send(System.Action{`0})
  commentId: M:Winpeak.Client.Networking.WebServer.BaseWebPackage`1.Send(System.Action{`0})
  isExternal: true
  name: Send(Action<T>)
  nameWithType: BaseWebPackage<T>.Send(Action<T>)
  fullName: Winpeak.Client.Networking.WebServer.BaseWebPackage<T>.Send(System.Action<T>)
  nameWithType.vb: BaseWebPackage(Of T).Send(Action(Of T))
  fullName.vb: Winpeak.Client.Networking.WebServer.BaseWebPackage(Of T).Send(System.Action(Of T))
  name.vb: Send(Action(Of T))
  spec.csharp:
  - uid: Winpeak.Client.Networking.WebServer.BaseWebPackage`1.Send(System.Action{`0})
    name: Send
    nameWithType: BaseWebPackage<T>.Send
    fullName: Winpeak.Client.Networking.WebServer.BaseWebPackage<T>.Send
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Winpeak.Client.Networking.WebServer.BaseWebPackage`1.Send(System.Action{`0})
    name: Send
    nameWithType: BaseWebPackage(Of T).Send
    fullName: Winpeak.Client.Networking.WebServer.BaseWebPackage(Of T).Send
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Winpeak.Client.Networking.WebServer.BaseWebPackage`1.OnRequestFinished(HTTPRequest,HTTPResponse)
  commentId: M:Winpeak.Client.Networking.WebServer.BaseWebPackage`1.OnRequestFinished(HTTPRequest,HTTPResponse)
  isExternal: true
  name: OnRequestFinished(HTTPRequest, HTTPResponse)
  nameWithType: BaseWebPackage<T>.OnRequestFinished(HTTPRequest, HTTPResponse)
  fullName: Winpeak.Client.Networking.WebServer.BaseWebPackage<T>.OnRequestFinished(HTTPRequest, HTTPResponse)
  nameWithType.vb: BaseWebPackage(Of T).OnRequestFinished(HTTPRequest, HTTPResponse)
  fullName.vb: Winpeak.Client.Networking.WebServer.BaseWebPackage(Of T).OnRequestFinished(HTTPRequest, HTTPResponse)
  spec.csharp:
  - uid: Winpeak.Client.Networking.WebServer.BaseWebPackage`1.OnRequestFinished(HTTPRequest,HTTPResponse)
    name: OnRequestFinished
    nameWithType: BaseWebPackage<T>.OnRequestFinished
    fullName: Winpeak.Client.Networking.WebServer.BaseWebPackage<T>.OnRequestFinished
  - name: (
    nameWithType: (
    fullName: (
  - uid: HTTPRequest
    name: HTTPRequest
    nameWithType: HTTPRequest
    fullName: HTTPRequest
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: HTTPResponse
    name: HTTPResponse
    nameWithType: HTTPResponse
    fullName: HTTPResponse
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Winpeak.Client.Networking.WebServer.BaseWebPackage`1.OnRequestFinished(HTTPRequest,HTTPResponse)
    name: OnRequestFinished
    nameWithType: BaseWebPackage(Of T).OnRequestFinished
    fullName: Winpeak.Client.Networking.WebServer.BaseWebPackage(Of T).OnRequestFinished
  - name: (
    nameWithType: (
    fullName: (
  - uid: HTTPRequest
    name: HTTPRequest
    nameWithType: HTTPRequest
    fullName: HTTPRequest
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: HTTPResponse
    name: HTTPResponse
    nameWithType: HTTPResponse
    fullName: HTTPResponse
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Winpeak.Client.Networking.WebServer.CreateGameSession.#ctor*
  commentId: Overload:Winpeak.Client.Networking.WebServer.CreateGameSession.#ctor
  name: CreateGameSession
  nameWithType: CreateGameSession.CreateGameSession
  fullName: Winpeak.Client.Networking.WebServer.CreateGameSession.CreateGameSession
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Winpeak.Client.Networking.WebServer.WebRequest.GenerateData
  commentId: M:Winpeak.Client.Networking.WebServer.WebRequest.GenerateData
  parent: Winpeak.Client.Networking.WebServer.WebRequest
  name: GenerateData()
  nameWithType: WebRequest.GenerateData()
  fullName: Winpeak.Client.Networking.WebServer.WebRequest.GenerateData()
  spec.csharp:
  - uid: Winpeak.Client.Networking.WebServer.WebRequest.GenerateData
    name: GenerateData
    nameWithType: WebRequest.GenerateData
    fullName: Winpeak.Client.Networking.WebServer.WebRequest.GenerateData
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Winpeak.Client.Networking.WebServer.WebRequest.GenerateData
    name: GenerateData
    nameWithType: WebRequest.GenerateData
    fullName: Winpeak.Client.Networking.WebServer.WebRequest.GenerateData
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Winpeak.Client.Networking.WebServer.CreateGameSession.GenerateData*
  commentId: Overload:Winpeak.Client.Networking.WebServer.CreateGameSession.GenerateData
  name: GenerateData
  nameWithType: CreateGameSession.GenerateData
  fullName: Winpeak.Client.Networking.WebServer.CreateGameSession.GenerateData
- uid: System.Collections.Generic.Dictionary{System.String,System.Object}
  commentId: T:System.Collections.Generic.Dictionary{System.String,System.Object}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  name: Dictionary<String, Object>
  nameWithType: Dictionary<String, Object>
  fullName: System.Collections.Generic.Dictionary<System.String, System.Object>
  nameWithType.vb: Dictionary(Of String, Object)
  fullName.vb: System.Collections.Generic.Dictionary(Of System.String, System.Object)
  name.vb: Dictionary(Of String, Object)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary`2
  commentId: T:System.Collections.Generic.Dictionary`2
  isExternal: true
  name: Dictionary<TKey, TValue>
  nameWithType: Dictionary<TKey, TValue>
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>
  nameWithType.vb: Dictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue)
  name.vb: Dictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
