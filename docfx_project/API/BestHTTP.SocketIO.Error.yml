### YamlMime:ManagedReference
items:
- uid: BestHTTP.SocketIO.Error
  commentId: T:BestHTTP.SocketIO.Error
  id: Error
  parent: BestHTTP.SocketIO
  children:
  - BestHTTP.SocketIO.Error.#ctor(BestHTTP.SocketIO.SocketIOErrors,System.String)
  - BestHTTP.SocketIO.Error.Code
  - BestHTTP.SocketIO.Error.Message
  - BestHTTP.SocketIO.Error.ToString
  langs:
  - csharp
  - vb
  name: Error
  nameWithType: Error
  fullName: BestHTTP.SocketIO.Error
  type: Class
  source:
    id: Error
    path: ''
    startLine: 146384
  assemblies:
  - cs.temp.dll
  namespace: BestHTTP.SocketIO
  syntax:
    content: public sealed class Error
    content.vb: Public NotInheritable Class Error
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: BestHTTP.SocketIO.Error.Code
  commentId: P:BestHTTP.SocketIO.Error.Code
  id: Code
  parent: BestHTTP.SocketIO.Error
  langs:
  - csharp
  - vb
  name: Code
  nameWithType: Error.Code
  fullName: BestHTTP.SocketIO.Error.Code
  type: Property
  source:
    id: Code
    path: ''
    startLine: 146386
  assemblies:
  - cs.temp.dll
  namespace: BestHTTP.SocketIO
  syntax:
    content: public SocketIOErrors Code { get; }
    parameters: []
    return:
      type: BestHTTP.SocketIO.SocketIOErrors
    content.vb: Public ReadOnly Property Code As SocketIOErrors
  overload: BestHTTP.SocketIO.Error.Code*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: BestHTTP.SocketIO.Error.Message
  commentId: P:BestHTTP.SocketIO.Error.Message
  id: Message
  parent: BestHTTP.SocketIO.Error
  langs:
  - csharp
  - vb
  name: Message
  nameWithType: Error.Message
  fullName: BestHTTP.SocketIO.Error.Message
  type: Property
  source:
    id: Message
    path: ''
    startLine: 146387
  assemblies:
  - cs.temp.dll
  namespace: BestHTTP.SocketIO
  syntax:
    content: public string Message { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property Message As String
  overload: BestHTTP.SocketIO.Error.Message*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: BestHTTP.SocketIO.Error.#ctor(BestHTTP.SocketIO.SocketIOErrors,System.String)
  commentId: M:BestHTTP.SocketIO.Error.#ctor(BestHTTP.SocketIO.SocketIOErrors,System.String)
  id: '#ctor(BestHTTP.SocketIO.SocketIOErrors,System.String)'
  parent: BestHTTP.SocketIO.Error
  langs:
  - csharp
  - vb
  name: Error(SocketIOErrors, String)
  nameWithType: Error.Error(SocketIOErrors, String)
  fullName: BestHTTP.SocketIO.Error.Error(BestHTTP.SocketIO.SocketIOErrors, System.String)
  type: Constructor
  source:
    id: .ctor
    path: ''
    startLine: 146389
  assemblies:
  - cs.temp.dll
  namespace: BestHTTP.SocketIO
  syntax:
    content: public Error(SocketIOErrors code, string msg)
    parameters:
    - id: code
      type: BestHTTP.SocketIO.SocketIOErrors
    - id: msg
      type: System.String
    content.vb: Public Sub New(code As SocketIOErrors, msg As String)
  overload: BestHTTP.SocketIO.Error.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: BestHTTP.SocketIO.Error.ToString
  commentId: M:BestHTTP.SocketIO.Error.ToString
  id: ToString
  parent: BestHTTP.SocketIO.Error
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: Error.ToString()
  fullName: BestHTTP.SocketIO.Error.ToString()
  type: Method
  source:
    id: ToString
    path: ''
    startLine: 146395
  assemblies:
  - cs.temp.dll
  namespace: BestHTTP.SocketIO
  syntax:
    content: public override string ToString()
    return:
      type: System.String
    content.vb: Public Overrides Function ToString As String
  overridden: System.Object.ToString
  overload: BestHTTP.SocketIO.Error.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: BestHTTP.SocketIO
  commentId: N:BestHTTP.SocketIO
  name: BestHTTP.SocketIO
  nameWithType: BestHTTP.SocketIO
  fullName: BestHTTP.SocketIO
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: BestHTTP.SocketIO.Error.Code*
  commentId: Overload:BestHTTP.SocketIO.Error.Code
  name: Code
  nameWithType: Error.Code
  fullName: BestHTTP.SocketIO.Error.Code
- uid: BestHTTP.SocketIO.SocketIOErrors
  commentId: T:BestHTTP.SocketIO.SocketIOErrors
  parent: BestHTTP.SocketIO
  name: SocketIOErrors
  nameWithType: SocketIOErrors
  fullName: BestHTTP.SocketIO.SocketIOErrors
- uid: BestHTTP.SocketIO.Error.Message*
  commentId: Overload:BestHTTP.SocketIO.Error.Message
  name: Message
  nameWithType: Error.Message
  fullName: BestHTTP.SocketIO.Error.Message
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: BestHTTP.SocketIO.Error.#ctor*
  commentId: Overload:BestHTTP.SocketIO.Error.#ctor
  name: Error
  nameWithType: Error.Error
  fullName: BestHTTP.SocketIO.Error.Error
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: BestHTTP.SocketIO.Error.ToString*
  commentId: Overload:BestHTTP.SocketIO.Error.ToString
  name: ToString
  nameWithType: Error.ToString
  fullName: BestHTTP.SocketIO.Error.ToString
