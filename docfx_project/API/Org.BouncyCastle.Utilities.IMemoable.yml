### YamlMime:ManagedReference
items:
- uid: Org.BouncyCastle.Utilities.IMemoable
  commentId: T:Org.BouncyCastle.Utilities.IMemoable
  id: IMemoable
  parent: Org.BouncyCastle.Utilities
  children:
  - Org.BouncyCastle.Utilities.IMemoable.Copy
  - Org.BouncyCastle.Utilities.IMemoable.Reset(Org.BouncyCastle.Utilities.IMemoable)
  langs:
  - csharp
  - vb
  name: IMemoable
  nameWithType: IMemoable
  fullName: Org.BouncyCastle.Utilities.IMemoable
  type: Interface
  source:
    id: IMemoable
    path: ''
    startLine: 90304
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Utilities
  syntax:
    content: public interface IMemoable
    content.vb: Public Interface IMemoable
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Org.BouncyCastle.Utilities.IMemoable.Copy
  commentId: M:Org.BouncyCastle.Utilities.IMemoable.Copy
  id: Copy
  parent: Org.BouncyCastle.Utilities.IMemoable
  langs:
  - csharp
  - vb
  name: Copy()
  nameWithType: IMemoable.Copy()
  fullName: Org.BouncyCastle.Utilities.IMemoable.Copy()
  type: Method
  source:
    id: Copy
    path: ''
    startLine: 90313
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Utilities
  summary: "\nProduce a copy of this object with its configuration and in its current state.\n"
  remarks: "\nThe returned object may be used simply to store the state, or may be used as a similar object\nstarting from the copied state.\n"
  example: []
  syntax:
    content: IMemoable Copy()
    return:
      type: Org.BouncyCastle.Utilities.IMemoable
    content.vb: Function Copy As IMemoable
  overload: Org.BouncyCastle.Utilities.IMemoable.Copy*
- uid: Org.BouncyCastle.Utilities.IMemoable.Reset(Org.BouncyCastle.Utilities.IMemoable)
  commentId: M:Org.BouncyCastle.Utilities.IMemoable.Reset(Org.BouncyCastle.Utilities.IMemoable)
  id: Reset(Org.BouncyCastle.Utilities.IMemoable)
  parent: Org.BouncyCastle.Utilities.IMemoable
  langs:
  - csharp
  - vb
  name: Reset(IMemoable)
  nameWithType: IMemoable.Reset(IMemoable)
  fullName: Org.BouncyCastle.Utilities.IMemoable.Reset(Org.BouncyCastle.Utilities.IMemoable)
  type: Method
  source:
    id: Reset
    path: ''
    startLine: 90324
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Utilities
  summary: "\nRestore a copied object state into this object.\n"
  remarks: "\nImplementations of this method <em>should</em> try to avoid or minimise memory allocation to perform the reset.\n"
  example: []
  syntax:
    content: void Reset(IMemoable other)
    parameters:
    - id: other
      type: Org.BouncyCastle.Utilities.IMemoable
      description: 'an object originally {@link #copy() copied} from an object of the same type as this instance.'
    content.vb: Sub Reset(other As IMemoable)
  overload: Org.BouncyCastle.Utilities.IMemoable.Reset*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: if the provided object is not of the correct type.
  - type: Org.BouncyCastle.Utilities.MemoableResetException
    commentId: T:Org.BouncyCastle.Utilities.MemoableResetException
    description: if the <strong>other</strong> parameter is in some other way invalid.
references:
- uid: Org.BouncyCastle.Utilities
  commentId: N:Org.BouncyCastle.Utilities
  name: Org.BouncyCastle.Utilities
  nameWithType: Org.BouncyCastle.Utilities
  fullName: Org.BouncyCastle.Utilities
- uid: Org.BouncyCastle.Utilities.IMemoable.Copy*
  commentId: Overload:Org.BouncyCastle.Utilities.IMemoable.Copy
  name: Copy
  nameWithType: IMemoable.Copy
  fullName: Org.BouncyCastle.Utilities.IMemoable.Copy
- uid: Org.BouncyCastle.Utilities.IMemoable
  commentId: T:Org.BouncyCastle.Utilities.IMemoable
  parent: Org.BouncyCastle.Utilities
  name: IMemoable
  nameWithType: IMemoable
  fullName: Org.BouncyCastle.Utilities.IMemoable
- uid: System.InvalidCastException
  commentId: T:System.InvalidCastException
  parent: System
  isExternal: true
  name: InvalidCastException
  nameWithType: InvalidCastException
  fullName: System.InvalidCastException
- uid: Org.BouncyCastle.Utilities.MemoableResetException
  commentId: T:Org.BouncyCastle.Utilities.MemoableResetException
  name: MemoableResetException
  nameWithType: MemoableResetException
  fullName: Org.BouncyCastle.Utilities.MemoableResetException
- uid: Org.BouncyCastle.Utilities.IMemoable.Reset*
  commentId: Overload:Org.BouncyCastle.Utilities.IMemoable.Reset
  name: Reset
  nameWithType: IMemoable.Reset
  fullName: Org.BouncyCastle.Utilities.IMemoable.Reset
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
