### YamlMime:ManagedReference
items:
- uid: BestHTTP.Extensions.KeyValuePairList
  commentId: T:BestHTTP.Extensions.KeyValuePairList
  id: KeyValuePairList
  parent: BestHTTP.Extensions
  children:
  - BestHTTP.Extensions.KeyValuePairList.TryGet(System.String,BestHTTP.Extensions.HeaderValue@)
  - BestHTTP.Extensions.KeyValuePairList.Values
  langs:
  - csharp
  - vb
  name: KeyValuePairList
  nameWithType: KeyValuePairList
  fullName: BestHTTP.Extensions.KeyValuePairList
  type: Class
  source:
    id: KeyValuePairList
    path: ''
    startLine: 153110
  assemblies:
  - cs.temp.dll
  namespace: BestHTTP.Extensions
  summary: "\nBase class for specialized parsers\n"
  example: []
  syntax:
    content: public class KeyValuePairList
    content.vb: Public Class KeyValuePairList
  inheritance:
  - System.Object
  derivedClasses:
  - BestHTTP.Extensions.HeaderParser
  - BestHTTP.Extensions.WWWAuthenticateHeaderParser
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ToString
  - System.Object.ReferenceEquals(System.Object,System.Object)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: BestHTTP.Extensions.KeyValuePairList.Values
  commentId: P:BestHTTP.Extensions.KeyValuePairList.Values
  id: Values
  parent: BestHTTP.Extensions.KeyValuePairList
  langs:
  - csharp
  - vb
  name: Values
  nameWithType: KeyValuePairList.Values
  fullName: BestHTTP.Extensions.KeyValuePairList.Values
  type: Property
  source:
    id: Values
    path: ''
    startLine: 153112
  assemblies:
  - cs.temp.dll
  namespace: BestHTTP.Extensions
  syntax:
    content: public List<HeaderValue> Values { get; protected set; }
    parameters: []
    return:
      type: System.Collections.Generic.List{BestHTTP.Extensions.HeaderValue}
    content.vb: Public Property Values As List(Of HeaderValue)
  overload: BestHTTP.Extensions.KeyValuePairList.Values*
  modifiers.csharp:
  - public
  - get
  - protected set
  modifiers.vb:
  - Public
  - Get
  - Protected Set
- uid: BestHTTP.Extensions.KeyValuePairList.TryGet(System.String,BestHTTP.Extensions.HeaderValue@)
  commentId: M:BestHTTP.Extensions.KeyValuePairList.TryGet(System.String,BestHTTP.Extensions.HeaderValue@)
  id: TryGet(System.String,BestHTTP.Extensions.HeaderValue@)
  parent: BestHTTP.Extensions.KeyValuePairList
  langs:
  - csharp
  - vb
  name: TryGet(String, out HeaderValue)
  nameWithType: KeyValuePairList.TryGet(String, out HeaderValue)
  fullName: BestHTTP.Extensions.KeyValuePairList.TryGet(System.String, out BestHTTP.Extensions.HeaderValue)
  type: Method
  source:
    id: TryGet
    path: ''
    startLine: 153114
  assemblies:
  - cs.temp.dll
  namespace: BestHTTP.Extensions
  syntax:
    content: public bool TryGet(string valueKeyName, out HeaderValue param)
    parameters:
    - id: valueKeyName
      type: System.String
    - id: param
      type: BestHTTP.Extensions.HeaderValue
    return:
      type: System.Boolean
    content.vb: Public Function TryGet(valueKeyName As String, ByRef param As HeaderValue) As Boolean
  overload: BestHTTP.Extensions.KeyValuePairList.TryGet*
  nameWithType.vb: KeyValuePairList.TryGet(String, ByRef HeaderValue)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: BestHTTP.Extensions.KeyValuePairList.TryGet(System.String, ByRef BestHTTP.Extensions.HeaderValue)
  name.vb: TryGet(String, ByRef HeaderValue)
references:
- uid: BestHTTP.Extensions
  commentId: N:BestHTTP.Extensions
  name: BestHTTP.Extensions
  nameWithType: BestHTTP.Extensions
  fullName: BestHTTP.Extensions
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: BestHTTP.Extensions.KeyValuePairList.Values*
  commentId: Overload:BestHTTP.Extensions.KeyValuePairList.Values
  name: Values
  nameWithType: KeyValuePairList.Values
  fullName: BestHTTP.Extensions.KeyValuePairList.Values
- uid: System.Collections.Generic.List{BestHTTP.Extensions.HeaderValue}
  commentId: T:System.Collections.Generic.List{BestHTTP.Extensions.HeaderValue}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<HeaderValue>
  nameWithType: List<HeaderValue>
  fullName: System.Collections.Generic.List<BestHTTP.Extensions.HeaderValue>
  nameWithType.vb: List(Of HeaderValue)
  fullName.vb: System.Collections.Generic.List(Of BestHTTP.Extensions.HeaderValue)
  name.vb: List(Of HeaderValue)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: BestHTTP.Extensions.HeaderValue
    name: HeaderValue
    nameWithType: HeaderValue
    fullName: BestHTTP.Extensions.HeaderValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: BestHTTP.Extensions.HeaderValue
    name: HeaderValue
    nameWithType: HeaderValue
    fullName: BestHTTP.Extensions.HeaderValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: BestHTTP.Extensions.KeyValuePairList.TryGet*
  commentId: Overload:BestHTTP.Extensions.KeyValuePairList.TryGet
  name: TryGet
  nameWithType: KeyValuePairList.TryGet
  fullName: BestHTTP.Extensions.KeyValuePairList.TryGet
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: BestHTTP.Extensions.HeaderValue
  commentId: T:BestHTTP.Extensions.HeaderValue
  parent: BestHTTP.Extensions
  name: HeaderValue
  nameWithType: HeaderValue
  fullName: BestHTTP.Extensions.HeaderValue
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
