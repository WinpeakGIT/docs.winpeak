### YamlMime:ManagedReference
items:
- uid: Org.BouncyCastle.Security.PublicKeyFactory
  commentId: T:Org.BouncyCastle.Security.PublicKeyFactory
  id: PublicKeyFactory
  parent: Org.BouncyCastle.Security
  children:
  - Org.BouncyCastle.Security.PublicKeyFactory.CreateKey(Stream)
  - Org.BouncyCastle.Security.PublicKeyFactory.CreateKey(SubjectPublicKeyInfo)
  - Org.BouncyCastle.Security.PublicKeyFactory.CreateKey(System.Byte[])
  langs:
  - csharp
  - vb
  name: PublicKeyFactory
  nameWithType: PublicKeyFactory
  fullName: Org.BouncyCastle.Security.PublicKeyFactory
  type: Class
  source:
    id: PublicKeyFactory
    path: ''
    startLine: 79746
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Security
  syntax:
    content: public sealed class PublicKeyFactory
    content.vb: Public NotInheritable Class PublicKeyFactory
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ToString
  - System.Object.ReferenceEquals(System.Object,System.Object)
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: Org.BouncyCastle.Security.PublicKeyFactory.CreateKey(System.Byte[])
  commentId: M:Org.BouncyCastle.Security.PublicKeyFactory.CreateKey(System.Byte[])
  id: CreateKey(System.Byte[])
  parent: Org.BouncyCastle.Security.PublicKeyFactory
  langs:
  - csharp
  - vb
  name: CreateKey(Byte[])
  nameWithType: PublicKeyFactory.CreateKey(Byte[])
  fullName: Org.BouncyCastle.Security.PublicKeyFactory.CreateKey(System.Byte[])
  type: Method
  source:
    id: CreateKey
    path: ''
    startLine: 79752
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Security
  syntax:
    content: public static AsymmetricKeyParameter CreateKey(byte[] keyInfoData)
    parameters:
    - id: keyInfoData
      type: System.Byte[]
    return:
      type: AsymmetricKeyParameter
    content.vb: Public Shared Function CreateKey(keyInfoData As Byte()) As AsymmetricKeyParameter
  overload: Org.BouncyCastle.Security.PublicKeyFactory.CreateKey*
  nameWithType.vb: PublicKeyFactory.CreateKey(Byte())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Org.BouncyCastle.Security.PublicKeyFactory.CreateKey(System.Byte())
  name.vb: CreateKey(Byte())
- uid: Org.BouncyCastle.Security.PublicKeyFactory.CreateKey(Stream)
  commentId: M:Org.BouncyCastle.Security.PublicKeyFactory.CreateKey(Stream)
  id: CreateKey(Stream)
  parent: Org.BouncyCastle.Security.PublicKeyFactory
  langs:
  - csharp
  - vb
  name: CreateKey(Stream)
  nameWithType: PublicKeyFactory.CreateKey(Stream)
  fullName: Org.BouncyCastle.Security.PublicKeyFactory.CreateKey(Stream)
  type: Method
  source:
    id: CreateKey
    path: ''
    startLine: 79760
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Security
  syntax:
    content: public static AsymmetricKeyParameter CreateKey(Stream inStr)
    parameters:
    - id: inStr
      type: Stream
    return:
      type: AsymmetricKeyParameter
    content.vb: Public Shared Function CreateKey(inStr As Stream) As AsymmetricKeyParameter
  overload: Org.BouncyCastle.Security.PublicKeyFactory.CreateKey*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Org.BouncyCastle.Security.PublicKeyFactory.CreateKey(SubjectPublicKeyInfo)
  commentId: M:Org.BouncyCastle.Security.PublicKeyFactory.CreateKey(SubjectPublicKeyInfo)
  id: CreateKey(SubjectPublicKeyInfo)
  parent: Org.BouncyCastle.Security.PublicKeyFactory
  langs:
  - csharp
  - vb
  name: CreateKey(SubjectPublicKeyInfo)
  nameWithType: PublicKeyFactory.CreateKey(SubjectPublicKeyInfo)
  fullName: Org.BouncyCastle.Security.PublicKeyFactory.CreateKey(SubjectPublicKeyInfo)
  type: Method
  source:
    id: CreateKey
    path: ''
    startLine: 79768
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Security
  syntax:
    content: public static AsymmetricKeyParameter CreateKey(SubjectPublicKeyInfo keyInfo)
    parameters:
    - id: keyInfo
      type: SubjectPublicKeyInfo
    return:
      type: AsymmetricKeyParameter
    content.vb: Public Shared Function CreateKey(keyInfo As SubjectPublicKeyInfo) As AsymmetricKeyParameter
  overload: Org.BouncyCastle.Security.PublicKeyFactory.CreateKey*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Org.BouncyCastle.Security
  commentId: N:Org.BouncyCastle.Security
  name: Org.BouncyCastle.Security
  nameWithType: Org.BouncyCastle.Security
  fullName: Org.BouncyCastle.Security
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Org.BouncyCastle.Security.PublicKeyFactory.CreateKey*
  commentId: Overload:Org.BouncyCastle.Security.PublicKeyFactory.CreateKey
  name: CreateKey
  nameWithType: PublicKeyFactory.CreateKey
  fullName: Org.BouncyCastle.Security.PublicKeyFactory.CreateKey
- uid: System.Byte[]
  isExternal: true
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullName.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: AsymmetricKeyParameter
  isExternal: true
  name: AsymmetricKeyParameter
  nameWithType: AsymmetricKeyParameter
  fullName: AsymmetricKeyParameter
- uid: Stream
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: Stream
- uid: SubjectPublicKeyInfo
  commentId: '!:SubjectPublicKeyInfo'
  isExternal: true
  name: SubjectPublicKeyInfo
  nameWithType: SubjectPublicKeyInfo
  fullName: SubjectPublicKeyInfo
