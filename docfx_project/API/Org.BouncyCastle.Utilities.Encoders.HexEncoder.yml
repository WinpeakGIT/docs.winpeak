### YamlMime:ManagedReference
items:
- uid: Org.BouncyCastle.Utilities.Encoders.HexEncoder
  commentId: T:Org.BouncyCastle.Utilities.Encoders.HexEncoder
  id: HexEncoder
  parent: Org.BouncyCastle.Utilities.Encoders
  children:
  - Org.BouncyCastle.Utilities.Encoders.HexEncoder.#ctor
  - Org.BouncyCastle.Utilities.Encoders.HexEncoder.Decode(System.Byte[],System.Int32,System.Int32,Stream)
  - Org.BouncyCastle.Utilities.Encoders.HexEncoder.DecodeString(System.String,Stream)
  - Org.BouncyCastle.Utilities.Encoders.HexEncoder.decodingTable
  - Org.BouncyCastle.Utilities.Encoders.HexEncoder.Encode(System.Byte[],System.Int32,System.Int32,Stream)
  - Org.BouncyCastle.Utilities.Encoders.HexEncoder.encodingTable
  - Org.BouncyCastle.Utilities.Encoders.HexEncoder.InitialiseDecodingTable
  langs:
  - csharp
  - vb
  name: HexEncoder
  nameWithType: HexEncoder
  fullName: Org.BouncyCastle.Utilities.Encoders.HexEncoder
  type: Class
  source:
    id: HexEncoder
    path: ''
    startLine: 138091
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Utilities.Encoders
  syntax:
    content: 'public class HexEncoder : IEncoder'
    content.vb: >-
      Public Class HexEncoder
          Implements IEncoder
  inheritance:
  - System.Object
  implements:
  - Org.BouncyCastle.Utilities.Encoders.IEncoder
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ToString
  - System.Object.ReferenceEquals(System.Object,System.Object)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Org.BouncyCastle.Utilities.Encoders.HexEncoder.encodingTable
  commentId: F:Org.BouncyCastle.Utilities.Encoders.HexEncoder.encodingTable
  id: encodingTable
  parent: Org.BouncyCastle.Utilities.Encoders.HexEncoder
  langs:
  - csharp
  - vb
  name: encodingTable
  nameWithType: HexEncoder.encodingTable
  fullName: Org.BouncyCastle.Utilities.Encoders.HexEncoder.encodingTable
  type: Field
  source:
    id: encodingTable
    path: ''
    startLine: 138094
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Utilities.Encoders
  syntax:
    content: protected readonly byte[] encodingTable
    return:
      type: System.Byte[]
    content.vb: Protected ReadOnly encodingTable As Byte()
  modifiers.csharp:
  - protected
  - readonly
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: Org.BouncyCastle.Utilities.Encoders.HexEncoder.decodingTable
  commentId: F:Org.BouncyCastle.Utilities.Encoders.HexEncoder.decodingTable
  id: decodingTable
  parent: Org.BouncyCastle.Utilities.Encoders.HexEncoder
  langs:
  - csharp
  - vb
  name: decodingTable
  nameWithType: HexEncoder.decodingTable
  fullName: Org.BouncyCastle.Utilities.Encoders.HexEncoder.decodingTable
  type: Field
  source:
    id: decodingTable
    path: ''
    startLine: 138103
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Utilities.Encoders
  syntax:
    content: protected readonly byte[] decodingTable
    return:
      type: System.Byte[]
    content.vb: Protected ReadOnly decodingTable As Byte()
  modifiers.csharp:
  - protected
  - readonly
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: Org.BouncyCastle.Utilities.Encoders.HexEncoder.InitialiseDecodingTable
  commentId: M:Org.BouncyCastle.Utilities.Encoders.HexEncoder.InitialiseDecodingTable
  id: InitialiseDecodingTable
  parent: Org.BouncyCastle.Utilities.Encoders.HexEncoder
  langs:
  - csharp
  - vb
  name: InitialiseDecodingTable()
  nameWithType: HexEncoder.InitialiseDecodingTable()
  fullName: Org.BouncyCastle.Utilities.Encoders.HexEncoder.InitialiseDecodingTable()
  type: Method
  source:
    id: InitialiseDecodingTable
    path: ''
    startLine: 138105
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Utilities.Encoders
  syntax:
    content: protected void InitialiseDecodingTable()
    content.vb: Protected Sub InitialiseDecodingTable
  overload: Org.BouncyCastle.Utilities.Encoders.HexEncoder.InitialiseDecodingTable*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Org.BouncyCastle.Utilities.Encoders.HexEncoder.#ctor
  commentId: M:Org.BouncyCastle.Utilities.Encoders.HexEncoder.#ctor
  id: '#ctor'
  parent: Org.BouncyCastle.Utilities.Encoders.HexEncoder
  langs:
  - csharp
  - vb
  name: HexEncoder()
  nameWithType: HexEncoder.HexEncoder()
  fullName: Org.BouncyCastle.Utilities.Encoders.HexEncoder.HexEncoder()
  type: Constructor
  source:
    id: .ctor
    path: ''
    startLine: 138122
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Utilities.Encoders
  syntax:
    content: public HexEncoder()
    content.vb: Public Sub New
  overload: Org.BouncyCastle.Utilities.Encoders.HexEncoder.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Org.BouncyCastle.Utilities.Encoders.HexEncoder.Encode(System.Byte[],System.Int32,System.Int32,Stream)
  commentId: M:Org.BouncyCastle.Utilities.Encoders.HexEncoder.Encode(System.Byte[],System.Int32,System.Int32,Stream)
  id: Encode(System.Byte[],System.Int32,System.Int32,Stream)
  parent: Org.BouncyCastle.Utilities.Encoders.HexEncoder
  langs:
  - csharp
  - vb
  name: Encode(Byte[], Int32, Int32, Stream)
  nameWithType: HexEncoder.Encode(Byte[], Int32, Int32, Stream)
  fullName: Org.BouncyCastle.Utilities.Encoders.HexEncoder.Encode(System.Byte[], System.Int32, System.Int32, Stream)
  type: Method
  source:
    id: Encode
    path: ''
    startLine: 138132
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Utilities.Encoders
  example: []
  syntax:
    content: public int Encode(byte[] data, int off, int length, Stream outStream)
    parameters:
    - id: data
      type: System.Byte[]
    - id: off
      type: System.Int32
    - id: length
      type: System.Int32
    - id: outStream
      type: Stream
    return:
      type: System.Int32
    content.vb: Public Function Encode(data As Byte(), off As Integer, length As Integer, outStream As Stream) As Integer
  overload: Org.BouncyCastle.Utilities.Encoders.HexEncoder.Encode*
  implements:
  - Org.BouncyCastle.Utilities.Encoders.IEncoder.Encode(System.Byte[],System.Int32,System.Int32,Stream)
  nameWithType.vb: HexEncoder.Encode(Byte(), Int32, Int32, Stream)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Org.BouncyCastle.Utilities.Encoders.HexEncoder.Encode(System.Byte(), System.Int32, System.Int32, Stream)
  name.vb: Encode(Byte(), Int32, Int32, Stream)
- uid: Org.BouncyCastle.Utilities.Encoders.HexEncoder.Decode(System.Byte[],System.Int32,System.Int32,Stream)
  commentId: M:Org.BouncyCastle.Utilities.Encoders.HexEncoder.Decode(System.Byte[],System.Int32,System.Int32,Stream)
  id: Decode(System.Byte[],System.Int32,System.Int32,Stream)
  parent: Org.BouncyCastle.Utilities.Encoders.HexEncoder
  langs:
  - csharp
  - vb
  name: Decode(Byte[], Int32, Int32, Stream)
  nameWithType: HexEncoder.Decode(Byte[], Int32, Int32, Stream)
  fullName: Org.BouncyCastle.Utilities.Encoders.HexEncoder.Decode(System.Byte[], System.Int32, System.Int32, Stream)
  type: Method
  source:
    id: Decode
    path: ''
    startLine: 138160
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Utilities.Encoders
  example: []
  syntax:
    content: public int Decode(byte[] data, int off, int length, Stream outStream)
    parameters:
    - id: data
      type: System.Byte[]
    - id: off
      type: System.Int32
    - id: length
      type: System.Int32
    - id: outStream
      type: Stream
    return:
      type: System.Int32
    content.vb: Public Function Decode(data As Byte(), off As Integer, length As Integer, outStream As Stream) As Integer
  overload: Org.BouncyCastle.Utilities.Encoders.HexEncoder.Decode*
  implements:
  - Org.BouncyCastle.Utilities.Encoders.IEncoder.Decode(System.Byte[],System.Int32,System.Int32,Stream)
  nameWithType.vb: HexEncoder.Decode(Byte(), Int32, Int32, Stream)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Org.BouncyCastle.Utilities.Encoders.HexEncoder.Decode(System.Byte(), System.Int32, System.Int32, Stream)
  name.vb: Decode(Byte(), Int32, Int32, Stream)
- uid: Org.BouncyCastle.Utilities.Encoders.HexEncoder.DecodeString(System.String,Stream)
  commentId: M:Org.BouncyCastle.Utilities.Encoders.HexEncoder.DecodeString(System.String,Stream)
  id: DecodeString(System.String,Stream)
  parent: Org.BouncyCastle.Utilities.Encoders.HexEncoder
  langs:
  - csharp
  - vb
  name: DecodeString(String, Stream)
  nameWithType: HexEncoder.DecodeString(String, Stream)
  fullName: Org.BouncyCastle.Utilities.Encoders.HexEncoder.DecodeString(System.String, Stream)
  type: Method
  source:
    id: DecodeString
    path: ''
    startLine: 138214
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Utilities.Encoders
  example: []
  syntax:
    content: public int DecodeString(string data, Stream outStream)
    parameters:
    - id: data
      type: System.String
    - id: outStream
      type: Stream
    return:
      type: System.Int32
    content.vb: Public Function DecodeString(data As String, outStream As Stream) As Integer
  overload: Org.BouncyCastle.Utilities.Encoders.HexEncoder.DecodeString*
  implements:
  - Org.BouncyCastle.Utilities.Encoders.IEncoder.DecodeString(System.String,Stream)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Org.BouncyCastle.Utilities.Encoders
  commentId: N:Org.BouncyCastle.Utilities.Encoders
  name: Org.BouncyCastle.Utilities.Encoders
  nameWithType: Org.BouncyCastle.Utilities.Encoders
  fullName: Org.BouncyCastle.Utilities.Encoders
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Org.BouncyCastle.Utilities.Encoders.IEncoder
  commentId: T:Org.BouncyCastle.Utilities.Encoders.IEncoder
  parent: Org.BouncyCastle.Utilities.Encoders
  name: IEncoder
  nameWithType: IEncoder
  fullName: Org.BouncyCastle.Utilities.Encoders.IEncoder
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Byte[]
  isExternal: true
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullName.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Org.BouncyCastle.Utilities.Encoders.HexEncoder.InitialiseDecodingTable*
  commentId: Overload:Org.BouncyCastle.Utilities.Encoders.HexEncoder.InitialiseDecodingTable
  name: InitialiseDecodingTable
  nameWithType: HexEncoder.InitialiseDecodingTable
  fullName: Org.BouncyCastle.Utilities.Encoders.HexEncoder.InitialiseDecodingTable
- uid: Org.BouncyCastle.Utilities.Encoders.HexEncoder.#ctor*
  commentId: Overload:Org.BouncyCastle.Utilities.Encoders.HexEncoder.#ctor
  name: HexEncoder
  nameWithType: HexEncoder.HexEncoder
  fullName: Org.BouncyCastle.Utilities.Encoders.HexEncoder.HexEncoder
- uid: Org.BouncyCastle.Utilities.Encoders.HexEncoder.Encode*
  commentId: Overload:Org.BouncyCastle.Utilities.Encoders.HexEncoder.Encode
  name: Encode
  nameWithType: HexEncoder.Encode
  fullName: Org.BouncyCastle.Utilities.Encoders.HexEncoder.Encode
- uid: Org.BouncyCastle.Utilities.Encoders.IEncoder.Encode(System.Byte[],System.Int32,System.Int32,Stream)
  commentId: M:Org.BouncyCastle.Utilities.Encoders.IEncoder.Encode(System.Byte[],System.Int32,System.Int32,Stream)
  parent: Org.BouncyCastle.Utilities.Encoders.IEncoder
  isExternal: true
  name: Encode(Byte[], Int32, Int32, Stream)
  nameWithType: IEncoder.Encode(Byte[], Int32, Int32, Stream)
  fullName: Org.BouncyCastle.Utilities.Encoders.IEncoder.Encode(System.Byte[], System.Int32, System.Int32, Stream)
  nameWithType.vb: IEncoder.Encode(Byte(), Int32, Int32, Stream)
  fullName.vb: Org.BouncyCastle.Utilities.Encoders.IEncoder.Encode(System.Byte(), System.Int32, System.Int32, Stream)
  name.vb: Encode(Byte(), Int32, Int32, Stream)
  spec.csharp:
  - uid: Org.BouncyCastle.Utilities.Encoders.IEncoder.Encode(System.Byte[],System.Int32,System.Int32,Stream)
    name: Encode
    nameWithType: IEncoder.Encode
    fullName: Org.BouncyCastle.Utilities.Encoders.IEncoder.Encode
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Stream
    name: Stream
    nameWithType: Stream
    fullName: Stream
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Org.BouncyCastle.Utilities.Encoders.IEncoder.Encode(System.Byte[],System.Int32,System.Int32,Stream)
    name: Encode
    nameWithType: IEncoder.Encode
    fullName: Org.BouncyCastle.Utilities.Encoders.IEncoder.Encode
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Stream
    name: Stream
    nameWithType: Stream
    fullName: Stream
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Stream
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: Stream
- uid: Org.BouncyCastle.Utilities.Encoders.HexEncoder.Decode*
  commentId: Overload:Org.BouncyCastle.Utilities.Encoders.HexEncoder.Decode
  name: Decode
  nameWithType: HexEncoder.Decode
  fullName: Org.BouncyCastle.Utilities.Encoders.HexEncoder.Decode
- uid: Org.BouncyCastle.Utilities.Encoders.IEncoder.Decode(System.Byte[],System.Int32,System.Int32,Stream)
  commentId: M:Org.BouncyCastle.Utilities.Encoders.IEncoder.Decode(System.Byte[],System.Int32,System.Int32,Stream)
  parent: Org.BouncyCastle.Utilities.Encoders.IEncoder
  isExternal: true
  name: Decode(Byte[], Int32, Int32, Stream)
  nameWithType: IEncoder.Decode(Byte[], Int32, Int32, Stream)
  fullName: Org.BouncyCastle.Utilities.Encoders.IEncoder.Decode(System.Byte[], System.Int32, System.Int32, Stream)
  nameWithType.vb: IEncoder.Decode(Byte(), Int32, Int32, Stream)
  fullName.vb: Org.BouncyCastle.Utilities.Encoders.IEncoder.Decode(System.Byte(), System.Int32, System.Int32, Stream)
  name.vb: Decode(Byte(), Int32, Int32, Stream)
  spec.csharp:
  - uid: Org.BouncyCastle.Utilities.Encoders.IEncoder.Decode(System.Byte[],System.Int32,System.Int32,Stream)
    name: Decode
    nameWithType: IEncoder.Decode
    fullName: Org.BouncyCastle.Utilities.Encoders.IEncoder.Decode
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Stream
    name: Stream
    nameWithType: Stream
    fullName: Stream
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Org.BouncyCastle.Utilities.Encoders.IEncoder.Decode(System.Byte[],System.Int32,System.Int32,Stream)
    name: Decode
    nameWithType: IEncoder.Decode
    fullName: Org.BouncyCastle.Utilities.Encoders.IEncoder.Decode
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Stream
    name: Stream
    nameWithType: Stream
    fullName: Stream
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Org.BouncyCastle.Utilities.Encoders.HexEncoder.DecodeString*
  commentId: Overload:Org.BouncyCastle.Utilities.Encoders.HexEncoder.DecodeString
  name: DecodeString
  nameWithType: HexEncoder.DecodeString
  fullName: Org.BouncyCastle.Utilities.Encoders.HexEncoder.DecodeString
- uid: Org.BouncyCastle.Utilities.Encoders.IEncoder.DecodeString(System.String,Stream)
  commentId: M:Org.BouncyCastle.Utilities.Encoders.IEncoder.DecodeString(System.String,Stream)
  parent: Org.BouncyCastle.Utilities.Encoders.IEncoder
  isExternal: true
  name: DecodeString(String, Stream)
  nameWithType: IEncoder.DecodeString(String, Stream)
  fullName: Org.BouncyCastle.Utilities.Encoders.IEncoder.DecodeString(System.String, Stream)
  spec.csharp:
  - uid: Org.BouncyCastle.Utilities.Encoders.IEncoder.DecodeString(System.String,Stream)
    name: DecodeString
    nameWithType: IEncoder.DecodeString
    fullName: Org.BouncyCastle.Utilities.Encoders.IEncoder.DecodeString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Stream
    name: Stream
    nameWithType: Stream
    fullName: Stream
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Org.BouncyCastle.Utilities.Encoders.IEncoder.DecodeString(System.String,Stream)
    name: DecodeString
    nameWithType: IEncoder.DecodeString
    fullName: Org.BouncyCastle.Utilities.Encoders.IEncoder.DecodeString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Stream
    name: Stream
    nameWithType: Stream
    fullName: Stream
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
