### YamlMime:ManagedReference
items:
- uid: Org.BouncyCastle.Crypto.Signers.PssSigner
  commentId: T:Org.BouncyCastle.Crypto.Signers.PssSigner
  id: PssSigner
  parent: Org.BouncyCastle.Crypto.Signers
  children:
  - Org.BouncyCastle.Crypto.Signers.PssSigner.#ctor(Org.BouncyCastle.Crypto.IAsymmetricBlockCipher,Org.BouncyCastle.Crypto.IDigest)
  - Org.BouncyCastle.Crypto.Signers.PssSigner.#ctor(Org.BouncyCastle.Crypto.IAsymmetricBlockCipher,Org.BouncyCastle.Crypto.IDigest,Org.BouncyCastle.Crypto.IDigest,System.Byte[])
  - Org.BouncyCastle.Crypto.Signers.PssSigner.#ctor(Org.BouncyCastle.Crypto.IAsymmetricBlockCipher,Org.BouncyCastle.Crypto.IDigest,Org.BouncyCastle.Crypto.IDigest,System.Int32)
  - Org.BouncyCastle.Crypto.Signers.PssSigner.#ctor(Org.BouncyCastle.Crypto.IAsymmetricBlockCipher,Org.BouncyCastle.Crypto.IDigest,Org.BouncyCastle.Crypto.IDigest,System.Int32,System.Byte)
  - Org.BouncyCastle.Crypto.Signers.PssSigner.#ctor(Org.BouncyCastle.Crypto.IAsymmetricBlockCipher,Org.BouncyCastle.Crypto.IDigest,System.Byte[])
  - Org.BouncyCastle.Crypto.Signers.PssSigner.#ctor(Org.BouncyCastle.Crypto.IAsymmetricBlockCipher,Org.BouncyCastle.Crypto.IDigest,System.Int32)
  - Org.BouncyCastle.Crypto.Signers.PssSigner.#ctor(Org.BouncyCastle.Crypto.IAsymmetricBlockCipher,Org.BouncyCastle.Crypto.IDigest,System.Int32,System.Byte)
  - Org.BouncyCastle.Crypto.Signers.PssSigner.AlgorithmName
  - Org.BouncyCastle.Crypto.Signers.PssSigner.BlockUpdate(System.Byte[],System.Int32,System.Int32)
  - Org.BouncyCastle.Crypto.Signers.PssSigner.CreateRawSigner(Org.BouncyCastle.Crypto.IAsymmetricBlockCipher,Org.BouncyCastle.Crypto.IDigest)
  - Org.BouncyCastle.Crypto.Signers.PssSigner.CreateRawSigner(Org.BouncyCastle.Crypto.IAsymmetricBlockCipher,Org.BouncyCastle.Crypto.IDigest,Org.BouncyCastle.Crypto.IDigest,System.Int32,System.Byte)
  - Org.BouncyCastle.Crypto.Signers.PssSigner.GenerateSignature
  - Org.BouncyCastle.Crypto.Signers.PssSigner.Init(System.Boolean,Org.BouncyCastle.Crypto.ICipherParameters)
  - Org.BouncyCastle.Crypto.Signers.PssSigner.Reset
  - Org.BouncyCastle.Crypto.Signers.PssSigner.TrailerImplicit
  - Org.BouncyCastle.Crypto.Signers.PssSigner.Update(System.Byte)
  - Org.BouncyCastle.Crypto.Signers.PssSigner.VerifySignature(System.Byte[])
  langs:
  - csharp
  - vb
  name: PssSigner
  nameWithType: PssSigner
  fullName: Org.BouncyCastle.Crypto.Signers.PssSigner
  type: Class
  source:
    id: PssSigner
    path: ''
    startLine: 91845
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Signers
  summary: >
    RSA-PSS as described in Pkcs# 1 v 2.1.

    <p>

    Note: the usual value for the salt length is the number of

    bytes in the hash function.</p>
  example: []
  syntax:
    content: 'public class PssSigner : ISigner'
    content.vb: >-
      Public Class PssSigner
          Implements ISigner
  inheritance:
  - System.Object
  implements:
  - Org.BouncyCastle.Crypto.ISigner
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ToString
  - System.Object.ReferenceEquals(System.Object,System.Object)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Org.BouncyCastle.Crypto.Signers.PssSigner.TrailerImplicit
  commentId: F:Org.BouncyCastle.Crypto.Signers.PssSigner.TrailerImplicit
  id: TrailerImplicit
  parent: Org.BouncyCastle.Crypto.Signers.PssSigner
  langs:
  - csharp
  - vb
  name: TrailerImplicit
  nameWithType: PssSigner.TrailerImplicit
  fullName: Org.BouncyCastle.Crypto.Signers.PssSigner.TrailerImplicit
  type: Field
  source:
    id: TrailerImplicit
    path: ''
    startLine: 91848
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Signers
  syntax:
    content: public const byte TrailerImplicit = 188
    return:
      type: System.Byte
    content.vb: Public Const TrailerImplicit As Byte = 188
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Org.BouncyCastle.Crypto.Signers.PssSigner.CreateRawSigner(Org.BouncyCastle.Crypto.IAsymmetricBlockCipher,Org.BouncyCastle.Crypto.IDigest)
  commentId: M:Org.BouncyCastle.Crypto.Signers.PssSigner.CreateRawSigner(Org.BouncyCastle.Crypto.IAsymmetricBlockCipher,Org.BouncyCastle.Crypto.IDigest)
  id: CreateRawSigner(Org.BouncyCastle.Crypto.IAsymmetricBlockCipher,Org.BouncyCastle.Crypto.IDigest)
  parent: Org.BouncyCastle.Crypto.Signers.PssSigner
  langs:
  - csharp
  - vb
  name: CreateRawSigner(IAsymmetricBlockCipher, IDigest)
  nameWithType: PssSigner.CreateRawSigner(IAsymmetricBlockCipher, IDigest)
  fullName: Org.BouncyCastle.Crypto.Signers.PssSigner.CreateRawSigner(Org.BouncyCastle.Crypto.IAsymmetricBlockCipher, Org.BouncyCastle.Crypto.IDigest)
  type: Method
  source:
    id: CreateRawSigner
    path: ''
    startLine: 91866
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Signers
  syntax:
    content: public static PssSigner CreateRawSigner(IAsymmetricBlockCipher cipher, IDigest digest)
    parameters:
    - id: cipher
      type: Org.BouncyCastle.Crypto.IAsymmetricBlockCipher
    - id: digest
      type: Org.BouncyCastle.Crypto.IDigest
    return:
      type: Org.BouncyCastle.Crypto.Signers.PssSigner
    content.vb: Public Shared Function CreateRawSigner(cipher As IAsymmetricBlockCipher, digest As IDigest) As PssSigner
  overload: Org.BouncyCastle.Crypto.Signers.PssSigner.CreateRawSigner*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Org.BouncyCastle.Crypto.Signers.PssSigner.CreateRawSigner(Org.BouncyCastle.Crypto.IAsymmetricBlockCipher,Org.BouncyCastle.Crypto.IDigest,Org.BouncyCastle.Crypto.IDigest,System.Int32,System.Byte)
  commentId: M:Org.BouncyCastle.Crypto.Signers.PssSigner.CreateRawSigner(Org.BouncyCastle.Crypto.IAsymmetricBlockCipher,Org.BouncyCastle.Crypto.IDigest,Org.BouncyCastle.Crypto.IDigest,System.Int32,System.Byte)
  id: CreateRawSigner(Org.BouncyCastle.Crypto.IAsymmetricBlockCipher,Org.BouncyCastle.Crypto.IDigest,Org.BouncyCastle.Crypto.IDigest,System.Int32,System.Byte)
  parent: Org.BouncyCastle.Crypto.Signers.PssSigner
  langs:
  - csharp
  - vb
  name: CreateRawSigner(IAsymmetricBlockCipher, IDigest, IDigest, Int32, Byte)
  nameWithType: PssSigner.CreateRawSigner(IAsymmetricBlockCipher, IDigest, IDigest, Int32, Byte)
  fullName: Org.BouncyCastle.Crypto.Signers.PssSigner.CreateRawSigner(Org.BouncyCastle.Crypto.IAsymmetricBlockCipher, Org.BouncyCastle.Crypto.IDigest, Org.BouncyCastle.Crypto.IDigest, System.Int32, System.Byte)
  type: Method
  source:
    id: CreateRawSigner
    path: ''
    startLine: 91873
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Signers
  syntax:
    content: public static PssSigner CreateRawSigner(IAsymmetricBlockCipher cipher, IDigest contentDigest, IDigest mgfDigest, int saltLen, byte trailer)
    parameters:
    - id: cipher
      type: Org.BouncyCastle.Crypto.IAsymmetricBlockCipher
    - id: contentDigest
      type: Org.BouncyCastle.Crypto.IDigest
    - id: mgfDigest
      type: Org.BouncyCastle.Crypto.IDigest
    - id: saltLen
      type: System.Int32
    - id: trailer
      type: System.Byte
    return:
      type: Org.BouncyCastle.Crypto.Signers.PssSigner
    content.vb: Public Shared Function CreateRawSigner(cipher As IAsymmetricBlockCipher, contentDigest As IDigest, mgfDigest As IDigest, saltLen As Integer, trailer As Byte) As PssSigner
  overload: Org.BouncyCastle.Crypto.Signers.PssSigner.CreateRawSigner*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Org.BouncyCastle.Crypto.Signers.PssSigner.#ctor(Org.BouncyCastle.Crypto.IAsymmetricBlockCipher,Org.BouncyCastle.Crypto.IDigest)
  commentId: M:Org.BouncyCastle.Crypto.Signers.PssSigner.#ctor(Org.BouncyCastle.Crypto.IAsymmetricBlockCipher,Org.BouncyCastle.Crypto.IDigest)
  id: '#ctor(Org.BouncyCastle.Crypto.IAsymmetricBlockCipher,Org.BouncyCastle.Crypto.IDigest)'
  parent: Org.BouncyCastle.Crypto.Signers.PssSigner
  langs:
  - csharp
  - vb
  name: PssSigner(IAsymmetricBlockCipher, IDigest)
  nameWithType: PssSigner.PssSigner(IAsymmetricBlockCipher, IDigest)
  fullName: Org.BouncyCastle.Crypto.Signers.PssSigner.PssSigner(Org.BouncyCastle.Crypto.IAsymmetricBlockCipher, Org.BouncyCastle.Crypto.IDigest)
  type: Constructor
  source:
    id: .ctor
    path: ''
    startLine: 91883
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Signers
  syntax:
    content: public PssSigner(IAsymmetricBlockCipher cipher, IDigest digest)
    parameters:
    - id: cipher
      type: Org.BouncyCastle.Crypto.IAsymmetricBlockCipher
    - id: digest
      type: Org.BouncyCastle.Crypto.IDigest
    content.vb: Public Sub New(cipher As IAsymmetricBlockCipher, digest As IDigest)
  overload: Org.BouncyCastle.Crypto.Signers.PssSigner.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Org.BouncyCastle.Crypto.Signers.PssSigner.#ctor(Org.BouncyCastle.Crypto.IAsymmetricBlockCipher,Org.BouncyCastle.Crypto.IDigest,System.Int32)
  commentId: M:Org.BouncyCastle.Crypto.Signers.PssSigner.#ctor(Org.BouncyCastle.Crypto.IAsymmetricBlockCipher,Org.BouncyCastle.Crypto.IDigest,System.Int32)
  id: '#ctor(Org.BouncyCastle.Crypto.IAsymmetricBlockCipher,Org.BouncyCastle.Crypto.IDigest,System.Int32)'
  parent: Org.BouncyCastle.Crypto.Signers.PssSigner
  langs:
  - csharp
  - vb
  name: PssSigner(IAsymmetricBlockCipher, IDigest, Int32)
  nameWithType: PssSigner.PssSigner(IAsymmetricBlockCipher, IDigest, Int32)
  fullName: Org.BouncyCastle.Crypto.Signers.PssSigner.PssSigner(Org.BouncyCastle.Crypto.IAsymmetricBlockCipher, Org.BouncyCastle.Crypto.IDigest, System.Int32)
  type: Constructor
  source:
    id: .ctor
    path: ''
    startLine: 91894
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Signers
  summary: Basic constructor
  example: []
  syntax:
    content: public PssSigner(IAsymmetricBlockCipher cipher, IDigest digest, int saltLen)
    parameters:
    - id: cipher
      type: Org.BouncyCastle.Crypto.IAsymmetricBlockCipher
      description: the asymmetric cipher to use.
    - id: digest
      type: Org.BouncyCastle.Crypto.IDigest
      description: the digest to use.
    - id: saltLen
      type: System.Int32
      description: the length of the salt to use (in bytes).
    content.vb: Public Sub New(cipher As IAsymmetricBlockCipher, digest As IDigest, saltLen As Integer)
  overload: Org.BouncyCastle.Crypto.Signers.PssSigner.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Org.BouncyCastle.Crypto.Signers.PssSigner.#ctor(Org.BouncyCastle.Crypto.IAsymmetricBlockCipher,Org.BouncyCastle.Crypto.IDigest,System.Byte[])
  commentId: M:Org.BouncyCastle.Crypto.Signers.PssSigner.#ctor(Org.BouncyCastle.Crypto.IAsymmetricBlockCipher,Org.BouncyCastle.Crypto.IDigest,System.Byte[])
  id: '#ctor(Org.BouncyCastle.Crypto.IAsymmetricBlockCipher,Org.BouncyCastle.Crypto.IDigest,System.Byte[])'
  parent: Org.BouncyCastle.Crypto.Signers.PssSigner
  langs:
  - csharp
  - vb
  name: PssSigner(IAsymmetricBlockCipher, IDigest, Byte[])
  nameWithType: PssSigner.PssSigner(IAsymmetricBlockCipher, IDigest, Byte[])
  fullName: Org.BouncyCastle.Crypto.Signers.PssSigner.PssSigner(Org.BouncyCastle.Crypto.IAsymmetricBlockCipher, Org.BouncyCastle.Crypto.IDigest, System.Byte[])
  type: Constructor
  source:
    id: .ctor
    path: ''
    startLine: 91906
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Signers
  summary: Basic constructor
  example: []
  syntax:
    content: public PssSigner(IAsymmetricBlockCipher cipher, IDigest digest, byte[] salt)
    parameters:
    - id: cipher
      type: Org.BouncyCastle.Crypto.IAsymmetricBlockCipher
      description: the asymmetric cipher to use.
    - id: digest
      type: Org.BouncyCastle.Crypto.IDigest
      description: the digest to use.
    - id: salt
      type: System.Byte[]
      description: the fixed salt to be used.
    content.vb: Public Sub New(cipher As IAsymmetricBlockCipher, digest As IDigest, salt As Byte())
  overload: Org.BouncyCastle.Crypto.Signers.PssSigner.#ctor*
  nameWithType.vb: PssSigner.PssSigner(IAsymmetricBlockCipher, IDigest, Byte())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Org.BouncyCastle.Crypto.Signers.PssSigner.PssSigner(Org.BouncyCastle.Crypto.IAsymmetricBlockCipher, Org.BouncyCastle.Crypto.IDigest, System.Byte())
  name.vb: PssSigner(IAsymmetricBlockCipher, IDigest, Byte())
- uid: Org.BouncyCastle.Crypto.Signers.PssSigner.#ctor(Org.BouncyCastle.Crypto.IAsymmetricBlockCipher,Org.BouncyCastle.Crypto.IDigest,Org.BouncyCastle.Crypto.IDigest,System.Int32)
  commentId: M:Org.BouncyCastle.Crypto.Signers.PssSigner.#ctor(Org.BouncyCastle.Crypto.IAsymmetricBlockCipher,Org.BouncyCastle.Crypto.IDigest,Org.BouncyCastle.Crypto.IDigest,System.Int32)
  id: '#ctor(Org.BouncyCastle.Crypto.IAsymmetricBlockCipher,Org.BouncyCastle.Crypto.IDigest,Org.BouncyCastle.Crypto.IDigest,System.Int32)'
  parent: Org.BouncyCastle.Crypto.Signers.PssSigner
  langs:
  - csharp
  - vb
  name: PssSigner(IAsymmetricBlockCipher, IDigest, IDigest, Int32)
  nameWithType: PssSigner.PssSigner(IAsymmetricBlockCipher, IDigest, IDigest, Int32)
  fullName: Org.BouncyCastle.Crypto.Signers.PssSigner.PssSigner(Org.BouncyCastle.Crypto.IAsymmetricBlockCipher, Org.BouncyCastle.Crypto.IDigest, Org.BouncyCastle.Crypto.IDigest, System.Int32)
  type: Constructor
  source:
    id: .ctor
    path: ''
    startLine: 91914
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Signers
  syntax:
    content: public PssSigner(IAsymmetricBlockCipher cipher, IDigest contentDigest, IDigest mgfDigest, int saltLen)
    parameters:
    - id: cipher
      type: Org.BouncyCastle.Crypto.IAsymmetricBlockCipher
    - id: contentDigest
      type: Org.BouncyCastle.Crypto.IDigest
    - id: mgfDigest
      type: Org.BouncyCastle.Crypto.IDigest
    - id: saltLen
      type: System.Int32
    content.vb: Public Sub New(cipher As IAsymmetricBlockCipher, contentDigest As IDigest, mgfDigest As IDigest, saltLen As Integer)
  overload: Org.BouncyCastle.Crypto.Signers.PssSigner.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Org.BouncyCastle.Crypto.Signers.PssSigner.#ctor(Org.BouncyCastle.Crypto.IAsymmetricBlockCipher,Org.BouncyCastle.Crypto.IDigest,Org.BouncyCastle.Crypto.IDigest,System.Byte[])
  commentId: M:Org.BouncyCastle.Crypto.Signers.PssSigner.#ctor(Org.BouncyCastle.Crypto.IAsymmetricBlockCipher,Org.BouncyCastle.Crypto.IDigest,Org.BouncyCastle.Crypto.IDigest,System.Byte[])
  id: '#ctor(Org.BouncyCastle.Crypto.IAsymmetricBlockCipher,Org.BouncyCastle.Crypto.IDigest,Org.BouncyCastle.Crypto.IDigest,System.Byte[])'
  parent: Org.BouncyCastle.Crypto.Signers.PssSigner
  langs:
  - csharp
  - vb
  name: PssSigner(IAsymmetricBlockCipher, IDigest, IDigest, Byte[])
  nameWithType: PssSigner.PssSigner(IAsymmetricBlockCipher, IDigest, IDigest, Byte[])
  fullName: Org.BouncyCastle.Crypto.Signers.PssSigner.PssSigner(Org.BouncyCastle.Crypto.IAsymmetricBlockCipher, Org.BouncyCastle.Crypto.IDigest, Org.BouncyCastle.Crypto.IDigest, System.Byte[])
  type: Constructor
  source:
    id: .ctor
    path: ''
    startLine: 91923
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Signers
  syntax:
    content: public PssSigner(IAsymmetricBlockCipher cipher, IDigest contentDigest, IDigest mgfDigest, byte[] salt)
    parameters:
    - id: cipher
      type: Org.BouncyCastle.Crypto.IAsymmetricBlockCipher
    - id: contentDigest
      type: Org.BouncyCastle.Crypto.IDigest
    - id: mgfDigest
      type: Org.BouncyCastle.Crypto.IDigest
    - id: salt
      type: System.Byte[]
    content.vb: Public Sub New(cipher As IAsymmetricBlockCipher, contentDigest As IDigest, mgfDigest As IDigest, salt As Byte())
  overload: Org.BouncyCastle.Crypto.Signers.PssSigner.#ctor*
  nameWithType.vb: PssSigner.PssSigner(IAsymmetricBlockCipher, IDigest, IDigest, Byte())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Org.BouncyCastle.Crypto.Signers.PssSigner.PssSigner(Org.BouncyCastle.Crypto.IAsymmetricBlockCipher, Org.BouncyCastle.Crypto.IDigest, Org.BouncyCastle.Crypto.IDigest, System.Byte())
  name.vb: PssSigner(IAsymmetricBlockCipher, IDigest, IDigest, Byte())
- uid: Org.BouncyCastle.Crypto.Signers.PssSigner.#ctor(Org.BouncyCastle.Crypto.IAsymmetricBlockCipher,Org.BouncyCastle.Crypto.IDigest,System.Int32,System.Byte)
  commentId: M:Org.BouncyCastle.Crypto.Signers.PssSigner.#ctor(Org.BouncyCastle.Crypto.IAsymmetricBlockCipher,Org.BouncyCastle.Crypto.IDigest,System.Int32,System.Byte)
  id: '#ctor(Org.BouncyCastle.Crypto.IAsymmetricBlockCipher,Org.BouncyCastle.Crypto.IDigest,System.Int32,System.Byte)'
  parent: Org.BouncyCastle.Crypto.Signers.PssSigner
  langs:
  - csharp
  - vb
  name: PssSigner(IAsymmetricBlockCipher, IDigest, Int32, Byte)
  nameWithType: PssSigner.PssSigner(IAsymmetricBlockCipher, IDigest, Int32, Byte)
  fullName: Org.BouncyCastle.Crypto.Signers.PssSigner.PssSigner(Org.BouncyCastle.Crypto.IAsymmetricBlockCipher, Org.BouncyCastle.Crypto.IDigest, System.Int32, System.Byte)
  type: Constructor
  source:
    id: .ctor
    path: ''
    startLine: 91932
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Signers
  syntax:
    content: public PssSigner(IAsymmetricBlockCipher cipher, IDigest digest, int saltLen, byte trailer)
    parameters:
    - id: cipher
      type: Org.BouncyCastle.Crypto.IAsymmetricBlockCipher
    - id: digest
      type: Org.BouncyCastle.Crypto.IDigest
    - id: saltLen
      type: System.Int32
    - id: trailer
      type: System.Byte
    content.vb: Public Sub New(cipher As IAsymmetricBlockCipher, digest As IDigest, saltLen As Integer, trailer As Byte)
  overload: Org.BouncyCastle.Crypto.Signers.PssSigner.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Org.BouncyCastle.Crypto.Signers.PssSigner.#ctor(Org.BouncyCastle.Crypto.IAsymmetricBlockCipher,Org.BouncyCastle.Crypto.IDigest,Org.BouncyCastle.Crypto.IDigest,System.Int32,System.Byte)
  commentId: M:Org.BouncyCastle.Crypto.Signers.PssSigner.#ctor(Org.BouncyCastle.Crypto.IAsymmetricBlockCipher,Org.BouncyCastle.Crypto.IDigest,Org.BouncyCastle.Crypto.IDigest,System.Int32,System.Byte)
  id: '#ctor(Org.BouncyCastle.Crypto.IAsymmetricBlockCipher,Org.BouncyCastle.Crypto.IDigest,Org.BouncyCastle.Crypto.IDigest,System.Int32,System.Byte)'
  parent: Org.BouncyCastle.Crypto.Signers.PssSigner
  langs:
  - csharp
  - vb
  name: PssSigner(IAsymmetricBlockCipher, IDigest, IDigest, Int32, Byte)
  nameWithType: PssSigner.PssSigner(IAsymmetricBlockCipher, IDigest, IDigest, Int32, Byte)
  fullName: Org.BouncyCastle.Crypto.Signers.PssSigner.PssSigner(Org.BouncyCastle.Crypto.IAsymmetricBlockCipher, Org.BouncyCastle.Crypto.IDigest, Org.BouncyCastle.Crypto.IDigest, System.Int32, System.Byte)
  type: Constructor
  source:
    id: .ctor
    path: ''
    startLine: 91941
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Signers
  syntax:
    content: public PssSigner(IAsymmetricBlockCipher cipher, IDigest contentDigest, IDigest mgfDigest, int saltLen, byte trailer)
    parameters:
    - id: cipher
      type: Org.BouncyCastle.Crypto.IAsymmetricBlockCipher
    - id: contentDigest
      type: Org.BouncyCastle.Crypto.IDigest
    - id: mgfDigest
      type: Org.BouncyCastle.Crypto.IDigest
    - id: saltLen
      type: System.Int32
    - id: trailer
      type: System.Byte
    content.vb: Public Sub New(cipher As IAsymmetricBlockCipher, contentDigest As IDigest, mgfDigest As IDigest, saltLen As Integer, trailer As Byte)
  overload: Org.BouncyCastle.Crypto.Signers.PssSigner.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Org.BouncyCastle.Crypto.Signers.PssSigner.AlgorithmName
  commentId: P:Org.BouncyCastle.Crypto.Signers.PssSigner.AlgorithmName
  id: AlgorithmName
  parent: Org.BouncyCastle.Crypto.Signers.PssSigner
  langs:
  - csharp
  - vb
  name: AlgorithmName
  nameWithType: PssSigner.AlgorithmName
  fullName: Org.BouncyCastle.Crypto.Signers.PssSigner.AlgorithmName
  type: Property
  source:
    id: AlgorithmName
    path: ''
    startLine: 91980
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Signers
  syntax:
    content: public virtual string AlgorithmName { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Overridable ReadOnly Property AlgorithmName As String
  overload: Org.BouncyCastle.Crypto.Signers.PssSigner.AlgorithmName*
  implements:
  - Org.BouncyCastle.Crypto.ISigner.AlgorithmName
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: Org.BouncyCastle.Crypto.Signers.PssSigner.Init(System.Boolean,Org.BouncyCastle.Crypto.ICipherParameters)
  commentId: M:Org.BouncyCastle.Crypto.Signers.PssSigner.Init(System.Boolean,Org.BouncyCastle.Crypto.ICipherParameters)
  id: Init(System.Boolean,Org.BouncyCastle.Crypto.ICipherParameters)
  parent: Org.BouncyCastle.Crypto.Signers.PssSigner
  langs:
  - csharp
  - vb
  name: Init(Boolean, ICipherParameters)
  nameWithType: PssSigner.Init(Boolean, ICipherParameters)
  fullName: Org.BouncyCastle.Crypto.Signers.PssSigner.Init(System.Boolean, Org.BouncyCastle.Crypto.ICipherParameters)
  type: Method
  source:
    id: Init
    path: ''
    startLine: 91985
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Signers
  syntax:
    content: public virtual void Init(bool forSigning, ICipherParameters parameters)
    parameters:
    - id: forSigning
      type: System.Boolean
    - id: parameters
      type: Org.BouncyCastle.Crypto.ICipherParameters
    content.vb: Public Overridable Sub Init(forSigning As Boolean, parameters As ICipherParameters)
  overload: Org.BouncyCastle.Crypto.Signers.PssSigner.Init*
  implements:
  - Org.BouncyCastle.Crypto.ISigner.Init(System.Boolean,Org.BouncyCastle.Crypto.ICipherParameters)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Org.BouncyCastle.Crypto.Signers.PssSigner.Update(System.Byte)
  commentId: M:Org.BouncyCastle.Crypto.Signers.PssSigner.Update(System.Byte)
  id: Update(System.Byte)
  parent: Org.BouncyCastle.Crypto.Signers.PssSigner
  langs:
  - csharp
  - vb
  name: Update(Byte)
  nameWithType: PssSigner.Update(Byte)
  fullName: Org.BouncyCastle.Crypto.Signers.PssSigner.Update(System.Byte)
  type: Method
  source:
    id: Update
    path: ''
    startLine: 92032
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Signers
  summary: update the internal digest with the byte b
  example: []
  syntax:
    content: public virtual void Update(byte input)
    parameters:
    - id: input
      type: System.Byte
    content.vb: Public Overridable Sub Update(input As Byte)
  overload: Org.BouncyCastle.Crypto.Signers.PssSigner.Update*
  implements:
  - Org.BouncyCastle.Crypto.ISigner.Update(System.Byte)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Org.BouncyCastle.Crypto.Signers.PssSigner.BlockUpdate(System.Byte[],System.Int32,System.Int32)
  commentId: M:Org.BouncyCastle.Crypto.Signers.PssSigner.BlockUpdate(System.Byte[],System.Int32,System.Int32)
  id: BlockUpdate(System.Byte[],System.Int32,System.Int32)
  parent: Org.BouncyCastle.Crypto.Signers.PssSigner
  langs:
  - csharp
  - vb
  name: BlockUpdate(Byte[], Int32, Int32)
  nameWithType: PssSigner.BlockUpdate(Byte[], Int32, Int32)
  fullName: Org.BouncyCastle.Crypto.Signers.PssSigner.BlockUpdate(System.Byte[], System.Int32, System.Int32)
  type: Method
  source:
    id: BlockUpdate
    path: ''
    startLine: 92039
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Signers
  summary: update the internal digest with the byte array in
  example: []
  syntax:
    content: public virtual void BlockUpdate(byte[] input, int inOff, int length)
    parameters:
    - id: input
      type: System.Byte[]
    - id: inOff
      type: System.Int32
    - id: length
      type: System.Int32
    content.vb: Public Overridable Sub BlockUpdate(input As Byte(), inOff As Integer, length As Integer)
  overload: Org.BouncyCastle.Crypto.Signers.PssSigner.BlockUpdate*
  implements:
  - Org.BouncyCastle.Crypto.ISigner.BlockUpdate(System.Byte[],System.Int32,System.Int32)
  nameWithType.vb: PssSigner.BlockUpdate(Byte(), Int32, Int32)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Org.BouncyCastle.Crypto.Signers.PssSigner.BlockUpdate(System.Byte(), System.Int32, System.Int32)
  name.vb: BlockUpdate(Byte(), Int32, Int32)
- uid: Org.BouncyCastle.Crypto.Signers.PssSigner.Reset
  commentId: M:Org.BouncyCastle.Crypto.Signers.PssSigner.Reset
  id: Reset
  parent: Org.BouncyCastle.Crypto.Signers.PssSigner
  langs:
  - csharp
  - vb
  name: Reset()
  nameWithType: PssSigner.Reset()
  fullName: Org.BouncyCastle.Crypto.Signers.PssSigner.Reset()
  type: Method
  source:
    id: Reset
    path: ''
    startLine: 92048
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Signers
  summary: reset the internal state
  example: []
  syntax:
    content: public virtual void Reset()
    content.vb: Public Overridable Sub Reset
  overload: Org.BouncyCastle.Crypto.Signers.PssSigner.Reset*
  implements:
  - Org.BouncyCastle.Crypto.ISigner.Reset
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Org.BouncyCastle.Crypto.Signers.PssSigner.GenerateSignature
  commentId: M:Org.BouncyCastle.Crypto.Signers.PssSigner.GenerateSignature
  id: GenerateSignature
  parent: Org.BouncyCastle.Crypto.Signers.PssSigner
  langs:
  - csharp
  - vb
  name: GenerateSignature()
  nameWithType: PssSigner.GenerateSignature()
  fullName: Org.BouncyCastle.Crypto.Signers.PssSigner.GenerateSignature()
  type: Method
  source:
    id: GenerateSignature
    path: ''
    startLine: 92056
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Signers
  summary: >
    Generate a signature for the message we&apos;ve been loaded with using

    the key we were initialised with.
  example: []
  syntax:
    content: public virtual byte[] GenerateSignature()
    return:
      type: System.Byte[]
    content.vb: Public Overridable Function GenerateSignature As Byte()
  overload: Org.BouncyCastle.Crypto.Signers.PssSigner.GenerateSignature*
  implements:
  - Org.BouncyCastle.Crypto.ISigner.GenerateSignature
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Org.BouncyCastle.Crypto.Signers.PssSigner.VerifySignature(System.Byte[])
  commentId: M:Org.BouncyCastle.Crypto.Signers.PssSigner.VerifySignature(System.Byte[])
  id: VerifySignature(System.Byte[])
  parent: Org.BouncyCastle.Crypto.Signers.PssSigner
  langs:
  - csharp
  - vb
  name: VerifySignature(Byte[])
  nameWithType: PssSigner.VerifySignature(Byte[])
  fullName: Org.BouncyCastle.Crypto.Signers.PssSigner.VerifySignature(System.Byte[])
  type: Method
  source:
    id: VerifySignature
    path: ''
    startLine: 92100
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Signers
  summary: >
    return true if the internal state represents the signature described

    in the passed in array.
  example: []
  syntax:
    content: public virtual bool VerifySignature(byte[] signature)
    parameters:
    - id: signature
      type: System.Byte[]
    return:
      type: System.Boolean
    content.vb: Public Overridable Function VerifySignature(signature As Byte()) As Boolean
  overload: Org.BouncyCastle.Crypto.Signers.PssSigner.VerifySignature*
  implements:
  - Org.BouncyCastle.Crypto.ISigner.VerifySignature(System.Byte[])
  nameWithType.vb: PssSigner.VerifySignature(Byte())
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Org.BouncyCastle.Crypto.Signers.PssSigner.VerifySignature(System.Byte())
  name.vb: VerifySignature(Byte())
references:
- uid: Org.BouncyCastle.Crypto.Signers
  commentId: N:Org.BouncyCastle.Crypto.Signers
  name: Org.BouncyCastle.Crypto.Signers
  nameWithType: Org.BouncyCastle.Crypto.Signers
  fullName: Org.BouncyCastle.Crypto.Signers
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Org.BouncyCastle.Crypto.ISigner
  commentId: T:Org.BouncyCastle.Crypto.ISigner
  parent: Org.BouncyCastle.Crypto
  name: ISigner
  nameWithType: ISigner
  fullName: Org.BouncyCastle.Crypto.ISigner
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Org.BouncyCastle.Crypto
  commentId: N:Org.BouncyCastle.Crypto
  name: Org.BouncyCastle.Crypto
  nameWithType: Org.BouncyCastle.Crypto
  fullName: Org.BouncyCastle.Crypto
- uid: System.Byte
  commentId: T:System.Byte
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte
- uid: Org.BouncyCastle.Crypto.Signers.PssSigner.CreateRawSigner*
  commentId: Overload:Org.BouncyCastle.Crypto.Signers.PssSigner.CreateRawSigner
  name: CreateRawSigner
  nameWithType: PssSigner.CreateRawSigner
  fullName: Org.BouncyCastle.Crypto.Signers.PssSigner.CreateRawSigner
- uid: Org.BouncyCastle.Crypto.IAsymmetricBlockCipher
  commentId: T:Org.BouncyCastle.Crypto.IAsymmetricBlockCipher
  parent: Org.BouncyCastle.Crypto
  name: IAsymmetricBlockCipher
  nameWithType: IAsymmetricBlockCipher
  fullName: Org.BouncyCastle.Crypto.IAsymmetricBlockCipher
- uid: Org.BouncyCastle.Crypto.IDigest
  commentId: T:Org.BouncyCastle.Crypto.IDigest
  parent: Org.BouncyCastle.Crypto
  name: IDigest
  nameWithType: IDigest
  fullName: Org.BouncyCastle.Crypto.IDigest
- uid: Org.BouncyCastle.Crypto.Signers.PssSigner
  commentId: T:Org.BouncyCastle.Crypto.Signers.PssSigner
  parent: Org.BouncyCastle.Crypto.Signers
  name: PssSigner
  nameWithType: PssSigner
  fullName: Org.BouncyCastle.Crypto.Signers.PssSigner
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Org.BouncyCastle.Crypto.Signers.PssSigner.#ctor*
  commentId: Overload:Org.BouncyCastle.Crypto.Signers.PssSigner.#ctor
  name: PssSigner
  nameWithType: PssSigner.PssSigner
  fullName: Org.BouncyCastle.Crypto.Signers.PssSigner.PssSigner
- uid: System.Byte[]
  isExternal: true
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullName.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Org.BouncyCastle.Crypto.Signers.PssSigner.AlgorithmName*
  commentId: Overload:Org.BouncyCastle.Crypto.Signers.PssSigner.AlgorithmName
  name: AlgorithmName
  nameWithType: PssSigner.AlgorithmName
  fullName: Org.BouncyCastle.Crypto.Signers.PssSigner.AlgorithmName
- uid: Org.BouncyCastle.Crypto.ISigner.AlgorithmName
  commentId: P:Org.BouncyCastle.Crypto.ISigner.AlgorithmName
  parent: Org.BouncyCastle.Crypto.ISigner
  name: AlgorithmName
  nameWithType: ISigner.AlgorithmName
  fullName: Org.BouncyCastle.Crypto.ISigner.AlgorithmName
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Org.BouncyCastle.Crypto.Signers.PssSigner.Init*
  commentId: Overload:Org.BouncyCastle.Crypto.Signers.PssSigner.Init
  name: Init
  nameWithType: PssSigner.Init
  fullName: Org.BouncyCastle.Crypto.Signers.PssSigner.Init
- uid: Org.BouncyCastle.Crypto.ISigner.Init(System.Boolean,Org.BouncyCastle.Crypto.ICipherParameters)
  commentId: M:Org.BouncyCastle.Crypto.ISigner.Init(System.Boolean,Org.BouncyCastle.Crypto.ICipherParameters)
  parent: Org.BouncyCastle.Crypto.ISigner
  isExternal: true
  name: Init(Boolean, ICipherParameters)
  nameWithType: ISigner.Init(Boolean, ICipherParameters)
  fullName: Org.BouncyCastle.Crypto.ISigner.Init(System.Boolean, Org.BouncyCastle.Crypto.ICipherParameters)
  spec.csharp:
  - uid: Org.BouncyCastle.Crypto.ISigner.Init(System.Boolean,Org.BouncyCastle.Crypto.ICipherParameters)
    name: Init
    nameWithType: ISigner.Init
    fullName: Org.BouncyCastle.Crypto.ISigner.Init
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Org.BouncyCastle.Crypto.ICipherParameters
    name: ICipherParameters
    nameWithType: ICipherParameters
    fullName: Org.BouncyCastle.Crypto.ICipherParameters
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Org.BouncyCastle.Crypto.ISigner.Init(System.Boolean,Org.BouncyCastle.Crypto.ICipherParameters)
    name: Init
    nameWithType: ISigner.Init
    fullName: Org.BouncyCastle.Crypto.ISigner.Init
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Org.BouncyCastle.Crypto.ICipherParameters
    name: ICipherParameters
    nameWithType: ICipherParameters
    fullName: Org.BouncyCastle.Crypto.ICipherParameters
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Org.BouncyCastle.Crypto.ICipherParameters
  commentId: T:Org.BouncyCastle.Crypto.ICipherParameters
  parent: Org.BouncyCastle.Crypto
  name: ICipherParameters
  nameWithType: ICipherParameters
  fullName: Org.BouncyCastle.Crypto.ICipherParameters
- uid: Org.BouncyCastle.Crypto.Signers.PssSigner.Update*
  commentId: Overload:Org.BouncyCastle.Crypto.Signers.PssSigner.Update
  name: Update
  nameWithType: PssSigner.Update
  fullName: Org.BouncyCastle.Crypto.Signers.PssSigner.Update
- uid: Org.BouncyCastle.Crypto.ISigner.Update(System.Byte)
  commentId: M:Org.BouncyCastle.Crypto.ISigner.Update(System.Byte)
  parent: Org.BouncyCastle.Crypto.ISigner
  isExternal: true
  name: Update(Byte)
  nameWithType: ISigner.Update(Byte)
  fullName: Org.BouncyCastle.Crypto.ISigner.Update(System.Byte)
  spec.csharp:
  - uid: Org.BouncyCastle.Crypto.ISigner.Update(System.Byte)
    name: Update
    nameWithType: ISigner.Update
    fullName: Org.BouncyCastle.Crypto.ISigner.Update
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Org.BouncyCastle.Crypto.ISigner.Update(System.Byte)
    name: Update
    nameWithType: ISigner.Update
    fullName: Org.BouncyCastle.Crypto.ISigner.Update
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Org.BouncyCastle.Crypto.Signers.PssSigner.BlockUpdate*
  commentId: Overload:Org.BouncyCastle.Crypto.Signers.PssSigner.BlockUpdate
  name: BlockUpdate
  nameWithType: PssSigner.BlockUpdate
  fullName: Org.BouncyCastle.Crypto.Signers.PssSigner.BlockUpdate
- uid: Org.BouncyCastle.Crypto.ISigner.BlockUpdate(System.Byte[],System.Int32,System.Int32)
  commentId: M:Org.BouncyCastle.Crypto.ISigner.BlockUpdate(System.Byte[],System.Int32,System.Int32)
  parent: Org.BouncyCastle.Crypto.ISigner
  isExternal: true
  name: BlockUpdate(Byte[], Int32, Int32)
  nameWithType: ISigner.BlockUpdate(Byte[], Int32, Int32)
  fullName: Org.BouncyCastle.Crypto.ISigner.BlockUpdate(System.Byte[], System.Int32, System.Int32)
  nameWithType.vb: ISigner.BlockUpdate(Byte(), Int32, Int32)
  fullName.vb: Org.BouncyCastle.Crypto.ISigner.BlockUpdate(System.Byte(), System.Int32, System.Int32)
  name.vb: BlockUpdate(Byte(), Int32, Int32)
  spec.csharp:
  - uid: Org.BouncyCastle.Crypto.ISigner.BlockUpdate(System.Byte[],System.Int32,System.Int32)
    name: BlockUpdate
    nameWithType: ISigner.BlockUpdate
    fullName: Org.BouncyCastle.Crypto.ISigner.BlockUpdate
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Org.BouncyCastle.Crypto.ISigner.BlockUpdate(System.Byte[],System.Int32,System.Int32)
    name: BlockUpdate
    nameWithType: ISigner.BlockUpdate
    fullName: Org.BouncyCastle.Crypto.ISigner.BlockUpdate
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Org.BouncyCastle.Crypto.Signers.PssSigner.Reset*
  commentId: Overload:Org.BouncyCastle.Crypto.Signers.PssSigner.Reset
  name: Reset
  nameWithType: PssSigner.Reset
  fullName: Org.BouncyCastle.Crypto.Signers.PssSigner.Reset
- uid: Org.BouncyCastle.Crypto.ISigner.Reset
  commentId: M:Org.BouncyCastle.Crypto.ISigner.Reset
  parent: Org.BouncyCastle.Crypto.ISigner
  name: Reset()
  nameWithType: ISigner.Reset()
  fullName: Org.BouncyCastle.Crypto.ISigner.Reset()
  spec.csharp:
  - uid: Org.BouncyCastle.Crypto.ISigner.Reset
    name: Reset
    nameWithType: ISigner.Reset
    fullName: Org.BouncyCastle.Crypto.ISigner.Reset
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Org.BouncyCastle.Crypto.ISigner.Reset
    name: Reset
    nameWithType: ISigner.Reset
    fullName: Org.BouncyCastle.Crypto.ISigner.Reset
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Org.BouncyCastle.Crypto.Signers.PssSigner.GenerateSignature*
  commentId: Overload:Org.BouncyCastle.Crypto.Signers.PssSigner.GenerateSignature
  name: GenerateSignature
  nameWithType: PssSigner.GenerateSignature
  fullName: Org.BouncyCastle.Crypto.Signers.PssSigner.GenerateSignature
- uid: Org.BouncyCastle.Crypto.ISigner.GenerateSignature
  commentId: M:Org.BouncyCastle.Crypto.ISigner.GenerateSignature
  parent: Org.BouncyCastle.Crypto.ISigner
  name: GenerateSignature()
  nameWithType: ISigner.GenerateSignature()
  fullName: Org.BouncyCastle.Crypto.ISigner.GenerateSignature()
  spec.csharp:
  - uid: Org.BouncyCastle.Crypto.ISigner.GenerateSignature
    name: GenerateSignature
    nameWithType: ISigner.GenerateSignature
    fullName: Org.BouncyCastle.Crypto.ISigner.GenerateSignature
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Org.BouncyCastle.Crypto.ISigner.GenerateSignature
    name: GenerateSignature
    nameWithType: ISigner.GenerateSignature
    fullName: Org.BouncyCastle.Crypto.ISigner.GenerateSignature
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Org.BouncyCastle.Crypto.Signers.PssSigner.VerifySignature*
  commentId: Overload:Org.BouncyCastle.Crypto.Signers.PssSigner.VerifySignature
  name: VerifySignature
  nameWithType: PssSigner.VerifySignature
  fullName: Org.BouncyCastle.Crypto.Signers.PssSigner.VerifySignature
- uid: Org.BouncyCastle.Crypto.ISigner.VerifySignature(System.Byte[])
  commentId: M:Org.BouncyCastle.Crypto.ISigner.VerifySignature(System.Byte[])
  parent: Org.BouncyCastle.Crypto.ISigner
  isExternal: true
  name: VerifySignature(Byte[])
  nameWithType: ISigner.VerifySignature(Byte[])
  fullName: Org.BouncyCastle.Crypto.ISigner.VerifySignature(System.Byte[])
  nameWithType.vb: ISigner.VerifySignature(Byte())
  fullName.vb: Org.BouncyCastle.Crypto.ISigner.VerifySignature(System.Byte())
  name.vb: VerifySignature(Byte())
  spec.csharp:
  - uid: Org.BouncyCastle.Crypto.ISigner.VerifySignature(System.Byte[])
    name: VerifySignature
    nameWithType: ISigner.VerifySignature
    fullName: Org.BouncyCastle.Crypto.ISigner.VerifySignature
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Org.BouncyCastle.Crypto.ISigner.VerifySignature(System.Byte[])
    name: VerifySignature
    nameWithType: ISigner.VerifySignature
    fullName: Org.BouncyCastle.Crypto.ISigner.VerifySignature
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
