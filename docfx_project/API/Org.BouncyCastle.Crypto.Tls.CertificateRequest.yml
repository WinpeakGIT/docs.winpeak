### YamlMime:ManagedReference
items:
- uid: Org.BouncyCastle.Crypto.Tls.CertificateRequest
  commentId: T:Org.BouncyCastle.Crypto.Tls.CertificateRequest
  id: CertificateRequest
  parent: Org.BouncyCastle.Crypto.Tls
  children:
  - Org.BouncyCastle.Crypto.Tls.CertificateRequest.#ctor(System.Byte[],System.Collections.IList,System.Collections.IList)
  - Org.BouncyCastle.Crypto.Tls.CertificateRequest.CertificateAuthorities
  - Org.BouncyCastle.Crypto.Tls.CertificateRequest.CertificateTypes
  - Org.BouncyCastle.Crypto.Tls.CertificateRequest.Encode(Stream)
  - Org.BouncyCastle.Crypto.Tls.CertificateRequest.mCertificateAuthorities
  - Org.BouncyCastle.Crypto.Tls.CertificateRequest.mCertificateTypes
  - Org.BouncyCastle.Crypto.Tls.CertificateRequest.mSupportedSignatureAlgorithms
  - Org.BouncyCastle.Crypto.Tls.CertificateRequest.Parse(Org.BouncyCastle.Crypto.Tls.TlsContext,Stream)
  - Org.BouncyCastle.Crypto.Tls.CertificateRequest.SupportedSignatureAlgorithms
  langs:
  - csharp
  - vb
  name: CertificateRequest
  nameWithType: CertificateRequest
  fullName: Org.BouncyCastle.Crypto.Tls.CertificateRequest
  type: Class
  source:
    id: CertificateRequest
    path: ''
    startLine: 115241
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Tls
  example: []
  syntax:
    content: public class CertificateRequest
    content.vb: Public Class CertificateRequest
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ToString
  - System.Object.ReferenceEquals(System.Object,System.Object)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Org.BouncyCastle.Crypto.Tls.CertificateRequest.mCertificateTypes
  commentId: F:Org.BouncyCastle.Crypto.Tls.CertificateRequest.mCertificateTypes
  id: mCertificateTypes
  parent: Org.BouncyCastle.Crypto.Tls.CertificateRequest
  langs:
  - csharp
  - vb
  name: mCertificateTypes
  nameWithType: CertificateRequest.mCertificateTypes
  fullName: Org.BouncyCastle.Crypto.Tls.CertificateRequest.mCertificateTypes
  type: Field
  source:
    id: mCertificateTypes
    path: ''
    startLine: 115243
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Tls
  syntax:
    content: protected readonly byte[] mCertificateTypes
    return:
      type: System.Byte[]
    content.vb: Protected ReadOnly mCertificateTypes As Byte()
  modifiers.csharp:
  - protected
  - readonly
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: Org.BouncyCastle.Crypto.Tls.CertificateRequest.mSupportedSignatureAlgorithms
  commentId: F:Org.BouncyCastle.Crypto.Tls.CertificateRequest.mSupportedSignatureAlgorithms
  id: mSupportedSignatureAlgorithms
  parent: Org.BouncyCastle.Crypto.Tls.CertificateRequest
  langs:
  - csharp
  - vb
  name: mSupportedSignatureAlgorithms
  nameWithType: CertificateRequest.mSupportedSignatureAlgorithms
  fullName: Org.BouncyCastle.Crypto.Tls.CertificateRequest.mSupportedSignatureAlgorithms
  type: Field
  source:
    id: mSupportedSignatureAlgorithms
    path: ''
    startLine: 115244
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Tls
  syntax:
    content: protected readonly IList mSupportedSignatureAlgorithms
    return:
      type: System.Collections.IList
    content.vb: Protected ReadOnly mSupportedSignatureAlgorithms As IList
  modifiers.csharp:
  - protected
  - readonly
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: Org.BouncyCastle.Crypto.Tls.CertificateRequest.mCertificateAuthorities
  commentId: F:Org.BouncyCastle.Crypto.Tls.CertificateRequest.mCertificateAuthorities
  id: mCertificateAuthorities
  parent: Org.BouncyCastle.Crypto.Tls.CertificateRequest
  langs:
  - csharp
  - vb
  name: mCertificateAuthorities
  nameWithType: CertificateRequest.mCertificateAuthorities
  fullName: Org.BouncyCastle.Crypto.Tls.CertificateRequest.mCertificateAuthorities
  type: Field
  source:
    id: mCertificateAuthorities
    path: ''
    startLine: 115245
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Tls
  syntax:
    content: protected readonly IList mCertificateAuthorities
    return:
      type: System.Collections.IList
    content.vb: Protected ReadOnly mCertificateAuthorities As IList
  modifiers.csharp:
  - protected
  - readonly
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: Org.BouncyCastle.Crypto.Tls.CertificateRequest.#ctor(System.Byte[],System.Collections.IList,System.Collections.IList)
  commentId: M:Org.BouncyCastle.Crypto.Tls.CertificateRequest.#ctor(System.Byte[],System.Collections.IList,System.Collections.IList)
  id: '#ctor(System.Byte[],System.Collections.IList,System.Collections.IList)'
  parent: Org.BouncyCastle.Crypto.Tls.CertificateRequest
  langs:
  - csharp
  - vb
  name: CertificateRequest(Byte[], IList, IList)
  nameWithType: CertificateRequest.CertificateRequest(Byte[], IList, IList)
  fullName: Org.BouncyCastle.Crypto.Tls.CertificateRequest.CertificateRequest(System.Byte[], System.Collections.IList, System.Collections.IList)
  type: Constructor
  source:
    id: .ctor
    path: ''
    startLine: 115251
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Tls
  example: []
  syntax:
    content: public CertificateRequest(byte[] certificateTypes, IList supportedSignatureAlgorithms, IList certificateAuthorities)
    parameters:
    - id: certificateTypes
      type: System.Byte[]
    - id: supportedSignatureAlgorithms
      type: System.Collections.IList
    - id: certificateAuthorities
      type: System.Collections.IList
    content.vb: Public Sub New(certificateTypes As Byte(), supportedSignatureAlgorithms As IList, certificateAuthorities As IList)
  overload: Org.BouncyCastle.Crypto.Tls.CertificateRequest.#ctor*
  nameWithType.vb: CertificateRequest.CertificateRequest(Byte(), IList, IList)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Org.BouncyCastle.Crypto.Tls.CertificateRequest.CertificateRequest(System.Byte(), System.Collections.IList, System.Collections.IList)
  name.vb: CertificateRequest(Byte(), IList, IList)
- uid: Org.BouncyCastle.Crypto.Tls.CertificateRequest.CertificateTypes
  commentId: P:Org.BouncyCastle.Crypto.Tls.CertificateRequest.CertificateTypes
  id: CertificateTypes
  parent: Org.BouncyCastle.Crypto.Tls.CertificateRequest
  langs:
  - csharp
  - vb
  name: CertificateTypes
  nameWithType: CertificateRequest.CertificateTypes
  fullName: Org.BouncyCastle.Crypto.Tls.CertificateRequest.CertificateTypes
  type: Property
  source:
    id: CertificateTypes
    path: ''
    startLine: 115263
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Tls
  example: []
  syntax:
    content: public virtual byte[] CertificateTypes { get; }
    parameters: []
    return:
      type: System.Byte[]
    content.vb: Public Overridable ReadOnly Property CertificateTypes As Byte()
  overload: Org.BouncyCastle.Crypto.Tls.CertificateRequest.CertificateTypes*
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: Org.BouncyCastle.Crypto.Tls.CertificateRequest.SupportedSignatureAlgorithms
  commentId: P:Org.BouncyCastle.Crypto.Tls.CertificateRequest.SupportedSignatureAlgorithms
  id: SupportedSignatureAlgorithms
  parent: Org.BouncyCastle.Crypto.Tls.CertificateRequest
  langs:
  - csharp
  - vb
  name: SupportedSignatureAlgorithms
  nameWithType: CertificateRequest.SupportedSignatureAlgorithms
  fullName: Org.BouncyCastle.Crypto.Tls.CertificateRequest.SupportedSignatureAlgorithms
  type: Property
  source:
    id: SupportedSignatureAlgorithms
    path: ''
    startLine: 115271
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Tls
  example: []
  syntax:
    content: public virtual IList SupportedSignatureAlgorithms { get; }
    parameters: []
    return:
      type: System.Collections.IList
    content.vb: Public Overridable ReadOnly Property SupportedSignatureAlgorithms As IList
  overload: Org.BouncyCastle.Crypto.Tls.CertificateRequest.SupportedSignatureAlgorithms*
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: Org.BouncyCastle.Crypto.Tls.CertificateRequest.CertificateAuthorities
  commentId: P:Org.BouncyCastle.Crypto.Tls.CertificateRequest.CertificateAuthorities
  id: CertificateAuthorities
  parent: Org.BouncyCastle.Crypto.Tls.CertificateRequest
  langs:
  - csharp
  - vb
  name: CertificateAuthorities
  nameWithType: CertificateRequest.CertificateAuthorities
  fullName: Org.BouncyCastle.Crypto.Tls.CertificateRequest.CertificateAuthorities
  type: Property
  source:
    id: CertificateAuthorities
    path: ''
    startLine: 115279
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Tls
  example: []
  syntax:
    content: public virtual IList CertificateAuthorities { get; }
    parameters: []
    return:
      type: System.Collections.IList
    content.vb: Public Overridable ReadOnly Property CertificateAuthorities As IList
  overload: Org.BouncyCastle.Crypto.Tls.CertificateRequest.CertificateAuthorities*
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: Org.BouncyCastle.Crypto.Tls.CertificateRequest.Encode(Stream)
  commentId: M:Org.BouncyCastle.Crypto.Tls.CertificateRequest.Encode(Stream)
  id: Encode(Stream)
  parent: Org.BouncyCastle.Crypto.Tls.CertificateRequest
  langs:
  - csharp
  - vb
  name: Encode(Stream)
  nameWithType: CertificateRequest.Encode(Stream)
  fullName: Org.BouncyCastle.Crypto.Tls.CertificateRequest.Encode(Stream)
  type: Method
  source:
    id: Encode
    path: ''
    startLine: 115290
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Tls
  example: []
  syntax:
    content: public virtual void Encode(Stream output)
    parameters:
    - id: output
      type: Stream
    content.vb: Public Overridable Sub Encode(output As Stream)
  overload: Org.BouncyCastle.Crypto.Tls.CertificateRequest.Encode*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Org.BouncyCastle.Crypto.Tls.CertificateRequest.Parse(Org.BouncyCastle.Crypto.Tls.TlsContext,Stream)
  commentId: M:Org.BouncyCastle.Crypto.Tls.CertificateRequest.Parse(Org.BouncyCastle.Crypto.Tls.TlsContext,Stream)
  id: Parse(Org.BouncyCastle.Crypto.Tls.TlsContext,Stream)
  parent: Org.BouncyCastle.Crypto.Tls.CertificateRequest
  langs:
  - csharp
  - vb
  name: Parse(TlsContext, Stream)
  nameWithType: CertificateRequest.Parse(TlsContext, Stream)
  fullName: Org.BouncyCastle.Crypto.Tls.CertificateRequest.Parse(Org.BouncyCastle.Crypto.Tls.TlsContext, Stream)
  type: Method
  source:
    id: Parse
    path: ''
    startLine: 115343
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Tls
  example: []
  syntax:
    content: public static CertificateRequest Parse(TlsContext context, Stream input)
    parameters:
    - id: context
      type: Org.BouncyCastle.Crypto.Tls.TlsContext
    - id: input
      type: Stream
    return:
      type: Org.BouncyCastle.Crypto.Tls.CertificateRequest
    content.vb: Public Shared Function Parse(context As TlsContext, input As Stream) As CertificateRequest
  overload: Org.BouncyCastle.Crypto.Tls.CertificateRequest.Parse*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Org.BouncyCastle.Crypto.Tls
  commentId: N:Org.BouncyCastle.Crypto.Tls
  name: Org.BouncyCastle.Crypto.Tls
  nameWithType: Org.BouncyCastle.Crypto.Tls
  fullName: Org.BouncyCastle.Crypto.Tls
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Byte[]
  isExternal: true
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullName.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Collections.IList
  commentId: T:System.Collections.IList
  parent: System.Collections
  isExternal: true
  name: IList
  nameWithType: IList
  fullName: System.Collections.IList
- uid: System.Collections
  commentId: N:System.Collections
  isExternal: true
  name: System.Collections
  nameWithType: System.Collections
  fullName: System.Collections
- uid: Org.BouncyCastle.Crypto.Tls.CertificateRequest.#ctor*
  commentId: Overload:Org.BouncyCastle.Crypto.Tls.CertificateRequest.#ctor
  name: CertificateRequest
  nameWithType: CertificateRequest.CertificateRequest
  fullName: Org.BouncyCastle.Crypto.Tls.CertificateRequest.CertificateRequest
- uid: Org.BouncyCastle.Crypto.Tls.CertificateRequest.CertificateTypes*
  commentId: Overload:Org.BouncyCastle.Crypto.Tls.CertificateRequest.CertificateTypes
  name: CertificateTypes
  nameWithType: CertificateRequest.CertificateTypes
  fullName: Org.BouncyCastle.Crypto.Tls.CertificateRequest.CertificateTypes
- uid: Org.BouncyCastle.Crypto.Tls.CertificateRequest.SupportedSignatureAlgorithms*
  commentId: Overload:Org.BouncyCastle.Crypto.Tls.CertificateRequest.SupportedSignatureAlgorithms
  name: SupportedSignatureAlgorithms
  nameWithType: CertificateRequest.SupportedSignatureAlgorithms
  fullName: Org.BouncyCastle.Crypto.Tls.CertificateRequest.SupportedSignatureAlgorithms
- uid: Org.BouncyCastle.Crypto.Tls.CertificateRequest.CertificateAuthorities*
  commentId: Overload:Org.BouncyCastle.Crypto.Tls.CertificateRequest.CertificateAuthorities
  name: CertificateAuthorities
  nameWithType: CertificateRequest.CertificateAuthorities
  fullName: Org.BouncyCastle.Crypto.Tls.CertificateRequest.CertificateAuthorities
- uid: Org.BouncyCastle.Crypto.Tls.CertificateRequest.Encode*
  commentId: Overload:Org.BouncyCastle.Crypto.Tls.CertificateRequest.Encode
  name: Encode
  nameWithType: CertificateRequest.Encode
  fullName: Org.BouncyCastle.Crypto.Tls.CertificateRequest.Encode
- uid: Stream
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: Stream
- uid: Org.BouncyCastle.Crypto.Tls.CertificateRequest.Parse*
  commentId: Overload:Org.BouncyCastle.Crypto.Tls.CertificateRequest.Parse
  name: Parse
  nameWithType: CertificateRequest.Parse
  fullName: Org.BouncyCastle.Crypto.Tls.CertificateRequest.Parse
- uid: Org.BouncyCastle.Crypto.Tls.TlsContext
  commentId: T:Org.BouncyCastle.Crypto.Tls.TlsContext
  parent: Org.BouncyCastle.Crypto.Tls
  name: TlsContext
  nameWithType: TlsContext
  fullName: Org.BouncyCastle.Crypto.Tls.TlsContext
- uid: Org.BouncyCastle.Crypto.Tls.CertificateRequest
  commentId: T:Org.BouncyCastle.Crypto.Tls.CertificateRequest
  parent: Org.BouncyCastle.Crypto.Tls
  name: CertificateRequest
  nameWithType: CertificateRequest
  fullName: Org.BouncyCastle.Crypto.Tls.CertificateRequest
