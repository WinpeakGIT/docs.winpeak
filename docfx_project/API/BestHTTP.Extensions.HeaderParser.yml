### YamlMime:ManagedReference
items:
- uid: BestHTTP.Extensions.HeaderParser
  commentId: T:BestHTTP.Extensions.HeaderParser
  id: HeaderParser
  parent: BestHTTP.Extensions
  children:
  - BestHTTP.Extensions.HeaderParser.#ctor(System.String)
  langs:
  - csharp
  - vb
  name: HeaderParser
  nameWithType: HeaderParser
  fullName: BestHTTP.Extensions.HeaderParser
  type: Class
  source:
    id: HeaderParser
    path: ''
    startLine: 24517
  assemblies:
  - cs.temp.dll
  namespace: BestHTTP.Extensions
  summary: "\nWill parse a comma-separeted header value\n"
  example: []
  syntax:
    content: 'public sealed class HeaderParser : KeyValuePairList'
    content.vb: >-
      Public NotInheritable Class HeaderParser
          Inherits KeyValuePairList
  inheritance:
  - System.Object
  - BestHTTP.Extensions.KeyValuePairList
  inheritedMembers:
  - BestHTTP.Extensions.KeyValuePairList.Values
  - BestHTTP.Extensions.KeyValuePairList.TryGet(System.String,BestHTTP.Extensions.HeaderValue@)
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ToString
  - System.Object.ReferenceEquals(System.Object,System.Object)
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: BestHTTP.Extensions.HeaderParser.#ctor(System.String)
  commentId: M:BestHTTP.Extensions.HeaderParser.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: BestHTTP.Extensions.HeaderParser
  langs:
  - csharp
  - vb
  name: HeaderParser(String)
  nameWithType: HeaderParser.HeaderParser(String)
  fullName: BestHTTP.Extensions.HeaderParser.HeaderParser(System.String)
  type: Constructor
  source:
    id: .ctor
    path: ''
    startLine: 24519
  assemblies:
  - cs.temp.dll
  namespace: BestHTTP.Extensions
  syntax:
    content: public HeaderParser(string headerStr)
    parameters:
    - id: headerStr
      type: System.String
    content.vb: Public Sub New(headerStr As String)
  overload: BestHTTP.Extensions.HeaderParser.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: BestHTTP.Extensions
  commentId: N:BestHTTP.Extensions
  name: BestHTTP.Extensions
  nameWithType: BestHTTP.Extensions
  fullName: BestHTTP.Extensions
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: BestHTTP.Extensions.KeyValuePairList
  commentId: T:BestHTTP.Extensions.KeyValuePairList
  parent: BestHTTP.Extensions
  name: KeyValuePairList
  nameWithType: KeyValuePairList
  fullName: BestHTTP.Extensions.KeyValuePairList
- uid: BestHTTP.Extensions.KeyValuePairList.Values
  commentId: P:BestHTTP.Extensions.KeyValuePairList.Values
  parent: BestHTTP.Extensions.KeyValuePairList
  name: Values
  nameWithType: KeyValuePairList.Values
  fullName: BestHTTP.Extensions.KeyValuePairList.Values
- uid: BestHTTP.Extensions.KeyValuePairList.TryGet(System.String,BestHTTP.Extensions.HeaderValue@)
  commentId: M:BestHTTP.Extensions.KeyValuePairList.TryGet(System.String,BestHTTP.Extensions.HeaderValue@)
  parent: BestHTTP.Extensions.KeyValuePairList
  isExternal: true
  name: TryGet(String, HeaderValue)
  nameWithType: KeyValuePairList.TryGet(String, HeaderValue)
  fullName: BestHTTP.Extensions.KeyValuePairList.TryGet(System.String, BestHTTP.Extensions.HeaderValue)
  spec.csharp:
  - uid: BestHTTP.Extensions.KeyValuePairList.TryGet(System.String,BestHTTP.Extensions.HeaderValue@)
    name: TryGet
    nameWithType: KeyValuePairList.TryGet
    fullName: BestHTTP.Extensions.KeyValuePairList.TryGet
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BestHTTP.Extensions.HeaderValue
    name: HeaderValue
    nameWithType: HeaderValue
    fullName: BestHTTP.Extensions.HeaderValue
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BestHTTP.Extensions.KeyValuePairList.TryGet(System.String,BestHTTP.Extensions.HeaderValue@)
    name: TryGet
    nameWithType: KeyValuePairList.TryGet
    fullName: BestHTTP.Extensions.KeyValuePairList.TryGet
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BestHTTP.Extensions.HeaderValue
    name: HeaderValue
    nameWithType: HeaderValue
    fullName: BestHTTP.Extensions.HeaderValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: BestHTTP.Extensions.HeaderParser.#ctor*
  commentId: Overload:BestHTTP.Extensions.HeaderParser.#ctor
  name: HeaderParser
  nameWithType: HeaderParser.HeaderParser
  fullName: BestHTTP.Extensions.HeaderParser.HeaderParser
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
