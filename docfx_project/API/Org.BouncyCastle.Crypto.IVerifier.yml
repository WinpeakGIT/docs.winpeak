### YamlMime:ManagedReference
items:
- uid: Org.BouncyCastle.Crypto.IVerifier
  commentId: T:Org.BouncyCastle.Crypto.IVerifier
  id: IVerifier
  parent: Org.BouncyCastle.Crypto
  children:
  - Org.BouncyCastle.Crypto.IVerifier.IsVerified(System.Byte[])
  - Org.BouncyCastle.Crypto.IVerifier.IsVerified(System.Byte[],System.Int32,System.Int32)
  langs:
  - csharp
  - vb
  name: IVerifier
  nameWithType: IVerifier
  fullName: Org.BouncyCastle.Crypto.IVerifier
  type: Interface
  source:
    id: IVerifier
    path: ''
    startLine: 47530
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto
  summary: "\nOperators that reduce their input to the validation of a signature produce this type.\n"
  example: []
  syntax:
    content: public interface IVerifier
    content.vb: Public Interface IVerifier
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Org.BouncyCastle.Crypto.IVerifier.IsVerified(System.Byte[])
  commentId: M:Org.BouncyCastle.Crypto.IVerifier.IsVerified(System.Byte[])
  id: IsVerified(System.Byte[])
  parent: Org.BouncyCastle.Crypto.IVerifier
  langs:
  - csharp
  - vb
  name: IsVerified(Byte[])
  nameWithType: IVerifier.IsVerified(Byte[])
  fullName: Org.BouncyCastle.Crypto.IVerifier.IsVerified(System.Byte[])
  type: Method
  source:
    id: IsVerified
    path: ''
    startLine: 47537
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto
  summary: "\nReturn true if the passed in data matches what is expected by the verification result.\n"
  example: []
  syntax:
    content: bool IsVerified(byte[] data)
    parameters:
    - id: data
      type: System.Byte[]
      description: The bytes representing the signature.
    return:
      type: System.Boolean
      description: true if the signature verifies, false otherwise.
    content.vb: Function IsVerified(data As Byte()) As Boolean
  overload: Org.BouncyCastle.Crypto.IVerifier.IsVerified*
  nameWithType.vb: IVerifier.IsVerified(Byte())
  fullName.vb: Org.BouncyCastle.Crypto.IVerifier.IsVerified(System.Byte())
  name.vb: IsVerified(Byte())
- uid: Org.BouncyCastle.Crypto.IVerifier.IsVerified(System.Byte[],System.Int32,System.Int32)
  commentId: M:Org.BouncyCastle.Crypto.IVerifier.IsVerified(System.Byte[],System.Int32,System.Int32)
  id: IsVerified(System.Byte[],System.Int32,System.Int32)
  parent: Org.BouncyCastle.Crypto.IVerifier
  langs:
  - csharp
  - vb
  name: IsVerified(Byte[], Int32, Int32)
  nameWithType: IVerifier.IsVerified(Byte[], Int32, Int32)
  fullName: Org.BouncyCastle.Crypto.IVerifier.IsVerified(System.Byte[], System.Int32, System.Int32)
  type: Method
  source:
    id: IsVerified
    path: ''
    startLine: 47547
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto
  summary: "\nReturn true if the length bytes from off in the source array match the signature\nexpected by the verification result.\n"
  example: []
  syntax:
    content: bool IsVerified(byte[] source, int off, int length)
    parameters:
    - id: source
      type: System.Byte[]
      description: Byte array containing the signature.
    - id: off
      type: System.Int32
      description: The offset into the source array where the signature starts.
    - id: length
      type: System.Int32
      description: The number of bytes in source making up the signature.
    return:
      type: System.Boolean
      description: true if the signature verifies, false otherwise.
    content.vb: Function IsVerified(source As Byte(), off As Integer, length As Integer) As Boolean
  overload: Org.BouncyCastle.Crypto.IVerifier.IsVerified*
  nameWithType.vb: IVerifier.IsVerified(Byte(), Int32, Int32)
  fullName.vb: Org.BouncyCastle.Crypto.IVerifier.IsVerified(System.Byte(), System.Int32, System.Int32)
  name.vb: IsVerified(Byte(), Int32, Int32)
references:
- uid: Org.BouncyCastle.Crypto
  commentId: N:Org.BouncyCastle.Crypto
  name: Org.BouncyCastle.Crypto
  nameWithType: Org.BouncyCastle.Crypto
  fullName: Org.BouncyCastle.Crypto
- uid: Org.BouncyCastle.Crypto.IVerifier.IsVerified*
  commentId: Overload:Org.BouncyCastle.Crypto.IVerifier.IsVerified
  name: IsVerified
  nameWithType: IVerifier.IsVerified
  fullName: Org.BouncyCastle.Crypto.IVerifier.IsVerified
- uid: System.Byte[]
  isExternal: true
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullName.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
