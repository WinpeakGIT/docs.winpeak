### YamlMime:ManagedReference
items:
- uid: Winpeak.Client.Networking.WebServer.IGameServerInfo
  commentId: T:Winpeak.Client.Networking.WebServer.IGameServerInfo
  id: IGameServerInfo
  parent: Winpeak.Client.Networking.WebServer
  children:
  - Winpeak.Client.Networking.WebServer.IGameServerInfo.GetGameNetwork
  - Winpeak.Client.Networking.WebServer.IGameServerInfo.GetLogin
  - Winpeak.Client.Networking.WebServer.IGameServerInfo.GetPassword
  langs:
  - csharp
  - vb
  name: IGameServerInfo
  nameWithType: IGameServerInfo
  fullName: Winpeak.Client.Networking.WebServer.IGameServerInfo
  type: Interface
  source:
    id: IGameServerInfo
    path: ''
    startLine: 3963
  assemblies:
  - cs.temp.dll
  namespace: Winpeak.Client.Networking.WebServer
  syntax:
    content: public interface IGameServerInfo
    content.vb: Public Interface IGameServerInfo
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Winpeak.Client.Networking.WebServer.IGameServerInfo.GetLogin
  commentId: P:Winpeak.Client.Networking.WebServer.IGameServerInfo.GetLogin
  id: GetLogin
  parent: Winpeak.Client.Networking.WebServer.IGameServerInfo
  langs:
  - csharp
  - vb
  name: GetLogin
  nameWithType: IGameServerInfo.GetLogin
  fullName: Winpeak.Client.Networking.WebServer.IGameServerInfo.GetLogin
  type: Property
  source:
    id: GetLogin
    path: ''
    startLine: 3965
  assemblies:
  - cs.temp.dll
  namespace: Winpeak.Client.Networking.WebServer
  syntax:
    content: long GetLogin { get; }
    parameters: []
    return:
      type: System.Int64
    content.vb: ReadOnly Property GetLogin As Long
  overload: Winpeak.Client.Networking.WebServer.IGameServerInfo.GetLogin*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Winpeak.Client.Networking.WebServer.IGameServerInfo.GetPassword
  commentId: P:Winpeak.Client.Networking.WebServer.IGameServerInfo.GetPassword
  id: GetPassword
  parent: Winpeak.Client.Networking.WebServer.IGameServerInfo
  langs:
  - csharp
  - vb
  name: GetPassword
  nameWithType: IGameServerInfo.GetPassword
  fullName: Winpeak.Client.Networking.WebServer.IGameServerInfo.GetPassword
  type: Property
  source:
    id: GetPassword
    path: ''
    startLine: 3966
  assemblies:
  - cs.temp.dll
  namespace: Winpeak.Client.Networking.WebServer
  syntax:
    content: string GetPassword { get; }
    parameters: []
    return:
      type: System.String
    content.vb: ReadOnly Property GetPassword As String
  overload: Winpeak.Client.Networking.WebServer.IGameServerInfo.GetPassword*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Winpeak.Client.Networking.WebServer.IGameServerInfo.GetGameNetwork
  commentId: P:Winpeak.Client.Networking.WebServer.IGameServerInfo.GetGameNetwork
  id: GetGameNetwork
  parent: Winpeak.Client.Networking.WebServer.IGameServerInfo
  langs:
  - csharp
  - vb
  name: GetGameNetwork
  nameWithType: IGameServerInfo.GetGameNetwork
  fullName: Winpeak.Client.Networking.WebServer.IGameServerInfo.GetGameNetwork
  type: Property
  source:
    id: GetGameNetwork
    path: ''
    startLine: 3967
  assemblies:
  - cs.temp.dll
  namespace: Winpeak.Client.Networking.WebServer
  syntax:
    content: List<GameServerNetwork> GetGameNetwork { get; }
    parameters: []
    return:
      type: System.Collections.Generic.List{Winpeak.Client.Networking.WebServer.GameServerNetwork}
    content.vb: ReadOnly Property GetGameNetwork As List(Of GameServerNetwork)
  overload: Winpeak.Client.Networking.WebServer.IGameServerInfo.GetGameNetwork*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
references:
- uid: Winpeak.Client.Networking.WebServer
  commentId: N:Winpeak.Client.Networking.WebServer
  name: Winpeak.Client.Networking.WebServer
  nameWithType: Winpeak.Client.Networking.WebServer
  fullName: Winpeak.Client.Networking.WebServer
- uid: Winpeak.Client.Networking.WebServer.IGameServerInfo.GetLogin*
  commentId: Overload:Winpeak.Client.Networking.WebServer.IGameServerInfo.GetLogin
  name: GetLogin
  nameWithType: IGameServerInfo.GetLogin
  fullName: Winpeak.Client.Networking.WebServer.IGameServerInfo.GetLogin
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Winpeak.Client.Networking.WebServer.IGameServerInfo.GetPassword*
  commentId: Overload:Winpeak.Client.Networking.WebServer.IGameServerInfo.GetPassword
  name: GetPassword
  nameWithType: IGameServerInfo.GetPassword
  fullName: Winpeak.Client.Networking.WebServer.IGameServerInfo.GetPassword
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Winpeak.Client.Networking.WebServer.IGameServerInfo.GetGameNetwork*
  commentId: Overload:Winpeak.Client.Networking.WebServer.IGameServerInfo.GetGameNetwork
  name: GetGameNetwork
  nameWithType: IGameServerInfo.GetGameNetwork
  fullName: Winpeak.Client.Networking.WebServer.IGameServerInfo.GetGameNetwork
- uid: System.Collections.Generic.List{Winpeak.Client.Networking.WebServer.GameServerNetwork}
  commentId: T:System.Collections.Generic.List{Winpeak.Client.Networking.WebServer.GameServerNetwork}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<GameServerNetwork>
  nameWithType: List<GameServerNetwork>
  fullName: System.Collections.Generic.List<Winpeak.Client.Networking.WebServer.GameServerNetwork>
  nameWithType.vb: List(Of GameServerNetwork)
  fullName.vb: System.Collections.Generic.List(Of Winpeak.Client.Networking.WebServer.GameServerNetwork)
  name.vb: List(Of GameServerNetwork)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Winpeak.Client.Networking.WebServer.GameServerNetwork
    name: GameServerNetwork
    nameWithType: GameServerNetwork
    fullName: Winpeak.Client.Networking.WebServer.GameServerNetwork
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Winpeak.Client.Networking.WebServer.GameServerNetwork
    name: GameServerNetwork
    nameWithType: GameServerNetwork
    fullName: Winpeak.Client.Networking.WebServer.GameServerNetwork
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
