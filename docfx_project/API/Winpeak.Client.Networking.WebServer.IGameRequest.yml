### YamlMime:ManagedReference
items:
- uid: Winpeak.Client.Networking.WebServer.IGameRequest
  commentId: T:Winpeak.Client.Networking.WebServer.IGameRequest
  id: IGameRequest
  parent: Winpeak.Client.Networking.WebServer
  children:
  - Winpeak.Client.Networking.WebServer.IGameRequest.GetGameUserInfo
  - Winpeak.Client.Networking.WebServer.IGameRequest.GetRequestState
  - Winpeak.Client.Networking.WebServer.IGameRequest.GetRequestStatusUpdateTime
  langs:
  - csharp
  - vb
  name: IGameRequest
  nameWithType: IGameRequest
  fullName: Winpeak.Client.Networking.WebServer.IGameRequest
  type: Interface
  source:
    id: IGameRequest
    path: ''
    startLine: 5120
  assemblies:
  - cs.temp.dll
  namespace: Winpeak.Client.Networking.WebServer
  syntax:
    content: public interface IGameRequest
    content.vb: Public Interface IGameRequest
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Winpeak.Client.Networking.WebServer.IGameRequest.GetRequestState
  commentId: P:Winpeak.Client.Networking.WebServer.IGameRequest.GetRequestState
  id: GetRequestState
  parent: Winpeak.Client.Networking.WebServer.IGameRequest
  langs:
  - csharp
  - vb
  name: GetRequestState
  nameWithType: IGameRequest.GetRequestState
  fullName: Winpeak.Client.Networking.WebServer.IGameRequest.GetRequestState
  type: Property
  source:
    id: GetRequestState
    path: ''
    startLine: 5122
  assemblies:
  - cs.temp.dll
  namespace: Winpeak.Client.Networking.WebServer
  syntax:
    content: int GetRequestState { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: ReadOnly Property GetRequestState As Integer
  overload: Winpeak.Client.Networking.WebServer.IGameRequest.GetRequestState*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Winpeak.Client.Networking.WebServer.IGameRequest.GetRequestStatusUpdateTime
  commentId: P:Winpeak.Client.Networking.WebServer.IGameRequest.GetRequestStatusUpdateTime
  id: GetRequestStatusUpdateTime
  parent: Winpeak.Client.Networking.WebServer.IGameRequest
  langs:
  - csharp
  - vb
  name: GetRequestStatusUpdateTime
  nameWithType: IGameRequest.GetRequestStatusUpdateTime
  fullName: Winpeak.Client.Networking.WebServer.IGameRequest.GetRequestStatusUpdateTime
  type: Property
  source:
    id: GetRequestStatusUpdateTime
    path: ''
    startLine: 5123
  assemblies:
  - cs.temp.dll
  namespace: Winpeak.Client.Networking.WebServer
  syntax:
    content: long GetRequestStatusUpdateTime { get; }
    parameters: []
    return:
      type: System.Int64
    content.vb: ReadOnly Property GetRequestStatusUpdateTime As Long
  overload: Winpeak.Client.Networking.WebServer.IGameRequest.GetRequestStatusUpdateTime*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Winpeak.Client.Networking.WebServer.IGameRequest.GetGameUserInfo
  commentId: P:Winpeak.Client.Networking.WebServer.IGameRequest.GetGameUserInfo
  id: GetGameUserInfo
  parent: Winpeak.Client.Networking.WebServer.IGameRequest
  langs:
  - csharp
  - vb
  name: GetGameUserInfo
  nameWithType: IGameRequest.GetGameUserInfo
  fullName: Winpeak.Client.Networking.WebServer.IGameRequest.GetGameUserInfo
  type: Property
  source:
    id: GetGameUserInfo
    path: ''
    startLine: 5124
  assemblies:
  - cs.temp.dll
  namespace: Winpeak.Client.Networking.WebServer
  syntax:
    content: IAccount GetGameUserInfo { get; }
    parameters: []
    return:
      type: Winpeak.Client.Networking.WebServer.IAccount
    content.vb: ReadOnly Property GetGameUserInfo As IAccount
  overload: Winpeak.Client.Networking.WebServer.IGameRequest.GetGameUserInfo*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
references:
- uid: Winpeak.Client.Networking.WebServer
  commentId: N:Winpeak.Client.Networking.WebServer
  name: Winpeak.Client.Networking.WebServer
  nameWithType: Winpeak.Client.Networking.WebServer
  fullName: Winpeak.Client.Networking.WebServer
- uid: Winpeak.Client.Networking.WebServer.IGameRequest.GetRequestState*
  commentId: Overload:Winpeak.Client.Networking.WebServer.IGameRequest.GetRequestState
  name: GetRequestState
  nameWithType: IGameRequest.GetRequestState
  fullName: Winpeak.Client.Networking.WebServer.IGameRequest.GetRequestState
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Winpeak.Client.Networking.WebServer.IGameRequest.GetRequestStatusUpdateTime*
  commentId: Overload:Winpeak.Client.Networking.WebServer.IGameRequest.GetRequestStatusUpdateTime
  name: GetRequestStatusUpdateTime
  nameWithType: IGameRequest.GetRequestStatusUpdateTime
  fullName: Winpeak.Client.Networking.WebServer.IGameRequest.GetRequestStatusUpdateTime
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: Winpeak.Client.Networking.WebServer.IGameRequest.GetGameUserInfo*
  commentId: Overload:Winpeak.Client.Networking.WebServer.IGameRequest.GetGameUserInfo
  name: GetGameUserInfo
  nameWithType: IGameRequest.GetGameUserInfo
  fullName: Winpeak.Client.Networking.WebServer.IGameRequest.GetGameUserInfo
- uid: Winpeak.Client.Networking.WebServer.IAccount
  commentId: T:Winpeak.Client.Networking.WebServer.IAccount
  parent: Winpeak.Client.Networking.WebServer
  name: IAccount
  nameWithType: IAccount
  fullName: Winpeak.Client.Networking.WebServer.IAccount
