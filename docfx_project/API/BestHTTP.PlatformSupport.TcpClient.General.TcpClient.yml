### YamlMime:ManagedReference
items:
- uid: BestHTTP.PlatformSupport.TcpClient.General.TcpClient
  commentId: T:BestHTTP.PlatformSupport.TcpClient.General.TcpClient
  id: TcpClient
  parent: BestHTTP.PlatformSupport.TcpClient.General
  children:
  - BestHTTP.PlatformSupport.TcpClient.General.TcpClient.#ctor
  - BestHTTP.PlatformSupport.TcpClient.General.TcpClient.#ctor(AddressFamily)
  - BestHTTP.PlatformSupport.TcpClient.General.TcpClient.#ctor(IPEndPoint)
  - BestHTTP.PlatformSupport.TcpClient.General.TcpClient.#ctor(System.String,System.Int32)
  - BestHTTP.PlatformSupport.TcpClient.General.TcpClient.Active
  - BestHTTP.PlatformSupport.TcpClient.General.TcpClient.Available
  - BestHTTP.PlatformSupport.TcpClient.General.TcpClient.BeginConnect(IPAddress,System.Int32,System.AsyncCallback,System.Object)
  - BestHTTP.PlatformSupport.TcpClient.General.TcpClient.BeginConnect(IPAddress[],System.Int32,System.AsyncCallback,System.Object)
  - BestHTTP.PlatformSupport.TcpClient.General.TcpClient.BeginConnect(System.String,System.Int32,System.AsyncCallback,System.Object)
  - BestHTTP.PlatformSupport.TcpClient.General.TcpClient.Client
  - BestHTTP.PlatformSupport.TcpClient.General.TcpClient.Close
  - BestHTTP.PlatformSupport.TcpClient.General.TcpClient.Connect(IPAddress,System.Int32)
  - BestHTTP.PlatformSupport.TcpClient.General.TcpClient.Connect(IPAddress[],System.Int32)
  - BestHTTP.PlatformSupport.TcpClient.General.TcpClient.Connect(IPEndPoint)
  - BestHTTP.PlatformSupport.TcpClient.General.TcpClient.Connect(System.String,System.Int32)
  - BestHTTP.PlatformSupport.TcpClient.General.TcpClient.Connected
  - BestHTTP.PlatformSupport.TcpClient.General.TcpClient.ConnectTimeout
  - BestHTTP.PlatformSupport.TcpClient.General.TcpClient.Dispose(System.Boolean)
  - BestHTTP.PlatformSupport.TcpClient.General.TcpClient.EndConnect(System.IAsyncResult)
  - BestHTTP.PlatformSupport.TcpClient.General.TcpClient.ExclusiveAddressUse
  - BestHTTP.PlatformSupport.TcpClient.General.TcpClient.Finalize
  - BestHTTP.PlatformSupport.TcpClient.General.TcpClient.GetStream
  - BestHTTP.PlatformSupport.TcpClient.General.TcpClient.IsConnected
  - BestHTTP.PlatformSupport.TcpClient.General.TcpClient.LingerState
  - BestHTTP.PlatformSupport.TcpClient.General.TcpClient.NoDelay
  - BestHTTP.PlatformSupport.TcpClient.General.TcpClient.ReceiveBufferSize
  - BestHTTP.PlatformSupport.TcpClient.General.TcpClient.ReceiveTimeout
  - BestHTTP.PlatformSupport.TcpClient.General.TcpClient.SendBufferSize
  - BestHTTP.PlatformSupport.TcpClient.General.TcpClient.SendTimeout
  - BestHTTP.PlatformSupport.TcpClient.General.TcpClient.System#IDisposable#Dispose
  langs:
  - csharp
  - vb
  name: TcpClient
  nameWithType: TcpClient
  fullName: BestHTTP.PlatformSupport.TcpClient.General.TcpClient
  type: Class
  source:
    id: TcpClient
    path: ''
    startLine: 22965
  assemblies:
  - cs.temp.dll
  namespace: BestHTTP.PlatformSupport.TcpClient.General
  syntax:
    content: 'public class TcpClient : IDisposable'
    content.vb: >-
      Public Class TcpClient
          Implements IDisposable
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ToString
  - System.Object.ReferenceEquals(System.Object,System.Object)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: BestHTTP.PlatformSupport.TcpClient.General.TcpClient.#ctor
  commentId: M:BestHTTP.PlatformSupport.TcpClient.General.TcpClient.#ctor
  id: '#ctor'
  parent: BestHTTP.PlatformSupport.TcpClient.General.TcpClient
  langs:
  - csharp
  - vb
  name: TcpClient()
  nameWithType: TcpClient.TcpClient()
  fullName: BestHTTP.PlatformSupport.TcpClient.General.TcpClient.TcpClient()
  type: Constructor
  source:
    id: .ctor
    path: ''
    startLine: 23001
  assemblies:
  - cs.temp.dll
  namespace: BestHTTP.PlatformSupport.TcpClient.General
  syntax:
    content: public TcpClient()
    content.vb: Public Sub New
  overload: BestHTTP.PlatformSupport.TcpClient.General.TcpClient.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: BestHTTP.PlatformSupport.TcpClient.General.TcpClient.#ctor(AddressFamily)
  commentId: M:BestHTTP.PlatformSupport.TcpClient.General.TcpClient.#ctor(AddressFamily)
  id: '#ctor(AddressFamily)'
  parent: BestHTTP.PlatformSupport.TcpClient.General.TcpClient
  langs:
  - csharp
  - vb
  name: TcpClient(AddressFamily)
  nameWithType: TcpClient.TcpClient(AddressFamily)
  fullName: BestHTTP.PlatformSupport.TcpClient.General.TcpClient.TcpClient(AddressFamily)
  type: Constructor
  source:
    id: .ctor
    path: ''
    startLine: 23009
  assemblies:
  - cs.temp.dll
  namespace: BestHTTP.PlatformSupport.TcpClient.General
  syntax:
    content: public TcpClient(AddressFamily family)
    parameters:
    - id: family
      type: AddressFamily
    content.vb: Public Sub New(family As AddressFamily)
  overload: BestHTTP.PlatformSupport.TcpClient.General.TcpClient.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: BestHTTP.PlatformSupport.TcpClient.General.TcpClient.#ctor(IPEndPoint)
  commentId: M:BestHTTP.PlatformSupport.TcpClient.General.TcpClient.#ctor(IPEndPoint)
  id: '#ctor(IPEndPoint)'
  parent: BestHTTP.PlatformSupport.TcpClient.General.TcpClient
  langs:
  - csharp
  - vb
  name: TcpClient(IPEndPoint)
  nameWithType: TcpClient.TcpClient(IPEndPoint)
  fullName: BestHTTP.PlatformSupport.TcpClient.General.TcpClient.TcpClient(IPEndPoint)
  type: Constructor
  source:
    id: .ctor
    path: ''
    startLine: 23026
  assemblies:
  - cs.temp.dll
  namespace: BestHTTP.PlatformSupport.TcpClient.General
  syntax:
    content: public TcpClient(IPEndPoint localEP)
    parameters:
    - id: localEP
      type: IPEndPoint
    content.vb: Public Sub New(localEP As IPEndPoint)
  overload: BestHTTP.PlatformSupport.TcpClient.General.TcpClient.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: BestHTTP.PlatformSupport.TcpClient.General.TcpClient.#ctor(System.String,System.Int32)
  commentId: M:BestHTTP.PlatformSupport.TcpClient.General.TcpClient.#ctor(System.String,System.Int32)
  id: '#ctor(System.String,System.Int32)'
  parent: BestHTTP.PlatformSupport.TcpClient.General.TcpClient
  langs:
  - csharp
  - vb
  name: TcpClient(String, Int32)
  nameWithType: TcpClient.TcpClient(String, Int32)
  fullName: BestHTTP.PlatformSupport.TcpClient.General.TcpClient.TcpClient(System.String, System.Int32)
  type: Constructor
  source:
    id: .ctor
    path: ''
    startLine: 23034
  assemblies:
  - cs.temp.dll
  namespace: BestHTTP.PlatformSupport.TcpClient.General
  syntax:
    content: public TcpClient(string hostname, int port)
    parameters:
    - id: hostname
      type: System.String
    - id: port
      type: System.Int32
    content.vb: Public Sub New(hostname As String, port As Integer)
  overload: BestHTTP.PlatformSupport.TcpClient.General.TcpClient.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: BestHTTP.PlatformSupport.TcpClient.General.TcpClient.Active
  commentId: P:BestHTTP.PlatformSupport.TcpClient.General.TcpClient.Active
  id: Active
  parent: BestHTTP.PlatformSupport.TcpClient.General.TcpClient
  langs:
  - csharp
  - vb
  name: Active
  nameWithType: TcpClient.Active
  fullName: BestHTTP.PlatformSupport.TcpClient.General.TcpClient.Active
  type: Property
  source:
    id: Active
    path: ''
    startLine: 23041
  assemblies:
  - cs.temp.dll
  namespace: BestHTTP.PlatformSupport.TcpClient.General
  syntax:
    content: protected bool Active { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Protected Property Active As Boolean
  overload: BestHTTP.PlatformSupport.TcpClient.General.TcpClient.Active*
  modifiers.csharp:
  - protected
  - get
  - set
  modifiers.vb:
  - Protected
- uid: BestHTTP.PlatformSupport.TcpClient.General.TcpClient.Client
  commentId: P:BestHTTP.PlatformSupport.TcpClient.General.TcpClient.Client
  id: Client
  parent: BestHTTP.PlatformSupport.TcpClient.General.TcpClient
  langs:
  - csharp
  - vb
  name: Client
  nameWithType: TcpClient.Client
  fullName: BestHTTP.PlatformSupport.TcpClient.General.TcpClient.Client
  type: Property
  source:
    id: Client
    path: ''
    startLine: 23047
  assemblies:
  - cs.temp.dll
  namespace: BestHTTP.PlatformSupport.TcpClient.General
  syntax:
    content: public Socket Client { get; set; }
    parameters: []
    return:
      type: Socket
    content.vb: Public Property Client As Socket
  overload: BestHTTP.PlatformSupport.TcpClient.General.TcpClient.Client*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: BestHTTP.PlatformSupport.TcpClient.General.TcpClient.Available
  commentId: P:BestHTTP.PlatformSupport.TcpClient.General.TcpClient.Available
  id: Available
  parent: BestHTTP.PlatformSupport.TcpClient.General.TcpClient
  langs:
  - csharp
  - vb
  name: Available
  nameWithType: TcpClient.Available
  fullName: BestHTTP.PlatformSupport.TcpClient.General.TcpClient.Available
  type: Property
  source:
    id: Available
    path: ''
    startLine: 23057
  assemblies:
  - cs.temp.dll
  namespace: BestHTTP.PlatformSupport.TcpClient.General
  syntax:
    content: public int Available { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property Available As Integer
  overload: BestHTTP.PlatformSupport.TcpClient.General.TcpClient.Available*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: BestHTTP.PlatformSupport.TcpClient.General.TcpClient.Connected
  commentId: P:BestHTTP.PlatformSupport.TcpClient.General.TcpClient.Connected
  id: Connected
  parent: BestHTTP.PlatformSupport.TcpClient.General.TcpClient
  langs:
  - csharp
  - vb
  name: Connected
  nameWithType: TcpClient.Connected
  fullName: BestHTTP.PlatformSupport.TcpClient.General.TcpClient.Connected
  type: Property
  source:
    id: Connected
    path: ''
    startLine: 23062
  assemblies:
  - cs.temp.dll
  namespace: BestHTTP.PlatformSupport.TcpClient.General
  syntax:
    content: public bool Connected { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property Connected As Boolean
  overload: BestHTTP.PlatformSupport.TcpClient.General.TcpClient.Connected*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: BestHTTP.PlatformSupport.TcpClient.General.TcpClient.IsConnected
  commentId: M:BestHTTP.PlatformSupport.TcpClient.General.TcpClient.IsConnected
  id: IsConnected
  parent: BestHTTP.PlatformSupport.TcpClient.General.TcpClient
  langs:
  - csharp
  - vb
  name: IsConnected()
  nameWithType: TcpClient.IsConnected()
  fullName: BestHTTP.PlatformSupport.TcpClient.General.TcpClient.IsConnected()
  type: Method
  source:
    id: IsConnected
    path: ''
    startLine: 23068
  assemblies:
  - cs.temp.dll
  namespace: BestHTTP.PlatformSupport.TcpClient.General
  syntax:
    content: public bool IsConnected()
    return:
      type: System.Boolean
    content.vb: Public Function IsConnected As Boolean
  overload: BestHTTP.PlatformSupport.TcpClient.General.TcpClient.IsConnected*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: BestHTTP.PlatformSupport.TcpClient.General.TcpClient.ExclusiveAddressUse
  commentId: P:BestHTTP.PlatformSupport.TcpClient.General.TcpClient.ExclusiveAddressUse
  id: ExclusiveAddressUse
  parent: BestHTTP.PlatformSupport.TcpClient.General.TcpClient
  langs:
  - csharp
  - vb
  name: ExclusiveAddressUse
  nameWithType: TcpClient.ExclusiveAddressUse
  fullName: BestHTTP.PlatformSupport.TcpClient.General.TcpClient.ExclusiveAddressUse
  type: Property
  source:
    id: ExclusiveAddressUse
    path: ''
    startLine: 23077
  assemblies:
  - cs.temp.dll
  namespace: BestHTTP.PlatformSupport.TcpClient.General
  syntax:
    content: public bool ExclusiveAddressUse { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property ExclusiveAddressUse As Boolean
  overload: BestHTTP.PlatformSupport.TcpClient.General.TcpClient.ExclusiveAddressUse*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: BestHTTP.PlatformSupport.TcpClient.General.TcpClient.LingerState
  commentId: P:BestHTTP.PlatformSupport.TcpClient.General.TcpClient.LingerState
  id: LingerState
  parent: BestHTTP.PlatformSupport.TcpClient.General.TcpClient
  langs:
  - csharp
  - vb
  name: LingerState
  nameWithType: TcpClient.LingerState
  fullName: BestHTTP.PlatformSupport.TcpClient.General.TcpClient.LingerState
  type: Property
  source:
    id: LingerState
    path: ''
    startLine: 23094
  assemblies:
  - cs.temp.dll
  namespace: BestHTTP.PlatformSupport.TcpClient.General
  syntax:
    content: public LingerOption LingerState { get; set; }
    parameters: []
    return:
      type: LingerOption
    content.vb: Public Property LingerState As LingerOption
  overload: BestHTTP.PlatformSupport.TcpClient.General.TcpClient.LingerState*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: BestHTTP.PlatformSupport.TcpClient.General.TcpClient.NoDelay
  commentId: P:BestHTTP.PlatformSupport.TcpClient.General.TcpClient.NoDelay
  id: NoDelay
  parent: BestHTTP.PlatformSupport.TcpClient.General.TcpClient
  langs:
  - csharp
  - vb
  name: NoDelay
  nameWithType: TcpClient.NoDelay
  fullName: BestHTTP.PlatformSupport.TcpClient.General.TcpClient.NoDelay
  type: Property
  source:
    id: NoDelay
    path: ''
    startLine: 23118
  assemblies:
  - cs.temp.dll
  namespace: BestHTTP.PlatformSupport.TcpClient.General
  syntax:
    content: public bool NoDelay { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property NoDelay As Boolean
  overload: BestHTTP.PlatformSupport.TcpClient.General.TcpClient.NoDelay*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: BestHTTP.PlatformSupport.TcpClient.General.TcpClient.ReceiveBufferSize
  commentId: P:BestHTTP.PlatformSupport.TcpClient.General.TcpClient.ReceiveBufferSize
  id: ReceiveBufferSize
  parent: BestHTTP.PlatformSupport.TcpClient.General.TcpClient
  langs:
  - csharp
  - vb
  name: ReceiveBufferSize
  nameWithType: TcpClient.ReceiveBufferSize
  fullName: BestHTTP.PlatformSupport.TcpClient.General.TcpClient.ReceiveBufferSize
  type: Property
  source:
    id: ReceiveBufferSize
    path: ''
    startLine: 23143
  assemblies:
  - cs.temp.dll
  namespace: BestHTTP.PlatformSupport.TcpClient.General
  syntax:
    content: public int ReceiveBufferSize { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property ReceiveBufferSize As Integer
  overload: BestHTTP.PlatformSupport.TcpClient.General.TcpClient.ReceiveBufferSize*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: BestHTTP.PlatformSupport.TcpClient.General.TcpClient.ReceiveTimeout
  commentId: P:BestHTTP.PlatformSupport.TcpClient.General.TcpClient.ReceiveTimeout
  id: ReceiveTimeout
  parent: BestHTTP.PlatformSupport.TcpClient.General.TcpClient
  langs:
  - csharp
  - vb
  name: ReceiveTimeout
  nameWithType: TcpClient.ReceiveTimeout
  fullName: BestHTTP.PlatformSupport.TcpClient.General.TcpClient.ReceiveTimeout
  type: Property
  source:
    id: ReceiveTimeout
    path: ''
    startLine: 23168
  assemblies:
  - cs.temp.dll
  namespace: BestHTTP.PlatformSupport.TcpClient.General
  syntax:
    content: public int ReceiveTimeout { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property ReceiveTimeout As Integer
  overload: BestHTTP.PlatformSupport.TcpClient.General.TcpClient.ReceiveTimeout*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: BestHTTP.PlatformSupport.TcpClient.General.TcpClient.SendBufferSize
  commentId: P:BestHTTP.PlatformSupport.TcpClient.General.TcpClient.SendBufferSize
  id: SendBufferSize
  parent: BestHTTP.PlatformSupport.TcpClient.General.TcpClient
  langs:
  - csharp
  - vb
  name: SendBufferSize
  nameWithType: TcpClient.SendBufferSize
  fullName: BestHTTP.PlatformSupport.TcpClient.General.TcpClient.SendBufferSize
  type: Property
  source:
    id: SendBufferSize
    path: ''
    startLine: 23193
  assemblies:
  - cs.temp.dll
  namespace: BestHTTP.PlatformSupport.TcpClient.General
  syntax:
    content: public int SendBufferSize { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property SendBufferSize As Integer
  overload: BestHTTP.PlatformSupport.TcpClient.General.TcpClient.SendBufferSize*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: BestHTTP.PlatformSupport.TcpClient.General.TcpClient.SendTimeout
  commentId: P:BestHTTP.PlatformSupport.TcpClient.General.TcpClient.SendTimeout
  id: SendTimeout
  parent: BestHTTP.PlatformSupport.TcpClient.General.TcpClient
  langs:
  - csharp
  - vb
  name: SendTimeout
  nameWithType: TcpClient.SendTimeout
  fullName: BestHTTP.PlatformSupport.TcpClient.General.TcpClient.SendTimeout
  type: Property
  source:
    id: SendTimeout
    path: ''
    startLine: 23218
  assemblies:
  - cs.temp.dll
  namespace: BestHTTP.PlatformSupport.TcpClient.General
  syntax:
    content: public int SendTimeout { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property SendTimeout As Integer
  overload: BestHTTP.PlatformSupport.TcpClient.General.TcpClient.SendTimeout*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: BestHTTP.PlatformSupport.TcpClient.General.TcpClient.ConnectTimeout
  commentId: P:BestHTTP.PlatformSupport.TcpClient.General.TcpClient.ConnectTimeout
  id: ConnectTimeout
  parent: BestHTTP.PlatformSupport.TcpClient.General.TcpClient
  langs:
  - csharp
  - vb
  name: ConnectTimeout
  nameWithType: TcpClient.ConnectTimeout
  fullName: BestHTTP.PlatformSupport.TcpClient.General.TcpClient.ConnectTimeout
  type: Property
  source:
    id: ConnectTimeout
    path: ''
    startLine: 23243
  assemblies:
  - cs.temp.dll
  namespace: BestHTTP.PlatformSupport.TcpClient.General
  syntax:
    content: public TimeSpan ConnectTimeout { get; set; }
    parameters: []
    return:
      type: System.TimeSpan
    content.vb: Public Property ConnectTimeout As TimeSpan
  overload: BestHTTP.PlatformSupport.TcpClient.General.TcpClient.ConnectTimeout*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: BestHTTP.PlatformSupport.TcpClient.General.TcpClient.Close
  commentId: M:BestHTTP.PlatformSupport.TcpClient.General.TcpClient.Close
  id: Close
  parent: BestHTTP.PlatformSupport.TcpClient.General.TcpClient
  langs:
  - csharp
  - vb
  name: Close()
  nameWithType: TcpClient.Close()
  fullName: BestHTTP.PlatformSupport.TcpClient.General.TcpClient.Close()
  type: Method
  source:
    id: Close
    path: ''
    startLine: 23247
  assemblies:
  - cs.temp.dll
  namespace: BestHTTP.PlatformSupport.TcpClient.General
  syntax:
    content: public void Close()
    content.vb: Public Sub Close
  overload: BestHTTP.PlatformSupport.TcpClient.General.TcpClient.Close*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: BestHTTP.PlatformSupport.TcpClient.General.TcpClient.Connect(IPEndPoint)
  commentId: M:BestHTTP.PlatformSupport.TcpClient.General.TcpClient.Connect(IPEndPoint)
  id: Connect(IPEndPoint)
  parent: BestHTTP.PlatformSupport.TcpClient.General.TcpClient
  langs:
  - csharp
  - vb
  name: Connect(IPEndPoint)
  nameWithType: TcpClient.Connect(IPEndPoint)
  fullName: BestHTTP.PlatformSupport.TcpClient.General.TcpClient.Connect(IPEndPoint)
  type: Method
  source:
    id: Connect
    path: ''
    startLine: 23252
  assemblies:
  - cs.temp.dll
  namespace: BestHTTP.PlatformSupport.TcpClient.General
  syntax:
    content: public void Connect(IPEndPoint remoteEP)
    parameters:
    - id: remoteEP
      type: IPEndPoint
    content.vb: Public Sub Connect(remoteEP As IPEndPoint)
  overload: BestHTTP.PlatformSupport.TcpClient.General.TcpClient.Connect*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: BestHTTP.PlatformSupport.TcpClient.General.TcpClient.Connect(IPAddress,System.Int32)
  commentId: M:BestHTTP.PlatformSupport.TcpClient.General.TcpClient.Connect(IPAddress,System.Int32)
  id: Connect(IPAddress,System.Int32)
  parent: BestHTTP.PlatformSupport.TcpClient.General.TcpClient
  langs:
  - csharp
  - vb
  name: Connect(IPAddress, Int32)
  nameWithType: TcpClient.Connect(IPAddress, Int32)
  fullName: BestHTTP.PlatformSupport.TcpClient.General.TcpClient.Connect(IPAddress, System.Int32)
  type: Method
  source:
    id: Connect
    path: ''
    startLine: 23304
  assemblies:
  - cs.temp.dll
  namespace: BestHTTP.PlatformSupport.TcpClient.General
  syntax:
    content: public void Connect(IPAddress address, int port)
    parameters:
    - id: address
      type: IPAddress
    - id: port
      type: System.Int32
    content.vb: Public Sub Connect(address As IPAddress, port As Integer)
  overload: BestHTTP.PlatformSupport.TcpClient.General.TcpClient.Connect*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: BestHTTP.PlatformSupport.TcpClient.General.TcpClient.Connect(System.String,System.Int32)
  commentId: M:BestHTTP.PlatformSupport.TcpClient.General.TcpClient.Connect(System.String,System.Int32)
  id: Connect(System.String,System.Int32)
  parent: BestHTTP.PlatformSupport.TcpClient.General.TcpClient
  langs:
  - csharp
  - vb
  name: Connect(String, Int32)
  nameWithType: TcpClient.Connect(String, Int32)
  fullName: BestHTTP.PlatformSupport.TcpClient.General.TcpClient.Connect(System.String, System.Int32)
  type: Method
  source:
    id: Connect
    path: ''
    startLine: 23328
  assemblies:
  - cs.temp.dll
  namespace: BestHTTP.PlatformSupport.TcpClient.General
  syntax:
    content: public void Connect(string hostname, int port)
    parameters:
    - id: hostname
      type: System.String
    - id: port
      type: System.Int32
    content.vb: Public Sub Connect(hostname As String, port As Integer)
  overload: BestHTTP.PlatformSupport.TcpClient.General.TcpClient.Connect*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: BestHTTP.PlatformSupport.TcpClient.General.TcpClient.Connect(IPAddress[],System.Int32)
  commentId: M:BestHTTP.PlatformSupport.TcpClient.General.TcpClient.Connect(IPAddress[],System.Int32)
  id: Connect(IPAddress[],System.Int32)
  parent: BestHTTP.PlatformSupport.TcpClient.General.TcpClient
  langs:
  - csharp
  - vb
  name: Connect(IPAddress[], Int32)
  nameWithType: TcpClient.Connect(IPAddress[], Int32)
  fullName: BestHTTP.PlatformSupport.TcpClient.General.TcpClient.Connect(IPAddress[], System.Int32)
  type: Method
  source:
    id: Connect
    path: ''
    startLine: 23334
  assemblies:
  - cs.temp.dll
  namespace: BestHTTP.PlatformSupport.TcpClient.General
  syntax:
    content: public void Connect(IPAddress[] ipAddresses, int port)
    parameters:
    - id: ipAddresses
      type: IPAddress[]
    - id: port
      type: System.Int32
    content.vb: Public Sub Connect(ipAddresses As IPAddress(), port As Integer)
  overload: BestHTTP.PlatformSupport.TcpClient.General.TcpClient.Connect*
  nameWithType.vb: TcpClient.Connect(IPAddress(), Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: BestHTTP.PlatformSupport.TcpClient.General.TcpClient.Connect(IPAddress(), System.Int32)
  name.vb: Connect(IPAddress(), Int32)
- uid: BestHTTP.PlatformSupport.TcpClient.General.TcpClient.EndConnect(System.IAsyncResult)
  commentId: M:BestHTTP.PlatformSupport.TcpClient.General.TcpClient.EndConnect(System.IAsyncResult)
  id: EndConnect(System.IAsyncResult)
  parent: BestHTTP.PlatformSupport.TcpClient.General.TcpClient
  langs:
  - csharp
  - vb
  name: EndConnect(IAsyncResult)
  nameWithType: TcpClient.EndConnect(IAsyncResult)
  fullName: BestHTTP.PlatformSupport.TcpClient.General.TcpClient.EndConnect(System.IAsyncResult)
  type: Method
  source:
    id: EndConnect
    path: ''
    startLine: 23428
  assemblies:
  - cs.temp.dll
  namespace: BestHTTP.PlatformSupport.TcpClient.General
  syntax:
    content: public void EndConnect(IAsyncResult asyncResult)
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
    content.vb: Public Sub EndConnect(asyncResult As IAsyncResult)
  overload: BestHTTP.PlatformSupport.TcpClient.General.TcpClient.EndConnect*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: BestHTTP.PlatformSupport.TcpClient.General.TcpClient.BeginConnect(IPAddress,System.Int32,System.AsyncCallback,System.Object)
  commentId: M:BestHTTP.PlatformSupport.TcpClient.General.TcpClient.BeginConnect(IPAddress,System.Int32,System.AsyncCallback,System.Object)
  id: BeginConnect(IPAddress,System.Int32,System.AsyncCallback,System.Object)
  parent: BestHTTP.PlatformSupport.TcpClient.General.TcpClient
  langs:
  - csharp
  - vb
  name: BeginConnect(IPAddress, Int32, AsyncCallback, Object)
  nameWithType: TcpClient.BeginConnect(IPAddress, Int32, AsyncCallback, Object)
  fullName: BestHTTP.PlatformSupport.TcpClient.General.TcpClient.BeginConnect(IPAddress, System.Int32, System.AsyncCallback, System.Object)
  type: Method
  source:
    id: BeginConnect
    path: ''
    startLine: 23433
  assemblies:
  - cs.temp.dll
  namespace: BestHTTP.PlatformSupport.TcpClient.General
  syntax:
    content: public IAsyncResult BeginConnect(IPAddress address, int port, AsyncCallback requestCallback, object state)
    parameters:
    - id: address
      type: IPAddress
    - id: port
      type: System.Int32
    - id: requestCallback
      type: System.AsyncCallback
    - id: state
      type: System.Object
    return:
      type: System.IAsyncResult
    content.vb: Public Function BeginConnect(address As IPAddress, port As Integer, requestCallback As AsyncCallback, state As Object) As IAsyncResult
  overload: BestHTTP.PlatformSupport.TcpClient.General.TcpClient.BeginConnect*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: BestHTTP.PlatformSupport.TcpClient.General.TcpClient.BeginConnect(IPAddress[],System.Int32,System.AsyncCallback,System.Object)
  commentId: M:BestHTTP.PlatformSupport.TcpClient.General.TcpClient.BeginConnect(IPAddress[],System.Int32,System.AsyncCallback,System.Object)
  id: BeginConnect(IPAddress[],System.Int32,System.AsyncCallback,System.Object)
  parent: BestHTTP.PlatformSupport.TcpClient.General.TcpClient
  langs:
  - csharp
  - vb
  name: BeginConnect(IPAddress[], Int32, AsyncCallback, Object)
  nameWithType: TcpClient.BeginConnect(IPAddress[], Int32, AsyncCallback, Object)
  fullName: BestHTTP.PlatformSupport.TcpClient.General.TcpClient.BeginConnect(IPAddress[], System.Int32, System.AsyncCallback, System.Object)
  type: Method
  source:
    id: BeginConnect
    path: ''
    startLine: 23438
  assemblies:
  - cs.temp.dll
  namespace: BestHTTP.PlatformSupport.TcpClient.General
  syntax:
    content: public IAsyncResult BeginConnect(IPAddress[] addresses, int port, AsyncCallback requestCallback, object state)
    parameters:
    - id: addresses
      type: IPAddress[]
    - id: port
      type: System.Int32
    - id: requestCallback
      type: System.AsyncCallback
    - id: state
      type: System.Object
    return:
      type: System.IAsyncResult
    content.vb: Public Function BeginConnect(addresses As IPAddress(), port As Integer, requestCallback As AsyncCallback, state As Object) As IAsyncResult
  overload: BestHTTP.PlatformSupport.TcpClient.General.TcpClient.BeginConnect*
  nameWithType.vb: TcpClient.BeginConnect(IPAddress(), Int32, AsyncCallback, Object)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: BestHTTP.PlatformSupport.TcpClient.General.TcpClient.BeginConnect(IPAddress(), System.Int32, System.AsyncCallback, System.Object)
  name.vb: BeginConnect(IPAddress(), Int32, AsyncCallback, Object)
- uid: BestHTTP.PlatformSupport.TcpClient.General.TcpClient.BeginConnect(System.String,System.Int32,System.AsyncCallback,System.Object)
  commentId: M:BestHTTP.PlatformSupport.TcpClient.General.TcpClient.BeginConnect(System.String,System.Int32,System.AsyncCallback,System.Object)
  id: BeginConnect(System.String,System.Int32,System.AsyncCallback,System.Object)
  parent: BestHTTP.PlatformSupport.TcpClient.General.TcpClient
  langs:
  - csharp
  - vb
  name: BeginConnect(String, Int32, AsyncCallback, Object)
  nameWithType: TcpClient.BeginConnect(String, Int32, AsyncCallback, Object)
  fullName: BestHTTP.PlatformSupport.TcpClient.General.TcpClient.BeginConnect(System.String, System.Int32, System.AsyncCallback, System.Object)
  type: Method
  source:
    id: BeginConnect
    path: ''
    startLine: 23443
  assemblies:
  - cs.temp.dll
  namespace: BestHTTP.PlatformSupport.TcpClient.General
  syntax:
    content: public IAsyncResult BeginConnect(string host, int port, AsyncCallback requestCallback, object state)
    parameters:
    - id: host
      type: System.String
    - id: port
      type: System.Int32
    - id: requestCallback
      type: System.AsyncCallback
    - id: state
      type: System.Object
    return:
      type: System.IAsyncResult
    content.vb: Public Function BeginConnect(host As String, port As Integer, requestCallback As AsyncCallback, state As Object) As IAsyncResult
  overload: BestHTTP.PlatformSupport.TcpClient.General.TcpClient.BeginConnect*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: BestHTTP.PlatformSupport.TcpClient.General.TcpClient.System#IDisposable#Dispose
  commentId: M:BestHTTP.PlatformSupport.TcpClient.General.TcpClient.System#IDisposable#Dispose
  id: System#IDisposable#Dispose
  isEii: true
  parent: BestHTTP.PlatformSupport.TcpClient.General.TcpClient
  langs:
  - csharp
  - vb
  name: IDisposable.Dispose()
  nameWithType: TcpClient.IDisposable.Dispose()
  fullName: BestHTTP.PlatformSupport.TcpClient.General.TcpClient.System.IDisposable.Dispose()
  type: Method
  source:
    id: System.IDisposable.Dispose
    path: ''
    startLine: 23448
  assemblies:
  - cs.temp.dll
  namespace: BestHTTP.PlatformSupport.TcpClient.General
  syntax:
    content: void IDisposable.Dispose()
    content.vb: Sub System.IDisposable.Dispose Implements IDisposable.Dispose
  overload: BestHTTP.PlatformSupport.TcpClient.General.TcpClient.System#IDisposable#Dispose*
  implements:
  - System.IDisposable.Dispose
  nameWithType.vb: TcpClient.System.IDisposable.Dispose()
  name.vb: System.IDisposable.Dispose()
- uid: BestHTTP.PlatformSupport.TcpClient.General.TcpClient.Dispose(System.Boolean)
  commentId: M:BestHTTP.PlatformSupport.TcpClient.General.TcpClient.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: BestHTTP.PlatformSupport.TcpClient.General.TcpClient
  langs:
  - csharp
  - vb
  name: Dispose(Boolean)
  nameWithType: TcpClient.Dispose(Boolean)
  fullName: BestHTTP.PlatformSupport.TcpClient.General.TcpClient.Dispose(System.Boolean)
  type: Method
  source:
    id: Dispose
    path: ''
    startLine: 23454
  assemblies:
  - cs.temp.dll
  namespace: BestHTTP.PlatformSupport.TcpClient.General
  syntax:
    content: protected virtual void Dispose(bool disposing)
    parameters:
    - id: disposing
      type: System.Boolean
    content.vb: Protected Overridable Sub Dispose(disposing As Boolean)
  overload: BestHTTP.PlatformSupport.TcpClient.General.TcpClient.Dispose*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: BestHTTP.PlatformSupport.TcpClient.General.TcpClient.Finalize
  commentId: M:BestHTTP.PlatformSupport.TcpClient.General.TcpClient.Finalize
  id: Finalize
  parent: BestHTTP.PlatformSupport.TcpClient.General.TcpClient
  langs:
  - csharp
  - vb
  name: Finalize()
  nameWithType: TcpClient.Finalize()
  fullName: BestHTTP.PlatformSupport.TcpClient.General.TcpClient.Finalize()
  type: Method
  source:
    id: Finalize
    path: ''
    startLine: 23481
  assemblies:
  - cs.temp.dll
  namespace: BestHTTP.PlatformSupport.TcpClient.General
  syntax:
    content: protected void Finalize()
    content.vb: Protected Sub Finalize
  overload: BestHTTP.PlatformSupport.TcpClient.General.TcpClient.Finalize*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BestHTTP.PlatformSupport.TcpClient.General.TcpClient.GetStream
  commentId: M:BestHTTP.PlatformSupport.TcpClient.General.TcpClient.GetStream
  id: GetStream
  parent: BestHTTP.PlatformSupport.TcpClient.General.TcpClient
  langs:
  - csharp
  - vb
  name: GetStream()
  nameWithType: TcpClient.GetStream()
  fullName: BestHTTP.PlatformSupport.TcpClient.General.TcpClient.GetStream()
  type: Method
  source:
    id: GetStream
    path: ''
    startLine: 23486
  assemblies:
  - cs.temp.dll
  namespace: BestHTTP.PlatformSupport.TcpClient.General
  syntax:
    content: public Stream GetStream()
    return:
      type: Stream
    content.vb: Public Function GetStream As Stream
  overload: BestHTTP.PlatformSupport.TcpClient.General.TcpClient.GetStream*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: BestHTTP.PlatformSupport.TcpClient.General
  commentId: N:BestHTTP.PlatformSupport.TcpClient.General
  name: BestHTTP.PlatformSupport.TcpClient.General
  nameWithType: BestHTTP.PlatformSupport.TcpClient.General
  fullName: BestHTTP.PlatformSupport.TcpClient.General
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: BestHTTP.PlatformSupport.TcpClient.General.TcpClient.#ctor*
  commentId: Overload:BestHTTP.PlatformSupport.TcpClient.General.TcpClient.#ctor
  name: TcpClient
  nameWithType: TcpClient.TcpClient
  fullName: BestHTTP.PlatformSupport.TcpClient.General.TcpClient.TcpClient
- uid: AddressFamily
  commentId: '!:AddressFamily'
  isExternal: true
  name: AddressFamily
  nameWithType: AddressFamily
  fullName: AddressFamily
- uid: IPEndPoint
  isExternal: true
  name: IPEndPoint
  nameWithType: IPEndPoint
  fullName: IPEndPoint
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: BestHTTP.PlatformSupport.TcpClient.General.TcpClient.Active*
  commentId: Overload:BestHTTP.PlatformSupport.TcpClient.General.TcpClient.Active
  name: Active
  nameWithType: TcpClient.Active
  fullName: BestHTTP.PlatformSupport.TcpClient.General.TcpClient.Active
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: BestHTTP.PlatformSupport.TcpClient.General.TcpClient.Client*
  commentId: Overload:BestHTTP.PlatformSupport.TcpClient.General.TcpClient.Client
  name: Client
  nameWithType: TcpClient.Client
  fullName: BestHTTP.PlatformSupport.TcpClient.General.TcpClient.Client
- uid: Socket
  commentId: '!:Socket'
  isExternal: true
  name: Socket
  nameWithType: Socket
  fullName: Socket
- uid: BestHTTP.PlatformSupport.TcpClient.General.TcpClient.Available*
  commentId: Overload:BestHTTP.PlatformSupport.TcpClient.General.TcpClient.Available
  name: Available
  nameWithType: TcpClient.Available
  fullName: BestHTTP.PlatformSupport.TcpClient.General.TcpClient.Available
- uid: BestHTTP.PlatformSupport.TcpClient.General.TcpClient.Connected*
  commentId: Overload:BestHTTP.PlatformSupport.TcpClient.General.TcpClient.Connected
  name: Connected
  nameWithType: TcpClient.Connected
  fullName: BestHTTP.PlatformSupport.TcpClient.General.TcpClient.Connected
- uid: BestHTTP.PlatformSupport.TcpClient.General.TcpClient.IsConnected*
  commentId: Overload:BestHTTP.PlatformSupport.TcpClient.General.TcpClient.IsConnected
  name: IsConnected
  nameWithType: TcpClient.IsConnected
  fullName: BestHTTP.PlatformSupport.TcpClient.General.TcpClient.IsConnected
- uid: BestHTTP.PlatformSupport.TcpClient.General.TcpClient.ExclusiveAddressUse*
  commentId: Overload:BestHTTP.PlatformSupport.TcpClient.General.TcpClient.ExclusiveAddressUse
  name: ExclusiveAddressUse
  nameWithType: TcpClient.ExclusiveAddressUse
  fullName: BestHTTP.PlatformSupport.TcpClient.General.TcpClient.ExclusiveAddressUse
- uid: BestHTTP.PlatformSupport.TcpClient.General.TcpClient.LingerState*
  commentId: Overload:BestHTTP.PlatformSupport.TcpClient.General.TcpClient.LingerState
  name: LingerState
  nameWithType: TcpClient.LingerState
  fullName: BestHTTP.PlatformSupport.TcpClient.General.TcpClient.LingerState
- uid: LingerOption
  commentId: '!:LingerOption'
  isExternal: true
  name: LingerOption
  nameWithType: LingerOption
  fullName: LingerOption
- uid: BestHTTP.PlatformSupport.TcpClient.General.TcpClient.NoDelay*
  commentId: Overload:BestHTTP.PlatformSupport.TcpClient.General.TcpClient.NoDelay
  name: NoDelay
  nameWithType: TcpClient.NoDelay
  fullName: BestHTTP.PlatformSupport.TcpClient.General.TcpClient.NoDelay
- uid: BestHTTP.PlatformSupport.TcpClient.General.TcpClient.ReceiveBufferSize*
  commentId: Overload:BestHTTP.PlatformSupport.TcpClient.General.TcpClient.ReceiveBufferSize
  name: ReceiveBufferSize
  nameWithType: TcpClient.ReceiveBufferSize
  fullName: BestHTTP.PlatformSupport.TcpClient.General.TcpClient.ReceiveBufferSize
- uid: BestHTTP.PlatformSupport.TcpClient.General.TcpClient.ReceiveTimeout*
  commentId: Overload:BestHTTP.PlatformSupport.TcpClient.General.TcpClient.ReceiveTimeout
  name: ReceiveTimeout
  nameWithType: TcpClient.ReceiveTimeout
  fullName: BestHTTP.PlatformSupport.TcpClient.General.TcpClient.ReceiveTimeout
- uid: BestHTTP.PlatformSupport.TcpClient.General.TcpClient.SendBufferSize*
  commentId: Overload:BestHTTP.PlatformSupport.TcpClient.General.TcpClient.SendBufferSize
  name: SendBufferSize
  nameWithType: TcpClient.SendBufferSize
  fullName: BestHTTP.PlatformSupport.TcpClient.General.TcpClient.SendBufferSize
- uid: BestHTTP.PlatformSupport.TcpClient.General.TcpClient.SendTimeout*
  commentId: Overload:BestHTTP.PlatformSupport.TcpClient.General.TcpClient.SendTimeout
  name: SendTimeout
  nameWithType: TcpClient.SendTimeout
  fullName: BestHTTP.PlatformSupport.TcpClient.General.TcpClient.SendTimeout
- uid: BestHTTP.PlatformSupport.TcpClient.General.TcpClient.ConnectTimeout*
  commentId: Overload:BestHTTP.PlatformSupport.TcpClient.General.TcpClient.ConnectTimeout
  name: ConnectTimeout
  nameWithType: TcpClient.ConnectTimeout
  fullName: BestHTTP.PlatformSupport.TcpClient.General.TcpClient.ConnectTimeout
- uid: System.TimeSpan
  commentId: T:System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: BestHTTP.PlatformSupport.TcpClient.General.TcpClient.Close*
  commentId: Overload:BestHTTP.PlatformSupport.TcpClient.General.TcpClient.Close
  name: Close
  nameWithType: TcpClient.Close
  fullName: BestHTTP.PlatformSupport.TcpClient.General.TcpClient.Close
- uid: BestHTTP.PlatformSupport.TcpClient.General.TcpClient.Connect*
  commentId: Overload:BestHTTP.PlatformSupport.TcpClient.General.TcpClient.Connect
  name: Connect
  nameWithType: TcpClient.Connect
  fullName: BestHTTP.PlatformSupport.TcpClient.General.TcpClient.Connect
- uid: IPAddress
  isExternal: true
  name: IPAddress
  nameWithType: IPAddress
  fullName: IPAddress
- uid: IPAddress[]
  isExternal: true
  name: IPAddress[]
  nameWithType: IPAddress[]
  fullName: IPAddress[]
  nameWithType.vb: IPAddress()
  fullName.vb: IPAddress()
  name.vb: IPAddress()
  spec.csharp:
  - uid: IPAddress
    name: IPAddress
    nameWithType: IPAddress
    fullName: IPAddress
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: IPAddress
    name: IPAddress
    nameWithType: IPAddress
    fullName: IPAddress
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: BestHTTP.PlatformSupport.TcpClient.General.TcpClient.EndConnect*
  commentId: Overload:BestHTTP.PlatformSupport.TcpClient.General.TcpClient.EndConnect
  name: EndConnect
  nameWithType: TcpClient.EndConnect
  fullName: BestHTTP.PlatformSupport.TcpClient.General.TcpClient.EndConnect
- uid: System.IAsyncResult
  commentId: T:System.IAsyncResult
  parent: System
  isExternal: true
  name: IAsyncResult
  nameWithType: IAsyncResult
  fullName: System.IAsyncResult
- uid: BestHTTP.PlatformSupport.TcpClient.General.TcpClient.BeginConnect*
  commentId: Overload:BestHTTP.PlatformSupport.TcpClient.General.TcpClient.BeginConnect
  name: BeginConnect
  nameWithType: TcpClient.BeginConnect
  fullName: BestHTTP.PlatformSupport.TcpClient.General.TcpClient.BeginConnect
- uid: System.AsyncCallback
  commentId: T:System.AsyncCallback
  parent: System
  isExternal: true
  name: AsyncCallback
  nameWithType: AsyncCallback
  fullName: System.AsyncCallback
- uid: BestHTTP.PlatformSupport.TcpClient.General.TcpClient.System#IDisposable#Dispose*
  commentId: Overload:BestHTTP.PlatformSupport.TcpClient.General.TcpClient.System#IDisposable#Dispose
  name: IDisposable.Dispose
  nameWithType: TcpClient.IDisposable.Dispose
  fullName: BestHTTP.PlatformSupport.TcpClient.General.TcpClient.System.IDisposable.Dispose
  nameWithType.vb: TcpClient.System.IDisposable.Dispose
  name.vb: System.IDisposable.Dispose
- uid: System.IDisposable.Dispose
  commentId: M:System.IDisposable.Dispose
  parent: System.IDisposable
  isExternal: true
  name: Dispose()
  nameWithType: IDisposable.Dispose()
  fullName: System.IDisposable.Dispose()
  spec.csharp:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: BestHTTP.PlatformSupport.TcpClient.General.TcpClient.Dispose*
  commentId: Overload:BestHTTP.PlatformSupport.TcpClient.General.TcpClient.Dispose
  name: Dispose
  nameWithType: TcpClient.Dispose
  fullName: BestHTTP.PlatformSupport.TcpClient.General.TcpClient.Dispose
- uid: BestHTTP.PlatformSupport.TcpClient.General.TcpClient.Finalize*
  commentId: Overload:BestHTTP.PlatformSupport.TcpClient.General.TcpClient.Finalize
  name: Finalize
  nameWithType: TcpClient.Finalize
  fullName: BestHTTP.PlatformSupport.TcpClient.General.TcpClient.Finalize
- uid: BestHTTP.PlatformSupport.TcpClient.General.TcpClient.GetStream*
  commentId: Overload:BestHTTP.PlatformSupport.TcpClient.General.TcpClient.GetStream
  name: GetStream
  nameWithType: TcpClient.GetStream
  fullName: BestHTTP.PlatformSupport.TcpClient.General.TcpClient.GetStream
- uid: Stream
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: Stream
