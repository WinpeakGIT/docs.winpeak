### YamlMime:ManagedReference
items:
- uid: BestHTTP.JSON.Json
  commentId: T:BestHTTP.JSON.Json
  id: Json
  parent: BestHTTP.JSON
  children:
  - BestHTTP.JSON.Json.Decode(System.String)
  - BestHTTP.JSON.Json.Decode(System.String,System.Boolean@)
  - BestHTTP.JSON.Json.EatWhitespace(System.Char[],System.Int32@)
  - BestHTTP.JSON.Json.Encode(System.Object)
  - BestHTTP.JSON.Json.GetLastIndexOfNumber(System.Char[],System.Int32)
  - BestHTTP.JSON.Json.LookAhead(System.Char[],System.Int32)
  - BestHTTP.JSON.Json.NextToken(System.Char[],System.Int32@)
  - BestHTTP.JSON.Json.ParseArray(System.Char[],System.Int32@,System.Boolean@)
  - BestHTTP.JSON.Json.ParseNumber(System.Char[],System.Int32@,System.Boolean@)
  - BestHTTP.JSON.Json.ParseObject(System.Char[],System.Int32@,System.Boolean@)
  - BestHTTP.JSON.Json.ParseString(System.Char[],System.Int32@,System.Boolean@)
  - BestHTTP.JSON.Json.ParseValue(System.Char[],System.Int32@,System.Boolean@)
  - BestHTTP.JSON.Json.SerializeArray(System.Collections.IList,StringBuilder)
  - BestHTTP.JSON.Json.SerializeNumber(System.Double,StringBuilder)
  - BestHTTP.JSON.Json.SerializeObject(System.Collections.IDictionary,StringBuilder)
  - BestHTTP.JSON.Json.SerializeString(System.String,StringBuilder)
  - BestHTTP.JSON.Json.SerializeValue(System.Object,StringBuilder)
  langs:
  - csharp
  - vb
  name: Json
  nameWithType: Json
  fullName: BestHTTP.JSON.Json
  type: Class
  source:
    id: Json
    path: ''
    startLine: 10113
  assemblies:
  - cs.temp.dll
  namespace: BestHTTP.JSON
  summary: "\nBased on the download from http://techblog.procurios.nl/k/news/view/14605/14863/how-do-i-write-my-own-parser-%28for-json%29.html\nThis class encodes and decodes JSON strings.\nSpec. details, see http://www.json.org/\n\nJSON uses Arrays and Objects. These correspond here to the datatypes List and Dictionary.\nAll numbers are parsed to doubles.\n"
  example: []
  syntax:
    content: public class Json
    content.vb: Public Class Json
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ToString
  - System.Object.ReferenceEquals(System.Object,System.Object)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: BestHTTP.JSON.Json.Decode(System.String)
  commentId: M:BestHTTP.JSON.Json.Decode(System.String)
  id: Decode(System.String)
  parent: BestHTTP.JSON.Json
  langs:
  - csharp
  - vb
  name: Decode(String)
  nameWithType: Json.Decode(String)
  fullName: BestHTTP.JSON.Json.Decode(System.String)
  type: Method
  source:
    id: Decode
    path: ''
    startLine: 10135
  assemblies:
  - cs.temp.dll
  namespace: BestHTTP.JSON
  summary: "\nParses the string json into a value\n"
  example: []
  syntax:
    content: public static object Decode(string json)
    parameters:
    - id: json
      type: System.String
      description: A JSON string.
    return:
      type: System.Object
      description: A List, a Dictionary, a double, a string, null, true, or false
    content.vb: Public Shared Function Decode(json As String) As Object
  overload: BestHTTP.JSON.Json.Decode*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: BestHTTP.JSON.Json.Decode(System.String,System.Boolean@)
  commentId: M:BestHTTP.JSON.Json.Decode(System.String,System.Boolean@)
  id: Decode(System.String,System.Boolean@)
  parent: BestHTTP.JSON.Json
  langs:
  - csharp
  - vb
  name: Decode(String, ref Boolean)
  nameWithType: Json.Decode(String, ref Boolean)
  fullName: BestHTTP.JSON.Json.Decode(System.String, ref System.Boolean)
  type: Method
  source:
    id: Decode
    path: ''
    startLine: 10148
  assemblies:
  - cs.temp.dll
  namespace: BestHTTP.JSON
  summary: "\nParses the string json into a value; and fills &apos;success&apos; with the successfullness of the parse.\n"
  example: []
  syntax:
    content: public static object Decode(string json, ref bool success)
    parameters:
    - id: json
      type: System.String
      description: A JSON string.
    - id: success
      type: System.Boolean
      description: Successful parse?
    return:
      type: System.Object
      description: A List, a Dictionary, a double, a string, null, true, or false
    content.vb: Public Shared Function Decode(json As String, ByRef success As Boolean) As Object
  overload: BestHTTP.JSON.Json.Decode*
  nameWithType.vb: Json.Decode(String, ByRef Boolean)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: BestHTTP.JSON.Json.Decode(System.String, ByRef System.Boolean)
  name.vb: Decode(String, ByRef Boolean)
- uid: BestHTTP.JSON.Json.Encode(System.Object)
  commentId: M:BestHTTP.JSON.Json.Encode(System.Object)
  id: Encode(System.Object)
  parent: BestHTTP.JSON.Json
  langs:
  - csharp
  - vb
  name: Encode(Object)
  nameWithType: Json.Encode(Object)
  fullName: BestHTTP.JSON.Json.Encode(System.Object)
  type: Method
  source:
    id: Encode
    path: ''
    startLine: 10166
  assemblies:
  - cs.temp.dll
  namespace: BestHTTP.JSON
  summary: "\nConverts a Dictionary / List object into a JSON string\n"
  example: []
  syntax:
    content: public static string Encode(object json)
    parameters:
    - id: json
      type: System.Object
      description: A Dictionary / List
    return:
      type: System.String
      description: A JSON encoded string, or null if object &apos;json&apos; is not serializable
    content.vb: Public Shared Function Encode(json As Object) As String
  overload: BestHTTP.JSON.Json.Encode*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: BestHTTP.JSON.Json.ParseObject(System.Char[],System.Int32@,System.Boolean@)
  commentId: M:BestHTTP.JSON.Json.ParseObject(System.Char[],System.Int32@,System.Boolean@)
  id: ParseObject(System.Char[],System.Int32@,System.Boolean@)
  parent: BestHTTP.JSON.Json
  langs:
  - csharp
  - vb
  name: ParseObject(Char[], ref Int32, ref Boolean)
  nameWithType: Json.ParseObject(Char[], ref Int32, ref Boolean)
  fullName: BestHTTP.JSON.Json.ParseObject(System.Char[], ref System.Int32, ref System.Boolean)
  type: Method
  source:
    id: ParseObject
    path: ''
    startLine: 10173
  assemblies:
  - cs.temp.dll
  namespace: BestHTTP.JSON
  syntax:
    content: protected static Dictionary<string, object> ParseObject(char[] json, ref int index, ref bool success)
    parameters:
    - id: json
      type: System.Char[]
    - id: index
      type: System.Int32
    - id: success
      type: System.Boolean
    return:
      type: System.Collections.Generic.Dictionary{System.String,System.Object}
    content.vb: Protected Shared Function ParseObject(json As Char(), ByRef index As Integer, ByRef success As Boolean) As Dictionary(Of String, Object)
  overload: BestHTTP.JSON.Json.ParseObject*
  nameWithType.vb: Json.ParseObject(Char(), ByRef Int32, ByRef Boolean)
  modifiers.csharp:
  - protected
  - static
  modifiers.vb:
  - Protected
  - Shared
  fullName.vb: BestHTTP.JSON.Json.ParseObject(System.Char(), ByRef System.Int32, ByRef System.Boolean)
  name.vb: ParseObject(Char(), ByRef Int32, ByRef Boolean)
- uid: BestHTTP.JSON.Json.ParseArray(System.Char[],System.Int32@,System.Boolean@)
  commentId: M:BestHTTP.JSON.Json.ParseArray(System.Char[],System.Int32@,System.Boolean@)
  id: ParseArray(System.Char[],System.Int32@,System.Boolean@)
  parent: BestHTTP.JSON.Json
  langs:
  - csharp
  - vb
  name: ParseArray(Char[], ref Int32, ref Boolean)
  nameWithType: Json.ParseArray(Char[], ref Int32, ref Boolean)
  fullName: BestHTTP.JSON.Json.ParseArray(System.Char[], ref System.Int32, ref System.Boolean)
  type: Method
  source:
    id: ParseArray
    path: ''
    startLine: 10222
  assemblies:
  - cs.temp.dll
  namespace: BestHTTP.JSON
  syntax:
    content: protected static List<object> ParseArray(char[] json, ref int index, ref bool success)
    parameters:
    - id: json
      type: System.Char[]
    - id: index
      type: System.Int32
    - id: success
      type: System.Boolean
    return:
      type: System.Collections.Generic.List{System.Object}
    content.vb: Protected Shared Function ParseArray(json As Char(), ByRef index As Integer, ByRef success As Boolean) As List(Of Object)
  overload: BestHTTP.JSON.Json.ParseArray*
  nameWithType.vb: Json.ParseArray(Char(), ByRef Int32, ByRef Boolean)
  modifiers.csharp:
  - protected
  - static
  modifiers.vb:
  - Protected
  - Shared
  fullName.vb: BestHTTP.JSON.Json.ParseArray(System.Char(), ByRef System.Int32, ByRef System.Boolean)
  name.vb: ParseArray(Char(), ByRef Int32, ByRef Boolean)
- uid: BestHTTP.JSON.Json.ParseValue(System.Char[],System.Int32@,System.Boolean@)
  commentId: M:BestHTTP.JSON.Json.ParseValue(System.Char[],System.Int32@,System.Boolean@)
  id: ParseValue(System.Char[],System.Int32@,System.Boolean@)
  parent: BestHTTP.JSON.Json
  langs:
  - csharp
  - vb
  name: ParseValue(Char[], ref Int32, ref Boolean)
  nameWithType: Json.ParseValue(Char[], ref Int32, ref Boolean)
  fullName: BestHTTP.JSON.Json.ParseValue(System.Char[], ref System.Int32, ref System.Boolean)
  type: Method
  source:
    id: ParseValue
    path: ''
    startLine: 10253
  assemblies:
  - cs.temp.dll
  namespace: BestHTTP.JSON
  syntax:
    content: protected static object ParseValue(char[] json, ref int index, ref bool success)
    parameters:
    - id: json
      type: System.Char[]
    - id: index
      type: System.Int32
    - id: success
      type: System.Boolean
    return:
      type: System.Object
    content.vb: Protected Shared Function ParseValue(json As Char(), ByRef index As Integer, ByRef success As Boolean) As Object
  overload: BestHTTP.JSON.Json.ParseValue*
  nameWithType.vb: Json.ParseValue(Char(), ByRef Int32, ByRef Boolean)
  modifiers.csharp:
  - protected
  - static
  modifiers.vb:
  - Protected
  - Shared
  fullName.vb: BestHTTP.JSON.Json.ParseValue(System.Char(), ByRef System.Int32, ByRef System.Boolean)
  name.vb: ParseValue(Char(), ByRef Int32, ByRef Boolean)
- uid: BestHTTP.JSON.Json.ParseString(System.Char[],System.Int32@,System.Boolean@)
  commentId: M:BestHTTP.JSON.Json.ParseString(System.Char[],System.Int32@,System.Boolean@)
  id: ParseString(System.Char[],System.Int32@,System.Boolean@)
  parent: BestHTTP.JSON.Json
  langs:
  - csharp
  - vb
  name: ParseString(Char[], ref Int32, ref Boolean)
  nameWithType: Json.ParseString(Char[], ref Int32, ref Boolean)
  fullName: BestHTTP.JSON.Json.ParseString(System.Char[], ref System.Int32, ref System.Boolean)
  type: Method
  source:
    id: ParseString
    path: ''
    startLine: 10281
  assemblies:
  - cs.temp.dll
  namespace: BestHTTP.JSON
  syntax:
    content: protected static string ParseString(char[] json, ref int index, ref bool success)
    parameters:
    - id: json
      type: System.Char[]
    - id: index
      type: System.Int32
    - id: success
      type: System.Boolean
    return:
      type: System.String
    content.vb: Protected Shared Function ParseString(json As Char(), ByRef index As Integer, ByRef success As Boolean) As String
  overload: BestHTTP.JSON.Json.ParseString*
  nameWithType.vb: Json.ParseString(Char(), ByRef Int32, ByRef Boolean)
  modifiers.csharp:
  - protected
  - static
  modifiers.vb:
  - Protected
  - Shared
  fullName.vb: BestHTTP.JSON.Json.ParseString(System.Char(), ByRef System.Int32, ByRef System.Boolean)
  name.vb: ParseString(Char(), ByRef Int32, ByRef Boolean)
- uid: BestHTTP.JSON.Json.ParseNumber(System.Char[],System.Int32@,System.Boolean@)
  commentId: M:BestHTTP.JSON.Json.ParseNumber(System.Char[],System.Int32@,System.Boolean@)
  id: ParseNumber(System.Char[],System.Int32@,System.Boolean@)
  parent: BestHTTP.JSON.Json
  langs:
  - csharp
  - vb
  name: ParseNumber(Char[], ref Int32, ref Boolean)
  nameWithType: Json.ParseNumber(Char[], ref Int32, ref Boolean)
  fullName: BestHTTP.JSON.Json.ParseNumber(System.Char[], ref System.Int32, ref System.Boolean)
  type: Method
  source:
    id: ParseNumber
    path: ''
    startLine: 10355
  assemblies:
  - cs.temp.dll
  namespace: BestHTTP.JSON
  syntax:
    content: protected static double ParseNumber(char[] json, ref int index, ref bool success)
    parameters:
    - id: json
      type: System.Char[]
    - id: index
      type: System.Int32
    - id: success
      type: System.Boolean
    return:
      type: System.Double
    content.vb: Protected Shared Function ParseNumber(json As Char(), ByRef index As Integer, ByRef success As Boolean) As Double
  overload: BestHTTP.JSON.Json.ParseNumber*
  nameWithType.vb: Json.ParseNumber(Char(), ByRef Int32, ByRef Boolean)
  modifiers.csharp:
  - protected
  - static
  modifiers.vb:
  - Protected
  - Shared
  fullName.vb: BestHTTP.JSON.Json.ParseNumber(System.Char(), ByRef System.Int32, ByRef System.Boolean)
  name.vb: ParseNumber(Char(), ByRef Int32, ByRef Boolean)
- uid: BestHTTP.JSON.Json.GetLastIndexOfNumber(System.Char[],System.Int32)
  commentId: M:BestHTTP.JSON.Json.GetLastIndexOfNumber(System.Char[],System.Int32)
  id: GetLastIndexOfNumber(System.Char[],System.Int32)
  parent: BestHTTP.JSON.Json
  langs:
  - csharp
  - vb
  name: GetLastIndexOfNumber(Char[], Int32)
  nameWithType: Json.GetLastIndexOfNumber(Char[], Int32)
  fullName: BestHTTP.JSON.Json.GetLastIndexOfNumber(System.Char[], System.Int32)
  type: Method
  source:
    id: GetLastIndexOfNumber
    path: ''
    startLine: 10369
  assemblies:
  - cs.temp.dll
  namespace: BestHTTP.JSON
  syntax:
    content: protected static int GetLastIndexOfNumber(char[] json, int index)
    parameters:
    - id: json
      type: System.Char[]
    - id: index
      type: System.Int32
    return:
      type: System.Int32
    content.vb: Protected Shared Function GetLastIndexOfNumber(json As Char(), index As Integer) As Integer
  overload: BestHTTP.JSON.Json.GetLastIndexOfNumber*
  nameWithType.vb: Json.GetLastIndexOfNumber(Char(), Int32)
  modifiers.csharp:
  - protected
  - static
  modifiers.vb:
  - Protected
  - Shared
  fullName.vb: BestHTTP.JSON.Json.GetLastIndexOfNumber(System.Char(), System.Int32)
  name.vb: GetLastIndexOfNumber(Char(), Int32)
- uid: BestHTTP.JSON.Json.EatWhitespace(System.Char[],System.Int32@)
  commentId: M:BestHTTP.JSON.Json.EatWhitespace(System.Char[],System.Int32@)
  id: EatWhitespace(System.Char[],System.Int32@)
  parent: BestHTTP.JSON.Json
  langs:
  - csharp
  - vb
  name: EatWhitespace(Char[], ref Int32)
  nameWithType: Json.EatWhitespace(Char[], ref Int32)
  fullName: BestHTTP.JSON.Json.EatWhitespace(System.Char[], ref System.Int32)
  type: Method
  source:
    id: EatWhitespace
    path: ''
    startLine: 10381
  assemblies:
  - cs.temp.dll
  namespace: BestHTTP.JSON
  syntax:
    content: protected static void EatWhitespace(char[] json, ref int index)
    parameters:
    - id: json
      type: System.Char[]
    - id: index
      type: System.Int32
    content.vb: Protected Shared Sub EatWhitespace(json As Char(), ByRef index As Integer)
  overload: BestHTTP.JSON.Json.EatWhitespace*
  nameWithType.vb: Json.EatWhitespace(Char(), ByRef Int32)
  modifiers.csharp:
  - protected
  - static
  modifiers.vb:
  - Protected
  - Shared
  fullName.vb: BestHTTP.JSON.Json.EatWhitespace(System.Char(), ByRef System.Int32)
  name.vb: EatWhitespace(Char(), ByRef Int32)
- uid: BestHTTP.JSON.Json.LookAhead(System.Char[],System.Int32)
  commentId: M:BestHTTP.JSON.Json.LookAhead(System.Char[],System.Int32)
  id: LookAhead(System.Char[],System.Int32)
  parent: BestHTTP.JSON.Json
  langs:
  - csharp
  - vb
  name: LookAhead(Char[], Int32)
  nameWithType: Json.LookAhead(Char[], Int32)
  fullName: BestHTTP.JSON.Json.LookAhead(System.Char[], System.Int32)
  type: Method
  source:
    id: LookAhead
    path: ''
    startLine: 10390
  assemblies:
  - cs.temp.dll
  namespace: BestHTTP.JSON
  syntax:
    content: protected static int LookAhead(char[] json, int index)
    parameters:
    - id: json
      type: System.Char[]
    - id: index
      type: System.Int32
    return:
      type: System.Int32
    content.vb: Protected Shared Function LookAhead(json As Char(), index As Integer) As Integer
  overload: BestHTTP.JSON.Json.LookAhead*
  nameWithType.vb: Json.LookAhead(Char(), Int32)
  modifiers.csharp:
  - protected
  - static
  modifiers.vb:
  - Protected
  - Shared
  fullName.vb: BestHTTP.JSON.Json.LookAhead(System.Char(), System.Int32)
  name.vb: LookAhead(Char(), Int32)
- uid: BestHTTP.JSON.Json.NextToken(System.Char[],System.Int32@)
  commentId: M:BestHTTP.JSON.Json.NextToken(System.Char[],System.Int32@)
  id: NextToken(System.Char[],System.Int32@)
  parent: BestHTTP.JSON.Json
  langs:
  - csharp
  - vb
  name: NextToken(Char[], ref Int32)
  nameWithType: Json.NextToken(Char[], ref Int32)
  fullName: BestHTTP.JSON.Json.NextToken(System.Char[], ref System.Int32)
  type: Method
  source:
    id: NextToken
    path: ''
    startLine: 10396
  assemblies:
  - cs.temp.dll
  namespace: BestHTTP.JSON
  syntax:
    content: protected static int NextToken(char[] json, ref int index)
    parameters:
    - id: json
      type: System.Char[]
    - id: index
      type: System.Int32
    return:
      type: System.Int32
    content.vb: Protected Shared Function NextToken(json As Char(), ByRef index As Integer) As Integer
  overload: BestHTTP.JSON.Json.NextToken*
  nameWithType.vb: Json.NextToken(Char(), ByRef Int32)
  modifiers.csharp:
  - protected
  - static
  modifiers.vb:
  - Protected
  - Shared
  fullName.vb: BestHTTP.JSON.Json.NextToken(System.Char(), ByRef System.Int32)
  name.vb: NextToken(Char(), ByRef Int32)
- uid: BestHTTP.JSON.Json.SerializeValue(System.Object,StringBuilder)
  commentId: M:BestHTTP.JSON.Json.SerializeValue(System.Object,StringBuilder)
  id: SerializeValue(System.Object,StringBuilder)
  parent: BestHTTP.JSON.Json
  langs:
  - csharp
  - vb
  name: SerializeValue(Object, StringBuilder)
  nameWithType: Json.SerializeValue(Object, StringBuilder)
  fullName: BestHTTP.JSON.Json.SerializeValue(System.Object, StringBuilder)
  type: Method
  source:
    id: SerializeValue
    path: ''
    startLine: 10467
  assemblies:
  - cs.temp.dll
  namespace: BestHTTP.JSON
  syntax:
    content: protected static bool SerializeValue(object value, StringBuilder builder)
    parameters:
    - id: value
      type: System.Object
    - id: builder
      type: StringBuilder
    return:
      type: System.Boolean
    content.vb: Protected Shared Function SerializeValue(value As Object, builder As StringBuilder) As Boolean
  overload: BestHTTP.JSON.Json.SerializeValue*
  modifiers.csharp:
  - protected
  - static
  modifiers.vb:
  - Protected
  - Shared
- uid: BestHTTP.JSON.Json.SerializeObject(System.Collections.IDictionary,StringBuilder)
  commentId: M:BestHTTP.JSON.Json.SerializeObject(System.Collections.IDictionary,StringBuilder)
  id: SerializeObject(System.Collections.IDictionary,StringBuilder)
  parent: BestHTTP.JSON.Json
  langs:
  - csharp
  - vb
  name: SerializeObject(IDictionary, StringBuilder)
  nameWithType: Json.SerializeObject(IDictionary, StringBuilder)
  fullName: BestHTTP.JSON.Json.SerializeObject(System.Collections.IDictionary, StringBuilder)
  type: Method
  source:
    id: SerializeObject
    path: ''
    startLine: 10492
  assemblies:
  - cs.temp.dll
  namespace: BestHTTP.JSON
  syntax:
    content: protected static bool SerializeObject(IDictionary anObject, StringBuilder builder)
    parameters:
    - id: anObject
      type: System.Collections.IDictionary
    - id: builder
      type: StringBuilder
    return:
      type: System.Boolean
    content.vb: Protected Shared Function SerializeObject(anObject As IDictionary, builder As StringBuilder) As Boolean
  overload: BestHTTP.JSON.Json.SerializeObject*
  modifiers.csharp:
  - protected
  - static
  modifiers.vb:
  - Protected
  - Shared
- uid: BestHTTP.JSON.Json.SerializeArray(System.Collections.IList,StringBuilder)
  commentId: M:BestHTTP.JSON.Json.SerializeArray(System.Collections.IList,StringBuilder)
  id: SerializeArray(System.Collections.IList,StringBuilder)
  parent: BestHTTP.JSON.Json
  langs:
  - csharp
  - vb
  name: SerializeArray(IList, StringBuilder)
  nameWithType: Json.SerializeArray(IList, StringBuilder)
  fullName: BestHTTP.JSON.Json.SerializeArray(System.Collections.IList, StringBuilder)
  type: Method
  source:
    id: SerializeArray
    path: ''
    startLine: 10519
  assemblies:
  - cs.temp.dll
  namespace: BestHTTP.JSON
  syntax:
    content: protected static bool SerializeArray(IList anArray, StringBuilder builder)
    parameters:
    - id: anArray
      type: System.Collections.IList
    - id: builder
      type: StringBuilder
    return:
      type: System.Boolean
    content.vb: Protected Shared Function SerializeArray(anArray As IList, builder As StringBuilder) As Boolean
  overload: BestHTTP.JSON.Json.SerializeArray*
  modifiers.csharp:
  - protected
  - static
  modifiers.vb:
  - Protected
  - Shared
- uid: BestHTTP.JSON.Json.SerializeString(System.String,StringBuilder)
  commentId: M:BestHTTP.JSON.Json.SerializeString(System.String,StringBuilder)
  id: SerializeString(System.String,StringBuilder)
  parent: BestHTTP.JSON.Json
  langs:
  - csharp
  - vb
  name: SerializeString(String, StringBuilder)
  nameWithType: Json.SerializeString(String, StringBuilder)
  fullName: BestHTTP.JSON.Json.SerializeString(System.String, StringBuilder)
  type: Method
  source:
    id: SerializeString
    path: ''
    startLine: 10542
  assemblies:
  - cs.temp.dll
  namespace: BestHTTP.JSON
  syntax:
    content: protected static bool SerializeString(string aString, StringBuilder builder)
    parameters:
    - id: aString
      type: System.String
    - id: builder
      type: StringBuilder
    return:
      type: System.Boolean
    content.vb: Protected Shared Function SerializeString(aString As String, builder As StringBuilder) As Boolean
  overload: BestHTTP.JSON.Json.SerializeString*
  modifiers.csharp:
  - protected
  - static
  modifiers.vb:
  - Protected
  - Shared
- uid: BestHTTP.JSON.Json.SerializeNumber(System.Double,StringBuilder)
  commentId: M:BestHTTP.JSON.Json.SerializeNumber(System.Double,StringBuilder)
  id: SerializeNumber(System.Double,StringBuilder)
  parent: BestHTTP.JSON.Json
  langs:
  - csharp
  - vb
  name: SerializeNumber(Double, StringBuilder)
  nameWithType: Json.SerializeNumber(Double, StringBuilder)
  fullName: BestHTTP.JSON.Json.SerializeNumber(System.Double, StringBuilder)
  type: Method
  source:
    id: SerializeNumber
    path: ''
    startLine: 10577
  assemblies:
  - cs.temp.dll
  namespace: BestHTTP.JSON
  syntax:
    content: protected static bool SerializeNumber(double number, StringBuilder builder)
    parameters:
    - id: number
      type: System.Double
    - id: builder
      type: StringBuilder
    return:
      type: System.Boolean
    content.vb: Protected Shared Function SerializeNumber(number As Double, builder As StringBuilder) As Boolean
  overload: BestHTTP.JSON.Json.SerializeNumber*
  modifiers.csharp:
  - protected
  - static
  modifiers.vb:
  - Protected
  - Shared
references:
- uid: BestHTTP.JSON
  commentId: N:BestHTTP.JSON
  name: BestHTTP.JSON
  nameWithType: BestHTTP.JSON
  fullName: BestHTTP.JSON
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: BestHTTP.JSON.Json.Decode*
  commentId: Overload:BestHTTP.JSON.Json.Decode
  name: Decode
  nameWithType: Json.Decode
  fullName: BestHTTP.JSON.Json.Decode
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: BestHTTP.JSON.Json.Encode*
  commentId: Overload:BestHTTP.JSON.Json.Encode
  name: Encode
  nameWithType: Json.Encode
  fullName: BestHTTP.JSON.Json.Encode
- uid: BestHTTP.JSON.Json.ParseObject*
  commentId: Overload:BestHTTP.JSON.Json.ParseObject
  name: ParseObject
  nameWithType: Json.ParseObject
  fullName: BestHTTP.JSON.Json.ParseObject
- uid: System.Char[]
  isExternal: true
  name: Char[]
  nameWithType: Char[]
  fullName: System.Char[]
  nameWithType.vb: Char()
  fullName.vb: System.Char()
  name.vb: Char()
  spec.csharp:
  - uid: System.Char
    name: Char
    nameWithType: Char
    fullName: System.Char
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Char
    name: Char
    nameWithType: Char
    fullName: System.Char
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Collections.Generic.Dictionary{System.String,System.Object}
  commentId: T:System.Collections.Generic.Dictionary{System.String,System.Object}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  name: Dictionary<String, Object>
  nameWithType: Dictionary<String, Object>
  fullName: System.Collections.Generic.Dictionary<System.String, System.Object>
  nameWithType.vb: Dictionary(Of String, Object)
  fullName.vb: System.Collections.Generic.Dictionary(Of System.String, System.Object)
  name.vb: Dictionary(Of String, Object)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary`2
  commentId: T:System.Collections.Generic.Dictionary`2
  isExternal: true
  name: Dictionary<TKey, TValue>
  nameWithType: Dictionary<TKey, TValue>
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>
  nameWithType.vb: Dictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue)
  name.vb: Dictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: BestHTTP.JSON.Json.ParseArray*
  commentId: Overload:BestHTTP.JSON.Json.ParseArray
  name: ParseArray
  nameWithType: Json.ParseArray
  fullName: BestHTTP.JSON.Json.ParseArray
- uid: System.Collections.Generic.List{System.Object}
  commentId: T:System.Collections.Generic.List{System.Object}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<Object>
  nameWithType: List<Object>
  fullName: System.Collections.Generic.List<System.Object>
  nameWithType.vb: List(Of Object)
  fullName.vb: System.Collections.Generic.List(Of System.Object)
  name.vb: List(Of Object)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: BestHTTP.JSON.Json.ParseValue*
  commentId: Overload:BestHTTP.JSON.Json.ParseValue
  name: ParseValue
  nameWithType: Json.ParseValue
  fullName: BestHTTP.JSON.Json.ParseValue
- uid: BestHTTP.JSON.Json.ParseString*
  commentId: Overload:BestHTTP.JSON.Json.ParseString
  name: ParseString
  nameWithType: Json.ParseString
  fullName: BestHTTP.JSON.Json.ParseString
- uid: BestHTTP.JSON.Json.ParseNumber*
  commentId: Overload:BestHTTP.JSON.Json.ParseNumber
  name: ParseNumber
  nameWithType: Json.ParseNumber
  fullName: BestHTTP.JSON.Json.ParseNumber
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: BestHTTP.JSON.Json.GetLastIndexOfNumber*
  commentId: Overload:BestHTTP.JSON.Json.GetLastIndexOfNumber
  name: GetLastIndexOfNumber
  nameWithType: Json.GetLastIndexOfNumber
  fullName: BestHTTP.JSON.Json.GetLastIndexOfNumber
- uid: BestHTTP.JSON.Json.EatWhitespace*
  commentId: Overload:BestHTTP.JSON.Json.EatWhitespace
  name: EatWhitespace
  nameWithType: Json.EatWhitespace
  fullName: BestHTTP.JSON.Json.EatWhitespace
- uid: BestHTTP.JSON.Json.LookAhead*
  commentId: Overload:BestHTTP.JSON.Json.LookAhead
  name: LookAhead
  nameWithType: Json.LookAhead
  fullName: BestHTTP.JSON.Json.LookAhead
- uid: BestHTTP.JSON.Json.NextToken*
  commentId: Overload:BestHTTP.JSON.Json.NextToken
  name: NextToken
  nameWithType: Json.NextToken
  fullName: BestHTTP.JSON.Json.NextToken
- uid: BestHTTP.JSON.Json.SerializeValue*
  commentId: Overload:BestHTTP.JSON.Json.SerializeValue
  name: SerializeValue
  nameWithType: Json.SerializeValue
  fullName: BestHTTP.JSON.Json.SerializeValue
- uid: StringBuilder
  isExternal: true
  name: StringBuilder
  nameWithType: StringBuilder
  fullName: StringBuilder
- uid: BestHTTP.JSON.Json.SerializeObject*
  commentId: Overload:BestHTTP.JSON.Json.SerializeObject
  name: SerializeObject
  nameWithType: Json.SerializeObject
  fullName: BestHTTP.JSON.Json.SerializeObject
- uid: System.Collections.IDictionary
  commentId: T:System.Collections.IDictionary
  parent: System.Collections
  isExternal: true
  name: IDictionary
  nameWithType: IDictionary
  fullName: System.Collections.IDictionary
- uid: System.Collections
  commentId: N:System.Collections
  isExternal: true
  name: System.Collections
  nameWithType: System.Collections
  fullName: System.Collections
- uid: BestHTTP.JSON.Json.SerializeArray*
  commentId: Overload:BestHTTP.JSON.Json.SerializeArray
  name: SerializeArray
  nameWithType: Json.SerializeArray
  fullName: BestHTTP.JSON.Json.SerializeArray
- uid: System.Collections.IList
  commentId: T:System.Collections.IList
  parent: System.Collections
  isExternal: true
  name: IList
  nameWithType: IList
  fullName: System.Collections.IList
- uid: BestHTTP.JSON.Json.SerializeString*
  commentId: Overload:BestHTTP.JSON.Json.SerializeString
  name: SerializeString
  nameWithType: Json.SerializeString
  fullName: BestHTTP.JSON.Json.SerializeString
- uid: BestHTTP.JSON.Json.SerializeNumber*
  commentId: Overload:BestHTTP.JSON.Json.SerializeNumber
  name: SerializeNumber
  nameWithType: Json.SerializeNumber
  fullName: BestHTTP.JSON.Json.SerializeNumber
