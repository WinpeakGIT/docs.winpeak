### YamlMime:ManagedReference
items:
- uid: Org.BouncyCastle.Crypto.IDerivationFunction
  commentId: T:Org.BouncyCastle.Crypto.IDerivationFunction
  id: IDerivationFunction
  parent: Org.BouncyCastle.Crypto
  children:
  - Org.BouncyCastle.Crypto.IDerivationFunction.Digest
  - Org.BouncyCastle.Crypto.IDerivationFunction.GenerateBytes(System.Byte[],System.Int32,System.Int32)
  - Org.BouncyCastle.Crypto.IDerivationFunction.Init(Org.BouncyCastle.Crypto.IDerivationParameters)
  langs:
  - csharp
  - vb
  name: IDerivationFunction
  nameWithType: IDerivationFunction
  fullName: Org.BouncyCastle.Crypto.IDerivationFunction
  type: Interface
  source:
    id: IDerivationFunction
    path: ''
    startLine: 100054
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto
  example: []
  syntax:
    content: public interface IDerivationFunction
    content.vb: Public Interface IDerivationFunction
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Org.BouncyCastle.Crypto.IDerivationFunction.Init(Org.BouncyCastle.Crypto.IDerivationParameters)
  commentId: M:Org.BouncyCastle.Crypto.IDerivationFunction.Init(Org.BouncyCastle.Crypto.IDerivationParameters)
  id: Init(Org.BouncyCastle.Crypto.IDerivationParameters)
  parent: Org.BouncyCastle.Crypto.IDerivationFunction
  langs:
  - csharp
  - vb
  name: Init(IDerivationParameters)
  nameWithType: IDerivationFunction.Init(IDerivationParameters)
  fullName: Org.BouncyCastle.Crypto.IDerivationFunction.Init(Org.BouncyCastle.Crypto.IDerivationParameters)
  type: Method
  source:
    id: Init
    path: ''
    startLine: 100056
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto
  syntax:
    content: void Init(IDerivationParameters parameters)
    parameters:
    - id: parameters
      type: Org.BouncyCastle.Crypto.IDerivationParameters
    content.vb: Sub Init(parameters As IDerivationParameters)
  overload: Org.BouncyCastle.Crypto.IDerivationFunction.Init*
- uid: Org.BouncyCastle.Crypto.IDerivationFunction.Digest
  commentId: P:Org.BouncyCastle.Crypto.IDerivationFunction.Digest
  id: Digest
  parent: Org.BouncyCastle.Crypto.IDerivationFunction
  langs:
  - csharp
  - vb
  name: Digest
  nameWithType: IDerivationFunction.Digest
  fullName: Org.BouncyCastle.Crypto.IDerivationFunction.Digest
  type: Property
  source:
    id: Digest
    path: ''
    startLine: 100061
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto
  example: []
  syntax:
    content: IDigest Digest { get; }
    parameters: []
    return:
      type: Org.BouncyCastle.Crypto.IDigest
    content.vb: ReadOnly Property Digest As IDigest
  overload: Org.BouncyCastle.Crypto.IDerivationFunction.Digest*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Org.BouncyCastle.Crypto.IDerivationFunction.GenerateBytes(System.Byte[],System.Int32,System.Int32)
  commentId: M:Org.BouncyCastle.Crypto.IDerivationFunction.GenerateBytes(System.Byte[],System.Int32,System.Int32)
  id: GenerateBytes(System.Byte[],System.Int32,System.Int32)
  parent: Org.BouncyCastle.Crypto.IDerivationFunction
  langs:
  - csharp
  - vb
  name: GenerateBytes(Byte[], Int32, Int32)
  nameWithType: IDerivationFunction.GenerateBytes(Byte[], Int32, Int32)
  fullName: Org.BouncyCastle.Crypto.IDerivationFunction.GenerateBytes(System.Byte[], System.Int32, System.Int32)
  type: Method
  source:
    id: GenerateBytes
    path: ''
    startLine: 100066
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto
  syntax:
    content: int GenerateBytes(byte[] output, int outOff, int length)
    parameters:
    - id: output
      type: System.Byte[]
    - id: outOff
      type: System.Int32
    - id: length
      type: System.Int32
    return:
      type: System.Int32
    content.vb: Function GenerateBytes(output As Byte(), outOff As Integer, length As Integer) As Integer
  overload: Org.BouncyCastle.Crypto.IDerivationFunction.GenerateBytes*
  nameWithType.vb: IDerivationFunction.GenerateBytes(Byte(), Int32, Int32)
  fullName.vb: Org.BouncyCastle.Crypto.IDerivationFunction.GenerateBytes(System.Byte(), System.Int32, System.Int32)
  name.vb: GenerateBytes(Byte(), Int32, Int32)
references:
- uid: Org.BouncyCastle.Crypto
  commentId: N:Org.BouncyCastle.Crypto
  name: Org.BouncyCastle.Crypto
  nameWithType: Org.BouncyCastle.Crypto
  fullName: Org.BouncyCastle.Crypto
- uid: Org.BouncyCastle.Crypto.IDerivationFunction.Init*
  commentId: Overload:Org.BouncyCastle.Crypto.IDerivationFunction.Init
  name: Init
  nameWithType: IDerivationFunction.Init
  fullName: Org.BouncyCastle.Crypto.IDerivationFunction.Init
- uid: Org.BouncyCastle.Crypto.IDerivationParameters
  commentId: T:Org.BouncyCastle.Crypto.IDerivationParameters
  parent: Org.BouncyCastle.Crypto
  name: IDerivationParameters
  nameWithType: IDerivationParameters
  fullName: Org.BouncyCastle.Crypto.IDerivationParameters
- uid: Org.BouncyCastle.Crypto.IDerivationFunction.Digest*
  commentId: Overload:Org.BouncyCastle.Crypto.IDerivationFunction.Digest
  name: Digest
  nameWithType: IDerivationFunction.Digest
  fullName: Org.BouncyCastle.Crypto.IDerivationFunction.Digest
- uid: Org.BouncyCastle.Crypto.IDigest
  commentId: T:Org.BouncyCastle.Crypto.IDigest
  parent: Org.BouncyCastle.Crypto
  name: IDigest
  nameWithType: IDigest
  fullName: Org.BouncyCastle.Crypto.IDigest
- uid: Org.BouncyCastle.Crypto.IDerivationFunction.GenerateBytes*
  commentId: Overload:Org.BouncyCastle.Crypto.IDerivationFunction.GenerateBytes
  name: GenerateBytes
  nameWithType: IDerivationFunction.GenerateBytes
  fullName: Org.BouncyCastle.Crypto.IDerivationFunction.GenerateBytes
- uid: System.Byte[]
  isExternal: true
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullName.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
