### YamlMime:ManagedReference
items:
- uid: Org.BouncyCastle.Crypto.Engines.DesEdeEngine
  commentId: T:Org.BouncyCastle.Crypto.Engines.DesEdeEngine
  id: DesEdeEngine
  parent: Org.BouncyCastle.Crypto.Engines
  children:
  - Org.BouncyCastle.Crypto.Engines.DesEdeEngine.AlgorithmName
  - Org.BouncyCastle.Crypto.Engines.DesEdeEngine.GetBlockSize
  - Org.BouncyCastle.Crypto.Engines.DesEdeEngine.Init(System.Boolean,Org.BouncyCastle.Crypto.ICipherParameters)
  - Org.BouncyCastle.Crypto.Engines.DesEdeEngine.ProcessBlock(System.Byte[],System.Int32,System.Byte[],System.Int32)
  - Org.BouncyCastle.Crypto.Engines.DesEdeEngine.Reset
  langs:
  - csharp
  - vb
  name: DesEdeEngine
  nameWithType: DesEdeEngine
  fullName: Org.BouncyCastle.Crypto.Engines.DesEdeEngine
  type: Class
  source:
    id: DesEdeEngine
    path: ''
    startLine: 107061
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Engines
  remarks: A class that provides a basic DESede (or Triple DES) engine.
  example: []
  syntax:
    content: 'public class DesEdeEngine : DesEngine, IBlockCipher'
    content.vb: >-
      Public Class DesEdeEngine
          Inherits DesEngine
          Implements IBlockCipher
  inheritance:
  - System.Object
  - Org.BouncyCastle.Crypto.Engines.DesEngine
  implements:
  - Org.BouncyCastle.Crypto.IBlockCipher
  inheritedMembers:
  - Org.BouncyCastle.Crypto.Engines.DesEngine.GetWorkingKey
  - Org.BouncyCastle.Crypto.Engines.DesEngine.IsPartialBlockOkay
  - Org.BouncyCastle.Crypto.Engines.DesEngine.GenerateWorkingKey(System.Boolean,System.Byte[])
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ToString
  - System.Object.ReferenceEquals(System.Object,System.Object)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Org.BouncyCastle.Crypto.Engines.DesEdeEngine.Init(System.Boolean,Org.BouncyCastle.Crypto.ICipherParameters)
  commentId: M:Org.BouncyCastle.Crypto.Engines.DesEdeEngine.Init(System.Boolean,Org.BouncyCastle.Crypto.ICipherParameters)
  id: Init(System.Boolean,Org.BouncyCastle.Crypto.ICipherParameters)
  parent: Org.BouncyCastle.Crypto.Engines.DesEdeEngine
  langs:
  - csharp
  - vb
  name: Init(Boolean, ICipherParameters)
  nameWithType: DesEdeEngine.Init(Boolean, ICipherParameters)
  fullName: Org.BouncyCastle.Crypto.Engines.DesEdeEngine.Init(System.Boolean, Org.BouncyCastle.Crypto.ICipherParameters)
  type: Method
  source:
    id: Init
    path: ''
    startLine: 107075
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Engines
  example: []
  syntax:
    content: public override void Init(bool forEncryption, ICipherParameters parameters)
    parameters:
    - id: forEncryption
      type: System.Boolean
    - id: parameters
      type: Org.BouncyCastle.Crypto.ICipherParameters
    content.vb: Public Overrides Sub Init(forEncryption As Boolean, parameters As ICipherParameters)
  overridden: Org.BouncyCastle.Crypto.Engines.DesEngine.Init(System.Boolean,Org.BouncyCastle.Crypto.ICipherParameters)
  overload: Org.BouncyCastle.Crypto.Engines.DesEdeEngine.Init*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Org.BouncyCastle.Crypto.Engines.DesEdeEngine.AlgorithmName
  commentId: P:Org.BouncyCastle.Crypto.Engines.DesEdeEngine.AlgorithmName
  id: AlgorithmName
  parent: Org.BouncyCastle.Crypto.Engines.DesEdeEngine
  langs:
  - csharp
  - vb
  name: AlgorithmName
  nameWithType: DesEdeEngine.AlgorithmName
  fullName: Org.BouncyCastle.Crypto.Engines.DesEdeEngine.AlgorithmName
  type: Property
  source:
    id: AlgorithmName
    path: ''
    startLine: 107108
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Engines
  syntax:
    content: public override string AlgorithmName { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Overrides ReadOnly Property AlgorithmName As String
  overridden: Org.BouncyCastle.Crypto.Engines.DesEngine.AlgorithmName
  overload: Org.BouncyCastle.Crypto.Engines.DesEdeEngine.AlgorithmName*
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: Org.BouncyCastle.Crypto.Engines.DesEdeEngine.GetBlockSize
  commentId: M:Org.BouncyCastle.Crypto.Engines.DesEdeEngine.GetBlockSize
  id: GetBlockSize
  parent: Org.BouncyCastle.Crypto.Engines.DesEdeEngine
  langs:
  - csharp
  - vb
  name: GetBlockSize()
  nameWithType: DesEdeEngine.GetBlockSize()
  fullName: Org.BouncyCastle.Crypto.Engines.DesEdeEngine.GetBlockSize()
  type: Method
  source:
    id: GetBlockSize
    path: ''
    startLine: 107113
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Engines
  syntax:
    content: public override int GetBlockSize()
    return:
      type: System.Int32
    content.vb: Public Overrides Function GetBlockSize As Integer
  overridden: Org.BouncyCastle.Crypto.Engines.DesEngine.GetBlockSize
  overload: Org.BouncyCastle.Crypto.Engines.DesEdeEngine.GetBlockSize*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Org.BouncyCastle.Crypto.Engines.DesEdeEngine.ProcessBlock(System.Byte[],System.Int32,System.Byte[],System.Int32)
  commentId: M:Org.BouncyCastle.Crypto.Engines.DesEdeEngine.ProcessBlock(System.Byte[],System.Int32,System.Byte[],System.Int32)
  id: ProcessBlock(System.Byte[],System.Int32,System.Byte[],System.Int32)
  parent: Org.BouncyCastle.Crypto.Engines.DesEdeEngine
  langs:
  - csharp
  - vb
  name: ProcessBlock(Byte[], Int32, Byte[], Int32)
  nameWithType: DesEdeEngine.ProcessBlock(Byte[], Int32, Byte[], Int32)
  fullName: Org.BouncyCastle.Crypto.Engines.DesEdeEngine.ProcessBlock(System.Byte[], System.Int32, System.Byte[], System.Int32)
  type: Method
  source:
    id: ProcessBlock
    path: ''
    startLine: 107118
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Engines
  syntax:
    content: public override int ProcessBlock(byte[] input, int inOff, byte[] output, int outOff)
    parameters:
    - id: input
      type: System.Byte[]
    - id: inOff
      type: System.Int32
    - id: output
      type: System.Byte[]
    - id: outOff
      type: System.Int32
    return:
      type: System.Int32
    content.vb: Public Overrides Function ProcessBlock(input As Byte(), inOff As Integer, output As Byte(), outOff As Integer) As Integer
  overridden: Org.BouncyCastle.Crypto.Engines.DesEngine.ProcessBlock(System.Byte[],System.Int32,System.Byte[],System.Int32)
  overload: Org.BouncyCastle.Crypto.Engines.DesEdeEngine.ProcessBlock*
  nameWithType.vb: DesEdeEngine.ProcessBlock(Byte(), Int32, Byte(), Int32)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: Org.BouncyCastle.Crypto.Engines.DesEdeEngine.ProcessBlock(System.Byte(), System.Int32, System.Byte(), System.Int32)
  name.vb: ProcessBlock(Byte(), Int32, Byte(), Int32)
- uid: Org.BouncyCastle.Crypto.Engines.DesEdeEngine.Reset
  commentId: M:Org.BouncyCastle.Crypto.Engines.DesEdeEngine.Reset
  id: Reset
  parent: Org.BouncyCastle.Crypto.Engines.DesEdeEngine
  langs:
  - csharp
  - vb
  name: Reset()
  nameWithType: DesEdeEngine.Reset()
  fullName: Org.BouncyCastle.Crypto.Engines.DesEdeEngine.Reset()
  type: Method
  source:
    id: Reset
    path: ''
    startLine: 107148
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Engines
  syntax:
    content: public override void Reset()
    content.vb: Public Overrides Sub Reset
  overridden: Org.BouncyCastle.Crypto.Engines.DesEngine.Reset
  overload: Org.BouncyCastle.Crypto.Engines.DesEdeEngine.Reset*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: Org.BouncyCastle.Crypto.Engines
  commentId: N:Org.BouncyCastle.Crypto.Engines
  name: Org.BouncyCastle.Crypto.Engines
  nameWithType: Org.BouncyCastle.Crypto.Engines
  fullName: Org.BouncyCastle.Crypto.Engines
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Org.BouncyCastle.Crypto.Engines.DesEngine
  commentId: T:Org.BouncyCastle.Crypto.Engines.DesEngine
  parent: Org.BouncyCastle.Crypto.Engines
  name: DesEngine
  nameWithType: DesEngine
  fullName: Org.BouncyCastle.Crypto.Engines.DesEngine
- uid: Org.BouncyCastle.Crypto.IBlockCipher
  commentId: T:Org.BouncyCastle.Crypto.IBlockCipher
  parent: Org.BouncyCastle.Crypto
  name: IBlockCipher
  nameWithType: IBlockCipher
  fullName: Org.BouncyCastle.Crypto.IBlockCipher
- uid: Org.BouncyCastle.Crypto.Engines.DesEngine.GetWorkingKey
  commentId: M:Org.BouncyCastle.Crypto.Engines.DesEngine.GetWorkingKey
  parent: Org.BouncyCastle.Crypto.Engines.DesEngine
  name: GetWorkingKey()
  nameWithType: DesEngine.GetWorkingKey()
  fullName: Org.BouncyCastle.Crypto.Engines.DesEngine.GetWorkingKey()
  spec.csharp:
  - uid: Org.BouncyCastle.Crypto.Engines.DesEngine.GetWorkingKey
    name: GetWorkingKey
    nameWithType: DesEngine.GetWorkingKey
    fullName: Org.BouncyCastle.Crypto.Engines.DesEngine.GetWorkingKey
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Org.BouncyCastle.Crypto.Engines.DesEngine.GetWorkingKey
    name: GetWorkingKey
    nameWithType: DesEngine.GetWorkingKey
    fullName: Org.BouncyCastle.Crypto.Engines.DesEngine.GetWorkingKey
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Org.BouncyCastle.Crypto.Engines.DesEngine.IsPartialBlockOkay
  commentId: P:Org.BouncyCastle.Crypto.Engines.DesEngine.IsPartialBlockOkay
  parent: Org.BouncyCastle.Crypto.Engines.DesEngine
  name: IsPartialBlockOkay
  nameWithType: DesEngine.IsPartialBlockOkay
  fullName: Org.BouncyCastle.Crypto.Engines.DesEngine.IsPartialBlockOkay
- uid: Org.BouncyCastle.Crypto.Engines.DesEngine.GenerateWorkingKey(System.Boolean,System.Byte[])
  commentId: M:Org.BouncyCastle.Crypto.Engines.DesEngine.GenerateWorkingKey(System.Boolean,System.Byte[])
  parent: Org.BouncyCastle.Crypto.Engines.DesEngine
  isExternal: true
  name: GenerateWorkingKey(Boolean, Byte[])
  nameWithType: DesEngine.GenerateWorkingKey(Boolean, Byte[])
  fullName: Org.BouncyCastle.Crypto.Engines.DesEngine.GenerateWorkingKey(System.Boolean, System.Byte[])
  nameWithType.vb: DesEngine.GenerateWorkingKey(Boolean, Byte())
  fullName.vb: Org.BouncyCastle.Crypto.Engines.DesEngine.GenerateWorkingKey(System.Boolean, System.Byte())
  name.vb: GenerateWorkingKey(Boolean, Byte())
  spec.csharp:
  - uid: Org.BouncyCastle.Crypto.Engines.DesEngine.GenerateWorkingKey(System.Boolean,System.Byte[])
    name: GenerateWorkingKey
    nameWithType: DesEngine.GenerateWorkingKey
    fullName: Org.BouncyCastle.Crypto.Engines.DesEngine.GenerateWorkingKey
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Org.BouncyCastle.Crypto.Engines.DesEngine.GenerateWorkingKey(System.Boolean,System.Byte[])
    name: GenerateWorkingKey
    nameWithType: DesEngine.GenerateWorkingKey
    fullName: Org.BouncyCastle.Crypto.Engines.DesEngine.GenerateWorkingKey
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Org.BouncyCastle.Crypto
  commentId: N:Org.BouncyCastle.Crypto
  name: Org.BouncyCastle.Crypto
  nameWithType: Org.BouncyCastle.Crypto
  fullName: Org.BouncyCastle.Crypto
- uid: Org.BouncyCastle.Crypto.Engines.DesEngine.Init(System.Boolean,Org.BouncyCastle.Crypto.ICipherParameters)
  commentId: M:Org.BouncyCastle.Crypto.Engines.DesEngine.Init(System.Boolean,Org.BouncyCastle.Crypto.ICipherParameters)
  parent: Org.BouncyCastle.Crypto.Engines.DesEngine
  isExternal: true
  name: Init(Boolean, ICipherParameters)
  nameWithType: DesEngine.Init(Boolean, ICipherParameters)
  fullName: Org.BouncyCastle.Crypto.Engines.DesEngine.Init(System.Boolean, Org.BouncyCastle.Crypto.ICipherParameters)
  spec.csharp:
  - uid: Org.BouncyCastle.Crypto.Engines.DesEngine.Init(System.Boolean,Org.BouncyCastle.Crypto.ICipherParameters)
    name: Init
    nameWithType: DesEngine.Init
    fullName: Org.BouncyCastle.Crypto.Engines.DesEngine.Init
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Org.BouncyCastle.Crypto.ICipherParameters
    name: ICipherParameters
    nameWithType: ICipherParameters
    fullName: Org.BouncyCastle.Crypto.ICipherParameters
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Org.BouncyCastle.Crypto.Engines.DesEngine.Init(System.Boolean,Org.BouncyCastle.Crypto.ICipherParameters)
    name: Init
    nameWithType: DesEngine.Init
    fullName: Org.BouncyCastle.Crypto.Engines.DesEngine.Init
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Org.BouncyCastle.Crypto.ICipherParameters
    name: ICipherParameters
    nameWithType: ICipherParameters
    fullName: Org.BouncyCastle.Crypto.ICipherParameters
  - name: )
    nameWithType: )
    fullName: )
- uid: Org.BouncyCastle.Crypto.Engines.DesEdeEngine.Init*
  commentId: Overload:Org.BouncyCastle.Crypto.Engines.DesEdeEngine.Init
  name: Init
  nameWithType: DesEdeEngine.Init
  fullName: Org.BouncyCastle.Crypto.Engines.DesEdeEngine.Init
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Org.BouncyCastle.Crypto.ICipherParameters
  commentId: T:Org.BouncyCastle.Crypto.ICipherParameters
  parent: Org.BouncyCastle.Crypto
  name: ICipherParameters
  nameWithType: ICipherParameters
  fullName: Org.BouncyCastle.Crypto.ICipherParameters
- uid: Org.BouncyCastle.Crypto.Engines.DesEngine.AlgorithmName
  commentId: P:Org.BouncyCastle.Crypto.Engines.DesEngine.AlgorithmName
  parent: Org.BouncyCastle.Crypto.Engines.DesEngine
  name: AlgorithmName
  nameWithType: DesEngine.AlgorithmName
  fullName: Org.BouncyCastle.Crypto.Engines.DesEngine.AlgorithmName
- uid: Org.BouncyCastle.Crypto.Engines.DesEdeEngine.AlgorithmName*
  commentId: Overload:Org.BouncyCastle.Crypto.Engines.DesEdeEngine.AlgorithmName
  name: AlgorithmName
  nameWithType: DesEdeEngine.AlgorithmName
  fullName: Org.BouncyCastle.Crypto.Engines.DesEdeEngine.AlgorithmName
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Org.BouncyCastle.Crypto.Engines.DesEngine.GetBlockSize
  commentId: M:Org.BouncyCastle.Crypto.Engines.DesEngine.GetBlockSize
  parent: Org.BouncyCastle.Crypto.Engines.DesEngine
  name: GetBlockSize()
  nameWithType: DesEngine.GetBlockSize()
  fullName: Org.BouncyCastle.Crypto.Engines.DesEngine.GetBlockSize()
  spec.csharp:
  - uid: Org.BouncyCastle.Crypto.Engines.DesEngine.GetBlockSize
    name: GetBlockSize
    nameWithType: DesEngine.GetBlockSize
    fullName: Org.BouncyCastle.Crypto.Engines.DesEngine.GetBlockSize
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Org.BouncyCastle.Crypto.Engines.DesEngine.GetBlockSize
    name: GetBlockSize
    nameWithType: DesEngine.GetBlockSize
    fullName: Org.BouncyCastle.Crypto.Engines.DesEngine.GetBlockSize
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Org.BouncyCastle.Crypto.Engines.DesEdeEngine.GetBlockSize*
  commentId: Overload:Org.BouncyCastle.Crypto.Engines.DesEdeEngine.GetBlockSize
  name: GetBlockSize
  nameWithType: DesEdeEngine.GetBlockSize
  fullName: Org.BouncyCastle.Crypto.Engines.DesEdeEngine.GetBlockSize
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Org.BouncyCastle.Crypto.Engines.DesEngine.ProcessBlock(System.Byte[],System.Int32,System.Byte[],System.Int32)
  commentId: M:Org.BouncyCastle.Crypto.Engines.DesEngine.ProcessBlock(System.Byte[],System.Int32,System.Byte[],System.Int32)
  parent: Org.BouncyCastle.Crypto.Engines.DesEngine
  isExternal: true
  name: ProcessBlock(Byte[], Int32, Byte[], Int32)
  nameWithType: DesEngine.ProcessBlock(Byte[], Int32, Byte[], Int32)
  fullName: Org.BouncyCastle.Crypto.Engines.DesEngine.ProcessBlock(System.Byte[], System.Int32, System.Byte[], System.Int32)
  nameWithType.vb: DesEngine.ProcessBlock(Byte(), Int32, Byte(), Int32)
  fullName.vb: Org.BouncyCastle.Crypto.Engines.DesEngine.ProcessBlock(System.Byte(), System.Int32, System.Byte(), System.Int32)
  name.vb: ProcessBlock(Byte(), Int32, Byte(), Int32)
  spec.csharp:
  - uid: Org.BouncyCastle.Crypto.Engines.DesEngine.ProcessBlock(System.Byte[],System.Int32,System.Byte[],System.Int32)
    name: ProcessBlock
    nameWithType: DesEngine.ProcessBlock
    fullName: Org.BouncyCastle.Crypto.Engines.DesEngine.ProcessBlock
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Org.BouncyCastle.Crypto.Engines.DesEngine.ProcessBlock(System.Byte[],System.Int32,System.Byte[],System.Int32)
    name: ProcessBlock
    nameWithType: DesEngine.ProcessBlock
    fullName: Org.BouncyCastle.Crypto.Engines.DesEngine.ProcessBlock
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Org.BouncyCastle.Crypto.Engines.DesEdeEngine.ProcessBlock*
  commentId: Overload:Org.BouncyCastle.Crypto.Engines.DesEdeEngine.ProcessBlock
  name: ProcessBlock
  nameWithType: DesEdeEngine.ProcessBlock
  fullName: Org.BouncyCastle.Crypto.Engines.DesEdeEngine.ProcessBlock
- uid: System.Byte[]
  isExternal: true
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullName.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Org.BouncyCastle.Crypto.Engines.DesEngine.Reset
  commentId: M:Org.BouncyCastle.Crypto.Engines.DesEngine.Reset
  parent: Org.BouncyCastle.Crypto.Engines.DesEngine
  name: Reset()
  nameWithType: DesEngine.Reset()
  fullName: Org.BouncyCastle.Crypto.Engines.DesEngine.Reset()
  spec.csharp:
  - uid: Org.BouncyCastle.Crypto.Engines.DesEngine.Reset
    name: Reset
    nameWithType: DesEngine.Reset
    fullName: Org.BouncyCastle.Crypto.Engines.DesEngine.Reset
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Org.BouncyCastle.Crypto.Engines.DesEngine.Reset
    name: Reset
    nameWithType: DesEngine.Reset
    fullName: Org.BouncyCastle.Crypto.Engines.DesEngine.Reset
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Org.BouncyCastle.Crypto.Engines.DesEdeEngine.Reset*
  commentId: Overload:Org.BouncyCastle.Crypto.Engines.DesEdeEngine.Reset
  name: Reset
  nameWithType: DesEdeEngine.Reset
  fullName: Org.BouncyCastle.Crypto.Engines.DesEdeEngine.Reset
