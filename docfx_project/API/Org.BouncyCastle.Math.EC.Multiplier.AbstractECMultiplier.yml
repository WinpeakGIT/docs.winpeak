### YamlMime:ManagedReference
items:
- uid: Org.BouncyCastle.Math.EC.Multiplier.AbstractECMultiplier
  commentId: T:Org.BouncyCastle.Math.EC.Multiplier.AbstractECMultiplier
  id: AbstractECMultiplier
  parent: Org.BouncyCastle.Math.EC.Multiplier
  children:
  - Org.BouncyCastle.Math.EC.Multiplier.AbstractECMultiplier.Multiply(Org.BouncyCastle.Math.EC.ECPoint,Org.BouncyCastle.Math.BigInteger)
  - Org.BouncyCastle.Math.EC.Multiplier.AbstractECMultiplier.MultiplyPositive(Org.BouncyCastle.Math.EC.ECPoint,Org.BouncyCastle.Math.BigInteger)
  langs:
  - csharp
  - vb
  name: AbstractECMultiplier
  nameWithType: AbstractECMultiplier
  fullName: Org.BouncyCastle.Math.EC.Multiplier.AbstractECMultiplier
  type: Class
  source:
    id: AbstractECMultiplier
    path: ''
    startLine: 78037
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Math.EC.Multiplier
  syntax:
    content: 'public abstract class AbstractECMultiplier : ECMultiplier'
    content.vb: >-
      Public MustInherit Class AbstractECMultiplier
          Implements ECMultiplier
  inheritance:
  - System.Object
  derivedClasses:
  - Org.BouncyCastle.Math.EC.Multiplier.FixedPointCombMultiplier
  - Org.BouncyCastle.Math.EC.Multiplier.GlvMultiplier
  - Org.BouncyCastle.Math.EC.Multiplier.WNafL2RMultiplier
  - Org.BouncyCastle.Math.EC.Multiplier.WTauNafMultiplier
  implements:
  - Org.BouncyCastle.Math.EC.Multiplier.ECMultiplier
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ToString
  - System.Object.ReferenceEquals(System.Object,System.Object)
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: Org.BouncyCastle.Math.EC.Multiplier.AbstractECMultiplier.Multiply(Org.BouncyCastle.Math.EC.ECPoint,Org.BouncyCastle.Math.BigInteger)
  commentId: M:Org.BouncyCastle.Math.EC.Multiplier.AbstractECMultiplier.Multiply(Org.BouncyCastle.Math.EC.ECPoint,Org.BouncyCastle.Math.BigInteger)
  id: Multiply(Org.BouncyCastle.Math.EC.ECPoint,Org.BouncyCastle.Math.BigInteger)
  parent: Org.BouncyCastle.Math.EC.Multiplier.AbstractECMultiplier
  langs:
  - csharp
  - vb
  name: Multiply(ECPoint, BigInteger)
  nameWithType: AbstractECMultiplier.Multiply(ECPoint, BigInteger)
  fullName: Org.BouncyCastle.Math.EC.Multiplier.AbstractECMultiplier.Multiply(Org.BouncyCastle.Math.EC.ECPoint, Org.BouncyCastle.Math.BigInteger)
  type: Method
  source:
    id: Multiply
    path: ''
    startLine: 78040
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Math.EC.Multiplier
  syntax:
    content: public virtual ECPoint Multiply(ECPoint p, BigInteger k)
    parameters:
    - id: p
      type: Org.BouncyCastle.Math.EC.ECPoint
    - id: k
      type: Org.BouncyCastle.Math.BigInteger
    return:
      type: Org.BouncyCastle.Math.EC.ECPoint
    content.vb: Public Overridable Function Multiply(p As ECPoint, k As BigInteger) As ECPoint
  overload: Org.BouncyCastle.Math.EC.Multiplier.AbstractECMultiplier.Multiply*
  implements:
  - Org.BouncyCastle.Math.EC.Multiplier.ECMultiplier.Multiply(Org.BouncyCastle.Math.EC.ECPoint,Org.BouncyCastle.Math.BigInteger)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Org.BouncyCastle.Math.EC.Multiplier.AbstractECMultiplier.MultiplyPositive(Org.BouncyCastle.Math.EC.ECPoint,Org.BouncyCastle.Math.BigInteger)
  commentId: M:Org.BouncyCastle.Math.EC.Multiplier.AbstractECMultiplier.MultiplyPositive(Org.BouncyCastle.Math.EC.ECPoint,Org.BouncyCastle.Math.BigInteger)
  id: MultiplyPositive(Org.BouncyCastle.Math.EC.ECPoint,Org.BouncyCastle.Math.BigInteger)
  parent: Org.BouncyCastle.Math.EC.Multiplier.AbstractECMultiplier
  langs:
  - csharp
  - vb
  name: MultiplyPositive(ECPoint, BigInteger)
  nameWithType: AbstractECMultiplier.MultiplyPositive(ECPoint, BigInteger)
  fullName: Org.BouncyCastle.Math.EC.Multiplier.AbstractECMultiplier.MultiplyPositive(Org.BouncyCastle.Math.EC.ECPoint, Org.BouncyCastle.Math.BigInteger)
  type: Method
  source:
    id: MultiplyPositive
    path: ''
    startLine: 78056
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Math.EC.Multiplier
  syntax:
    content: protected abstract ECPoint MultiplyPositive(ECPoint p, BigInteger k)
    parameters:
    - id: p
      type: Org.BouncyCastle.Math.EC.ECPoint
    - id: k
      type: Org.BouncyCastle.Math.BigInteger
    return:
      type: Org.BouncyCastle.Math.EC.ECPoint
    content.vb: Protected MustOverride Function MultiplyPositive(p As ECPoint, k As BigInteger) As ECPoint
  overload: Org.BouncyCastle.Math.EC.Multiplier.AbstractECMultiplier.MultiplyPositive*
  modifiers.csharp:
  - protected
  - abstract
  modifiers.vb:
  - Protected
  - MustOverride
references:
- uid: Org.BouncyCastle.Math.EC.Multiplier
  commentId: N:Org.BouncyCastle.Math.EC.Multiplier
  name: Org.BouncyCastle.Math.EC.Multiplier
  nameWithType: Org.BouncyCastle.Math.EC.Multiplier
  fullName: Org.BouncyCastle.Math.EC.Multiplier
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Org.BouncyCastle.Math.EC.Multiplier.ECMultiplier
  commentId: T:Org.BouncyCastle.Math.EC.Multiplier.ECMultiplier
  parent: Org.BouncyCastle.Math.EC.Multiplier
  name: ECMultiplier
  nameWithType: ECMultiplier
  fullName: Org.BouncyCastle.Math.EC.Multiplier.ECMultiplier
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Org.BouncyCastle.Math.EC.Multiplier.AbstractECMultiplier.Multiply*
  commentId: Overload:Org.BouncyCastle.Math.EC.Multiplier.AbstractECMultiplier.Multiply
  name: Multiply
  nameWithType: AbstractECMultiplier.Multiply
  fullName: Org.BouncyCastle.Math.EC.Multiplier.AbstractECMultiplier.Multiply
- uid: Org.BouncyCastle.Math.EC.Multiplier.ECMultiplier.Multiply(Org.BouncyCastle.Math.EC.ECPoint,Org.BouncyCastle.Math.BigInteger)
  commentId: M:Org.BouncyCastle.Math.EC.Multiplier.ECMultiplier.Multiply(Org.BouncyCastle.Math.EC.ECPoint,Org.BouncyCastle.Math.BigInteger)
  parent: Org.BouncyCastle.Math.EC.Multiplier.ECMultiplier
  name: Multiply(ECPoint, BigInteger)
  nameWithType: ECMultiplier.Multiply(ECPoint, BigInteger)
  fullName: Org.BouncyCastle.Math.EC.Multiplier.ECMultiplier.Multiply(Org.BouncyCastle.Math.EC.ECPoint, Org.BouncyCastle.Math.BigInteger)
  spec.csharp:
  - uid: Org.BouncyCastle.Math.EC.Multiplier.ECMultiplier.Multiply(Org.BouncyCastle.Math.EC.ECPoint,Org.BouncyCastle.Math.BigInteger)
    name: Multiply
    nameWithType: ECMultiplier.Multiply
    fullName: Org.BouncyCastle.Math.EC.Multiplier.ECMultiplier.Multiply
  - name: (
    nameWithType: (
    fullName: (
  - uid: Org.BouncyCastle.Math.EC.ECPoint
    name: ECPoint
    nameWithType: ECPoint
    fullName: Org.BouncyCastle.Math.EC.ECPoint
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Org.BouncyCastle.Math.BigInteger
    name: BigInteger
    nameWithType: BigInteger
    fullName: Org.BouncyCastle.Math.BigInteger
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Org.BouncyCastle.Math.EC.Multiplier.ECMultiplier.Multiply(Org.BouncyCastle.Math.EC.ECPoint,Org.BouncyCastle.Math.BigInteger)
    name: Multiply
    nameWithType: ECMultiplier.Multiply
    fullName: Org.BouncyCastle.Math.EC.Multiplier.ECMultiplier.Multiply
  - name: (
    nameWithType: (
    fullName: (
  - uid: Org.BouncyCastle.Math.EC.ECPoint
    name: ECPoint
    nameWithType: ECPoint
    fullName: Org.BouncyCastle.Math.EC.ECPoint
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Org.BouncyCastle.Math.BigInteger
    name: BigInteger
    nameWithType: BigInteger
    fullName: Org.BouncyCastle.Math.BigInteger
  - name: )
    nameWithType: )
    fullName: )
- uid: Org.BouncyCastle.Math.EC.ECPoint
  commentId: T:Org.BouncyCastle.Math.EC.ECPoint
  parent: Org.BouncyCastle.Math.EC
  name: ECPoint
  nameWithType: ECPoint
  fullName: Org.BouncyCastle.Math.EC.ECPoint
- uid: Org.BouncyCastle.Math.BigInteger
  commentId: T:Org.BouncyCastle.Math.BigInteger
  parent: Org.BouncyCastle.Math
  name: BigInteger
  nameWithType: BigInteger
  fullName: Org.BouncyCastle.Math.BigInteger
- uid: Org.BouncyCastle.Math.EC
  commentId: N:Org.BouncyCastle.Math.EC
  name: Org.BouncyCastle.Math.EC
  nameWithType: Org.BouncyCastle.Math.EC
  fullName: Org.BouncyCastle.Math.EC
- uid: Org.BouncyCastle.Math
  commentId: N:Org.BouncyCastle.Math
  name: Org.BouncyCastle.Math
  nameWithType: Org.BouncyCastle.Math
  fullName: Org.BouncyCastle.Math
- uid: Org.BouncyCastle.Math.EC.Multiplier.AbstractECMultiplier.MultiplyPositive*
  commentId: Overload:Org.BouncyCastle.Math.EC.Multiplier.AbstractECMultiplier.MultiplyPositive
  name: MultiplyPositive
  nameWithType: AbstractECMultiplier.MultiplyPositive
  fullName: Org.BouncyCastle.Math.EC.Multiplier.AbstractECMultiplier.MultiplyPositive
