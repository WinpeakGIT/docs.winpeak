### YamlMime:ManagedReference
items:
- uid: Org.BouncyCastle.Crypto.Digests.Sha256Digest
  commentId: T:Org.BouncyCastle.Crypto.Digests.Sha256Digest
  id: Sha256Digest
  parent: Org.BouncyCastle.Crypto.Digests
  children:
  - Org.BouncyCastle.Crypto.Digests.Sha256Digest.#ctor
  - Org.BouncyCastle.Crypto.Digests.Sha256Digest.#ctor(Org.BouncyCastle.Crypto.Digests.Sha256Digest)
  - Org.BouncyCastle.Crypto.Digests.Sha256Digest.AlgorithmName
  - Org.BouncyCastle.Crypto.Digests.Sha256Digest.Copy
  - Org.BouncyCastle.Crypto.Digests.Sha256Digest.DoFinal(System.Byte[],System.Int32)
  - Org.BouncyCastle.Crypto.Digests.Sha256Digest.GetDigestSize
  - Org.BouncyCastle.Crypto.Digests.Sha256Digest.Reset
  - Org.BouncyCastle.Crypto.Digests.Sha256Digest.Reset(IMemoable)
  langs:
  - csharp
  - vb
  name: Sha256Digest
  nameWithType: Sha256Digest
  fullName: Org.BouncyCastle.Crypto.Digests.Sha256Digest
  type: Class
  source:
    id: Sha256Digest
    path: ''
    startLine: 100095
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Digests
  example: []
  syntax:
    content: 'public class Sha256Digest : GeneralDigest, IDigest, IMemoable'
    content.vb: >-
      Public Class Sha256Digest
          Inherits GeneralDigest
          Implements IDigest, IMemoable
  inheritance:
  - System.Object
  - Org.BouncyCastle.Crypto.Digests.GeneralDigest
  implements:
  - Org.BouncyCastle.Crypto.IDigest
  - IMemoable
  inheritedMembers:
  - Org.BouncyCastle.Crypto.Digests.GeneralDigest.CopyIn(Org.BouncyCastle.Crypto.Digests.GeneralDigest)
  - Org.BouncyCastle.Crypto.Digests.GeneralDigest.Update(System.Byte)
  - Org.BouncyCastle.Crypto.Digests.GeneralDigest.BlockUpdate(System.Byte[],System.Int32,System.Int32)
  - Org.BouncyCastle.Crypto.Digests.GeneralDigest.Finish
  - Org.BouncyCastle.Crypto.Digests.GeneralDigest.GetByteLength
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ToString
  - System.Object.ReferenceEquals(System.Object,System.Object)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Org.BouncyCastle.Crypto.Digests.Sha256Digest.#ctor
  commentId: M:Org.BouncyCastle.Crypto.Digests.Sha256Digest.#ctor
  id: '#ctor'
  parent: Org.BouncyCastle.Crypto.Digests.Sha256Digest
  langs:
  - csharp
  - vb
  name: Sha256Digest()
  nameWithType: Sha256Digest.Sha256Digest()
  fullName: Org.BouncyCastle.Crypto.Digests.Sha256Digest.Sha256Digest()
  type: Constructor
  source:
    id: .ctor
    path: ''
    startLine: 100104
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Digests
  syntax:
    content: public Sha256Digest()
    content.vb: Public Sub New
  overload: Org.BouncyCastle.Crypto.Digests.Sha256Digest.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Org.BouncyCastle.Crypto.Digests.Sha256Digest.#ctor(Org.BouncyCastle.Crypto.Digests.Sha256Digest)
  commentId: M:Org.BouncyCastle.Crypto.Digests.Sha256Digest.#ctor(Org.BouncyCastle.Crypto.Digests.Sha256Digest)
  id: '#ctor(Org.BouncyCastle.Crypto.Digests.Sha256Digest)'
  parent: Org.BouncyCastle.Crypto.Digests.Sha256Digest
  langs:
  - csharp
  - vb
  name: Sha256Digest(Sha256Digest)
  nameWithType: Sha256Digest.Sha256Digest(Sha256Digest)
  fullName: Org.BouncyCastle.Crypto.Digests.Sha256Digest.Sha256Digest(Org.BouncyCastle.Crypto.Digests.Sha256Digest)
  type: Constructor
  source:
    id: .ctor
    path: ''
    startLine: 100113
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Digests
  example: []
  syntax:
    content: public Sha256Digest(Sha256Digest t)
    parameters:
    - id: t
      type: Org.BouncyCastle.Crypto.Digests.Sha256Digest
    content.vb: Public Sub New(t As Sha256Digest)
  overload: Org.BouncyCastle.Crypto.Digests.Sha256Digest.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Org.BouncyCastle.Crypto.Digests.Sha256Digest.AlgorithmName
  commentId: P:Org.BouncyCastle.Crypto.Digests.Sha256Digest.AlgorithmName
  id: AlgorithmName
  parent: Org.BouncyCastle.Crypto.Digests.Sha256Digest
  langs:
  - csharp
  - vb
  name: AlgorithmName
  nameWithType: Sha256Digest.AlgorithmName
  fullName: Org.BouncyCastle.Crypto.Digests.Sha256Digest.AlgorithmName
  type: Property
  source:
    id: AlgorithmName
    path: ''
    startLine: 100135
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Digests
  syntax:
    content: public override string AlgorithmName { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Overrides ReadOnly Property AlgorithmName As String
  overridden: Org.BouncyCastle.Crypto.Digests.GeneralDigest.AlgorithmName
  overload: Org.BouncyCastle.Crypto.Digests.Sha256Digest.AlgorithmName*
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: Org.BouncyCastle.Crypto.Digests.Sha256Digest.GetDigestSize
  commentId: M:Org.BouncyCastle.Crypto.Digests.Sha256Digest.GetDigestSize
  id: GetDigestSize
  parent: Org.BouncyCastle.Crypto.Digests.Sha256Digest
  langs:
  - csharp
  - vb
  name: GetDigestSize()
  nameWithType: Sha256Digest.GetDigestSize()
  fullName: Org.BouncyCastle.Crypto.Digests.Sha256Digest.GetDigestSize()
  type: Method
  source:
    id: GetDigestSize
    path: ''
    startLine: 100140
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Digests
  syntax:
    content: public override int GetDigestSize()
    return:
      type: System.Int32
    content.vb: Public Overrides Function GetDigestSize As Integer
  overridden: Org.BouncyCastle.Crypto.Digests.GeneralDigest.GetDigestSize
  overload: Org.BouncyCastle.Crypto.Digests.Sha256Digest.GetDigestSize*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Org.BouncyCastle.Crypto.Digests.Sha256Digest.DoFinal(System.Byte[],System.Int32)
  commentId: M:Org.BouncyCastle.Crypto.Digests.Sha256Digest.DoFinal(System.Byte[],System.Int32)
  id: DoFinal(System.Byte[],System.Int32)
  parent: Org.BouncyCastle.Crypto.Digests.Sha256Digest
  langs:
  - csharp
  - vb
  name: DoFinal(Byte[], Int32)
  nameWithType: Sha256Digest.DoFinal(Byte[], Int32)
  fullName: Org.BouncyCastle.Crypto.Digests.Sha256Digest.DoFinal(System.Byte[], System.Int32)
  type: Method
  source:
    id: DoFinal
    path: ''
    startLine: 100169
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Digests
  syntax:
    content: public override int DoFinal(byte[] output, int outOff)
    parameters:
    - id: output
      type: System.Byte[]
    - id: outOff
      type: System.Int32
    return:
      type: System.Int32
    content.vb: Public Overrides Function DoFinal(output As Byte(), outOff As Integer) As Integer
  overridden: Org.BouncyCastle.Crypto.Digests.GeneralDigest.DoFinal(System.Byte[],System.Int32)
  overload: Org.BouncyCastle.Crypto.Digests.Sha256Digest.DoFinal*
  nameWithType.vb: Sha256Digest.DoFinal(Byte(), Int32)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: Org.BouncyCastle.Crypto.Digests.Sha256Digest.DoFinal(System.Byte(), System.Int32)
  name.vb: DoFinal(Byte(), Int32)
- uid: Org.BouncyCastle.Crypto.Digests.Sha256Digest.Reset
  commentId: M:Org.BouncyCastle.Crypto.Digests.Sha256Digest.Reset
  id: Reset
  parent: Org.BouncyCastle.Crypto.Digests.Sha256Digest
  langs:
  - csharp
  - vb
  name: Reset()
  nameWithType: Sha256Digest.Reset()
  fullName: Org.BouncyCastle.Crypto.Digests.Sha256Digest.Reset()
  type: Method
  source:
    id: Reset
    path: ''
    startLine: 100192
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Digests
  example: []
  syntax:
    content: public override void Reset()
    content.vb: Public Overrides Sub Reset
  overridden: Org.BouncyCastle.Crypto.Digests.GeneralDigest.Reset
  overload: Org.BouncyCastle.Crypto.Digests.Sha256Digest.Reset*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Org.BouncyCastle.Crypto.Digests.Sha256Digest.Copy
  commentId: M:Org.BouncyCastle.Crypto.Digests.Sha256Digest.Copy
  id: Copy
  parent: Org.BouncyCastle.Crypto.Digests.Sha256Digest
  langs:
  - csharp
  - vb
  name: Copy()
  nameWithType: Sha256Digest.Copy()
  fullName: Org.BouncyCastle.Crypto.Digests.Sha256Digest.Copy()
  type: Method
  source:
    id: Copy
    path: ''
    startLine: 100392
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Digests
  syntax:
    content: public override IMemoable Copy()
    return:
      type: IMemoable
    content.vb: Public Overrides Function Copy As IMemoable
  overridden: Org.BouncyCastle.Crypto.Digests.GeneralDigest.Copy
  overload: Org.BouncyCastle.Crypto.Digests.Sha256Digest.Copy*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Org.BouncyCastle.Crypto.Digests.Sha256Digest.Reset(IMemoable)
  commentId: M:Org.BouncyCastle.Crypto.Digests.Sha256Digest.Reset(IMemoable)
  id: Reset(IMemoable)
  parent: Org.BouncyCastle.Crypto.Digests.Sha256Digest
  langs:
  - csharp
  - vb
  name: Reset(IMemoable)
  nameWithType: Sha256Digest.Reset(IMemoable)
  fullName: Org.BouncyCastle.Crypto.Digests.Sha256Digest.Reset(IMemoable)
  type: Method
  source:
    id: Reset
    path: ''
    startLine: 100397
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Digests
  syntax:
    content: public override void Reset(IMemoable other)
    parameters:
    - id: other
      type: IMemoable
    content.vb: Public Overrides Sub Reset(other As IMemoable)
  overridden: Org.BouncyCastle.Crypto.Digests.GeneralDigest.Reset(IMemoable)
  overload: Org.BouncyCastle.Crypto.Digests.Sha256Digest.Reset*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: Org.BouncyCastle.Crypto.Digests
  commentId: N:Org.BouncyCastle.Crypto.Digests
  name: Org.BouncyCastle.Crypto.Digests
  nameWithType: Org.BouncyCastle.Crypto.Digests
  fullName: Org.BouncyCastle.Crypto.Digests
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Org.BouncyCastle.Crypto.Digests.GeneralDigest
  commentId: T:Org.BouncyCastle.Crypto.Digests.GeneralDigest
  parent: Org.BouncyCastle.Crypto.Digests
  name: GeneralDigest
  nameWithType: GeneralDigest
  fullName: Org.BouncyCastle.Crypto.Digests.GeneralDigest
- uid: Org.BouncyCastle.Crypto.IDigest
  commentId: T:Org.BouncyCastle.Crypto.IDigest
  parent: Org.BouncyCastle.Crypto
  name: IDigest
  nameWithType: IDigest
  fullName: Org.BouncyCastle.Crypto.IDigest
- uid: IMemoable
  isExternal: true
  name: IMemoable
  nameWithType: IMemoable
  fullName: IMemoable
- uid: Org.BouncyCastle.Crypto.Digests.GeneralDigest.CopyIn(Org.BouncyCastle.Crypto.Digests.GeneralDigest)
  commentId: M:Org.BouncyCastle.Crypto.Digests.GeneralDigest.CopyIn(Org.BouncyCastle.Crypto.Digests.GeneralDigest)
  parent: Org.BouncyCastle.Crypto.Digests.GeneralDigest
  name: CopyIn(GeneralDigest)
  nameWithType: GeneralDigest.CopyIn(GeneralDigest)
  fullName: Org.BouncyCastle.Crypto.Digests.GeneralDigest.CopyIn(Org.BouncyCastle.Crypto.Digests.GeneralDigest)
  spec.csharp:
  - uid: Org.BouncyCastle.Crypto.Digests.GeneralDigest.CopyIn(Org.BouncyCastle.Crypto.Digests.GeneralDigest)
    name: CopyIn
    nameWithType: GeneralDigest.CopyIn
    fullName: Org.BouncyCastle.Crypto.Digests.GeneralDigest.CopyIn
  - name: (
    nameWithType: (
    fullName: (
  - uid: Org.BouncyCastle.Crypto.Digests.GeneralDigest
    name: GeneralDigest
    nameWithType: GeneralDigest
    fullName: Org.BouncyCastle.Crypto.Digests.GeneralDigest
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Org.BouncyCastle.Crypto.Digests.GeneralDigest.CopyIn(Org.BouncyCastle.Crypto.Digests.GeneralDigest)
    name: CopyIn
    nameWithType: GeneralDigest.CopyIn
    fullName: Org.BouncyCastle.Crypto.Digests.GeneralDigest.CopyIn
  - name: (
    nameWithType: (
    fullName: (
  - uid: Org.BouncyCastle.Crypto.Digests.GeneralDigest
    name: GeneralDigest
    nameWithType: GeneralDigest
    fullName: Org.BouncyCastle.Crypto.Digests.GeneralDigest
  - name: )
    nameWithType: )
    fullName: )
- uid: Org.BouncyCastle.Crypto.Digests.GeneralDigest.Update(System.Byte)
  commentId: M:Org.BouncyCastle.Crypto.Digests.GeneralDigest.Update(System.Byte)
  parent: Org.BouncyCastle.Crypto.Digests.GeneralDigest
  isExternal: true
  name: Update(Byte)
  nameWithType: GeneralDigest.Update(Byte)
  fullName: Org.BouncyCastle.Crypto.Digests.GeneralDigest.Update(System.Byte)
  spec.csharp:
  - uid: Org.BouncyCastle.Crypto.Digests.GeneralDigest.Update(System.Byte)
    name: Update
    nameWithType: GeneralDigest.Update
    fullName: Org.BouncyCastle.Crypto.Digests.GeneralDigest.Update
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Org.BouncyCastle.Crypto.Digests.GeneralDigest.Update(System.Byte)
    name: Update
    nameWithType: GeneralDigest.Update
    fullName: Org.BouncyCastle.Crypto.Digests.GeneralDigest.Update
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Org.BouncyCastle.Crypto.Digests.GeneralDigest.BlockUpdate(System.Byte[],System.Int32,System.Int32)
  commentId: M:Org.BouncyCastle.Crypto.Digests.GeneralDigest.BlockUpdate(System.Byte[],System.Int32,System.Int32)
  parent: Org.BouncyCastle.Crypto.Digests.GeneralDigest
  isExternal: true
  name: BlockUpdate(Byte[], Int32, Int32)
  nameWithType: GeneralDigest.BlockUpdate(Byte[], Int32, Int32)
  fullName: Org.BouncyCastle.Crypto.Digests.GeneralDigest.BlockUpdate(System.Byte[], System.Int32, System.Int32)
  nameWithType.vb: GeneralDigest.BlockUpdate(Byte(), Int32, Int32)
  fullName.vb: Org.BouncyCastle.Crypto.Digests.GeneralDigest.BlockUpdate(System.Byte(), System.Int32, System.Int32)
  name.vb: BlockUpdate(Byte(), Int32, Int32)
  spec.csharp:
  - uid: Org.BouncyCastle.Crypto.Digests.GeneralDigest.BlockUpdate(System.Byte[],System.Int32,System.Int32)
    name: BlockUpdate
    nameWithType: GeneralDigest.BlockUpdate
    fullName: Org.BouncyCastle.Crypto.Digests.GeneralDigest.BlockUpdate
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Org.BouncyCastle.Crypto.Digests.GeneralDigest.BlockUpdate(System.Byte[],System.Int32,System.Int32)
    name: BlockUpdate
    nameWithType: GeneralDigest.BlockUpdate
    fullName: Org.BouncyCastle.Crypto.Digests.GeneralDigest.BlockUpdate
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Org.BouncyCastle.Crypto.Digests.GeneralDigest.Finish
  commentId: M:Org.BouncyCastle.Crypto.Digests.GeneralDigest.Finish
  parent: Org.BouncyCastle.Crypto.Digests.GeneralDigest
  name: Finish()
  nameWithType: GeneralDigest.Finish()
  fullName: Org.BouncyCastle.Crypto.Digests.GeneralDigest.Finish()
  spec.csharp:
  - uid: Org.BouncyCastle.Crypto.Digests.GeneralDigest.Finish
    name: Finish
    nameWithType: GeneralDigest.Finish
    fullName: Org.BouncyCastle.Crypto.Digests.GeneralDigest.Finish
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Org.BouncyCastle.Crypto.Digests.GeneralDigest.Finish
    name: Finish
    nameWithType: GeneralDigest.Finish
    fullName: Org.BouncyCastle.Crypto.Digests.GeneralDigest.Finish
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Org.BouncyCastle.Crypto.Digests.GeneralDigest.GetByteLength
  commentId: M:Org.BouncyCastle.Crypto.Digests.GeneralDigest.GetByteLength
  parent: Org.BouncyCastle.Crypto.Digests.GeneralDigest
  name: GetByteLength()
  nameWithType: GeneralDigest.GetByteLength()
  fullName: Org.BouncyCastle.Crypto.Digests.GeneralDigest.GetByteLength()
  spec.csharp:
  - uid: Org.BouncyCastle.Crypto.Digests.GeneralDigest.GetByteLength
    name: GetByteLength
    nameWithType: GeneralDigest.GetByteLength
    fullName: Org.BouncyCastle.Crypto.Digests.GeneralDigest.GetByteLength
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Org.BouncyCastle.Crypto.Digests.GeneralDigest.GetByteLength
    name: GetByteLength
    nameWithType: GeneralDigest.GetByteLength
    fullName: Org.BouncyCastle.Crypto.Digests.GeneralDigest.GetByteLength
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Org.BouncyCastle.Crypto
  commentId: N:Org.BouncyCastle.Crypto
  name: Org.BouncyCastle.Crypto
  nameWithType: Org.BouncyCastle.Crypto
  fullName: Org.BouncyCastle.Crypto
- uid: Org.BouncyCastle.Crypto.Digests.Sha256Digest.#ctor*
  commentId: Overload:Org.BouncyCastle.Crypto.Digests.Sha256Digest.#ctor
  name: Sha256Digest
  nameWithType: Sha256Digest.Sha256Digest
  fullName: Org.BouncyCastle.Crypto.Digests.Sha256Digest.Sha256Digest
- uid: Org.BouncyCastle.Crypto.Digests.Sha256Digest
  commentId: T:Org.BouncyCastle.Crypto.Digests.Sha256Digest
  parent: Org.BouncyCastle.Crypto.Digests
  name: Sha256Digest
  nameWithType: Sha256Digest
  fullName: Org.BouncyCastle.Crypto.Digests.Sha256Digest
- uid: Org.BouncyCastle.Crypto.Digests.GeneralDigest.AlgorithmName
  commentId: P:Org.BouncyCastle.Crypto.Digests.GeneralDigest.AlgorithmName
  parent: Org.BouncyCastle.Crypto.Digests.GeneralDigest
  name: AlgorithmName
  nameWithType: GeneralDigest.AlgorithmName
  fullName: Org.BouncyCastle.Crypto.Digests.GeneralDigest.AlgorithmName
- uid: Org.BouncyCastle.Crypto.Digests.Sha256Digest.AlgorithmName*
  commentId: Overload:Org.BouncyCastle.Crypto.Digests.Sha256Digest.AlgorithmName
  name: AlgorithmName
  nameWithType: Sha256Digest.AlgorithmName
  fullName: Org.BouncyCastle.Crypto.Digests.Sha256Digest.AlgorithmName
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Org.BouncyCastle.Crypto.Digests.GeneralDigest.GetDigestSize
  commentId: M:Org.BouncyCastle.Crypto.Digests.GeneralDigest.GetDigestSize
  parent: Org.BouncyCastle.Crypto.Digests.GeneralDigest
  name: GetDigestSize()
  nameWithType: GeneralDigest.GetDigestSize()
  fullName: Org.BouncyCastle.Crypto.Digests.GeneralDigest.GetDigestSize()
  spec.csharp:
  - uid: Org.BouncyCastle.Crypto.Digests.GeneralDigest.GetDigestSize
    name: GetDigestSize
    nameWithType: GeneralDigest.GetDigestSize
    fullName: Org.BouncyCastle.Crypto.Digests.GeneralDigest.GetDigestSize
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Org.BouncyCastle.Crypto.Digests.GeneralDigest.GetDigestSize
    name: GetDigestSize
    nameWithType: GeneralDigest.GetDigestSize
    fullName: Org.BouncyCastle.Crypto.Digests.GeneralDigest.GetDigestSize
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Org.BouncyCastle.Crypto.Digests.Sha256Digest.GetDigestSize*
  commentId: Overload:Org.BouncyCastle.Crypto.Digests.Sha256Digest.GetDigestSize
  name: GetDigestSize
  nameWithType: Sha256Digest.GetDigestSize
  fullName: Org.BouncyCastle.Crypto.Digests.Sha256Digest.GetDigestSize
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Org.BouncyCastle.Crypto.Digests.GeneralDigest.DoFinal(System.Byte[],System.Int32)
  commentId: M:Org.BouncyCastle.Crypto.Digests.GeneralDigest.DoFinal(System.Byte[],System.Int32)
  parent: Org.BouncyCastle.Crypto.Digests.GeneralDigest
  isExternal: true
  name: DoFinal(Byte[], Int32)
  nameWithType: GeneralDigest.DoFinal(Byte[], Int32)
  fullName: Org.BouncyCastle.Crypto.Digests.GeneralDigest.DoFinal(System.Byte[], System.Int32)
  nameWithType.vb: GeneralDigest.DoFinal(Byte(), Int32)
  fullName.vb: Org.BouncyCastle.Crypto.Digests.GeneralDigest.DoFinal(System.Byte(), System.Int32)
  name.vb: DoFinal(Byte(), Int32)
  spec.csharp:
  - uid: Org.BouncyCastle.Crypto.Digests.GeneralDigest.DoFinal(System.Byte[],System.Int32)
    name: DoFinal
    nameWithType: GeneralDigest.DoFinal
    fullName: Org.BouncyCastle.Crypto.Digests.GeneralDigest.DoFinal
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Org.BouncyCastle.Crypto.Digests.GeneralDigest.DoFinal(System.Byte[],System.Int32)
    name: DoFinal
    nameWithType: GeneralDigest.DoFinal
    fullName: Org.BouncyCastle.Crypto.Digests.GeneralDigest.DoFinal
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Org.BouncyCastle.Crypto.Digests.Sha256Digest.DoFinal*
  commentId: Overload:Org.BouncyCastle.Crypto.Digests.Sha256Digest.DoFinal
  name: DoFinal
  nameWithType: Sha256Digest.DoFinal
  fullName: Org.BouncyCastle.Crypto.Digests.Sha256Digest.DoFinal
- uid: System.Byte[]
  isExternal: true
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullName.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Org.BouncyCastle.Crypto.Digests.GeneralDigest.Reset
  commentId: M:Org.BouncyCastle.Crypto.Digests.GeneralDigest.Reset
  parent: Org.BouncyCastle.Crypto.Digests.GeneralDigest
  name: Reset()
  nameWithType: GeneralDigest.Reset()
  fullName: Org.BouncyCastle.Crypto.Digests.GeneralDigest.Reset()
  spec.csharp:
  - uid: Org.BouncyCastle.Crypto.Digests.GeneralDigest.Reset
    name: Reset
    nameWithType: GeneralDigest.Reset
    fullName: Org.BouncyCastle.Crypto.Digests.GeneralDigest.Reset
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Org.BouncyCastle.Crypto.Digests.GeneralDigest.Reset
    name: Reset
    nameWithType: GeneralDigest.Reset
    fullName: Org.BouncyCastle.Crypto.Digests.GeneralDigest.Reset
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Org.BouncyCastle.Crypto.Digests.Sha256Digest.Reset*
  commentId: Overload:Org.BouncyCastle.Crypto.Digests.Sha256Digest.Reset
  name: Reset
  nameWithType: Sha256Digest.Reset
  fullName: Org.BouncyCastle.Crypto.Digests.Sha256Digest.Reset
- uid: Org.BouncyCastle.Crypto.Digests.GeneralDigest.Copy
  commentId: M:Org.BouncyCastle.Crypto.Digests.GeneralDigest.Copy
  parent: Org.BouncyCastle.Crypto.Digests.GeneralDigest
  name: Copy()
  nameWithType: GeneralDigest.Copy()
  fullName: Org.BouncyCastle.Crypto.Digests.GeneralDigest.Copy()
  spec.csharp:
  - uid: Org.BouncyCastle.Crypto.Digests.GeneralDigest.Copy
    name: Copy
    nameWithType: GeneralDigest.Copy
    fullName: Org.BouncyCastle.Crypto.Digests.GeneralDigest.Copy
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Org.BouncyCastle.Crypto.Digests.GeneralDigest.Copy
    name: Copy
    nameWithType: GeneralDigest.Copy
    fullName: Org.BouncyCastle.Crypto.Digests.GeneralDigest.Copy
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Org.BouncyCastle.Crypto.Digests.Sha256Digest.Copy*
  commentId: Overload:Org.BouncyCastle.Crypto.Digests.Sha256Digest.Copy
  name: Copy
  nameWithType: Sha256Digest.Copy
  fullName: Org.BouncyCastle.Crypto.Digests.Sha256Digest.Copy
- uid: Org.BouncyCastle.Crypto.Digests.GeneralDigest.Reset(IMemoable)
  commentId: M:Org.BouncyCastle.Crypto.Digests.GeneralDigest.Reset(IMemoable)
  parent: Org.BouncyCastle.Crypto.Digests.GeneralDigest
  isExternal: true
  name: Reset(IMemoable)
  nameWithType: GeneralDigest.Reset(IMemoable)
  fullName: Org.BouncyCastle.Crypto.Digests.GeneralDigest.Reset(IMemoable)
  spec.csharp:
  - uid: Org.BouncyCastle.Crypto.Digests.GeneralDigest.Reset(IMemoable)
    name: Reset
    nameWithType: GeneralDigest.Reset
    fullName: Org.BouncyCastle.Crypto.Digests.GeneralDigest.Reset
  - name: (
    nameWithType: (
    fullName: (
  - uid: IMemoable
    name: IMemoable
    nameWithType: IMemoable
    fullName: IMemoable
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Org.BouncyCastle.Crypto.Digests.GeneralDigest.Reset(IMemoable)
    name: Reset
    nameWithType: GeneralDigest.Reset
    fullName: Org.BouncyCastle.Crypto.Digests.GeneralDigest.Reset
  - name: (
    nameWithType: (
    fullName: (
  - uid: IMemoable
    name: IMemoable
    nameWithType: IMemoable
    fullName: IMemoable
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
