### YamlMime:ManagedReference
items:
- uid: Org.BouncyCastle.Crypto.ISigner
  commentId: T:Org.BouncyCastle.Crypto.ISigner
  id: ISigner
  parent: Org.BouncyCastle.Crypto
  children:
  - Org.BouncyCastle.Crypto.ISigner.AlgorithmName
  - Org.BouncyCastle.Crypto.ISigner.BlockUpdate(System.Byte[],System.Int32,System.Int32)
  - Org.BouncyCastle.Crypto.ISigner.GenerateSignature
  - Org.BouncyCastle.Crypto.ISigner.Init(System.Boolean,Org.BouncyCastle.Crypto.ICipherParameters)
  - Org.BouncyCastle.Crypto.ISigner.Reset
  - Org.BouncyCastle.Crypto.ISigner.Update(System.Byte)
  - Org.BouncyCastle.Crypto.ISigner.VerifySignature(System.Byte[])
  langs:
  - csharp
  - vb
  name: ISigner
  nameWithType: ISigner
  fullName: Org.BouncyCastle.Crypto.ISigner
  type: Interface
  source:
    id: ISigner
    path: ''
    startLine: 41526
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto
  syntax:
    content: public interface ISigner
    content.vb: Public Interface ISigner
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Org.BouncyCastle.Crypto.ISigner.AlgorithmName
  commentId: P:Org.BouncyCastle.Crypto.ISigner.AlgorithmName
  id: AlgorithmName
  parent: Org.BouncyCastle.Crypto.ISigner
  langs:
  - csharp
  - vb
  name: AlgorithmName
  nameWithType: ISigner.AlgorithmName
  fullName: Org.BouncyCastle.Crypto.ISigner.AlgorithmName
  type: Property
  source:
    id: AlgorithmName
    path: ''
    startLine: 41533
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto
  example: []
  syntax:
    content: string AlgorithmName { get; }
    parameters: []
    return:
      type: System.String
    content.vb: ReadOnly Property AlgorithmName As String
  overload: Org.BouncyCastle.Crypto.ISigner.AlgorithmName*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Org.BouncyCastle.Crypto.ISigner.Init(System.Boolean,Org.BouncyCastle.Crypto.ICipherParameters)
  commentId: M:Org.BouncyCastle.Crypto.ISigner.Init(System.Boolean,Org.BouncyCastle.Crypto.ICipherParameters)
  id: Init(System.Boolean,Org.BouncyCastle.Crypto.ICipherParameters)
  parent: Org.BouncyCastle.Crypto.ISigner
  langs:
  - csharp
  - vb
  name: Init(Boolean, ICipherParameters)
  nameWithType: ISigner.Init(Boolean, ICipherParameters)
  fullName: Org.BouncyCastle.Crypto.ISigner.Init(System.Boolean, Org.BouncyCastle.Crypto.ICipherParameters)
  type: Method
  source:
    id: Init
    path: ''
    startLine: 41541
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto
  example: []
  syntax:
    content: void Init(bool forSigning, ICipherParameters parameters)
    parameters:
    - id: forSigning
      type: System.Boolean
    - id: parameters
      type: Org.BouncyCastle.Crypto.ICipherParameters
    content.vb: Sub Init(forSigning As Boolean, parameters As ICipherParameters)
  overload: Org.BouncyCastle.Crypto.ISigner.Init*
- uid: Org.BouncyCastle.Crypto.ISigner.Update(System.Byte)
  commentId: M:Org.BouncyCastle.Crypto.ISigner.Update(System.Byte)
  id: Update(System.Byte)
  parent: Org.BouncyCastle.Crypto.ISigner
  langs:
  - csharp
  - vb
  name: Update(Byte)
  nameWithType: ISigner.Update(Byte)
  fullName: Org.BouncyCastle.Crypto.ISigner.Update(System.Byte)
  type: Method
  source:
    id: Update
    path: ''
    startLine: 41546
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto
  example: []
  syntax:
    content: void Update(byte input)
    parameters:
    - id: input
      type: System.Byte
    content.vb: Sub Update(input As Byte)
  overload: Org.BouncyCastle.Crypto.ISigner.Update*
- uid: Org.BouncyCastle.Crypto.ISigner.BlockUpdate(System.Byte[],System.Int32,System.Int32)
  commentId: M:Org.BouncyCastle.Crypto.ISigner.BlockUpdate(System.Byte[],System.Int32,System.Int32)
  id: BlockUpdate(System.Byte[],System.Int32,System.Int32)
  parent: Org.BouncyCastle.Crypto.ISigner
  langs:
  - csharp
  - vb
  name: BlockUpdate(Byte[], Int32, Int32)
  nameWithType: ISigner.BlockUpdate(Byte[], Int32, Int32)
  fullName: Org.BouncyCastle.Crypto.ISigner.BlockUpdate(System.Byte[], System.Int32, System.Int32)
  type: Method
  source:
    id: BlockUpdate
    path: ''
    startLine: 41551
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto
  example: []
  syntax:
    content: void BlockUpdate(byte[] input, int inOff, int length)
    parameters:
    - id: input
      type: System.Byte[]
    - id: inOff
      type: System.Int32
    - id: length
      type: System.Int32
    content.vb: Sub BlockUpdate(input As Byte(), inOff As Integer, length As Integer)
  overload: Org.BouncyCastle.Crypto.ISigner.BlockUpdate*
  nameWithType.vb: ISigner.BlockUpdate(Byte(), Int32, Int32)
  fullName.vb: Org.BouncyCastle.Crypto.ISigner.BlockUpdate(System.Byte(), System.Int32, System.Int32)
  name.vb: BlockUpdate(Byte(), Int32, Int32)
- uid: Org.BouncyCastle.Crypto.ISigner.GenerateSignature
  commentId: M:Org.BouncyCastle.Crypto.ISigner.GenerateSignature
  id: GenerateSignature
  parent: Org.BouncyCastle.Crypto.ISigner
  langs:
  - csharp
  - vb
  name: GenerateSignature()
  nameWithType: ISigner.GenerateSignature()
  fullName: Org.BouncyCastle.Crypto.ISigner.GenerateSignature()
  type: Method
  source:
    id: GenerateSignature
    path: ''
    startLine: 41557
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto
  example: []
  syntax:
    content: byte[] GenerateSignature()
    return:
      type: System.Byte[]
    content.vb: Function GenerateSignature As Byte()
  overload: Org.BouncyCastle.Crypto.ISigner.GenerateSignature*
- uid: Org.BouncyCastle.Crypto.ISigner.VerifySignature(System.Byte[])
  commentId: M:Org.BouncyCastle.Crypto.ISigner.VerifySignature(System.Byte[])
  id: VerifySignature(System.Byte[])
  parent: Org.BouncyCastle.Crypto.ISigner
  langs:
  - csharp
  - vb
  name: VerifySignature(Byte[])
  nameWithType: ISigner.VerifySignature(Byte[])
  fullName: Org.BouncyCastle.Crypto.ISigner.VerifySignature(System.Byte[])
  type: Method
  source:
    id: VerifySignature
    path: ''
    startLine: 41562
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto
  example: []
  syntax:
    content: bool VerifySignature(byte[] signature)
    parameters:
    - id: signature
      type: System.Byte[]
    return:
      type: System.Boolean
    content.vb: Function VerifySignature(signature As Byte()) As Boolean
  overload: Org.BouncyCastle.Crypto.ISigner.VerifySignature*
  nameWithType.vb: ISigner.VerifySignature(Byte())
  fullName.vb: Org.BouncyCastle.Crypto.ISigner.VerifySignature(System.Byte())
  name.vb: VerifySignature(Byte())
- uid: Org.BouncyCastle.Crypto.ISigner.Reset
  commentId: M:Org.BouncyCastle.Crypto.ISigner.Reset
  id: Reset
  parent: Org.BouncyCastle.Crypto.ISigner
  langs:
  - csharp
  - vb
  name: Reset()
  nameWithType: ISigner.Reset()
  fullName: Org.BouncyCastle.Crypto.ISigner.Reset()
  type: Method
  source:
    id: Reset
    path: ''
    startLine: 41567
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto
  example: []
  syntax:
    content: void Reset()
    content.vb: Sub Reset
  overload: Org.BouncyCastle.Crypto.ISigner.Reset*
references:
- uid: Org.BouncyCastle.Crypto
  commentId: N:Org.BouncyCastle.Crypto
  name: Org.BouncyCastle.Crypto
  nameWithType: Org.BouncyCastle.Crypto
  fullName: Org.BouncyCastle.Crypto
- uid: Org.BouncyCastle.Crypto.ISigner.AlgorithmName*
  commentId: Overload:Org.BouncyCastle.Crypto.ISigner.AlgorithmName
  name: AlgorithmName
  nameWithType: ISigner.AlgorithmName
  fullName: Org.BouncyCastle.Crypto.ISigner.AlgorithmName
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Org.BouncyCastle.Crypto.ISigner.Init*
  commentId: Overload:Org.BouncyCastle.Crypto.ISigner.Init
  name: Init
  nameWithType: ISigner.Init
  fullName: Org.BouncyCastle.Crypto.ISigner.Init
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Org.BouncyCastle.Crypto.ICipherParameters
  commentId: T:Org.BouncyCastle.Crypto.ICipherParameters
  parent: Org.BouncyCastle.Crypto
  name: ICipherParameters
  nameWithType: ICipherParameters
  fullName: Org.BouncyCastle.Crypto.ICipherParameters
- uid: Org.BouncyCastle.Crypto.ISigner.Update*
  commentId: Overload:Org.BouncyCastle.Crypto.ISigner.Update
  name: Update
  nameWithType: ISigner.Update
  fullName: Org.BouncyCastle.Crypto.ISigner.Update
- uid: System.Byte
  commentId: T:System.Byte
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte
- uid: Org.BouncyCastle.Crypto.ISigner.BlockUpdate*
  commentId: Overload:Org.BouncyCastle.Crypto.ISigner.BlockUpdate
  name: BlockUpdate
  nameWithType: ISigner.BlockUpdate
  fullName: Org.BouncyCastle.Crypto.ISigner.BlockUpdate
- uid: System.Byte[]
  isExternal: true
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullName.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Org.BouncyCastle.Crypto.ISigner.GenerateSignature*
  commentId: Overload:Org.BouncyCastle.Crypto.ISigner.GenerateSignature
  name: GenerateSignature
  nameWithType: ISigner.GenerateSignature
  fullName: Org.BouncyCastle.Crypto.ISigner.GenerateSignature
- uid: Org.BouncyCastle.Crypto.ISigner.VerifySignature*
  commentId: Overload:Org.BouncyCastle.Crypto.ISigner.VerifySignature
  name: VerifySignature
  nameWithType: ISigner.VerifySignature
  fullName: Org.BouncyCastle.Crypto.ISigner.VerifySignature
- uid: Org.BouncyCastle.Crypto.ISigner.Reset*
  commentId: Overload:Org.BouncyCastle.Crypto.ISigner.Reset
  name: Reset
  nameWithType: ISigner.Reset
  fullName: Org.BouncyCastle.Crypto.ISigner.Reset
