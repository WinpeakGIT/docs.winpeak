### YamlMime:ManagedReference
items:
- uid: Org.BouncyCastle.Crypto.Tls.TlsCipher
  commentId: T:Org.BouncyCastle.Crypto.Tls.TlsCipher
  id: TlsCipher
  parent: Org.BouncyCastle.Crypto.Tls
  children:
  - Org.BouncyCastle.Crypto.Tls.TlsCipher.DecodeCiphertext(System.Int64,System.Byte,System.Byte[],System.Int32,System.Int32)
  - Org.BouncyCastle.Crypto.Tls.TlsCipher.EncodePlaintext(System.Int64,System.Byte,System.Byte[],System.Int32,System.Int32)
  - Org.BouncyCastle.Crypto.Tls.TlsCipher.GetPlaintextLimit(System.Int32)
  langs:
  - csharp
  - vb
  name: TlsCipher
  nameWithType: TlsCipher
  fullName: Org.BouncyCastle.Crypto.Tls.TlsCipher
  type: Interface
  source:
    id: TlsCipher
    path: ''
    startLine: 110815
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Tls
  syntax:
    content: public interface TlsCipher
    content.vb: Public Interface TlsCipher
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Org.BouncyCastle.Crypto.Tls.TlsCipher.GetPlaintextLimit(System.Int32)
  commentId: M:Org.BouncyCastle.Crypto.Tls.TlsCipher.GetPlaintextLimit(System.Int32)
  id: GetPlaintextLimit(System.Int32)
  parent: Org.BouncyCastle.Crypto.Tls.TlsCipher
  langs:
  - csharp
  - vb
  name: GetPlaintextLimit(Int32)
  nameWithType: TlsCipher.GetPlaintextLimit(Int32)
  fullName: Org.BouncyCastle.Crypto.Tls.TlsCipher.GetPlaintextLimit(System.Int32)
  type: Method
  source:
    id: GetPlaintextLimit
    path: ''
    startLine: 110817
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Tls
  syntax:
    content: int GetPlaintextLimit(int ciphertextLimit)
    parameters:
    - id: ciphertextLimit
      type: System.Int32
    return:
      type: System.Int32
    content.vb: Function GetPlaintextLimit(ciphertextLimit As Integer) As Integer
  overload: Org.BouncyCastle.Crypto.Tls.TlsCipher.GetPlaintextLimit*
- uid: Org.BouncyCastle.Crypto.Tls.TlsCipher.EncodePlaintext(System.Int64,System.Byte,System.Byte[],System.Int32,System.Int32)
  commentId: M:Org.BouncyCastle.Crypto.Tls.TlsCipher.EncodePlaintext(System.Int64,System.Byte,System.Byte[],System.Int32,System.Int32)
  id: EncodePlaintext(System.Int64,System.Byte,System.Byte[],System.Int32,System.Int32)
  parent: Org.BouncyCastle.Crypto.Tls.TlsCipher
  langs:
  - csharp
  - vb
  name: EncodePlaintext(Int64, Byte, Byte[], Int32, Int32)
  nameWithType: TlsCipher.EncodePlaintext(Int64, Byte, Byte[], Int32, Int32)
  fullName: Org.BouncyCastle.Crypto.Tls.TlsCipher.EncodePlaintext(System.Int64, System.Byte, System.Byte[], System.Int32, System.Int32)
  type: Method
  source:
    id: EncodePlaintext
    path: ''
    startLine: 110820
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Tls
  example: []
  syntax:
    content: byte[] EncodePlaintext(long seqNo, byte type, byte[] plaintext, int offset, int len)
    parameters:
    - id: seqNo
      type: System.Int64
    - id: type
      type: System.Byte
    - id: plaintext
      type: System.Byte[]
    - id: offset
      type: System.Int32
    - id: len
      type: System.Int32
    return:
      type: System.Byte[]
    content.vb: Function EncodePlaintext(seqNo As Long, type As Byte, plaintext As Byte(), offset As Integer, len As Integer) As Byte()
  overload: Org.BouncyCastle.Crypto.Tls.TlsCipher.EncodePlaintext*
  nameWithType.vb: TlsCipher.EncodePlaintext(Int64, Byte, Byte(), Int32, Int32)
  fullName.vb: Org.BouncyCastle.Crypto.Tls.TlsCipher.EncodePlaintext(System.Int64, System.Byte, System.Byte(), System.Int32, System.Int32)
  name.vb: EncodePlaintext(Int64, Byte, Byte(), Int32, Int32)
- uid: Org.BouncyCastle.Crypto.Tls.TlsCipher.DecodeCiphertext(System.Int64,System.Byte,System.Byte[],System.Int32,System.Int32)
  commentId: M:Org.BouncyCastle.Crypto.Tls.TlsCipher.DecodeCiphertext(System.Int64,System.Byte,System.Byte[],System.Int32,System.Int32)
  id: DecodeCiphertext(System.Int64,System.Byte,System.Byte[],System.Int32,System.Int32)
  parent: Org.BouncyCastle.Crypto.Tls.TlsCipher
  langs:
  - csharp
  - vb
  name: DecodeCiphertext(Int64, Byte, Byte[], Int32, Int32)
  nameWithType: TlsCipher.DecodeCiphertext(Int64, Byte, Byte[], Int32, Int32)
  fullName: Org.BouncyCastle.Crypto.Tls.TlsCipher.DecodeCiphertext(System.Int64, System.Byte, System.Byte[], System.Int32, System.Int32)
  type: Method
  source:
    id: DecodeCiphertext
    path: ''
    startLine: 110823
  assemblies:
  - cs.temp.dll
  namespace: Org.BouncyCastle.Crypto.Tls
  example: []
  syntax:
    content: byte[] DecodeCiphertext(long seqNo, byte type, byte[] ciphertext, int offset, int len)
    parameters:
    - id: seqNo
      type: System.Int64
    - id: type
      type: System.Byte
    - id: ciphertext
      type: System.Byte[]
    - id: offset
      type: System.Int32
    - id: len
      type: System.Int32
    return:
      type: System.Byte[]
    content.vb: Function DecodeCiphertext(seqNo As Long, type As Byte, ciphertext As Byte(), offset As Integer, len As Integer) As Byte()
  overload: Org.BouncyCastle.Crypto.Tls.TlsCipher.DecodeCiphertext*
  nameWithType.vb: TlsCipher.DecodeCiphertext(Int64, Byte, Byte(), Int32, Int32)
  fullName.vb: Org.BouncyCastle.Crypto.Tls.TlsCipher.DecodeCiphertext(System.Int64, System.Byte, System.Byte(), System.Int32, System.Int32)
  name.vb: DecodeCiphertext(Int64, Byte, Byte(), Int32, Int32)
references:
- uid: Org.BouncyCastle.Crypto.Tls
  commentId: N:Org.BouncyCastle.Crypto.Tls
  name: Org.BouncyCastle.Crypto.Tls
  nameWithType: Org.BouncyCastle.Crypto.Tls
  fullName: Org.BouncyCastle.Crypto.Tls
- uid: Org.BouncyCastle.Crypto.Tls.TlsCipher.GetPlaintextLimit*
  commentId: Overload:Org.BouncyCastle.Crypto.Tls.TlsCipher.GetPlaintextLimit
  name: GetPlaintextLimit
  nameWithType: TlsCipher.GetPlaintextLimit
  fullName: Org.BouncyCastle.Crypto.Tls.TlsCipher.GetPlaintextLimit
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Org.BouncyCastle.Crypto.Tls.TlsCipher.EncodePlaintext*
  commentId: Overload:Org.BouncyCastle.Crypto.Tls.TlsCipher.EncodePlaintext
  name: EncodePlaintext
  nameWithType: TlsCipher.EncodePlaintext
  fullName: Org.BouncyCastle.Crypto.Tls.TlsCipher.EncodePlaintext
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Byte
  commentId: T:System.Byte
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte
- uid: System.Byte[]
  isExternal: true
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullName.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Org.BouncyCastle.Crypto.Tls.TlsCipher.DecodeCiphertext*
  commentId: Overload:Org.BouncyCastle.Crypto.Tls.TlsCipher.DecodeCiphertext
  name: DecodeCiphertext
  nameWithType: TlsCipher.DecodeCiphertext
  fullName: Org.BouncyCastle.Crypto.Tls.TlsCipher.DecodeCiphertext
